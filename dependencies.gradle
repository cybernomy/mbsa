def pom = new XmlSlurper().parse("$rootDir.canonicalPath/pom.xml")
def versions = pom.properties

ext {
    /* project version */
    projectGroup                    = "$pom.groupId"
    projectVersion                  = "$pom.version"
    /* mg framework */
    mgFrameworkAuxVersion           = versions.mgFrameworkAuxVersion
    /* java ee version */
    javaEEVersion                   = versions.javaEEVersion
    /* jboss versions */
    jbossVersion                    = versions.jbossVersion
    jbossEjbVersion                 = versions.jbossEjbVersion
    jbossJbpmVersion                = versions.jbossJbpmVersion
    jbossCacheVersion               = versions.jbossCacheVersion
    /* javax modules versions */
    javaxEjbApiVersion              = versions.javaxEjbApiVersion
    javaxMailVersion                = versions.javaxMailVersion
    javaxServletApiVersion          = versions.javaxServletApiVersion
    /* hibernate versions */
    hibernateVersion                = versions.hibernateVersion
    ehcacheVersion                  = versions.ehcacheVersion
    /* 3rd party */
    commonsCodecVersion             = versions.commonsCodecVersion
    commonsCollectionsVersion       = versions.commonsCollectionsVersion
    commonsLangVersion              = versions.commonsLangVersion
    commonsLoggingVersion           = versions.commonsLoggingVersion
    commonsElVersion                = versions.commonsElVersion
    commonsJexlVersion              = versions.commonsJexlVersion
    icu4jVersion                    = versions.icu4jVersion
    dozerVersion                    = versions.dozerVersion
    messadminCoreVersion            = versions.messadminCoreVersion
    quartzVersion                   = versions.quartzVersion
    xercesImplVersion               = versions.xercesImplVersion
    antVersion                      = versions.antVersion
    javaGetoptVersion               = versions.javaGetoptVersion
    dom4jVersion                    = versions.dom4jVersion
    rhinoVersion                    = versions.rhinoVersion
    jguardVersion                   = versions.jguardVersion
    birtVersion                     = versions.birtVersion
    datatoolsOdaVersion             = versions.datatoolsOdaVersion
    oracleOc4jVersion               = versions.oracleOc4jVersion
    log4jVersion                    = versions.log4jVersion
    junitVersion                    = versions.junitVersion

    tools = [
            jdkVersion                : JavaVersion.VERSION_1_8,
    ]

    dep = [
            /* mg framework */
            mgFrameworkAux            : 'com.mg:framework-aux:'
                                        + mgFrameworkAuxVersion,
            /* java ee version */
            javaee                    : 'com.sun:javaee:'
                                        + javaEEVersion,
            /* jboss versions */
            jbossSystem               : 'jboss:jboss-system:'
                                        + jbossVersion,
            jbossCommon               : 'jboss:jboss-common:' 
                                        + jbossVersion,
            jbossJmx                  : 'jboss:jboss-jmx:'
                                        + jbossVersion,
            jbossHibernate            : 'jboss:jboss-hibernate:'
                                        + jbossVersion,
            jbossJ2ee                 : 'jboss:jboss-j2ee:'
                                        + jbossVersion,
            jbossEjb3                 : 'jboss:jboss-ejb3:'
                                        + jbossVersion,
            jbossAnnotationsEjb3      : 'jboss:jboss-annotations-ejb3:'
                                        + jbossVersion,
            jbossCache                : 'jboss:jboss-cache:'
                                        + jbossCacheVersion,
            jbpmJpdl                  : 'jboss:jbpm-jpdl:'
                                        + jbossJbpmVersion,
            /* javax modules versions */
            javaxEjbApi               : 'javax.ejb:ejb-api:'
                                        + javaxEjbApiVersion,
            javaxMail                 : 'javax.mail:mail:'
                                        + javaxMailVersion,
            javaxServletApi           : 'javax.servlet:servlet-api:'
                                        + javaxServletApiVersion,
            /* hibernate versions */
            hibernate                 : 'org.hibernate:hibernate:'
                                        + hibernateVersion,
            ehcache                   : 'net.sf.ehcache:ehcache:'
                                        + ehcacheVersion,
            /* 3rd party */
            icu4j                     : 'com.ibm.icu:icu4j:'
                                        + icu4jVersion,
            dozer                     : 'net.sf.dozer:dozer:'
                                        + dozerVersion,
            messadminCore             : 'net.sf.messadmin:core:'
                                        + messadminCoreVersion,
            quartz                    : 'quartz:quartz:'
                                        + quartzVersion,
            xercesImpl                : 'xerces:xercesImpl:'
                                        + xercesImplVersion,
            commonsCodec              : 'commons-codec:commons-codec:'
                                        + commonsCodecVersion,
            commonsCollections        : 'commons-collections:commons-collections:'
                                        + commonsCollectionsVersion,
            commonsLang               : 'commons-lang:commons-lang:'
                                        + commonsLangVersion,
            commonsLogging            : 'commons-logging:commons-logging:'
                                        + commonsLoggingVersion,
            commonsEl                 : 'commons-el:commons-el:'
                                        + commonsElVersion,
            commonsJexl               : 'org.apache.commons:commons-jexl:'
                                        + commonsJexlVersion,
            ant                       : 'org.apache.ant:ant:'
                                        + antVersion,
            javaGetOpt                : 'urbanophile:java-getopt:'
                                        + javaGetoptVersion,
            dom4j                     : 'dom4j:dom4j:'
                                        + dom4jVersion,
            rhino                     : 'org.mozilla:rhino:'
                                        + rhinoVersion,
            jguard                    : 'net.sf:jguard:'
                                        + jguardVersion,
            birtCoreApi               : 'org.eclipse.birt.core:api:'
                                        + birtVersion,
            birtEngineApi             : 'org.eclipse.birt.report.engine:api:'
                                        + birtVersion,
            birtModelApi              : 'org.eclipse.birt.report.model:api:'
                                        + birtVersion,
            datatoolsOda              : 'org.eclipse.datatools.connectivity:oda:'
                                        + datatoolsOdaVersion,
            birtData                  : 'org.eclipse.birt:data:'
                                        + birtVersion,
            birtAdapter               : 'org.eclipse.birt.report.data:adapter:'
                                        + birtVersion,
            birtDataExtraction        : 'org.eclipse.birt.report.engine:dataextraction:'
                                        + birtVersion,
            birtViewServlets          : 'org.eclipse.birt.report:viewservlets:'
                                        + birtVersion,
            /* oc4j libraries for javahelp */
            oc4jOracleHelpWeb         : 'com.oracle.oc4j:oracle-help-web:'
                                        + oracleOc4jVersion,
            oc4jCabo                  : 'com.oracle.oc4j:cabo:'
                                        + oracleOc4jVersion,
            oc4jJspElApi              : 'com.oracle.oc4j:jsp-el-api:'
                                        + oracleOc4jVersion,
            oc4jOracleEl              : 'com.oracle.oc4j:oracle-el:'
                                        + oracleOc4jVersion,
            oc4jShare                 : 'com.oracle.oc4j:share:'
                                        + oracleOc4jVersion,
            oc4jXmlparserv2           : 'com.oracle.oc4j:xmlparserv2:'
                                        + oracleOc4jVersion,
            /* logging */
            log4j                     : 'log4j:log4j:'
                                        + log4jVersion,
            /* testing */
            junit                     : 'junit:junit:'
                                        + junitVersion
    ]
}
