<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

  <query name="Account.RemnAcc.removeEmptyRecords">
    <![CDATA[
  	delete from com.mg.merp.account.model.RemnAcc r
  	where 
		(r.Period in (:periods)) and
		(r.RemnBeginNatDb = 0) and
        (r.RemnBeginNatKt = 0) and
        (r.RemnBeginCurDb = 0) and
        (r.RemnBeginCurKt = 0) and
        (not exists (select s.Id from com.mg.merp.account.model.EconomicSpec s
        	where (s.RemnAccDb = r.Id) or (s.RemnAccKt = r.Id) ))    
    ]]>
  </query>

  <query name="Account.RemnVal.removeEmptyRecords">
    <![CDATA[
  	delete from com.mg.merp.account.model.RemnVal r
  	where 
		(r.Period in (:periods)) and
		(r.RemnBeginNat = 0) and
        (r.RemnBeginCur = 0) and
        (r.BeginQuan = 0) and
        (not exists (select s.Id from com.mg.merp.account.model.EconomicSpec s
        	where (s.RemnValDb = r.Id) or (s.RemnValKt = r.Id) ))    
    ]]>
  </query>
  
  <query name="Account.RemnAnl.removeEmptyRecords">
    <![CDATA[
  	delete from com.mg.merp.account.model.RemnAnl r
  	where 
		(r.Period in (:periods)) and
		(r.RemnBeginNatDb = 0) and
        (r.RemnBeginNatKt = 0) and
        (r.RemnBeginCurDb = 0) and
        (r.RemnBeginCurKt = 0) and
        (not exists (select s.Id from com.mg.merp.account.model.EconomicSpec s
        	where (s.RemnAnlDb = r.Id) or (s.RemnAnlKt = r.Id) ))    
    ]]>
  </query>
  
  <query name="Account.RemnDbKt.removeEmptyRecords">
    <![CDATA[
  	delete from com.mg.merp.account.model.RemnDbKt r
  	where 
		(r.Period in (:periods)) and
		(r.RemnBeginNatDb = 0) and
        (r.RemnBeginNatKt = 0) and
        (r.RemnBeginCurDb = 0) and
        (r.RemnBeginCurKt = 0) and
        (not exists (select s.Id from com.mg.merp.account.model.EconomicSpec s
        	where (s.RemnDb = r.Id) or (s.RemnKt = r.Id) ))    
    ]]>
  </query>
  <query name="Account.Amortization.rollbackAmortization">
    <![CDATA[
  	delete from com.mg.merp.account.model.Amortization a
  	where 
  		(a.Batch = :batch)
    ]]>
  </query>
</hibernate-mapping>
