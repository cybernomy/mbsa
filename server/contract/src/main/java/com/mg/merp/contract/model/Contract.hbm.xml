<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<typedef name="com.mg.merp.contract.model.ContractStatus" class="com.mg.framework.support.orm.EnumUserType">
		<param name="enumClass">com.mg.merp.contract.model.ContractStatus</param>
	</typedef>	
	
	<typedef name="com.mg.merp.contract.model.CalcSumKind" class="com.mg.framework.support.orm.EnumUserType">
		<param name="enumClass">com.mg.merp.contract.model.CalcSumKind</param>
	</typedef>		
	
<!-- 
        Auto-generated mapping file from
        the hibernate.org cfg2hbm engine
-->
  <joined-subclass name="com.mg.merp.contract.model.Contract" extends="com.mg.merp.document.model.DocHead" table="CONTRACT">
    <meta attribute="extends">com.mg.merp.document.model.DocHead</meta>
    <!-- <id name="Id" type="java.lang.Integer">
      <column name="ID" not-null="false" unique="true" sql-type="INTEGER" />
      generator class="sequence">
        <param name="sequence">CONTRACT_ID_GEN</param>
      </generator
    </id>-->
    <key on-delete="cascade">
      <column name="DOCHEAD_ID" not-null="true" />
    </key>
    <many-to-one name="Consignee" class="com.mg.merp.reference.model.Contractor">
      <column name="CONSIGNEE" not-null="false" />
    </many-to-one>
    <many-to-one name="Shipper" class="com.mg.merp.reference.model.Contractor">
      <column name="SHIPPER" not-null="false" />
    </many-to-one>
    <many-to-one name="ContractorBankReq" class="com.mg.merp.reference.model.BankAccount">
      <column name="CONTRACTORBANKREQ_ID" not-null="false" />
    </many-to-one>
    <many-to-one name="BankReq" class="com.mg.merp.reference.model.BankAccount">
      <column name="BANKREQ_ID" not-null="false" />
    </many-to-one>
    <many-to-one name="Responsible" class="com.mg.merp.reference.model.Contractor">
      <column name="RESPONSIBLE" not-null="false" />
    </many-to-one>
    <many-to-one name="ContractorResponsible" class="com.mg.merp.reference.model.PartnerEmpl">
      <column name="CONTRACTOR_RESPONSIBLE" not-null="false" />
    </many-to-one>
    <many-to-one name="ShipperBankReq" class="com.mg.merp.reference.model.BankAccount">
      <column name="SHIPPERBANKREQ_ID" not-null="false" />
    </many-to-one>
    <many-to-one name="ConsigneeBankReq" class="com.mg.merp.reference.model.BankAccount">
      <column name="CONSIGNEEBANKREQ_ID" not-null="false" />
    </many-to-one>
    <property name="IncomingNumber" type="java.lang.String">
      <column name="INCOMING_NUMBER" length="20" not-null="false" sql-type="CHAR" />
    </property>
    <property name="RegistrationDate" type="java.util.Date">
      <column name="REGISTRATION_DATE" not-null="false" sql-type="TIMESTAMP" />
    </property>
    <property name="Status" type="com.mg.merp.contract.model.ContractStatus">
      <column name="STATUS" not-null="false" sql-type="SMALLINT" />
    </property>
    <property name="RatificationDate" type="java.util.Date">
      <column name="RATIFICATION_DATE" not-null="false" sql-type="TIMESTAMP" />
    </property>
    <property name="CompletedDate" type="java.util.Date">
      <column name="COMPLETED_DATE" not-null="false" sql-type="TIMESTAMP" />
    </property>
    <property name="BeginActionDate" type="java.util.Date">
      <column name="BEGINACTION_DATE" not-null="false" sql-type="TIMESTAMP" />
    </property>
    <property name="EndActionDate" type="java.util.Date">
      <column name="ENDACTION_DATE" not-null="false" sql-type="TIMESTAMP" />
    </property>
    <property name="Subject" type="java.lang.String">
      <column name="SUBJECT" length="2048" not-null="false" sql-type="VARCHAR" />
    </property>
    <property name="Comment" type="java.lang.String">
      <column name="`COMMENT`" length="2048" not-null="false" sql-type="VARCHAR" />
    </property>
    <property name="CalcSumKind" type="com.mg.merp.contract.model.CalcSumKind">
      <column name="CALCSUMKIND" not-null="false" sql-type="SMALLINT" />
    </property>
    <property name="ShippedPayment" type="java.math.BigDecimal">
      <column name="SHIPPEDPAYMENT" scale="4" precision="15" not-null="false" sql-type="NUMERIC" />
    </property>
    <property name="ReceivedPayment" type="java.math.BigDecimal">
      <column name="RECEIVEDPAYMENT" scale="4" precision="15" not-null="false" sql-type="NUMERIC" />
    </property>
    <property name="ShippedGood" type="java.math.BigDecimal">
      <column name="SHIPPEDGOOD" scale="4" precision="15" not-null="false" sql-type="NUMERIC" />
    </property>
    <property name="ReceivedGood" type="java.math.BigDecimal">
      <column name="RECEIVEDGOOD" scale="4" precision="15" not-null="false" sql-type="NUMERIC" />
    </property>
    <property name="FactShippedPayment" type="java.math.BigDecimal" insert="false" update="false" >
<!-- <column name="FACTSHIPPEDPAYMENT" scale="4" precision="15" not-null="false" sql-type="NUMERIC" /> -->
     <formula>(SELECT sum(f.factsum) from phaseitemfact f where (f.dochead_id = DOCHEAD_ID) and (f.kind = 0))</formula>
    </property>
    <property name="FactReceivedPayment" type="java.math.BigDecimal" insert="false" update="false" >
<!-- <column name="FACTRECEIVEDPAYMENT" scale="4" precision="15" not-null="false" sql-type="NUMERIC" />  -->
     <formula>(SELECT sum(f.factsum) from phaseitemfact f where (f.dochead_id = DOCHEAD_ID) and (f.kind = 1))</formula>
    </property>
    <property name="FactShippedGood" type="java.math.BigDecimal" insert="false" update="false" >
<!-- <column name="FACTSHIPPEDGOOD" scale="4" precision="15" not-null="false" sql-type="NUMERIC" />  -->
     <formula>(SELECT sum(f.factsum) from phaseitemfact f where (f.dochead_id = DOCHEAD_ID) and (f.kind = 2))</formula>
    </property>
    <property name="FactReceivedGood" type="java.math.BigDecimal" insert="false" update="false" >
<!--  <column name="FACTRECEIVEDGOOD" scale="4" precision="15" not-null="false" sql-type="NUMERIC" /> -->
     <formula>(SELECT sum(f.factsum) from phaseitemfact f where (f.dochead_id = DOCHEAD_ID) and (f.kind = 3))</formula>
    </property>
    <property name="PhaseShippedPayment" type="java.math.BigDecimal" insert="false" update="false" >
<!-- <column name="PHASESHIPPEDPAYMENT" scale="4" precision="15" not-null="false" sql-type="NUMERIC" /> -->
     <formula>(SELECT sum(p.plansum) from phaseitemplan p left join contractphase cph on (p.phase_id = cph.id) where (cph.dochead_id = DOCHEAD_ID) and (p.kind = 0))</formula>
    </property>
    <property name="PhaseReceivedPayment" type="java.math.BigDecimal" insert="false" update="false" >
<!-- <column name="PHASERECEIVEDPAYMENT" scale="4" precision="15" not-null="false" sql-type="NUMERIC" />  -->
     <formula>(SELECT sum(p.plansum) from phaseitemplan p left join contractphase cph on (p.phase_id = cph.id) where (cph.dochead_id = DOCHEAD_ID) and (p.kind = 1))</formula>
    </property>
    <property name="PhaseShippedGood" type="java.math.BigDecimal" insert="false" update="false" >
<!-- <column name="PHASESHIPPEDGOOD" scale="4" precision="15" not-null="false" sql-type="NUMERIC" /> -->
     <formula>(SELECT sum(p.plansum) from phaseitemplan p left join contractphase cph on (p.phase_id = cph.id) where (cph.dochead_id = DOCHEAD_ID) and (p.kind = 2))</formula>
    </property>
    <property name="PhaseReceivedGood" type="java.math.BigDecimal" insert="false" update="false" >
<!-- <column name="PHASERECEIVEDGOOD" scale="4" precision="15" not-null="false" sql-type="NUMERIC" /> -->
     <formula>(SELECT sum(p.plansum) from phaseitemplan p left join contractphase cph on (p.phase_id = cph.id) where (cph.dochead_id = DOCHEAD_ID) and (p.kind = 3))</formula>
    </property>
    <property name="ContractorBankDays" type="java.lang.Short">
      <column name="CONTRACTORBANKDAYS" not-null="false" sql-type="SMALLINT" />
    </property>
    <property name="BankDays" type="java.lang.Short">
      <column name="BANKDAYS" not-null="false" sql-type="SMALLINT" />
    </property>
    <property name="PennyRate" type="java.math.BigDecimal">
      <column name="PENNY_RATE" scale="6" precision="18" not-null="false" sql-type="NUMERIC" />
    </property>
    <property name="ContractorPennyRate" type="java.math.BigDecimal">
      <column name="CONTRACTORPENNY_RATE" scale="6" precision="18" not-null="false" sql-type="NUMERIC" />
    </property>
    <many-to-one name="TypeContract" class="com.mg.merp.contract.model.ContractType">
      <column name="CONTRACT_KIND_ID" not-null="false" />
    </many-to-one>
    <many-to-one name="ContractCategory" class="com.mg.merp.contract.model.ContractCategory">
      <column name="CONTRACT_CATEGORY_ID" not-null="false" />
    </many-to-one>
    
    <property name="ContractorInNameOf" type="java.lang.String">
      <column name="CONTRACTOR_IN_NAME_OF" length="256" not-null="false" sql-type="VARCHAR" />
    </property>
    <property name="ContractorActOnBasis" type="java.lang.String">
      <column name="CONTRACTOR_ACT_ON_BASIS" length="256" not-null="false" sql-type="VARCHAR" />
    </property>
    <property name="ContractorConsignmentTerm" type="java.lang.Short">
      <column name="CONTRACTOR_CONSIGNMENT_TERM" not-null="false" sql-type="SMALLINT" />
    </property>
    <property name="ContractorGoodsCredit" type="java.math.BigDecimal">
      <column name="CONTRACTOR_GOODS_CREDIT" scale="4" precision="15" not-null="false" sql-type="NUMERIC" />
    </property>
    <property name="InNameOf" type="java.lang.String">
      <column name="IN_NAME_OF" length="256" not-null="false" sql-type="VARCHAR" />
    </property>
    <property name="ActOnBasis" type="java.lang.String">
      <column name="ACT_ON_BASIS" length="256" not-null="false" sql-type="VARCHAR" />
    </property>
    <property name="ConsignmentTerm" type="java.lang.Short">
      <column name="CONSIGNMENT_TERM" not-null="false" sql-type="SMALLINT" />
    </property>
    <property name="GoodsCredit" type="java.math.BigDecimal">
      <column name="GOODS_CREDIT" scale="4" precision="15" not-null="false" sql-type="NUMERIC" />
    </property>
  </joined-subclass>
</hibernate-mapping>
