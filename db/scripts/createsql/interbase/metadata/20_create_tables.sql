CREATE TABLE ACC_ACCGROUP (
    ID               D_INT_IDEN NOT NULL,
    ACCKIND_ID       D_INT_IDEN NOT NULL,
    GCODE            D_BIGCODE,
    GNAME            D_NAME NOT NULL,
    MIN_USAGEPERIOD  D_INT,
    MAX_USAGEPERIOD  D_INT
);

CREATE TABLE ACC_ACCKIND (
    ID        D_INT_IDEN NOT NULL,
    KCODE     D_BIGCODE,
    KNAME     D_NAME NOT NULL,
    PRIORITY  D_INT
);

CREATE TABLE ACC_ADVANCEREPHEAD (
    ID                  D_INT_IDEN NOT NULL,
    DOCHEAD_ID          D_INT,
    COMPANY_ID          D_INT,
    ACC_ID              D_INT,
    PURPOSE             D_COMMENT,
    PREVADVANCESUM      D_SUMMA,
    RECEIVED1SRC        VARCHAR(40),
    RECEIVED1DATE       D_DATE,
    RECEIVED1SUM        D_SUMMA,
    RECEIVED2SRC        VARCHAR(40),
    RECEIVED2DATE       D_DATE,
    RECEIVED2SUM        D_SUMMA,
    RECEIVED3SRC        VARCHAR(40),
    RECEIVED3DATE       D_DATE,
    RECEIVED3SUM        D_SUMMA,
    RESTDOCKIND         D_BOOLEAN,
    RESTDOC_ID          D_INT,
    RESTDOCTYPE         D_DOCTYPE,
    RESTDOCNUMBER       D_DOCNUMBER,
    RESTDOCDATE         D_DATE,
    RESTSUM             D_SUMMA,
    CHIEF_ID            D_INT,
    CHIEFACCOUNTANT_ID  D_INT,
    ACCOUNTANT_ID       D_INT,
    ATTACHEDDOCS        INTEGER,
    ATTACHEDDOCSSHEETS  INTEGER,
    COMMENTS            D_COMMENT
);

CREATE TABLE ACC_ADVANCEREPHEADMODEL (
    ID                  D_INT_IDEN NOT NULL,
    DOCHEADMODEL_ID     D_INT,
    COMPANY_ID          D_INT,
    ACC_ID              D_INT,
    PURPOSE             D_COMMENT,
    PREVADVANCESUM      D_SUMMA,
    RECEIVED1SRC        VARCHAR(40),
    RECEIVED1DATE       D_DATE,
    RECEIVED1SUM        D_SUMMA,
    RECEIVED2SRC        VARCHAR(40),
    RECEIVED2DATE       D_DATE,
    RECEIVED2SUM        D_SUMMA,
    RECEIVED3SRC        VARCHAR(40),
    RECEIVED3DATE       D_DATE,
    RECEIVED3SUM        D_SUMMA,
    RESTDOCKIND         D_BOOLEAN,
    RESTDOC_ID          D_INT,
    RESTDOCTYPE         D_DOCTYPE,
    RESTDOCNUMBER       D_DOCNUMBER,
    RESTDOCDATE         D_DATE,
    RESTSUM             D_SUMMA,
    CHIEF_ID            D_INT,
    CHIEFACCOUNTANT_ID  D_INT,
    ACCOUNTANT_ID       D_INT,
    ATTACHEDDOCS        INTEGER,
    ATTACHEDDOCSSHEETS  INTEGER,
    COMMENTS            D_COMMENT
);

CREATE TABLE ACC_ADVANCEREPSPEC (
    ID                D_INT_IDEN NOT NULL,
    DOCSPEC_ID        D_INT,
    NUM               INTEGER,
    EXPENSEDOCNUMBER  D_DOCNUMBER,
    EXPENSEDOCDATE    D_DATE,
    EXPENSEDOCNAME    VARCHAR(256),
    EXPENSESUM        D_SUMMA,
    ACC_ID            D_INT,
    ANL1_ID           D_INT,
    ANL2_ID           D_INT,
    ANL3_ID           D_INT,
    ANL4_ID           D_INT,
    ANL5_ID           D_INT
);

CREATE TABLE ACC_AMCODE (
    ID     D_INT_IDEN NOT NULL,
    CODE   D_BIGCODE,
    CNAME  D_NAME NOT NULL
);

CREATE TABLE ACC_AMORTIZATION (
    ID             D_INT_IDEN NOT NULL,
    INVENTORY_ID   D_INT_IDEN NOT NULL,
    N_MONTHS       SMALLINT DEFAULT 0,
    BATCH          INTEGER,
    BALANCECOST    D_SUMMA,
    AMRATE         D_RATIO,
    SUM_RATE       D_SUMMA,
    EXPLPERIOD_Y   FLOAT,
    EXPLPERIOD_M   FLOAT,
    SUM_PERIOD     D_SUMMA,
    PRODUCT_EST    FLOAT,
    PRODUCT_FACT   FLOAT,
    SUM_PRODUCT    D_SUMMA,
    FACTOR         FLOAT,
    SUM_ADD        D_SUMMA,
    DEPRVALUE      D_SUMMA,
    SUM_DEPRVALUE  D_SUMMA,
    SUM_TOTAL      D_SUMMA,
    IMONTH         SMALLINT NOT NULL,
    ENDCOST        D_SUMMA,
    AMCODE_ID      D_INT
);

CREATE TABLE ACC_AMRATE (
    ID           D_INT_IDEN,
    AMCODE_ID    D_INT,
    ACTMONTH     D_INT_IDEN NOT NULL,
    AMRATE       D_RATIO,
    AMRATE1000   D_RATIO,
    PERIODYEAR   SMALLINT,
    VOLUMEPROD   D_MASS,
    PERIODMONTH  SMALLINT default 0
);

CREATE TABLE ACC_CONFIG (
    BASE_CURRENCY                 D_SMALLCODE,
    NAT_CURRENCY                  D_SMALLCODE,
    CURRENCY_PREC                 INTEGER,
    CUR_RATE_TYPE_ID              D_INT,
    CUR_RATE_AUTHORITY_ID         D_INT,
    BUYBOOK_DELIV_DOCGROUP_ID     D_INT,
    BUYBOOK_INVOICE_DOCGROUP_ID   D_INT,
    SALEBOOK_DELIV_DOCGROUP_ID    D_INT,
    SALEBOOK_INVOICE_DOCGROUP_ID  D_INT,
    SALEBOOK_AVANINV_DOCGROUP_ID  D_INT,
    SALEBOOK_KIND                 SMALLINT
);

CREATE TABLE ACC_INVHEAD (
    ID              D_INT_IDEN,
    FOLDER_ID       D_INT_IDEN,
    PARENT_ID       INTEGER,
    GROUPNUM        CHAR(15),
    CARDNUM         CHAR(15),
    OBJNUM          CHAR(30),
    MANUFACTURER    VARCHAR(80),
    MODEL           VARCHAR(80),
    SERIALNUM       CHAR(15),
    PASSPNUM        CHAR(15),
    INOPERDOCNUM    D_DOCNUMBER,
    INOPERDATE      TIMESTAMP,
    OUTOPERDOCNUM   D_DOCNUMBER,
    OUTOPERDATE     TIMESTAMP,
    ISCOMPLEX       SMALLINT,
    ISCOMMON        SMALLINT,
    COMMENT         D_COMMENT,
    CATALOG_ID      D_INT,
    CONTRACTOR_ID   D_INT,
    INVNAME         D_BIGNAME,
    INCOMEDOCNUM    D_DOCNUMBER,
    INCOMEDATE      D_DATE,
    INVLOCATION_ID  D_INT,
    OKOF_ID         D_INT,
    PRODUCTDATE     D_DATE
);

CREATE TABLE ACC_INVPRODUCTION (
    ID          D_INT_IDEN,
    INVHEAD_ID  D_INT_IDEN NOT NULL,
    AMONTH      INTEGER,
    PRODUCTION  DOUBLE PRECISION
);

CREATE TABLE ACCBATCH (
    ID             D_INT_IDEN,
    INCOMEDATE     TIMESTAMP NOT NULL,
    INCOMECOSTNAT  D_RATIO NOT NULL,
    INCOMECOSTCUR  D_RATIO default 0,
    CATALOG_ID     D_INT_IDEN,
    DOCSECTION     SMALLINT,
    DOC_ID         INTEGER,
    DOCTYPE        D_DOCTYPE,
    DOCNUMBER      D_DOCNUMBER,
    DOCDATE        TIMESTAMP,
    BEGINQUAN      D_MASS NOT NULL,
    ENDQUAN        D_MASS default 0,
    ANLPLAN1_ID    INTEGER,
    ANLPLAN2_ID    INTEGER,
    ANLPLAN3_ID    INTEGER,
    ANLPLAN4_ID    INTEGER,
    ANLPLAN5_ID    INTEGER,
    ACC_ID         D_INT,
    CONTRACTOR_ID  D_INT
);

CREATE TABLE ACCBATCHHISTORY (
    ID           D_INT_IDEN,
    ACCBATCH_ID  D_INT_IDEN,
    BEGINDATE    TIMESTAMP NOT NULL,
    ENDDATE      TIMESTAMP,
    QUANTITY     D_MASS default 0,
    COSTNAT      D_RATIO NOT NULL,
    COSTCUR      D_RATIO default 0,
    ACTIONTYPE   SMALLINT default 0
);

CREATE TABLE ACCPLAN (
    ID             D_INT_IDEN,
    FOLDER_ID      D_INT_IDEN,
    UPACC          D_BIGCODE NOT NULL,
    ACC            D_BIGCODE NOT NULL,
    ACCNAME        D_NAME NOT NULL,
    CURRENCY_CODE  D_SMALLCODE,
    ISANL          SMALLINT NOT NULL,
    ISBAL          SMALLINT NOT NULL,
    ISWORK         SMALLINT NOT NULL,
    ANLFORM        SMALLINT NOT NULL,
    ACCTYPE        SMALLINT NOT NULL
);

CREATE TABLE ALG_CONST (
    ID           D_INT_IDEN,
    FOLDER_ID    D_INT,
    CODE         D_BIGCODE,
    DESCRIPTION  D_BIGNAME,
    DATATYPE     INTEGER
);

CREATE TABLE ALG_CONST_VAL (
    ID         D_INT_IDEN,
    CONST_ID   D_INT,
    VAL        D_CONST_VAL,
    STARTDATE  D_DATE
);

CREATE TABLE ALG_CUSTOM_USER_ACTION (
    ID                D_INT_IDEN,
    CODE              D_BIGCODE NOT NULL,
    DESCRIPTION       D_COMMENT,
    CLASS_ID          D_INT_IDEN,
    ALGORITHM_ID      D_INT_IDEN,
    CAPTION           VARCHAR(80),
    HINT              VARCHAR(80),
    SHORTCUT          INTEGER,
    FROM_MENU         D_BOOLEAN,
    FROM_TOOLBAR      D_BOOLEAN,
    FORCE_REFRESH     D_BOOLEAN,
    SEPARATOR_BEFORE  D_BOOLEAN,
    SEPARATOR_AFTER   D_BOOLEAN,
    PICTURE           BLOB SUB_TYPE 0 SEGMENT SIZE 80,
    PRIORITY          SMALLINT
);

CREATE TABLE ALG_CUSTOM_USER_ACTION_PERMISS (
    ID         D_INT_IDEN,
    ACTION_ID  D_INT_IDEN,
    ROLE_ID    D_INT_IDEN
);

CREATE TABLE ALG_REPOSITORY (
    ID         D_INT_IDEN NOT NULL,
    FOLDER_ID  D_INT_IDEN NOT NULL,
    CODE       D_BIGCODE,
    NAME       D_BIGNAME,
    ALGORITHM  D_ALGORITHM
);

CREATE TABLE ANLPLAN (
    ID          D_INT_IDEN NOT NULL,
    ACCPLAN_ID  D_INT_IDEN,
    PARENT_ID   INTEGER,
    UPCODE      D_MEDIUMCODE NOT NULL,
    CODE        D_MEDIUMCODE NOT NULL,
    ANLNAME     D_NAME NOT NULL,
    ANLLEVEL    SMALLINT NOT NULL,
    USESTDFORM  SMALLINT NOT NULL,
    STDFORM     SMALLINT
);

CREATE TABLE BANKDOCUMENT (
    ID                   D_INT_IDEN,
    NDS1RATE             D_SUMMA,
    NDS2RATE             D_SUMMA,
    NDS1SUMMA            D_SUMMA,
    NDS2SUMMA            D_SUMMA,
    CLEARSUMMA           D_SUMMA,
    SUMMAWITHNDS1        D_SUMMA,
    SUMMAWITHNDS2        D_SUMMA,
    INOUTDATE            TIMESTAMP,
    PAYWAY               SMALLINT,
    COMMENT              D_COMMENT,
    PAYTIME              TIMESTAMP,
    PAYTURN              SMALLINT,
    PAYTARGET            D_MEDIUMCODE,
    PAYTYPE              D_MEDIUMCODE,
    PAYCODE              D_MEDIUMCODE,
    PAYERBANKREQ_ID      INTEGER,
    RECIPIENTBANKREQ_ID  INTEGER,
    DOCHEAD_ID           D_INT,
    PAYMENTFOR           D_INT,
    RESPONSIBLE          D_INT,
    KBK                  D_BIGCODE,
    OKATO                D_BIGCODE,
    PAYMENTBASEIDX       CHAR(2),
    TAXPERIODIDX1        CHAR(2),
    TAXPERIODIDX2        CHAR(2),
    TAXPERIODIDX3        CHAR(4),
    DOCNUMBERIDX         D_DOCNUMBER,
    DOCDATEIDX           CHAR(10),
    PAYMENTTYPEIDX       CHAR(2),
    PAYERSTATUS          CHAR(2)
);

CREATE TABLE BANKDOCUMENTMODEL (
    ID                   D_INT_IDEN,
    NDS1RATE             D_SUMMA,
    NDS2RATE             D_SUMMA,
    NDS1SUMMA            D_SUMMA,
    NDS2SUMMA            D_SUMMA,
    CLEARSUMMA           D_SUMMA,
    SUMMAWITHNDS1        D_SUMMA,
    SUMMAWITHNDS2        D_SUMMA,
    INOUTDATE            TIMESTAMP,
    PAYWAY               SMALLINT,
    COMMENT              D_COMMENT,
    PAYTIME              TIMESTAMP,
    PAYTURN              SMALLINT,
    PAYTARGET            D_MEDIUMCODE,
    PAYTYPE              D_MEDIUMCODE,
    PAYCODE              D_MEDIUMCODE,
    PAYERBANKREQ_ID      INTEGER,
    RECIPIENTBANKREQ_ID  INTEGER,
    DOCHEADMODEL_ID      D_INT,
    PAYMENTFOR           D_INT,
    RESPONSIBLE          D_INT,
    KBK                  D_BIGCODE,
    OKATO                D_BIGCODE,
    PAYMENTBASEIDX       CHAR(2),
    TAXPERIODIDX1        CHAR(2),
    TAXPERIODIDX2        CHAR(2),
    TAXPERIODIDX3        CHAR(4),
    DOCNUMBERIDX         D_DOCNUMBER,
    DOCDATEIDX           CHAR(10),
    PAYMENTTYPEIDX       CHAR(2),
    PAYERSTATUS          CHAR(2)
);

CREATE TABLE BILLHEAD (
    ID                      D_INT_IDEN,
    DOCHEAD_ID              D_INT_IDEN,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    REGISTDATE              D_DATE,
    ACCEPTANCETERM          D_INT,
    ACCEPTANCEDATE          D_DATE,
    ACCEPTANCESUM           D_SUMMA,
    PAYMENTTERM             D_INT,
    PLANPAYMENTDATEDOC      D_DATE,
    PLANPAYMENTDATE         D_DATE,
    PAYMENTDATE             D_DATE,
    PAYMENTSUM              D_SUMMA,
    ADDEXPENSESSUM          D_SUMMA,
    COMMENT                 D_DESCRIPTION,
    SHIPPER                 D_INT,
    CONSIGNEE               D_INT,
    PARTNERFROM_BANKREQ     D_INT,
    PARTNERTO_BANKREQ       D_INT,
    TOPAYDOCNUMBER          D_DOCNUMBER,
    TOPAYDOCDATE            D_DATE,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT
);

CREATE TABLE BILLHEADMODEL (
    ID                      D_INT_IDEN,
    DOCHEADMODEL_ID         D_INT_IDEN,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    REGISTDATE              D_DATE,
    ACCEPTANCETERM          D_INT,
    ACCEPTANCEDATE          D_DATE,
    ACCEPTANCESUM           D_SUMMA,
    PAYMENTTERM             D_INT,
    PLANPAYMENTDATEDOC      D_DATE,
    PLANPAYMENTDATE         D_DATE,
    PAYMENTDATE             D_DATE,
    PAYMENTSUM              D_SUMMA,
    ADDEXPENSESSUM          D_SUMMA,
    COMMENT                 D_DESCRIPTION,
    SHIPPER                 D_INT,
    CONSIGNEE               D_INT,
    PARTNERFROM_BANKREQ     D_INT,
    PARTNERTO_BANKREQ       D_INT,
    TOPAYDOCDATE            D_DATE,
    TOPAYDOCNUMBER          D_DOCNUMBER,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT
);

CREATE TABLE BILLSPEC (
    ID                     D_INT_IDEN,
    DOCSPEC_ID             D_INT_IDEN,
    DISCOUNT               D_RATIO,
    PRICE_WITH_DISCOUNT    D_SUMMA,
    SUMMA_WITH_DISCOUNT    D_SUMMA,
    COST                   D_SUMMA,
    ACCEPTANCEQUAN         D_QUANTITY,
    ACCEPTANCESUM          D_SUMMA,
    ACCEPTANCEPACKINGQUAN  D_QUANTITY,
    DOC_DISCOUNT           D_RATIO
);

CREATE TABLE BILLSPECMODEL (
    ID                     D_INT_IDEN,
    DOCSPECMODEL_ID        D_INT_IDEN,
    DISCOUNT               D_RATIO,
    PRICE_WITH_DISCOUNT    D_SUMMA,
    SUMMA_WITH_DISCOUNT    D_SUMMA,
    COST                   D_SUMMA,
    ACCEPTANCEQUAN         D_QUANTITY,
    ACCEPTANCESUM          D_SUMMA,
    ACCEPTANCEPACKINGQUAN  D_QUANTITY,
    DOC_DISCOUNT           D_RATIO
);

CREATE TABLE BUYBOOK (
    ID                D_INT_IDEN,
    FOLDER_ID         D_INT_IDEN,
    DOCUMENT_ID       D_INT,
    DOCTYPE           D_DOCTYPE,
    DOCNUMBER         D_DOCNUMBER,
    DOCDATE           D_DOCDATE,
    INSERTDATE        D_DATE,
    INDATE            D_DATE,
    STOCKDATE         D_DATE,
    PAYDATE           D_DATE,
    TOTALSUM          D_SUMMA,
    SUM_WITHOUT_NDS1  D_SUMMA,
    SUM_WITHOUT_NDS2  D_SUMMA,
    NDS1_SUM          D_SUMMA,
    NDS2_SUM          D_SUMMA,
    NOT_TAXABLE_SUM   D_SUMMA,
    NSP_SUM           D_SUMMA,
    PROVIDER_ID       D_INT,
    ORGUNIT_ID        D_INT,
    SUM_WITHOUT_NDS3  D_SUMMA,
    NDS3_SUM          D_SUMMA,
    APPROVED          D_BOOLEAN
);

CREATE TABLE CALCTAXESKIND (
    ID     D_INT_IDEN,
    CODE   D_BIGCODE,
    KNAME  D_NAME
);

CREATE TABLE CALCTAXESLINK (
    ID        D_INT_IDEN,
    KIND_ID   D_INT_IDEN,
    TAX_ID    D_INT_IDEN,
    FEEORDER  SMALLINT default 0,
    INCLUDED  D_BOOLEAN,
    SUBJECT   D_CALCTAXESSUBJECT
);

CREATE TABLE CASHDOCUMENT (
    ID           D_INT_IDEN,
    ANLCODE      D_ANLCODE,
    TARGETCODE   D_ANLCODE,
    BASE         D_COMMENT,
    COMMENT      D_COMMENT,
    GETDATE      TIMESTAMP,
    GETDOCUMENT  D_COMMENT,
    DOCHEAD_ID   D_INT,
    COMPANY      D_INT,
    BOOKKEEPER   D_INT,
    CHIEF        D_INT,
    CASHIER      D_INT,
    COMMENT1     D_COMMENT,
    ACC_ID       D_INT
);

CREATE TABLE CASHDOCUMENTMODEL (
    ID               D_INT_IDEN,
    ANLCODE          D_ANLCODE,
    TARGETCODE       D_ANLCODE,
    BASE             D_COMMENT,
    COMMENT          D_COMMENT,
    GETDATE          TIMESTAMP,
    GETDOCUMENT      D_COMMENT,
    DOCHEADMODEL_ID  D_INT,
    COMPANY          D_INT,
    BOOKKEEPER       D_INT,
    CHIEF            D_INT,
    CASHIER          D_INT,
    ACC_ID           D_INT,
    COMMENT1         D_COMMENT
);

CREATE TABLE CATALOG (
    ID                 D_INT_IDEN NOT NULL,
    FOLDER_ID          D_INT_IDEN NOT NULL,
    UPCODE             D_BIGCODE NOT NULL,
    CODE               D_BIGCODE NOT NULL,
    CNAME              D_NAME NOT NULL,
    GOODTYPE           SMALLINT NOT NULL,
    BARCODE            D_BIGCODE,
    PLUCODE            D_BIGCODE,
    OKDP_CODE          D_BIGCODE,
    ISHASWEIGHT        SMALLINT,
    WEIGHT             D_MASS,
    VOLUME             D_MASS,
    MARKETING_MARGIN   D_RATIO,
    VALIDITY           SMALLINT,
    ISNOTINUSE         SMALLINT,
    TAXGROUP_ID        D_INT,
    SHELFLIFE          D_QUANTITY,
    SHELFLIFE_MEAS     D_TIME_PERIOD_KIND,
    EXPDATE_CALC_KIND  D_EXP_DATE_CALC_KIND,
    ARTICUL            D_BIGCODE,
    MEASURE_CONTROL    D_MEASURE_CONTROL,
    PACKAGED           D_BOOLEAN NOT NULL,
    MEASURE1_ID        D_INT,
    MEASURE2_ID        D_INT,
    WEIGHTMEASURE_ID   D_INT,
    VOLUMEMEASURE_ID   D_INT,
    USE_SERIAL_NUM     D_BOOLEAN,
    GENERIC_ITEM_ID    D_INT,
    OKP_ID             D_INT
);

CREATE TABLE CATALOGFOLDER (
    ID                D_INT_IDEN NOT NULL,
    PARENT_ID         D_INT,
    FNAME             D_NAME NOT NULL,
    GROUPCODE         D_BIGCODE NOT NULL,
    BARCODE           D_BIGCODE,
    PLUCODE           D_BIGCODE,
    NUMBERING_ALG_ID  D_INT,
    FOLDER_TAG        D_NAME_N
);

CREATE TABLE CATALOGPRICE (
    ID                    D_INT_IDEN,
    CATALOG_ID            D_INT_IDEN,
    IN_ACTION             D_DATE default 'today',
    CURRENCY_CODE         D_SMALLCODE NOT NULL,
    PRICE                 D_SUMMA default 0,
    EQUIVALENT_PRICE  	  D_SUMMA default 0,
    CUR_RATE_TYPE_ID      D_INT,
    CUR_RATE_AUTHORITY_ID D_INT
);

CREATE TABLE CODEAMOR (
    UPCODE  D_BIGCODE NOT NULL,
    CODE    D_BIGCODE NOT NULL,
    CANAME  D_NAME
);

CREATE TABLE CONTRACT (
    ID                      D_INT_IDEN,
    DOCHEAD_ID              D_INT_IDEN,
    INCOMING_NUMBER         D_DOCNUMBER,
    REGISTRATION_DATE       D_DATE,
    STATUS                  D_CONTRACTSTATUS,
    RATIFICATION_DATE       D_DATE,
    COMPLETED_DATE          D_DATE,
    BEGINACTION_DATE        D_DATE,
    ENDACTION_DATE          D_DATE,
    DESCRIPTION             D_CONTRACT_COMMENT,
    COMMENT                 D_CONTRACT_COMMENT,
    CONTRACTORBANKREQ_ID    D_INT,
    CONTRACTOR_RESPONSIBLE  D_INT,
    BANKREQ_ID              D_INT,
    RESPONSIBLE             D_INT,
    SHIPPER                 D_INT,
    SHIPPERBANKREQ_ID       D_INT,
    CONSIGNEE               D_INT,
    CONSIGNEEBANKREQ_ID     D_INT,
    CALCSUMKIND             D_CONTARCT_CALC_SUM_KIND,
    SHIPPEDPAYMENT          D_SUMMA,
    RECEIVEDPAYMENT         D_SUMMA,
    SHIPPEDGOOD             D_SUMMA,
    RECEIVEDGOOD            D_SUMMA,
    FACTSHIPPEDPAYMENT      D_SUMMA,
    FACTRECEIVEDPAYMENT     D_SUMMA,
    FACTSHIPPEDGOOD         D_SUMMA,
    FACTRECEIVEDGOOD        D_SUMMA,
    PHASESHIPPEDPAYMENT     D_SUMMA,
    PHASERECEIVEDPAYMENT    D_SUMMA,
    PHASESHIPPEDGOOD        D_SUMMA,
    PHASERECEIVEDGOOD       D_SUMMA,
    CONTRACTORBANKDAYS      SMALLINT,
    BANKDAYS                SMALLINT,
    PENNY_RATE              D_RATIO,
    CONTRACTORPENNY_RATE    D_RATIO
);

CREATE TABLE CONTRACTMODIFYDOC (
    ID          D_INT_IDEN,
    DOCHEAD_ID  D_INT_IDEN,
    DOCTYPE     D_DOCTYPE,
    DOCNUMBER   D_DOCNUMBER,
    DOCDATE     D_DOCDATE,
    MODIFYDESC  D_CONTRACT_COMMENT,
    COMMENT     D_CONTRACT_COMMENT,
    ORIGINAL    D_ORIGINAL
);

CREATE TABLE CONTRACTOR (
    ID         D_INT_IDEN NOT NULL,
    CODE       D_BIGCODE NOT NULL,
    UPCODE     D_BIGCODE NOT NULL,
    CNAME      D_BIGNAME NOT NULL,
    FOLDER_ID  D_INT,
    KIND       D_CONTRACTOR_KIND NOT NULL
);

CREATE TABLE CONTRACTORCARD (
    ID                    D_INT_IDEN,
    CONTRACTOR_ID         D_INT_IDEN,
    TOTALINCOME           D_SUMMA,
    TOTALEXPENSES         D_SUMMA,
    DEBITORINDEBLIMIT     D_SUMMA,
    CREDITORINDEBLIMIT    D_SUMMA,
    PLANINCOME            D_SUMMA,
    PLANEXPENSES          D_SUMMA,
    ORGUNIT_ID            D_INT_IDEN,
    DEBITORINDEBSUM       COMPUTED BY (iif(totalexpenses,'>',totalincome,totalexpenses-totalincome,0)),
    CREDITORINDEBSUM      COMPUTED BY (iif(totalincome,'>',totalexpenses,totalincome-totalexpenses,0)),
    PLANDEBITORINDEBSUM   COMPUTED BY (iif(planexpenses,'>',planincome,planexpenses-planincome,0)),
    PLANCREDITORINDEBSUM  COMPUTED BY (iif(planincome,'>',planexpenses,planincome-planexpenses,0))
);

CREATE TABLE CONTRACTORCARDHIST (
    ID                 D_INT_IDEN,
    DOCHEAD_ID         D_INT_IDEN,
    CONTRACTORCARD_ID  D_INT_IDEN NOT NULL,
    KIND               D_CONTRACTORCARD_HIST_KIND,
    PROCESSDATE        D_DATE,
    SUMCUR             D_SUMMA,
    SUMNAT             D_SUMMA,
    DATETIME           D_DATE default 'now'
);

CREATE TABLE CONTRACTORCARDPLAN (
    ID                 D_INT_IDEN,
    DOCHEAD_ID         D_INT_IDEN,
    CONTRACTORCARD_ID  D_INT_IDEN NOT NULL,
    KIND               D_CONTRACTORCARD_PLAN_KIND,
    PROCESSDATE        D_DATE,
    SUMCUR             D_SUMMA,
    SUMNAT             D_SUMMA,
    IS_SET             D_BOOLEAN,
    DATETIME           D_DATE default 'now'
);

CREATE TABLE CONTRACTPHASE (
    ID                      D_INT_IDEN,
    DOCHEAD_ID              D_INT_IDEN,
    DOCNUMBER               D_DOCNUMBER,
    BEGINACTION_DATE        D_DATE,
    ENDACTION_DATE          D_DATE,
    DESCRIPTION             D_CONTRACT_COMMENT,
    COMMENTS                D_CONTRACT_COMMENT,
    CONTRACTOR_ID           D_INT,
    CONTRACTORBANKREQ_ID    D_INT,
    CONTRACTOR_RESPONSIBLE  D_INT,
    COMPANY                 D_INT,
    BANKREQ_ID              D_INT,
    RESPONSIBLE             D_INT,
    SHIPPER                 D_INT,
    SHIPPERBANKREQ_ID       D_INT,
    CONSIGNEE               D_INT,
    CONSIGNEEBANKREQ_ID     D_INT,
    SUMCUR                  D_SUMMA,
    SUMNAT                  D_SUMMA,
    CALCSUMKIND             D_CONTPHASE_CALC_SUM_KIND,
    MARGIN                  D_RATIO,
    AVOID                   D_BOOLEAN,
    SHIPPEDPAYMENT          D_SUMMA,
    RECEIVEDPAYMENT         D_SUMMA,
    SHIPPEDGOOD             D_SUMMA,
    RECEIVEDGOOD            D_SUMMA,
    FACTSHIPPEDPAYMENT      D_SUMMA,
    FACTRECEIVEDPAYMENT     D_SUMMA,
    FACTSHIPPEDGOOD         D_SUMMA,
    FACTRECEIVEDGOOD        D_SUMMA,
    ITEMSHIPPEDPAYMENT      D_SUMMA,
    ITEMRECEIVEDPAYMENT     D_SUMMA,
    ITEMSHIPPEDGOOD         D_SUMMA,
    ITEMRECEIVEDGOOD        D_SUMMA,
    CONTRACTORBANKDAYS      SMALLINT,
    BANKDAYS                SMALLINT,
    PENNY_RATE              D_RATIO,
    CONTRACTORPENNY_RATE    D_RATIO
);

CREATE TABLE CONTRACTSPEC (
    ID                D_INT_IDEN,
    PHASEITEMFACT_ID  D_INT,
    PHASEITEMPLAN_ID  D_INT,
    CATALOG_ID        D_INT_IDEN,
    PRICELIST_ID      D_INT,
    PRICETYPE_ID      D_INT,
    QUANTITY          D_QUANTITY,
    PRICE             D_SUMMA,
    SUMMA             D_SUMMA
);

CREATE TABLE CRM_ACTIVITY_KIND (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_ACTIVITY_SPHERE (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_BRANCH (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_CLIENT_RANK (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_CLIENT_TYPE (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_CONTACT (
    ID               D_INT_IDEN,
    PERSON_ID        D_INT,
    CONTRACTOR_ID    D_INT,
    RESPONSIBLE_ID   D_INT,
    PRIORITY         INTEGER,
    IS_DEFAULT       D_BOOLEAN,
    THE_POSITION     D_NAME_N,
    IS_RETIRED       D_BOOLEAN,
    NICKNAME         D_NAME_N,
    PERSON_TITLE_ID  D_INT,
    CURATOR_ID       D_INT,
    ADDRESS_SOURCE   SMALLINT,
    COMMENTS         D_COMMENT
);

CREATE TABLE CRM_CONTACT_LINK (
    CONTACT_ID   D_INT,
    RELATION_ID  D_INT
);

CREATE TABLE CRM_DELIVERY_KIND (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_LINK_PROBLEM_SOLUTION (
    SOLUTION_ID  D_INT_IDEN,
    PROBLEM_ID   D_INT_IDEN
);

CREATE TABLE CRM_LINK_SYMPTOM_PROBLEM (
    SYMPTOM_ID  D_INT_IDEN,
    PROBLEM_ID  D_INT_IDEN
);

CREATE TABLE CRM_LINKED_DOC (
    ID            D_INT_IDEN,
    ORIGINAL_ID   D_INT,
    RELATION_ID   D_INT,
    OPERATION_ID  D_INT,
    CONTACT_ID    D_INT,
    OFFER_ID      D_INT,
    PROBLEM_ID    D_INT,
    SOLUTION_ID   D_INT
);

CREATE TABLE CRM_MARKET (
    ID      D_INT_IDEN,
    CODE    D_BIGCODE,
    NAME    D_NAME_N,
    WEIGHT  D_INT
);

CREATE TABLE CRM_OFFER (
    ID                 D_INT_IDEN NOT NULL,
    CODE               D_BIGCODE,
    NAME               D_BIGNAME,
    OFFER_DATE         D_DATE,
    VALID_UNTIL        D_DATE,
    STATUS_ID          D_INT,
    SUCCESS_REASON_ID  D_INT,
    FAIL_REASON_ID     D_INT,
    KIND_ID            D_INT,
    FORECAST_ID        D_INT,
    RESPONSIBLE_ID     D_INT,
    RELATION_ID        D_INT,
    OPERATION_ID       D_INT,
    CONTACT_ID         D_INT,
    SWOT_S             D_CRM_SWOT,
    SWOT_W             D_CRM_SWOT,
    SWOT_O             D_CRM_SWOT,
    SWOT_T             D_CRM_SWOT
);

CREATE TABLE CRM_OFFER_FORECAST (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_OFFER_KIND (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_OFFER_REASON (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_OFFER_STATUS (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_OPERATION (
    ID                D_INT_IDEN,
    CODE              D_BIGCODE,
    RELATION_ID       D_INT,
    KIND_ID           D_INT,
    PRIORITY_ID       D_INT,
    PURPOSE_ID        D_INT,
    IS_PLAN           D_BOOLEAN,
    CREATE_DATE       D_DATETIME,
    PLAN_DATE_FROM    D_DATETIME,
    PLAN_DATE_TILL    D_DATETIME,
    FACT_DATE_FROM    D_DATETIME,
    FACT_DATE_TILL    D_DATETIME,
    CURATOR_ID        D_INT,
    RESPONSIBLE_ID    D_INT,
    OPERATION_PLAN    D_CRM_INFO,
    OPERATION_RESULT  D_CRM_INFO,
    NEXT_OPERATION  D_CRM_INFO,
    PARENT_ID         D_INT,
    CONTACT_ID        D_INT,
    STATUS            D_SHORT,
    STATE             D_SHORT,
    NOTIFIED          D_BOOLEAN
);

CREATE TABLE CRM_OPERATION_KIND (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_OPERATION_PRIORITY (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_OPERATION_PURPOSE (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_OPERATION_STATUS (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_OWNERSHIP_FORM (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_PAYMENT_COND (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_PERSON_TITLE (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_POSITION (
    ID    D_INT_IDEN,
    NAME  D_NAME_N
);

CREATE TABLE CRM_PROBLEM (
    ID               D_INT_IDEN,
    FOLDER_ID        D_INT,
    NAME             D_BIGNAME,
    INFO             D_CRM_INFO,
    KEYWORDS         D_BIGNAME,
    PROBLEM_TYPE_ID  D_INT,
    PRIORITY         INTEGER,
    VALID_FROM       D_DATE,
    VALID_TO         D_DATE,
    CREATOR_ID       D_INT
);

CREATE TABLE CRM_PROBLEM_TYPE (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_BIGNAME
);

CREATE TABLE CRM_RELATION (
    ID                  D_INT_IDEN,
    FOLDER_ID           D_INT,
    CODE                D_BIGCODE,
    NAME                D_BIGNAME,
    IS_LEGAL_PERSON     D_BOOLEAN,
    MARKET_ID           D_INT,
    DELIVERY_KIND_ID    D_INT,
    INFO                D_CRM_INFO,
    RESPONSIBLE_ID      D_INT,
    CLIENT_TYPE_ID      D_INT,
    CLIENT_RANK_ID      D_INT,
    PAYMENT_COND_ID     D_INT,
    STATUS_ID           D_INT,
    PARENT_ID           D_INT,
    NATURAL_PERSON_ID   D_INT,
    NICKNAME            D_NAME_N,
    PERSON_TITLE_ID     D_INT,
    UIN                 D_EMAIL,
    LEGAL_PERSON_ID     D_INT,
    BRANCH_ID           D_INT,
    ACTIVITY_SPHERE_ID  D_INT,
    ACTIVITY_KIND_ID    D_INT,
    OWNERSHIP_FORM_ID   D_INT,
    CURATOR_ID          D_INT
);

CREATE TABLE CRM_RELATION_STATUS (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE CRM_SOLUTION (
    ID                D_INT_IDEN,
    FOLDER_ID         D_INT,
    NAME              D_BIGNAME,
    INFO              D_CRM_INFO,
    SOLUTION_TYPE_ID  D_INT,
    PRIORITY          INTEGER,
    VALID_FROM        D_DATE,
    VALID_TO          D_DATE,
    CREATOR_ID        D_INT
);

CREATE TABLE CRM_SOLUTION_TYPE (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_BIGNAME
);

CREATE TABLE CRM_SYMPTOM (
    ID          D_INT_IDEN,
    FOLDER_ID   D_INT,
    NAME        D_BIGNAME,
    INFO        D_CRM_INFO,
    CREATOR_ID  D_INT
);

CREATE TABLE CRM_USER (
    ID            D_INT_IDEN,
    PERSON_ID     D_INT,
    THE_POSITION  D_NAME_N,
    BUSY          D_BOOLEAN,
    IS_ADMIN      D_BOOLEAN
);

CREATE TABLE CT_CONFIG (
    BASE_CURRENCY  D_SMALLCODE,
    NAT_CURRENCY   D_SMALLCODE,
    CURRENCY_PREC  INTEGER
);

CREATE TABLE CURRENCY (
    UPCODE        D_SMALLCODE NOT NULL,
    CODE          D_SMALLCODE NOT NULL,
    ISO           D_SMALLCODE NOT NULL,
    BANK_CODE     D_SMALLCODE NOT NULL,
    CNAME         D_SMALLNAME,
    MEN           SMALLINT NOT NULL,
    ALTNAME1      D_BIGCODE NOT NULL,
    ALTNAME2      D_BIGCODE NOT NULL,
    ALTNAME3      D_BIGCODE NOT NULL,
    ALTUNITNAME1  D_BIGCODE NOT NULL,
    ALTUNITNAME2  D_BIGCODE NOT NULL,
    ALTUNITNAME3  D_BIGCODE NOT NULL,
    ROUNDPRICE    D_RATIO NOT NULL,
    ROUNDSUM      D_RATIO NOT NULL,
    VIEWPRIORITY  INTEGER,
    ID            D_INT_IDEN
);

CREATE TABLE DIS_CARD (
    ID           D_INT_IDEN,
    FOLDER_ID    D_INT,
    CARDNUM      D_BIGCODE,
    OWNER_ID     D_INT,
    DISCOUNT     D_RATIO,
    CREDITLIMIT  D_SUMMA,
    CREDITDEPTH  INTEGER,
    COMMENTS     D_COMMENT,
    IS_ACTIVE    D_BOOLEAN
);

CREATE TABLE DIS_CARD_HIST (
    ID          D_INT_IDEN,
    CARD_ID     D_INT,
    TIME_STAMP  D_DATE,
    USER_ID     D_INT,
    DISCOUNT    D_RATIO,
    COMMENTS    D_COMMENT
);

CREATE TABLE DIS_CARD_USER (
    ID             D_INT_IDEN,
    CARD_ID        D_INT,
    CONTRACTOR_ID  D_INT
);

CREATE TABLE DIS_COEF (
    ID                D_INT_IDEN,
    CARD_ID           D_INT,
    CATALOGFOLDER_ID  D_INT,
    CATALOG_ID        D_INT,
    COEFFICIENT       D_RATIO
);

CREATE TABLE DIS_EXTRA_DISCOUNT (
    ID        D_INT_IDEN,
    CARD_ID   D_INT,
    NAME      D_NAME_N,
    DISCOUNT  D_RATIO,
    PLANSALE  D_SUMMA,
    PLANDATE  D_DATE,
    FACTSALE  D_SUMMA,
    COMMENTS  D_COMMENT
);

CREATE TABLE DISCOUNT (
    ID         D_INT_IDEN,
    FOLDER_ID  D_INT_IDEN,
    DNAME      D_NAME,
    FORMULA    D_FORMULA,
    ALG_ID     D_INT
);

CREATE TABLE DOC_SPEC_PACKAGE (
    ID          D_INT_IDEN NOT NULL,
    DOCSPEC_ID  D_INT_IDEN NOT NULL,
    PACKAGE_ID  D_INT_IDEN NOT NULL,
    QUANTITY    D_QUANTITY,
    WEIGHT      D_QUANTITY,
    VOLUME      D_QUANTITY
);

CREATE TABLE DOC_SPEC_SERIAL_NUM (
    ID          D_INT_IDEN NOT NULL,
    DOCSPEC_ID  D_INT_IDEN NOT NULL,
    SERIAL_NUM  D_SERIAL_NUMBER NOT NULL,
    COMMENT     D_COMMENT
);

CREATE TABLE DOCACTION (
    ID           D_INT_IDEN,
    DOCUMENT_ID  D_INT_IDEN,
    ACTIONTYPE   SMALLINT,
    STAGE_ID     D_INT,
    STAGESTATE   SMALLINT
);

CREATE TABLE DOCHEAD (
    ID                   D_INT_IDEN,
    FOLDER_ID            D_INT_IDEN,
    DOCSECTION           D_DOCSECTION NOT NULL,
    DOCTYPE              D_DOCTYPE,
    DOCNUMBER            D_DOCNUMBER,
    DOCDATE              D_DOCDATE,
    CURRENCY_CODE        D_SMALLCODE,
    CURCOURCE            D_CURCOURCE,
    SUMMACUR             D_SUMMA,
    SUMMANAT             D_SUMMA,
    BASEDOC_ID           D_INT,
    BASEDOCTYPE          D_DOCTYPE,
    BASEDOCNUMBER        D_DOCNUMBER,
    BASEDOCDATE          D_DOCDATE,
    CONTRACT_ID          D_INT,
    CONTRACTTYPE         D_DOCTYPE,
    CONTRACTNUMBER       D_DOCNUMBER,
    CONTRACTDATE         D_DOCDATE,
    WEIGHT               D_WEIGHT,
    VOLUME               D_VOLUME,
    PRICELIST_ID         D_INT,
    PRICETYPE_ID         D_INT,
    CALCTAXESKIND_ID     D_INT,
    STOCKSRC             D_INT,
    STOCKDEST            D_INT,
    MOLSRC               D_INT,
    MOLDEST              D_INT,
    DISCOUNT_FOLDER_ID   D_INT,
    FROM_ID              D_INT,
    TO_ID                D_INT,
    THROUGH_ID           D_INT,
    REQUESTER            SMALLINT,
    ORIGINAL             D_ORIGINAL,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT,
    UNID                 VARCHAR(32),
    SCHEDULE_ID          D_INT
);

CREATE TABLE DOCHEADMODEL (
    ID                    D_INT_IDEN,
    FOLDER_ID             D_INT_IDEN,
    DOCSECTION            D_DOCSECTION NOT NULL,
    MODELNAME             D_NAME,
    DOCTYPE               D_DOCTYPE,
    DOCNUMBER             D_DOCNUMBER,
    DOCDATE               D_DOCDATE,
    CURRENCY_CODE         D_SMALLCODE,
    CURCOURCE             D_CURCOURCE,
    SUMMACUR              D_SUMMA,
    SUMMANAT              D_SUMMA,
    BASEDOC_ID            D_INT,
    BASEDOCTYPE           D_DOCTYPE,
    BASEDOCNUMBER         D_DOCNUMBER,
    BASEDOCDATE           D_DOCDATE,
    CONTRACT_ID           D_INT,
    CONTRACTTYPE          D_DOCTYPE,
    CONTRACTNUMBER        D_DOCNUMBER,
    CONTRACTDATE          D_DOCDATE,
    WEIGHT                D_WEIGHT,
    VOLUME                D_VOLUME,
    PRICELIST_ID          D_INT,
    PRICETYPE_ID          D_INT,
    PROVIDERPRICELIST_ID  D_INT,
    CALCTAXESKIND_ID      D_INT,
    STOCKSRC              D_INT,
    STOCKDEST             D_INT,
    MOLSRC                D_INT,
    MOLDEST               D_INT,
    DISCOUNT_FOLDER_ID    D_INT,
    MODELDESTFOLDER_ID    D_INT,
    FROM_ID               D_INT,
    TO_ID                 D_INT,
    THROUGH_ID            D_INT,
    CURRATETYPE_ID        D_INT,
    CURRATEAUTHORITY_ID   D_INT
);

CREATE TABLE DOCHEADSTATE (
    ID            D_INT_IDEN,
    DOCACTION_ID  D_INT_IDEN,
    READYSUMMA    D_SUMMA default 0,
    DATA1         D_INT,
    DATA2         D_INT,
    DATETIME      TIMESTAMP default 'now',
    USER_ID       D_INT
);

CREATE TABLE DOCPROCESSSTAGE (
    ID                  D_INT_IDEN,
    DOCTYPE_ID          D_INT_IDEN,
    PARTIAL             D_BOOLEAN,
    PREVISCOMPLETE      D_BOOLEAN,
    SHOWNEWDOCUMENT     D_BOOLEAN,
    STAGE               D_INT_IDEN,
    DPSNAME             D_NAME,
    COMMENT             D_COMMENT,
    LINKDOCSECTION      SMALLINT,
    LINKDOCTYPE         D_DOCTYPE,
    LINKDOCMODEL        D_INT,
    LINKDOCDESTFOLDER   D_INT,
    ISANDIN             D_BOOLEAN,
    ISANDOUT            D_BOOLEAN,
    ISORIN              D_BOOLEAN,
    ISOROUT             D_BOOLEAN,
    PRIORITY            SMALLINT,
    LINKDOCMODELFOLDER  D_INT,
    COORX               INTEGER,
    COORY               INTEGER,
    DEPENDENT           D_BOOLEAN,
    ALGORITHM           D_CUSTOMALGORITHM,
    ROLLBACK_ALGORITHM  D_CUSTOMALGORITHM,
    ALG_ID              D_INT,
    RBALG_ID            D_INT,
    USE_CURRENT_DATE    D_BOOLEAN,
    CODE                D_BIGCODE NOT NULL,
    VALUE_OUT_OF_BOUND  D_BOOLEAN,
    LINKDOC_ROLLBACK              D_BOOLEAN,
    LINKDOC_ROLLBACK_INTERACTIVE  SMALLINT
);

CREATE TABLE DOCPROCESSSTAGE_RIGHTS (
    ID        D_INT_IDEN,
    STAGE_ID  D_INT_IDEN,
    GROUP_ID  D_INT_IDEN,
    GRANTS    SMALLINT
);

CREATE TABLE DOCSECTION (
    ID                   D_INT_IDEN NOT NULL,
    DSNAME               D_NAME NOT NULL,
    FOLDERTYPE           D_INT_IDEN NOT NULL,
    MODEL_FOLDERTYPE     D_INT,
    WITH_TAXES           D_BOOLEAN NOT NULL,
    WITH_SPEC            D_BOOLEAN NOT NULL,
    DIRECTION            SMALLINT NOT NULL,
    DUMMY                D_BOOLEAN NOT NULL,
    CLASS_ID             D_INT,
    MODEL_CLASS_ID       D_INT,
    SPEC_CLASS_ID        D_INT,
    MODEL_SPEC_CLASS_ID  D_INT
);

CREATE TABLE DOCSPEC (
    ID                D_INT_IDEN,
    DOCHEAD_ID        D_INT_IDEN,
    CATALOG_ID        D_INT,
    PRICELISTSPEC_ID  D_INT,
    QUANTITY          D_QUANTITY,
    PRICE             D_SUMMA,
    SUMMA             D_SUMMA,
    PRICE1            D_SUMMA,
    SUMMA1            D_SUMMA,
    WEIGHT            D_WEIGHT,
    VOLUME            D_VOLUME,
    BESTBEFORE        D_DATE,
    TAXGROUP_ID       D_INT,
    SHELFLIFE         D_QUANTITY,
    SHELFLIFE_MEAS    D_TIME_PERIOD_KIND NOT NULL,
    PRODUCTIONDATE    D_DATE,
    MEASURE1_ID       D_INT,
    MEASURE2_ID       D_INT,
    QUANTITY2         D_QUANTITY,
    COMMENT           D_COMMENT,
    CONTRACTOR_ID     D_INT,
    UNID              VARCHAR(32),
    ORDER_SPEC_ID     D_INT,
    STOCKSRC          D_INT,
    STOCKDEST         D_INT,
    MOLSRC            D_INT,
    MOLDEST           D_INT
);

CREATE TABLE DOCSPECMODEL (
    ID                D_INT_IDEN,
    DOCHEAD_ID        D_INT_IDEN,
    CATALOG_ID        D_INT,
    PRICELISTSPEC_ID  D_INT,
    QUANTITY          D_QUANTITY,
    PRICE             D_SUMMA,
    SUMMA             D_SUMMA,
    PRICE1            D_SUMMA,
    SUMMA1            D_SUMMA,
    WEIGHT            D_WEIGHT,
    VOLUME            D_VOLUME,
    BESTBEFORE        D_DATE,
    PACKING_ID        D_INT,
    PACKINGQUAN       D_QUANTITY,
    TAXGROUP_ID       D_INT,
    PRODUCTIONDATE    D_DATE,
    SHELFLIFE         D_QUANTITY,
    SHELFLIFE_MEAS    D_TIME_PERIOD_KIND NOT NULL,
    MEASURE1_ID       D_INT,
    MEASURE2_ID       D_INT,
    QUANTITY2         D_QUANTITY,
    COMMENT           D_COMMENT,
    CONTRACTOR_ID     D_INT,
    STOCKSRC          D_INT,
    STOCKDEST         D_INT,
    MOLSRC            D_INT,
    MOLDEST           D_INT
);

CREATE TABLE DOCSPECSTATE (
    ID               D_INT_IDEN,
    DOCHEADSTATE_ID  D_INT_IDEN,
    DOCSPEC_ID       D_INT_IDEN,
    READYQUANTITY    D_MASS,
    READYSUMMA       D_SUMMA,
    DATA1            D_INT,
    READYQUANTITY2   D_QUANTITY DEFAULT 0,
    DATA2            D_INT
);

CREATE TABLE DOCTYPE_DOCSECTION_LINK (
    ID             D_INT_IDEN NOT NULL,
    KIND           D_DOCKIND NOT NULL,
    DOCTYPE_ID     D_INT_IDEN NOT NULL,
    DOCSECTION_ID  D_INT_IDEN NOT NULL
);

CREATE TABLE DOCTYPE_RIGHTS (
    ID        D_INT_IDEN,
    REC_ID    D_INT_IDEN,
    GROUP_ID  D_INT_IDEN,
    RIGHTS    INTEGER
);

CREATE TABLE DOCUMENT_LINK (
    ID          D_INT_IDEN NOT NULL,
    DOC_ID      D_INT_IDEN NOT NULL,
    BASEDOC_ID  D_INT_IDEN NOT NULL
);

CREATE TABLE DP_STAGE_ACTION (
    ID              D_INT_IDEN NOT NULL,
    NAME            D_NAME NOT NULL,
    CREATEDOC_FLAG  D_BOOLEAN NOT NULL
);

CREATE TABLE ECONOMICOPER (
    ID              D_INT_IDEN NOT NULL,
    FOLDER_ID       D_INT_IDEN,
    KEEPDATE        TIMESTAMP default 'now',
    COMMENT         D_COMMENT,
    SPECMARK        D_BIGCODE,
    DOCBASETYPE     D_DOCTYPE,
    DOCBASENUMBER   D_DOCNUMBER,
    DOCBASEDATE     TIMESTAMP,
    DOCBASE_ID      INTEGER,
    DOCTYPE         D_DOCTYPE,
    DOCNUMBER       D_DOCNUMBER,
    DOCDATE         TIMESTAMP,
    DOC_ID          INTEGER,
    SUMMA           D_SUMMA,
    INSERTSIGN      SMALLINT NOT NULL,
    CONTRACT_ID     D_INT,
    CONTRACTTYPE    D_DOCTYPE,
    CONTRACTNUMBER  D_DOCNUMBER,
    CONTRACTDATE    D_DOCDATE,
    FROM_ID         D_INT,
    TO_ID           D_INT,
    USER_ID         D_INT
);

CREATE TABLE ECONOMICOPERMODEL (
    ID                  D_INT_IDEN NOT NULL,
    FOLDER_ID           D_INT_IDEN,
    MODELNAME           D_NAME,
    KEEPDATE            TIMESTAMP,
    COMMENT             D_COMMENT,
    SPECMARK            D_BIGCODE,
    DOCBASETYPE         D_DOCTYPE,
    DOCBASENUMBER       D_DOCNUMBER,
    DOCBASEDATE         TIMESTAMP,
    DOCBASE_ID          INTEGER,
    DOCTYPE             D_DOCTYPE,
    DOCNUMBER           D_DOCNUMBER,
    DOCDATE             TIMESTAMP,
    DOC_ID              INTEGER,
    SUMMA               D_SUMMA,
    SOURCEFROM          SMALLINT default 0,
    SOURCETO            SMALLINT default 0,
    CONTRACT_ID         D_INT,
    CONTRACTTYPE        D_DOCTYPE,
    CONTRACTNUMBER      D_DOCNUMBER,
    CONTRACTDATE        D_DOCDATE,
    FROM_ID             D_INT,
    TO_ID               D_INT,
    MODELDESTFOLDER_ID  D_INT
);

CREATE TABLE ECONOMICSPEC (
    ID                    D_INT_IDEN,
    ECONOMICOPER_ID       D_INT_IDEN,
    ANLDB1_ID             INTEGER,
    ANLDB2_ID             INTEGER,
    ANLDB3_ID             INTEGER,
    ANLDB4_ID             INTEGER,
    ANLDB5_ID             INTEGER,
    ANLKT1_ID             INTEGER,
    ANLKT2_ID             INTEGER,
    ANLKT3_ID             INTEGER,
    ANLKT4_ID             INTEGER,
    ANLKT5_ID             INTEGER,
    CATALOG_ID            D_INT,
    QUANTITY              D_MASS,
    SUMMANAT              D_SUMMA,
    SUMMACUR              D_SUMMA,
    CURCOURCE             D_RATIO default 0,
    REMNACCDB_ID          INTEGER,
    REMNACCKT_ID          INTEGER,
    REMNANLDB_ID          INTEGER,
    REMNANLKT_ID          INTEGER,
    REMNVALDB_ID          INTEGER,
    REMNVALKT_ID          INTEGER,
    REMNDB_ID             INTEGER,
    REMNKT_ID             INTEGER,
    ACCBATCHDB_ID         INTEGER,
    ACCBATCHHISTORYDB_ID  INTEGER,
    ACCBATCHKT_ID         INTEGER,
    ACCBATCHHISTORYKT_ID  INTEGER,
    FEATURE1_ID           D_INT,
    FEATURE2_ID           D_INT,
    FEATURE3_ID           D_INT,
    FEATURE4_ID           D_INT,
    FEATURE5_ID           D_INT,
    ACCDB_ID              D_INT,
    ACCKT_ID              D_INT
);

CREATE TABLE ECONOMICSPECMODEL (
    ID               D_INT_IDEN,
    ECONOMICOPER_ID  D_INT_IDEN,
    ANLDB1_ID        INTEGER,
    ANLDB2_ID        INTEGER,
    ANLDB3_ID        INTEGER,
    ANLDB4_ID        INTEGER,
    ANLDB5_ID        INTEGER,
    ANLKT1_ID        INTEGER,
    ANLKT2_ID        INTEGER,
    ANLKT3_ID        INTEGER,
    ANLKT4_ID        INTEGER,
    ANLKT5_ID        INTEGER,
    CATALOG_ID       D_INT,
    ENTRYFOLDER      D_INT,
    QUANTITY         D_MASS,
    SUMMANAT         D_SUMMA,
    SUMMACUR         D_SUMMA,
    CURCOURCE        D_RATIO DEFAULT 0,
    SUMMAFORMULA     D_FORMULA,
    QUANFORMULA      D_FORMULA,
    FEATURE1_ID      D_INT,
    FEATURE2_ID      D_INT,
    FEATURE3_ID      D_INT,
    FEATURE4_ID      D_INT,
    FEATURE5_ID      D_INT,
    ENTRYGOODTYPE    SMALLINT,
    ENTRYTAXGROUP    D_INT,
    ACCDB_ID         D_INT,
    ACCKT_ID         D_INT,
    SUMALG_ID        D_INT,
    QTYALG_ID        D_INT
);

CREATE TABLE ECONSPEC_FEATURE (
    ID      D_INT_IDEN,
    UPCODE  D_ECONSPEC_FEATURE_CODE NOT NULL,
    CODE    D_ECONSPEC_FEATURE_CODE NOT NULL,
    FNAME   D_NAME
);

CREATE TABLE EMPLOYEES (
    ID             D_INT_IDEN,
    FNAME          VARCHAR(20),
    PATRONYMIC     VARCHAR(20),
    SURNAME        VARCHAR(20),
    ADDRESS        D_ADDRESS,
    PASSP_GIVEN    D_COMMENT,
    PASSP_CITY     VARCHAR(20),
    PASSP_DATE     TIMESTAMP,
    PASSP_NUM      CHAR(10),
    PASSP_SER      CHAR(10),
    OFFICE         VARCHAR(40),
    PHONE          D_PHONE,
    COMMENT        D_COMMENT,
    TABNUM         CHAR(10),
    CONTRACTOR_ID  D_INT,
    PERSONNEL_ID   D_INT,
    IS_DEFAULT     D_BOOLEAN,
    PERSON_ID      D_INT_IDEN
);

CREATE TABLE EXCH_CONFIG (
    SITE_CODE  CHAR(5)
);

CREATE TABLE EXCH_EXPORT (
    ID           D_INT_IDEN,
    SITE_ID      D_INT,
    BEAN_NAME    D_BEAN_NAME,
    ORIGIN       D_TABLE_NAME,
    REC_ID       D_INT,
    PACKET       INTEGER,
    STATUS       D_EXCH_EXPORT_STATUS,
    PACKET_TIME  D_DATETIME
);

CREATE TABLE EXCH_IMPORT (
    ID           D_INT_IDEN,
    SITE_ID      D_INT,
    BEAN_NAME    D_BEAN_NAME,
    ORIGIN       D_TABLE_NAME,
    OLD_KEY      D_BIG_INT_IDEN,
    NEW_KEY      D_BIG_INT_IDEN,
    PACKET       INTEGER,
    PACKET_TIME  D_DATETIME
);

CREATE TABLE EXCH_SITE (
    ID               D_INT_IDEN,
    CODE             CHAR(5),
    NAME             D_NAME_N,
    PATH_IN          D_FILENAME,
    PATH_OUT         D_FILENAME,
    PACKET_IN        INTEGER,
    PACKET_IN_TIME   TIMESTAMP,
    PACKET_OUT       INTEGER,
    PACKET_OUT_TIME  TIMESTAMP,
    REQUEST_DONE     D_BOOLEAN,
    EXPORT_CMD       VARCHAR(256),
    IMPORT_CMD       VARCHAR(256)
);

CREATE TABLE EXCH_TABLE (
    CLASS_ID    D_INT_IDEN,
    TABLE_NAME  D_TABLE_NAME
);

CREATE TABLE FACTURAHEAD (
    ID                   D_INT_IDEN NOT NULL,
    INDATE               TIMESTAMP,
    STOCKDATE            TIMESTAMP,
    PAYDATE              TIMESTAMP,
    PARTNERFROM_BANKREQ  D_INT,
    PARTNERTO_BANKREQ    D_INT,
    TOPAYDOCNUMBER       D_DOCNUMBER,
    TOPAYDOCDATE         TIMESTAMP,
    COMMENT              D_DESCRIPTION,
    DOCHEAD_ID           D_INT,
    SHIPPER              D_INT,
    CONSIGNEE            D_INT
);

CREATE TABLE FACTURAHEADMODEL (
    ID                   D_INT_IDEN NOT NULL,
    INDATE               TIMESTAMP,
    STOCKDATE            TIMESTAMP,
    PAYDATE              TIMESTAMP,
    PARTNERFROM_BANKREQ  D_INT,
    PARTNERTO_BANKREQ    D_INT,
    TOPAYDOCNUMBER       D_DOCNUMBER,
    TOPAYDOCDATE         TIMESTAMP,
    COMMENT              D_DESCRIPTION,
    DOCHEADMODEL_ID      D_INT,
    SHIPPER              D_INT,
    CONSIGNEE            D_INT
);

CREATE TABLE FEATURE (
    ID               INTEGER NOT NULL,
    NAME             D_NAME NOT NULL,
    DATATYPE         SMALLINT,
    PRIORITY         INTEGER,
    NULL_VALUE       D_FEATURE,
    ENTITY_CLASS_ID  D_INT,
    CODE             D_BIGCODE NOT NULL,
    IS_ARRAY         D_BOOLEAN
);

CREATE TABLE FEATURELINK (
    ID          INTEGER NOT NULL,
    REC_ID      INTEGER,
    FEATURE_ID  INTEGER,
    VAL         D_FEATURE,
    VAL_FOLDER  D_FEATURE_INT,
    VAL_TEXT    D_FEATURE_STR,
    CLASS_ID    D_INT
);

CREATE TABLE FEATUREVAL (
    ID          INTEGER NOT NULL,
    FEATURE_ID  INTEGER,
    VAL         D_FEATURE
);

CREATE TABLE FIN_CONFIG (
    BASE_CURRENCY  D_SMALLCODE,
    NAT_CURRENCY   D_SMALLCODE,
    CURRENCY_PREC  INTEGER
);

CREATE TABLE FINACCOUNT (
    ID             D_INT_IDEN,
    FOLDER_ID      D_INT_IDEN,
    CODE           D_BIGCODE NOT NULL,
    UPCODE         D_BIGCODE NOT NULL,
    ACCNAME        D_NAME,
    CURRENCY_CODE  D_SMALLCODE,
    KIND           SMALLINT NOT NULL,
    ANL1_KIND      SMALLINT,
    ANL2_KIND      SMALLINT,
    ANL3_KIND      SMALLINT,
    ANL4_KIND      SMALLINT,
    ANL5_KIND      SMALLINT,
    ANL1_CLASS_ID  D_INT,
    ANL2_CLASS_ID  D_INT,
    ANL3_CLASS_ID  D_INT,
    ANL4_CLASS_ID  D_INT,
    ANL5_CLASS_ID  D_INT
);

CREATE TABLE FINANL (
    ID         D_INT_IDEN,
    PARENT_ID  D_INT,
    FINACC_ID  D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    UPCODE     D_BIGCODE NOT NULL,
    ANLNAME    D_NAME,
    ANLLEVEL   SMALLINT NOT NULL
);

CREATE TABLE FINOPER (
    ID                   D_INT_IDEN NOT NULL,
    FOLDER_ID            D_INT_IDEN,
    INSERTSIGN           SMALLINT NOT NULL,
    KEEPDATE             TIMESTAMP default 'now',
    COMMENT              D_COMMENT,
    DOCBASETYPE          D_DOCTYPE,
    DOCBASENUMBER        D_DOCNUMBER,
    DOCBASEDATE          TIMESTAMP,
    DOCBASE_ID           INTEGER,
    DOCTYPE              D_DOCTYPE,
    DOCNUMBER            D_DOCNUMBER,
    DOCDATE              TIMESTAMP,
    DOC_ID               INTEGER,
    CONTRACT_ID          D_INT,
    CONTRACTTYPE         D_DOCTYPE,
    CONTRACTNUMBER       D_DOCNUMBER,
    CONTRACTDATE         D_DOCDATE,
    RESPONSIBLE          D_INT,
    SUMNAT               D_SUMMA,
    SUMCUR               D_SUMMA,
    CURCODE              D_SMALLCODE,
    CURRATE              D_CURCOURCE,
    USER_ID              D_INT,
    FROM_ID              D_INT,
    TO_ID                D_INT,
    PLANNED              D_BOOLEAN,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT
);

CREATE TABLE FINOPERMODEL (
    ID                   D_INT_IDEN NOT NULL,
    FOLDER_ID            D_INT_IDEN,
    MODELNAME            D_NAME,
    KEEPDATE             TIMESTAMP default 'now',
    COMMENT              D_COMMENT,
    DOCBASETYPE          D_DOCTYPE,
    DOCBASENUMBER        D_DOCNUMBER,
    DOCBASEDATE          TIMESTAMP,
    DOCBASE_ID           INTEGER,
    DOCTYPE              D_DOCTYPE,
    DOCNUMBER            D_DOCNUMBER,
    DOCDATE              TIMESTAMP,
    DOC_ID               INTEGER,
    CONTRACT_ID          D_INT,
    CONTRACTTYPE         D_DOCTYPE,
    CONTRACTNUMBER       D_DOCNUMBER,
    CONTRACTDATE         D_DOCDATE,
    RESPONSIBLE          D_INT,
    SUMNAT               D_SUMMA,
    SUMCUR               D_SUMMA,
    CURCODE              D_SMALLCODE,
    CURRATE              D_CURCOURCE,
    FROM_ID              D_INT,
    TO_ID                D_INT,
    PLANNED              D_BOOLEAN,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT,
    MODELDESTFOLDER_ID   D_INT,
    SOURCEFROM           INTEGER,
    SOURCETO             INTEGER
);

CREATE TABLE FINPERIOD (
    ID         D_INT_IDEN,
    PNAME      D_BIGCODE NOT NULL,
    DATEFROM   TIMESTAMP NOT NULL,
    DATETO     TIMESTAMP NOT NULL,
    WHOCLOSED  D_USERNAME,
    DATECLOSE  TIMESTAMP
);

CREATE TABLE FINSPEC (
    ID              D_INT_IDEN,
    FINOPER_ID      D_INT_IDEN,
    PARENT_ID       D_INT,
    SRCACC_ID       D_INT,
    DSTACC_ID       D_INT,
    SRCANL1_ID      D_INT,
    SRCANL2_ID      D_INT,
    SRCANL3_ID      D_INT,
    SRCANL4_ID      D_INT,
    SRCANL5_ID      D_INT,
    DSTANL1_ID      D_INT,
    DSTANL2_ID      D_INT,
    DSTANL3_ID      D_INT,
    DSTANL4_ID      D_INT,
    DSTANL5_ID      D_INT,
    SUMNAT          D_SUMMA,
    SUMCUR          D_SUMMA,
    SRCTURNACC_ID   D_INT,
    DSTTURNACC_ID   D_INT,
    SRCTURNFEAT_ID  D_INT,
    DSTTURNFEAT_ID  D_INT,
    PLANNED         D_BOOLEAN
);

CREATE TABLE FINSPECMODEL (
    ID          D_INT_IDEN,
    FINOPER_ID  D_INT_IDEN,
    PARENT_ID   D_INT,
    SRCACC_ID   D_INT,
    DSTACC_ID   D_INT,
    SRCANL1_ID  D_INT,
    SRCANL2_ID  D_INT,
    SRCANL3_ID  D_INT,
    SRCANL4_ID  D_INT,
    SRCANL5_ID  D_INT,
    DSTANL1_ID  D_INT,
    DSTANL2_ID  D_INT,
    DSTANL3_ID  D_INT,
    DSTANL4_ID  D_INT,
    DSTANL5_ID  D_INT,
    SUMNAT      D_SUMMA,
    SUMCUR      D_SUMMA,
    FORMULA     D_FORMULA,
    PLANNED     D_BOOLEAN,
    ALG_ID      D_INT
);

CREATE TABLE FINSTRUCTURE (
    ID         D_INT_IDEN,
    PARENT_ID  D_INT,
    CODE       D_BIGCODE NOT NULL,
    UPCODE     D_BIGCODE NOT NULL,
    SNAME      D_NAME,
    KIND       D_FINCENTER_KIND
);

CREATE TABLE FINTURNACC (
    ID              D_INT_IDEN,
    PERIOD_ID       D_INT,
    ACC_ID          D_INT,
    ANL1_ID         D_INT,
    ANL2_ID         D_INT,
    ANL3_ID         D_INT,
    ANL4_ID         D_INT,
    ANL5_ID         D_INT,
    REMNBEGCUR      D_SUMMA,
    REMNBEGNAT      D_SUMMA,
    REMNBEGCURPLAN  D_SUMMA,
    REMNBEGNATPLAN  D_SUMMA,
    CURCODE         D_SMALLCODE
);

CREATE TABLE FINTURNFEAT (
    ID              D_INT_IDEN,
    FINTURNACC_ID   D_INT,
    PERIOD_ID       D_INT,
    FEAT_ID         D_INT,
    FANL1_ID        D_INT,
    FANL2_ID        D_INT,
    FANL3_ID        D_INT,
    FANL4_ID        D_INT,
    FANL5_ID        D_INT,
    REMNBEGCUR      D_SUMMA,
    REMNBEGNAT      D_SUMMA,
    REMNBEGCURPLAN  D_SUMMA,
    REMNBEGNATPLAN  D_SUMMA,
    CURCODE         D_SMALLCODE
);

CREATE TABLE FOLDER (
    ID          D_INT_IDEN,
    PARENT_ID   D_INT,
    FNAME       D_NAME,
    FOLDERTYPE  SMALLINT,
    DATA        SMALLINT,
    FOLDER_TAG  D_NAME_N
);

CREATE TABLE FOLDER_RIGHTS (
    ID          D_INT_IDEN,
    GROUP_ID    D_INT_IDEN,
    FOLDERPART  SMALLINT,
    FOLDER_ID   D_INT_IDEN,
    RIGHTS      INTEGER
);

CREATE TABLE FORMULA (
    UPCODE           D_BIGCODE NOT NULL,
    CODE             D_BIGCODE NOT NULL,
    FNAME            D_NAME,
    STOREDPROCEDURE  D_STORED_PROC_NAME,
    CONTEXT          SMALLINT NOT NULL
);

CREATE TABLE FUEL_DENSITY_HEAD (
    ID             D_INT_IDEN NOT NULL,
    FOLDER_ID      D_INT,
    DATE_TIME      D_DATETIME,
    CONTRACTOR_ID  D_INT,
    CODE           D_BIGCODE,
    DHNAME         D_NAME NOT NULL
);

CREATE TABLE FUEL_DENSITY_SPEC (
    ID           D_INT_IDEN NOT NULL,
    HEAD_ID      D_INT_IDEN NOT NULL,
    DATE_TIME    D_DATETIME,
    TANK_ID      D_INT,
    FUEL_ID      D_INT,
    DENSITY      DOUBLE PRECISION,
    TEMPERATURE  DOUBLE PRECISION,
    OPERATOR_ID  D_INT
);

CREATE TABLE HR_ORDER (
    ID            D_INT_IDEN,
    FOLDER_ID     D_INT_IDEN,
    ORDER_NUMBER  D_DOCNUMBER NOT NULL,
    ORDER_DATE    D_DOCDATE NOT NULL,
    HEADER        D_FEATURE_STR,
    FOOTER        D_FEATURE_STR,
    ORDER_STATUS  D_SHORT
);

CREATE TABLE HR_ORDER_ITEM (
    ID            D_INT_IDEN,
    ORDER_ID      D_INT_IDEN,
    ITEM_KIND_ID  D_INT_IDEN
);

CREATE TABLE HR_ORDER_ITEM_KIND (
    ID        D_INT_IDEN,
    CODE      D_BIGCODE NOT NULL,
    NAME      D_NAME,
    PRIORITY  D_INT,
    SYS_CODE  D_BIGCODE NOT NULL
);

CREATE TABLE HR_ORDER_ITEM_KIND_PARAM (
    ID            D_INT_IDEN,
    ITEM_KIND_ID  D_INT_IDEN,
    CODE          D_BIGCODE NOT NULL,
    NAME          D_NAME,
    PRIORITY      D_INT,
    PARAM_TYPE    D_SHORT,
    SYS_CODE      D_BIGCODE NOT NULL
);

CREATE TABLE HR_ORDER_ITEM_PARAM (
    ID                  D_INT_IDEN,
    ORDER_ITEM_ID       D_INT_IDEN,
    ITEM_KIND_PARAM_ID  D_INT_IDEN,
    PARAM_VALUE         D_FEATURE
);

CREATE TABLE HR_ORDER_ITEM_ROLLBACK (
    ID             D_INT_IDEN,
    ORDER_ITEM_ID  D_INT_IDEN,
    SYS_CODE       D_BIGCODE NOT NULL,
    PARAM_VALUE    D_FEATURE
);

CREATE TABLE HR_ORDER_MODEL (
    ID         D_INT_IDEN,
    FOLDER_ID  D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    HEADER     D_FEATURE_STR,
    FOOTER     D_FEATURE_STR
);

CREATE TABLE HR_ORDER_MODEL_ITEM (
    ID              D_INT_IDEN,
    ORDER_MODEL_ID  D_INT_IDEN,
    ITEM_KIND_ID    D_INT_IDEN
);

CREATE TABLE HR_ORDER_MODEL_ITEM_PARAM (
    ID                  D_INT_IDEN,
    MODEL_ITEM_ID       D_INT_IDEN,
    ITEM_KIND_PARAM_ID  D_INT_IDEN,
    PARAM_VALUE         D_FEATURE
);

CREATE TABLE INTERNALINVOICESPEC (
    ID            D_INT_IDEN,
    REQUESTQUAN   D_MASS,
    REQUESTSUMMA  D_SUMMA,
    DOCSPEC_ID    D_INT
);

CREATE TABLE INTERNALINVOICESPECMODEL (
    ID            D_INT_IDEN,
    REQUESTQUAN   D_MASS,
    REQUESTSUMMA  D_SUMMA,
    DOCSPEC_ID    D_INT
);

CREATE TABLE INVENTORY (
    ID              D_INT_IDEN,
    FOLDER_ID       D_INT_IDEN,
    PARENT_ID       INTEGER,
    GROUPNUM        CHAR(15),
    CARDNUM         CHAR(15),
    OBJNUM          CHAR(30),
    MANUFACTURER    VARCHAR(80),
    MODEL           VARCHAR(80),
    SERIALNUM       CHAR(15),
    PASSPNUM        CHAR(15),
    INOPERDOCNUM    D_DOCNUMBER,
    INOPERDATE      TIMESTAMP,
    OUTOPERDOCNUM   D_DOCNUMBER,
    OUTOPERDATE     TIMESTAMP,
    BALANCECOST     D_SUMMA,
    BEGINCOST       D_SUMMA,
    BEGINLOSS       D_SUMMA,
    AMORT           D_SUMMA,
    ENDCOST         D_SUMMA,
    BEGINLOSSDATE   TIMESTAMP,
    AMORTDATE       TIMESTAMP,
    ISCOMPLEX       SMALLINT,
    ISCOMMON        SMALLINT,
    FACTOR          FLOAT,
    ALGORITHM       SMALLINT,
    YEARAMORTRATE   D_RATIO,
    EXPLPERIOD_Y    FLOAT,
    EXPLPERIOD_M    FLOAT,
    PRODUCTION      FLOAT,
    ANL1_ID         INTEGER,
    ANL2_ID         INTEGER,
    ANL3_ID         INTEGER,
    ANL4_ID         INTEGER,
    ANL5_ID         INTEGER,
    ANLDB1_ID       INTEGER,
    ANLDB2_ID       INTEGER,
    ANLDB3_ID       INTEGER,
    ANLDB4_ID       INTEGER,
    ANLDB5_ID       INTEGER,
    ANLKT1_ID       INTEGER,
    ANLKT2_ID       INTEGER,
    ANLKT3_ID       INTEGER,
    ANLKT4_ID       INTEGER,
    ANLKT5_ID       INTEGER,
    COMMENT         D_COMMENT,
    CATALOG_ID      D_INT,
    INITIALLOSS     D_SUMMA,
    ACC_ID          D_INT,
    ACCDB_ID        D_INT,
    ACCKT_ID        D_INT,
    CONTRACTOR_ID   D_INT,
    AMCODE_ID       D_INT,
    INCOMEDOCNUM    D_DOCNUMBER,
    INCOMEDATE      D_DATE,
    INVNAME         D_BIGNAME,
    INVHEAD_ID      D_INT_IDEN NOT NULL,
    ACCKIND_ID      D_INT_IDEN NOT NULL,
    ACCGROUP_ID     D_INT,
    INVLOCATION_ID  D_INT,
    OKOF_ID         D_INT
);

CREATE TABLE INVENTORYACTHEAD (
    ID            D_INT_IDEN,
    REALSUMMANAT  D_SUMMA,
    REALSUMMACUR  D_SUMMA,
    DOCHEAD_ID    D_INT,
    CHAIRMAN      D_INT,
    ENDDATE       D_DATE
);

CREATE TABLE INVENTORYACTSPEC (
    ID             D_INT_IDEN,
    REALQUANTITY   D_QUANTITY,
    REALSUMMA      D_SUMMA,
    DOCSPEC_ID     D_INT,
    REALQUANTITY2  D_QUANTITY
);

CREATE TABLE INVHISTORY (
    ID                  D_INT_IDEN NOT NULL,
    INVENTORY_ID        D_INT_IDEN NOT NULL,
    AMORTIZATION_ID     D_INT,
    EO_ID               D_INT,
    ES_ID               D_INT,
    KIND                SMALLINT,
    DELTA_BALCOST       D_SUMMA,
    DELTA_DEPRVAL       D_SUMMA,
    REVAL_FACTOR        D_RATIO,
    REVAL_SUM           D_SUMMA,
    ACT_DATE            TIMESTAMP,
    DELTA_BEGINLOSS     D_SUMMA,
    DELTA_INITIALLOSS   D_SUMMA,
    OLD_INVLOCATION     D_BIGCODE,
    OLD_INVLOCATION_ID  D_INT,
    OLD_INOPERDOCNUM    D_DOCNUMBER,
    OLD_INOPERDATE      TIMESTAMP
);

CREATE TABLE INVLOCATION (
    UPCODE  D_BIGCODE NOT NULL,
    CODE    D_BIGCODE NOT NULL,
    ILNAME  D_NAME,
    ID      D_INT_IDEN
);

CREATE TABLE INVMETAL (
    ID          D_INT_IDEN NOT NULL,
    METAL_CODE  D_BIGCODE NOT NULL,
    MASS        DOUBLE PRECISION,
    INVHEAD_ID  D_INT_IDEN
);

CREATE TABLE INVOICEHEAD (
    ID                      D_INT_IDEN NOT NULL,
    DOCHEAD_ID              D_INT,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    PARTNERFROM_BANKREQ     D_INT,
    PARTNERTO_BANKREQ       D_INT,
    TOPAYDOCNUMBER          D_DOCNUMBER,
    TOPAYDOCDATE            D_DATE,
    COMMENT                 D_DESCRIPTION,
    SHIPPER                 D_INT,
    CONSIGNEE               D_INT,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT
);

CREATE TABLE INVOICEHEADMODEL (
    ID                      D_INT_IDEN NOT NULL,
    DOCHEADMODEL_ID         D_INT,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    PARTNERFROM_BANKREQ     D_INT,
    PARTNERTO_BANKREQ       D_INT,
    TOPAYDOCNUMBER          D_DOCNUMBER,
    TOPAYDOCDATE            D_DATE,
    COMMENT                 D_DESCRIPTION,
    SHIPPER                 D_INT,
    CONSIGNEE               D_INT,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT
);

CREATE TABLE INVOICESPEC (
    ID                   D_INT_IDEN,
    DOCSPEC_ID           D_INT,
    DISCOUNT             D_RATIO,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    COST                 D_SUMMA,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE INVOICESPECMODEL (
    ID                   D_INT_IDEN,
    DOCSPECMODEL_ID      D_INT,
    DISCOUNT             D_RATIO,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    COST                 D_SUMMA,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE LINKSTAGE (
    ID            D_INT_IDEN,
    PREVSTAGE_ID  D_INT_IDEN,
    NEXTSTAGE_ID  D_INT_IDEN,
    DIRECTLY      D_BOOLEAN NOT NULL
);

CREATE TABLE LOG_V1 (
    DATETIME   TIMESTAMP DEFAULT 'NOW' NOT NULL,
    USERNAME   VARCHAR(31) DEFAULT USER NOT NULL,
    OPERATION  VARCHAR(20) NOT NULL,
    DETAILS    VARCHAR(256)
);

CREATE TABLE LS_CONFIG (
    DEFAULT_FOLDER_ID  D_INT
);

CREATE TABLE LS_ITEM (
    ID                   D_INT_IDEN,
    SCHEDULE_ID          D_INT,
    COMMENTS             D_COMMENT,
    NUM                  D_SHORT,
    ITEMKIND_ID          D_INT,
    STATUS               D_SHORT,
    TOSOURCE             D_SHORT,
    FROMSOURCE           D_SHORT,
    FROM_ID              D_INT,
    TO_ID                D_INT,
    RESOURCEFROM_ID      D_INT,
    RESOURCETO_ID        D_INT,
    SPECSOURCE           D_SHORT,
    HAS_SPEC             D_BOOLEAN,
    PRICELISTHEAD_ID     D_INT,
    PRICETYPE_ID         D_INT,
    ABS_DATE             D_DATE,
    IS_ABS_DATE          D_BOOLEAN,
    DATEOFFSETKIND       D_SHORT,
    DATEOFFSET           D_INT,
    DATERELITEM_ID       D_INT,
    ABS_SUM              D_SUMMA,
    IS_ABS_SUM           D_BOOLEAN,
    RESULTDATE           D_DATE,
    IS_RELFACT           D_BOOLEAN,
    SUMRELITEM_ID        D_INT,
    FACTSUM              D_SUMMA,
    RESULTSUM            D_SUMMA,
    CURRATEAUTHORITY_ID  D_INT,
    CURRATETYPE_ID       D_INT,
    CURCODE              D_SMALLCODE,
    IS_DATERELDOC        D_BOOLEAN,
    IS_SUMRELDOC         D_BOOLEAN,
    PERC                 D_QUANTITY
);

CREATE TABLE LS_ITEMKIND (
    ID    D_INT_IDEN,
    NAME  D_NAME_N,
    CODE  D_BIGCODE NOT NULL
);

CREATE TABLE LS_ITEMSPEC (
    ID           D_INT_IDEN,
    ITEM_ID      D_INT,
    DOCSPEC_ID   D_INT,
    CATALOG_ID   D_INT,
    PRICE        D_SUMMA,
    CLEARPRICE   D_SUMMA,
    SUMMA        D_SUMMA,
    CLEARSUMMA   D_SUMMA,
    QTY1         D_QUANTITY,
    QTY2         D_QUANTITY,
    MEASURE1_ID  D_INT,
    MEASURE2_ID  D_INT
);

CREATE TABLE LS_ITEMSPECALT (
    ID           D_INT_IDEN,
    ITEMSPEC_ID  D_INT,
    CATALOG_ID   D_INT
);

CREATE TABLE LS_ITEMSPECTAX (
    ID           D_INT_IDEN,
    ITEMSPEC_ID  D_INT,
    TAX_ID       D_INT,
    SUMMA        D_SUMMA,
    PRICE        D_SUMMA
);

CREATE TABLE LS_SCHEDULE (
    ID         D_INT_IDEN,
    FOLDER_ID  D_INT,
    COMMENTS   D_COMMENT,
    NAME       D_NAME_N,
    STATUS     D_SHORT
);

CREATE TABLE MEASURE (
    ID              D_INT_IDEN,
    UPCODE          D_SMALLCODE NOT NULL,
    CODE            D_SMALLCODE NOT NULL,
    MNAME           D_NAME NOT NULL,
    DIVIDE          D_BOOLEAN,
    UNIVERSAL_CODE  D_SMALLCODE
);

CREATE TABLE METAL (
    UPCODE  D_BIGCODE NOT NULL,
    CODE    D_BIGCODE NOT NULL,
    MNAME   D_NAME
);

CREATE TABLE MF_BOM (
    ID                    D_INT_IDEN,
    BOM_TYPE              D_MF_BOM_TYPE,
    BOM_STATUS            D_MF_BOM_STATUS,
    CATALOG_ID            D_INT_IDEN,
    DEF_SRC_STOCK_ID      D_INT_IDEN,
    DEF_DST_STOCK_ID      D_INT_IDEN,
    DEF_SRC_MOL_ID        D_INT,
    DEF_DST_MOL_ID        D_INT,
    REVISION              INTEGER,
    FOLDER_ID             D_INT_IDEN,
    REVISION_DATETIME     D_DATETIME,
    STD_COST_DETAIL_ID    D_INT_IDEN,
    ROLLUP_DATETIME       D_DATETIME,
    SETUP_TICKS           D_MF_TICK,
    SETUP_TIME_UM         D_INT_IDEN,
    RUN_TICKS             D_MF_TICK,
    RUN_TIME_UM           D_INT_IDEN,
    SCHED_DIRECTION       D_MF_SCHEDULE_DIR,
    USE_MOVE_TIMES        D_BOOLEAN,
    USE_QUEUE_TIMES       D_BOOLEAN,
    USE_FINITE_CAPACITY   D_BOOLEAN,
    PRIORITY              D_RATIO,
    PRIORITY_FREEZE_FLAG  D_BOOLEAN,
    CELL_ID               D_INT,
    PCS_PER_HR_CELL       D_MF_CAPACITY,
    APPROVED_FLAG         D_BOOLEAN,
    BOM_VERSION_REQUIRED  D_BOOLEAN,
    CREATE_JOB_APPROVED   D_BOOLEAN,
    COMMENT               D_COMMENT,
    MIN_LOT_QTY           D_QUANTITY,
    MAX_LOT_QTY           D_QUANTITY,
    LOT_INCREMENT_QTY     D_QUANTITY,
    PLANNING_LOT_QTY      D_QUANTITY
);

CREATE TABLE MF_BOM_LABOR (
    ID                     D_INT_IDEN,
    LABOR_CLASS_ID         D_INT_IDEN,
    BOM_ROUTE_RESOURCE_ID  D_INT_IDEN,
    RUN_TICKS_LBR          D_MF_CAPACITY,
    RUN_TIME_LBR_UM        D_INT_IDEN,
    LBR_NUMBER             D_QUANTITY_EXT,
    LBR_BACKFLUSH_FLAG     D_BOOLEAN,
    LBR_OH_BACKFLUSH_FLAG  D_BOOLEAN
);

CREATE TABLE MF_BOM_MACHINE (
    ID                       D_INT_IDEN,
    BOM_ROUTE_RESOURCE_ID    D_INT_IDEN,
    TIME_RATE_FLAG           D_MF_LBR_TIME_RATE_FLAG,
    RUN_TICKS_MCH            D_MF_CAPACITY,
    RUN_TIME_MCH_UM          D_INT_IDEN,
    MCH_NUMBER               D_QUANTITY_EXT,
    MCH_RECOVERY_FLAG        D_MF_MCH_RECOVERY_FLAG,
    MCH_RATE                 D_SUMMA_EXT,
    MCH_RATE_CUR_CODE        D_SMALLCODE NOT NULL,
    MCH_COST_CATEGORY_ID     D_INT,
    MCH_BACKFLUSH_FLAG       D_BOOLEAN,
    MCH_OH_ALLOCATION_FLAG   D_MF_MCH_OH_ALLOCATION_FLAG,
    MCH_OH_RATE              D_SUMMA_EXT,
    MCH_OH_RATE_CUR_CODE     D_SMALLCODE NOT NULL,
    MCH_OH_RATIO             D_RATIO,
    MCH_OH_COST_CATEGORY_ID  D_INT,
    MCH_OH_BACKFLUSH_FLAG    D_BOOLEAN
);

CREATE TABLE MF_BOM_MATERIAL (
    ID                       D_INT_IDEN,
    BOM_ROUTE_RESOURCE_ID    D_INT_IDEN,
    CATALOG_ID               D_INT_IDEN,
    REVISION                 D_INT,
    VIEW_SEQUENCE            D_INT NOT NULL,
    REPORT_SEQUENCE          D_INT,
    PROBABLE                 D_RATIO,
    QUANTITY_RATE_FLAG       D_MF_MTL_QUAN_RATE_FLAG,
    MTL_QTY                  D_QUANTITY_EXT,
    SCRAP_FACTOR             D_RATIO,
    MEASURE_ID               D_INT_IDEN,
    MTL_COST_CATEGORY_ID     D_INT,
    MTL_BACKFLUSH_FLAG       D_BOOLEAN,
    BACKFLUSH_ZONE_ID        D_INT,
    MTL_OH_ALLOCATION_FLAG   D_MF_MTL_OH_ACCLOC_FLAG,
    MTL_OH_RATE              D_SUMMA_EXT,
    CURRENCY_CODE            D_SMALLCODE NOT NULL,
    MTL_OH_RATIO             D_RATIO,
    MTL_OH_COST_CATEGORY_ID  D_INT,
    MTL_OH_BACKFLUSH_FLAG    D_BOOLEAN
);

CREATE TABLE MF_BOM_ROUTE (
    ID                    D_INT_IDEN,
    BOM_ID                D_INT_IDEN,
    OPER_NUM              D_INT,
    DESCRIPTION           D_BIGNAME,
    EFF_ON_DATE           D_DATE,
    EFF_OFF_DATE          D_DATE,
    WC_ID                 D_INT_IDEN,
    EFFICIENCY            D_RATIO,
    MOVE_TICKS            D_MF_TICK,
    MOVE_TIME_UM          D_INT_IDEN,
    SETUP_TICKS           D_MF_TICK,
    SETUP_TIME_UM         D_INT_IDEN,
    RUN_TICKS             D_MF_TICK,
    RUN_TIME_UM           D_INT_IDEN,
    SCHED_TICKS           D_MF_TICK,
    SCHED_TIME_UM         D_INT_IDEN,
    SCHED_OFFSET_TICKS    D_MF_TICK,
    SCHED_OFFSET_TIME_UM  D_INT_IDEN,
    QUEUE_TICKS           D_MF_TICK,
    QUEUE_TIME_UM         D_INT_IDEN,
    CONTROL_POINT_FLAG    D_BOOLEAN,
    STD_COST_DETAIL_ID    D_INT_IDEN,
    COMMENT               D_COMMENT
);

CREATE TABLE MF_BOM_ROUTE_RESOURCE (
    ID                  D_INT_IDEN,
    RESOURCE_GROUP_ID   D_INT,
    BOM_OPER_ID         D_INT_IDEN,
    RESOURCE_TYPE       D_MF_RESOURCE_TYPE,
    TIME_SEQUENCE       D_INT,
    EFF_ON_DATE         D_DATE,
    EFF_OFF_DATE        D_DATE,
    STD_COST_DETAIL_ID  D_INT_IDEN,
    COMMENT             D_COMMENT
);

CREATE TABLE MF_CELL (
    ID                 D_INT_IDEN,
    WEEK_CAL_ID        D_INT_IDEN,
    CELL_NAME          D_NAME,
    BOTTLE_NECK_WC_ID  D_INT,
    CAPACITY_FACTOR    D_RATIO,
    COMMENT            D_COMMENT
);

CREATE TABLE MF_CONFIG (
    TICK_UM                       D_INT_IDEN,
    MAIN_TIME_UM                  D_INT_IDEN,
    BASE_CURRENCY                 D_SMALLCODE,
    NAT_CURRENCY                  D_SMALLCODE,
    CURRENCY_RATE_AUTHORITY       D_INT,
    CURRENCY_RATE_TYPE            D_INT,
    CURRENCY_PREC                 SMALLINT,
    INPUT_MATERIAL_MODEL_BF       D_INT,
    INPUT_LABOR_MODEL_BF          D_INT,
    INPUT_MACHINE_MODEL_BF        D_INT,
    LABOR_TIME                    D_INT,
    MACHINE_TIME                  D_INT,
    MATERIAL_OVERHEAD             D_INT,
    LABOR_OVERHEAD                D_INT,
    MACHINE_OVERHEAD              D_INT,
    PURCHASE_ORDER_MODEL_MRP_REC  D_INT,
    SCRAP_MATERIAL_MODEL          D_INT,
    SCRAP_LABOR_MODEL             D_INT,
    SCRAP_MACHINE_MODEL           D_INT,
    VARIANCE_DOCUMENT_MODEL       D_INT
);

CREATE TABLE MF_COST_CATEGORIES (
    ID                    D_INT_IDEN,
    CODE                  D_BIGCODE,
    DESCRIPTION           D_BIGNAME,
    VIEW_ORDER            D_INT,
    CALCULATION_SEQUENCE  D_INT,
    FORMULA_ID            D_INT_IDEN NOT NULL
);

CREATE TABLE MF_COST_DETAIL (
    ID  D_INT_IDEN
);

CREATE TABLE MF_COST_DETAIL_LINE (
    ID                  D_INT_IDEN,
    COST_DETAIL_ID      D_INT_IDEN,
    COST_CATEGORIES_ID  D_INT_IDEN,
    SUMMA               D_SUMMA,
    CURRENCY_CODE       D_SMALLCODE NOT NULL
);

CREATE TABLE MF_CREW (
    ID    D_INT_IDEN,
    CODE  D_MEDIUMCODE,
    NAME  D_NAME
);

CREATE TABLE MF_DAY_CAL (
    ID            D_INT_IDEN,
    CODE          D_BIGCODE,
    DAY_CAL_NAME  D_NAME
);

CREATE TABLE MF_DAY_TIME (
    ID          D_INT_IDEN,
    DAY_CAL_ID  D_INT_IDEN,
    START_TICK  D_MF_TICK,
    TICKS       D_MF_TICK
);

CREATE TABLE MF_INPUT_DOC_HEAD (
    ID                  D_INT_IDEN,
    DOCHEAD_ID          D_INT_IDEN,
    OUTPUT_DOC_HEAD_ID  D_INT,
    BACKFLUSH_FLAG      D_BOOLEAN,
    CONTRACTOR_ID       D_INT,
    WC_ID               D_INT,
    JOB_ID              D_INT,
    OPER_ID             D_INT,
    CREW_ID             D_INT,
    EMPLOYEE_ID         D_INT
);

CREATE TABLE MF_INPUT_DOC_HEAD_MODEL (
    ID                  D_INT_IDEN,
    DOCHEADMODEL_ID     D_INT_IDEN,
    OUTPUT_DOC_HEAD_ID  D_INT,
    BACKFLUSH_FLAG      D_BOOLEAN,
    CONTRACTOR_ID       D_INT,
    WC_ID               D_INT,
    JOB_ID              D_INT,
    OPER_ID             D_INT,
    CREW_ID             D_INT,
    EMPLOYEE_ID         D_INT
);

CREATE TABLE MF_INPUT_DOC_SPEC (
    ID                     D_INT_IDEN,
    DOCSPEC_ID             D_INT_IDEN,
    JOB_ROUTE_RESOURCE_ID  D_INT_IDEN,
    COST_CATEGORY_ID       D_INT
);

CREATE TABLE MF_JOB (
    ID                      D_INT_IDEN,
    DEF_SRC_STOCK_ID        D_INT_IDEN,
    DEF_DST_STOCK_ID        D_INT_IDEN,
    DEF_SRC_MOL_ID          D_INT,
    DEF_DST_MOL_ID          D_INT,
    JOB_NUMBER              D_DOCNUMBER,
    JOB_DATE                D_DOCDATE,
    JOB_STATUS              D_MF_JOB_STATUS,
    FOLDER_ID               D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN,
    QTY_RELEASED            D_QUANTITY DEFAULT 0,
    QTY_COMPLETE            D_QUANTITY DEFAULT 0,
    QTY_SCRAPPED            D_QUANTITY DEFAULT 0,
    PARENT_JOB_ID           D_INT,
    ROOT_JOB_ID             D_INT,
    STD_COST_DETAIL_ID      D_INT,
    ACT_WIP_COST_DETAIL_ID  D_INT,
    ROLLUP_DATETIME         D_DATETIME,
    START_DATE              D_DATE,
    END_DATE                D_DATE,
    START_TICK              D_MF_TICK,
    END_TICK                D_MF_TICK,
    START_JOB               D_MF_TICK DEFAULT 0,
    FINISH_JOB              D_MF_TICK DEFAULT 0,
    SCHED_DIRECTION         D_MF_SCHEDULE_DIR,
    USE_MOVE_TIMES          D_BOOLEAN DEFAULT 0,
    USE_QUEUE_TIMES         D_BOOLEAN DEFAULT 0,
    USE_FINITE_CAPACITY     D_BOOLEAN DEFAULT 0,
    PRIORITY                D_RATIO DEFAULT 0,
    PRIORITY_FREEZE_FLAG    D_BOOLEAN DEFAULT 0,
    MRP_END_DATE            D_DATE,
    CELL_ID                 D_INT,
    CHANGE_JOB_APPROVED     D_BOOLEAN,
    COMMENT                 D_COMMENT
);

CREATE TABLE MF_JOB_LABOR (
    ID                       D_INT_IDEN,
    JOB_ROUTE_RESOURCE_ID    D_INT_IDEN,
    TIME_RATE_FLAG           D_MF_LBR_TIME_RATE_FLAG,
    RUN_TICKS_LBR            D_MF_CAPACITY DEFAULT 0,
    RUN_TIME_LBR_UM          D_INT_IDEN,
    LBR_NUMBER               D_QUANTITY_EXT DEFAULT 0,
    LBR_RATE                 D_SUMMA_EXT DEFAULT 0,
    LBR_COST_CATEGORY_ID     D_INT,
    LBR_RATE_CUR_CODE        D_SMALLCODE NOT NULL,
    LBR_BACKFLUSH_FLAG       D_BOOLEAN DEFAULT 0,
    LBR_OH_ALLOCATION_FLAG   D_MF_LBR_OH_ALLOC_FLAG,
    LBR_OH_RATE              D_SUMMA_EXT DEFAULT 0,
    LBR_OH_RATE_CUR_CODE     D_SMALLCODE NOT NULL,
    LBR_OH_RATIO             D_RATIO DEFAULT 0,
    LBR_OH_COST_CATEGORY_ID  D_INT,
    LBR_OH_BACKFLUSH_FLAG    D_BOOLEAN DEFAULT 0
);

CREATE TABLE MF_JOB_MACHINE (
    ID                       D_INT_IDEN,
    JOB_ROUTE_RESOURCE_ID    D_INT_IDEN,
    TIME_RATE_FLAG           SMALLINT,
    RUN_TICKS_MCH            D_MF_CAPACITY DEFAULT 0,
    RUN_TIME_MCH_UM          D_INT_IDEN,
    MCH_NUMBER               D_QUANTITY_EXT DEFAULT 0,
    MCH_RECOVERY_FLAG        D_MF_MCH_RECOVERY_FLAG,
    MCH_RATE                 D_SUMMA_EXT DEFAULT 0,
    MCH_RATE_CUR_CODE        D_SMALLCODE NOT NULL,
    MCH_COST_CATEGORY_ID     D_INT,
    MCH_BACKFLUSH_FLAG       D_BOOLEAN DEFAULT 0,
    MCH_OH_ALLOCATION_FLAG   D_MF_MCH_OH_ALLOCATION_FLAG,
    MCH_OH_RATE              D_SUMMA_EXT DEFAULT 0,
    MCH_OH_RATE_CUR_CODE     D_SMALLCODE NOT NULL,
    MCH_OH_RATIO             D_RATIO DEFAULT 0,
    MCH_OH_COST_CATEGORY_ID  D_INT,
    MCH_OH_BACKFLUSH_FLAG    D_BOOLEAN DEFAULT 0
);

CREATE TABLE MF_JOB_MATERIAL (
    ID                       D_INT_IDEN,
    JOB_ROUTE_RESOURCE_ID    D_INT_IDEN,
    CATALOG_ID               D_INT_IDEN,
    REVISION                 D_INT,
    VIEW_SEQUENCE            D_INT DEFAULT 0 NOT NULL,
    REPORT_SEQUENCE          D_INT,
    QUANTITY_RATE_FLAG       D_MF_MTL_QUAN_RATE_FLAG,
    MTL_QTY                  D_QUANTITY_EXT DEFAULT 1,
    SCRAP_FACTOR             D_RATIO,
    MEASURE_ID               D_INT_IDEN,
    MTL_COST_CATEGORY_ID     D_INT,
    MTL_BACKFLUSH_FLAG       D_BOOLEAN DEFAULT 0,
    BACKFLUSH_ZONE_ID        D_INT,
    MTL_OH_ALLOCATION_FLAG   D_MF_MTL_OH_ACCLOC_FLAG,
    MTL_OH_RATE              D_SUMMA_EXT DEFAULT 0,
    CURRENCY_CODE            D_SMALLCODE NOT NULL,
    MTL_OH_RATIO             D_RATIO DEFAULT 0,
    MTL_OH_COST_CATEGORY_ID  D_INT,
    MTL_OH_BACKFLUSH_FLAG    D_BOOLEAN DEFAULT 0
);

CREATE TABLE MF_JOB_ROUTE (
    ID                    D_INT_IDEN,
    JOB_ID                D_INT_IDEN,
    OPER_NUM              D_INT,
    DESCRIPTION           D_BIGNAME,
    EFF_ON_DATE           D_DATE,
    EFF_OFF_DATE          D_DATE,
    WC_ID                 D_INT_IDEN,
    COMPLETE_FLAG         D_BOOLEAN DEFAULT 0,
    EFFICIENCY_FACTOR     D_RATIO DEFAULT 100,
    START_DATE            D_DATE,
    END_DATE              D_DATE,
    START_TICK            D_MF_TICK,
    END_TICK              D_MF_TICK,
    MOVE_TICKS            D_MF_TICK DEFAULT 0,
    MOVE_TIME_UM          D_INT_IDEN,
    SETUP_TICKS           D_MF_TICK DEFAULT 0,
    SETUP_TIME_UM         D_INT_IDEN,
    RUN_TICKS             D_MF_TICK DEFAULT 0,
    RUN_TIME_UM           D_INT_IDEN,
    SCHED_TICKS           D_MF_TICK,
    SCHED_TIME_UM         D_INT_IDEN,
    SCHED_OFFSET_TICKS    D_MF_TICK,
    SCHED_OFFSET_TIME_UM  D_INT_IDEN,
    QUEUE_TICKS           D_MF_TICK DEFAULT 0,
    QUEUE_TIME_UM         D_INT_IDEN,
    FREEZE_SCHEDULE_FLAG  D_BOOLEAN DEFAULT 0,
    QTY_RECEIVED          D_QUANTITY,
    QTY_COMPLETE          D_QUANTITY DEFAULT 0,
    QTY_SCRAPPED          D_QUANTITY DEFAULT 0,
    QTY_MOVED             D_QUANTITY DEFAULT 0,
    CONTROL_POINT_FLAG    D_BOOLEAN DEFAULT 0,
    STD_COST_DETAIL_ID    D_INT,
    ACT_COST_DETAIL_ID    D_INT,
    COMMENT               D_COMMENT
);

CREATE TABLE MF_JOB_ROUTE_RESOURCE (
    ID                  D_INT_IDEN,
    RESOURCE_GROUP_ID   D_INT,
    OPER_ID             D_INT_IDEN,
    RESOURCE_TYPE       D_MF_RESOURCE_TYPE,
    TIME_SEQUENCE       D_INT,
    EFF_ON_DATE         D_DATE,
    EFF_OFF_DATE        D_DATE,
    STD_COST_DETAIL_ID  D_INT_IDEN,
    ACT_COST_DETAIL_ID  D_INT_IDEN,
    COMMENT             D_COMMENT
);

CREATE TABLE MF_LABOR_CLASS (
    ID                       D_INT_IDEN,
    DESCRIPTION              D_BIGNAME,
    TIME_RATE_FLAG           D_MF_LBR_TIME_RATE_FLAG,
    LBR_RATE                 D_SUMMA_EXT,
    LBR_TIME_UM              D_INT_IDEN,
    LBR_RATE_CUR_CODE        D_SMALLCODE,
    LBR_COST_CATEGORY_ID     D_INT,
    LBR_OH_ALLOCATION_FLAG   D_MF_LBR_OH_ALLOC_FLAG,
    LBR_OH_RATE              D_SUMMA_EXT,
    LBR_OH_TIME_UM           D_INT_IDEN,
    LBR_OH_RATE_CUR_CODE     D_SMALLCODE,
    LBR_OH_RATIO             D_RATIO,
    LBR_OH_COST_CATEGORY_ID  D_INT
);

CREATE TABLE MF_OUTPUT_DOC_HEAD (
    ID             D_INT_IDEN,
    DOCHEAD_ID     D_INT_IDEN,
    CONTRACTOR_ID  D_INT,
    WC_ID          D_INT,
    JOB_ID         D_INT,
    OPER_ID        D_INT,
    CREW_ID        D_INT,
    EMPLOYEE_ID    D_INT
);

CREATE TABLE MF_OUTPUT_DOC_HEAD_MODEL (
    ID               D_INT_IDEN,
    DOCHEADMODEL_ID  D_INT_IDEN,
    CONTRACTOR_ID    D_INT,
    WC_ID            D_INT,
    JOB_ID           D_INT,
    OPER_ID          D_INT,
    CREW_ID          D_INT,
    EMPLOYEE_ID      D_INT
);

CREATE TABLE MF_RESOURCE_FAMILY (
    ID                        D_INT_IDEN,
    PLANNING_LEVEL_ID         D_INT_IDEN,
    PARENT_RESOURCE_GROUP_ID  D_INT_IDEN,
    CHILD_RESOURCE_GROUP_ID   D_INT_IDEN
);

CREATE TABLE MF_RESOURCE_GROUP (
    ID                     D_INT_IDEN,
    RESOURCE_GROUP_CODE    D_BIGCODE,
    DESCRIPTION            D_SMALLNAME,
    RESOURCE_TYPE          SMALLINT,
    LIMITED_RESOURCE_FLAG  D_BOOLEAN,
    CRITICAL_LEVEL_ID      D_INT NOT NULL,
    COMMENT                D_COMMENT,
    MEASURE_ID             D_INT_IDEN
);

CREATE TABLE MF_RESOURCE_GROUP_CAPACITY (
    ID                 D_INT_IDEN,
    PLANNING_CAPACITY  D_QUANTITY,
    MAXIMUM_CAPACITY   D_QUANTITY,
    EFF_ON_DATE        D_DATE,
    EFF_OFF_DATE       D_DATE,
    RESOURCE_GROUP_ID  D_INT_IDEN
);

CREATE TABLE MF_ROUTE (
    ID                 D_INT_IDEN,
    CATALOG_ID         D_INT_IDEN,
    VENDOR_ID          D_INT,
    SRC_TYPE           D_SHORT NOT NULL,
    SRC_CYCLE          D_INT,
    SRC_RANK           D_SHORT,
    SUPPLY_PERCENT     D_QUANTITY,
    DEST_TYPE          D_SHORT NOT NULL,
    REORDER_MIN_QTY    D_QUANTITY,
    CUSTOMER_ID        D_INT,
    REORDER_LOT_SIZE   D_QUANTITY,
    DEST_WAREHOUSE_ID  D_INT_IDEN,
    DEST_CYCLE         D_INT,
    QC_RECEIVING_DAYS  D_SHORT,
    LEAD_TIME          D_SHORT,
    SAFETY_DAYS        D_SHORT,
    SRC_WAREHOUSE_ID   D_INT
);

CREATE TABLE MF_SCRAP_DOC_HEAD (
    ID                    D_INT_IDEN,
    DOCHEAD_ID            D_INT_IDEN,
    DETECT_CONTRACTOR_ID  D_INT,
    DETECT_WC_ID          D_INT,
    DETECT_JOB_ID         D_INT,
    DETECT_OPER_ID        D_INT,
    DETECT_CREW_ID        D_INT,
    DETECT_EMPLOYEE_ID    D_INT,
    CAUSE_CONTRACTOR_ID   D_INT,
    CAUSE_WC_ID           D_INT,
    CAUSE_JOB_ID          D_INT,
    CAUSE_OPER_ID         D_INT,
    CAUSE_CREW_ID         D_INT,
    CAUSE_EMPLOYEE_ID     D_INT,
    SCRAP_TYPE_ID         D_INT,
    SCRAP_REASON_ID       D_INT
);

CREATE TABLE MF_SCRAP_DOC_HEAD_MODEL (
    ID                    D_INT_IDEN,
    DOCHEADMODEL_ID       D_INT_IDEN,
    DETECT_CONTRACTOR_ID  D_INT,
    DETECT_WC_ID          D_INT,
    DETECT_JOB_ID         D_INT,
    DETECT_OPER_ID        D_INT,
    DETECT_CREW_ID        D_INT,
    DETECT_EMPLOYEE_ID    D_INT,
    CAUSE_CONTRACTOR_ID   D_INT,
    CAUSE_WC_ID           D_INT,
    CAUSE_JOB_ID          D_INT,
    CAUSE_OPER_ID         D_INT,
    CAUSE_CREW_ID         D_INT,
    CAUSE_EMPLOYEE_ID     D_INT,
    SCRAP_TYPE_ID         D_INT,
    SCRAP_REASON_ID       D_INT
);

CREATE TABLE MF_SCRAP_DOC_SPEC (
    ID                     D_INT_IDEN,
    DOCSPEC_ID             D_INT_IDEN,
    JOB_ROUTE_RESOURCE_ID  D_INT_IDEN,
    COST_CATEGORY_ID       D_INT
);

CREATE TABLE MF_TRANSACTION (
    ID                     D_INT_IDEN,
    BACKFLUSH_FLAG         D_BOOLEAN,
    CONTRACTOR_ID          D_INT,
    WC_ID                  D_INT,
    JOB_ID                 D_INT,
    OPER_ID                D_INT,
    CREW_ID                D_INT,
    EMPLOYEE_ID            D_INT,
    DOCSPEC_ID             D_INT_IDEN,
    JOB_ROUTE_RESOURCE_ID  D_INT,
    COST_CATEGORY_ID       D_INT,
    QUANTITY               D_QUANTITY,
    SUMMA                  D_SUMMA
);

CREATE TABLE MF_VARIANCE_DOC_HEAD (
    ID          D_INT_IDEN,
    DOCHEAD_ID  D_INT_IDEN,
    WC_ID       D_INT,
    JOB_ID      D_INT
);

CREATE TABLE MF_VARIANCE_DOC_HEAD_MODEL (
    ID               D_INT_IDEN,
    DOCHEADMODEL_ID  D_INT_IDEN NOT NULL,
    WC_ID            D_INT,
    JOB_ID           D_INT
);

CREATE TABLE MF_VARIANCE_DOC_SPEC (
    ID                D_INT_IDEN,
    DOCSPEC_ID        D_INT_IDEN,
    COST_CATEGORY_ID  D_INT_IDEN,
    VARIANCE_TYPE     SMALLINT NOT NULL
);

CREATE TABLE MF_WC_RATES (
    ID              D_INT_IDEN,
    WC_ID           D_INT_IDEN,
    EFF_ON_DATE     D_DATE,
    EFF_OFF_DATE    D_DATE,
    MCH_FOH_RATE    D_SUMMA DEFAULT 0,
    MCH_VOH_RATE    D_SUMMA DEFAULT 0,
    LBR_RUN_RATE    D_SUMMA DEFAULT 0,
    LBR_SETUP_RATE  D_SUMMA DEFAULT 0,
    LBR_FOH_RATE    D_SUMMA DEFAULT 0,
    LBR_VOH_RATE    D_SUMMA DEFAULT 0
);

CREATE TABLE MF_WEEK_CAL (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE
);

CREATE TABLE MF_WEEK_CAL_CHANGE (
    ID            D_INT_IDEN,
    WEEK_CAL_ID   D_INT_IDEN,
    EFF_ON_DATE   D_DATE,
    EFF_OFF_DATE  D_DATE,
    DAY_CAL_MON   D_INT_IDEN,
    DAY_CAL_TUE   D_INT_IDEN,
    DAY_CAL_WED   D_INT_IDEN,
    DAY_CAL_THU   D_INT_IDEN,
    DAY_CAL_FRI   D_INT_IDEN,
    DAY_CAL_SAT   D_INT_IDEN,
    DAY_CAL_SUN   D_INT_IDEN
);

CREATE TABLE MF_WORK_CENTER (
    ID                   D_INT_IDEN,
    WC_CODE              D_BIGCODE NOT NULL,
    WC_NAME              D_NAME,
    CELL_ID              D_INT,
    WEEK_CAL_ID          D_INT,
    EFFICIENCY           D_RATIO,
    UTILIZATION          D_RATIO,
    CAPACITY_PLAN        D_BOOLEAN,
    CAPACITY_SCHEDULE    D_BOOLEAN,
    MCH_FLAG             D_BOOLEAN,
    MCH_NUMBER           D_INT,
    LBR_FLAG             D_BOOLEAN,
    LBR_NUMBER           D_QUANTITY,
    SCH_TOLERANCE        D_RATIO,
    QUEUE_TICKS          D_MF_TICK,
    MCH_RUN_TOTAL_HRS    D_HOUR,
    LBR_SETUP_TOTAL_HRS  D_HOUR,
    LBR_RUN_TOTAL_HRS    D_HOUR,
    QUEUE_TOTAL_QTY      D_QUANTITY,
    QUEUE_AVG_HRS        D_HOUR,
    OUTSIDE_FLAG         D_BOOLEAN,
    CONTRACTOR_ID        D_INT,
    MCH_BACKFLUSH_FLAG   D_BOOLEAN,
    LBR_BACKFLUSH_FLAG   D_BOOLEAN,
    MCH_BASE_OH_FLAG     D_BOOLEAN,
    LBR_BASE_OH_FLAG     D_BOOLEAN,
    MTL_BASE_OH_FLAG     D_BOOLEAN,
    CONTROL_POINT_FLAG   D_BOOLEAN,
    WIP_LBR_TOTAL        D_SUMMA,
    WIP_MTL_TOTAL        D_SUMMA,
    WIP_FOH_TOTAL        D_SUMMA,
    WIP_VOH_TOTAL        D_SUMMA,
    WIP_OUT_TOTAL        D_SUMMA,
    LBR_SETUP_AVG_RATE   D_SUMMA,
    LBR_RUN_AVG_RATE     D_SUMMA,
    STD_COST_DETAIL_ID   D_INT,
    ACT_COST_DETAIL_ID   D_INT,
    COMMENT              D_COMMENT,
    RESOURCE_GROUP_ID    D_INT
);

CREATE TABLE OKDP (
    UPCODE  D_BIGCODE NOT NULL,
    CODE    D_BIGCODE NOT NULL,
    ONAME   D_NAME NOT NULL
);

CREATE TABLE OKOF (
    UPCODE    D_BIGCODE NOT NULL,
    CODE      D_BIGCODE NOT NULL,
    OKOFNAME  D_NAME,
    ID        D_INT_IDEN
);

CREATE TABLE OLAP_DATAPUMP (
    ID               D_INT_IDEN NOT NULL,
    PUMPNAME         D_NAME NOT NULL,
    OLAPDB_TYPE      SMALLINT,
    OLAPDB_NAME      VARCHAR(255),
    OLAPDB_USER      D_USERNAME,
    OLAPDB_PASSWORD  D_PASSWORD,
    CREATE_ALG_ID    D_INT,
    DELETE_ALG_ID    D_INT,
    PUMP_ALG_ID      D_INT,
    CLEAR_ALG_ID     D_INT
);

CREATE TABLE ORDERHEAD (
    ID                      D_INT_IDEN,
    DOCHEAD_ID              D_INT,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    DUEDATE_KIND            D_TIME_PERIOD_KIND,
    DUEDATE_QUAN            D_QUANTITY,
    DUEDATE                 D_DATE,
    CREDITTERM              D_SHORT,
    PENALTY                 D_RATIO,
    COMMENT                 D_DESCRIPTION,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT,
    FIXED_INPUT             D_BOOLEAN,
    STATUS                  D_ORDER_STATUS
);

CREATE TABLE ORDERHEADMODEL (
    ID                      D_INT_IDEN,
    DOCHEADMODEL_ID         D_INT,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    DUEDATE_KIND            D_TIME_PERIOD_KIND,
    DUEDATE_QUAN            D_QUANTITY,
    DUEDATE                 D_DATE,
    CREDITTERM              D_SHORT,
    PENALTY                 D_RATIO,
    COMMENT                 D_DESCRIPTION,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT,
    FIXED_INPUT             D_BOOLEAN,
    STATUS                  D_ORDER_STATUS
);

CREATE TABLE ORDERSPEC (
    ID                   D_INT_IDEN,
    DOCSPEC_ID           D_INT,
    DISCOUNT             D_RATIO,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    COST                 D_SUMMA,
    REQUIRED_DATE        D_DATE,
    PROMISED_DATE        D_DATETIME,
    VENDOR_ITEM_CODE     D_BIGCODE,
    WAREHOUSE_ID         D_INT,
    QTY_ACCEPTED         D_QUANTITY,
    QTY_INVOICED         D_QUANTITY,
    QTY_RETURNED         D_QUANTITY,
    QTY_SHIPPED          D_QUANTITY,
    QTY_PICKED           D_QUANTITY,
    QTY_OUTSTANDING      D_QUANTITY,
    CLOSED_FOR_PLANNING  D_BOOLEAN,
    STATUS               D_ORDER_STATUS,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE ORDERSPECMODEL (
    ID                   D_INT_IDEN,
    DOCSPECMODEL_ID      D_INT,
    DISCOUNT             D_RATIO,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    COST                 D_SUMMA,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE ORGUNIT (
    ID                 D_INT_IDEN,
    KIND               SMALLINT,
    IS_OFFICE          SMALLINT,
    IS_STORE           SMALLINT,
    PARTNER_ID         D_INT,
    CONTRACTOR_ID      D_INT,
    RESOURCE_GROUP_ID  D_INT,
    FOLDER_TAG         D_NAME_N
);

CREATE TABLE OVR_CANCELLATION (
    ID                          D_INT_IDEN,
    OVR_CARD_HIST_ID            D_INT_IDEN,
    CANCELLATION_DATE           D_DATE,
    CURRENT_CANCELLATION_SUMMA  D_INT,
    DOCHEAD_ID                  D_INT_IDEN,
    DOCTYPE                     D_DOCTYPE,
    DOCNUMBER                   D_DOCNUMBER,
    DOCDATE                     D_DOCDATE,
    CANCELLATION_REASON         D_COMMENT
);

CREATE TABLE OVR_CARD (
    ID                D_INT_IDEN,
    REF_PERSONNEL_ID  D_INT,
    STF_JOB_ID        D_INT,
    STF_POSITION_ID   D_INT,
    ACTDATE_FROM      D_DATE,
    ACTDATE_TO        D_DATE,
    ORGUNIT_ID        D_INT_IDEN NOT NULL,
    OVR_CARD_NUMBER   D_BIGCODE
);

CREATE TABLE OVR_CARD_DOCUMENT_LINK (
    ID                D_INT_IDEN NOT NULL,
    DOCHEAD_ID        D_INT,
    OVR_CARD_ID       D_INT,
    OVR_NORM_HEAD_ID  D_INT,
    REMOVE_TYPE_ID    D_INT
);

CREATE TABLE OVR_CARD_HIST (
    ID                      D_INT_IDEN NOT NULL,
    OVR_CARD_ID             D_INT,
    MEASURE_UPCODE          D_SMALLCODE,
    CATALOG_ID              D_INT,
    OVR_NORM_SPEC_ID        D_INT,
    OVR_NORM_HEAD_ID        D_INT,
    CATALOG_GROUPS_TYPE_ID  D_CATALOG_GROUPS_TYPE,
    ISBASIC                 D_INT,
    ISPERIODIC              D_INT,
    RETURNABLE              D_INT,
    GIVE_DATE               D_DATE,
    READOUT_DATE            D_DATE,
    SHELFLIFE               D_QUANTITY,
    SHELFLIFE_MEAS          D_TIME_PERIOD_KIND,
    QUANTITY                D_QUANTITY,
    NDE_COST                D_SUMMA,
    NDE_SUMMA               D_SUMMA,
    DETERIORATION           D_INT,
    DEPRECIABLE_VALUE       D_SUMMA,
    COMMON_SUMMA_FOR_DINCH  D_SUMMA,
    DINCHED_SUMMA           D_SUMMA,
    REST_OF_DINCH_SUMMA     D_SUMMA,
    ARREAR_SUMMA            D_SUMMA,
    GIVE_DOCHEAD_ID         D_INT,
    GIVE_DOCSPEC_ID         D_INT,
    GIVE_DOCTYPE            D_DOCTYPE,
    GIVE_DOCNUMBER          D_DOCNUMBER,
    GIVE_DOCDATE            D_DOCDATE,
    EXPL_DOCHEAD_ID         D_INT,
    EXPL_DOCSPEC_ID         D_INT,
    EXPL_DOCTYPE            D_DOCTYPE,
    EXPL_DOCNUMBER          D_DOCNUMBER,
    EXPL_DOCDATE            D_DOCDATE,
    REMOVE_DOCHEAD_ID       D_INT,
    REMOVE_DOCSPEC_ID       D_INT,
    REMOVE_DOCTYPE          D_DOCTYPE,
    REMOVE_DOCNUMBER        D_DOCNUMBER,
    REMOVE_DOCDATE          D_DOCDATE,
    REMOVE_TYPE_ID          D_INT,
    REMOVE_DATE             D_DATE
);

CREATE TABLE OVR_CARD_HIST_DOC_SPEC_LINK (
    ID                D_INT_IDEN,
    OVR_CARD_HIST_ID  D_INT,
    DOCSPEC_ID        D_INT
);

CREATE TABLE OVR_HIST_STATUS (
    ID                    D_INT_IDEN,
    OVR_CARD_HIST_ID      D_INT NOT NULL,
    DOCHEAD_ID            D_INT,
    DOCSPEC_ID            D_INT,
    DOCTYPE               D_DOCTYPE,
    DOCNUMBER             D_DOCNUMBER,
    DOCDATE               D_DOCDATE,
    OVR_HIST_STATUS_ID    D_INT_IDEN,
    OVR_HIST_STATUS_DATE  DATE
);

CREATE TABLE OVR_NORM_HEAD (
    ID                   D_INT_IDEN NOT NULL,
    FOLDER_ID            D_INT,
    OVR_NORM_NAME        D_NAME NOT NULL,
    OVR_NORM_TYPE_ID     D_INT,
    STF_JOB_ID           D_INT,
    STF_POSITION_ID      D_INT,
    OVR_NORM_BEGIN_DATE  D_DATE,
    OVR_NORM_END_DATE    D_DATE
);

CREATE TABLE OVR_NORM_SPEC (
    ID                      D_INT_IDEN NOT NULL,
    OVR_NORM_HEAD_ID        D_INT,
    OVR_NORM_SPEC_NAME      D_NAME NOT NULL,
    MEASURE_UPCODE          D_SMALLCODE,
    CATALOG_GROUPS_TYPE_ID  D_CATALOG_GROUPS_TYPE,
    SHELFLIFE               D_QUANTITY,
    SHELFLIFE_MEAS          D_TIME_PERIOD_KIND,
    ISBASIC                 D_INT,
    ISPERIODIC              D_INT,
    ISDINCH                 D_INT,
    DINCH_FORMULA           D_FORMULA,
    DOC_NAME                D_COMMENT,
    QUANTITY                D_QUANTITY
);

CREATE TABLE OVR_NORM_SPEC_DOC_SPEC_LINK (
    ID                D_INT_IDEN NOT NULL,
    OVR_NORM_SPEC_ID  D_INT,
    DOCSPEC_ID        D_INT
);

CREATE TABLE OVR_NORM_SPEC_LINK (
    ID                D_INT_IDEN,
    OVR_NORM_SPEC_ID  D_INT_IDEN,
    CATALOG_ID        D_INT_IDEN
);

CREATE TABLE OVR_SIZE (
    ID                      D_INT_IDEN,
    OVR_CARD_ID             D_INT_IDEN,
    CATALOG_GROUPS_TYPE_ID  D_INT_IDEN,
    CLOTHES_SIZE            D_SIZE,
    SHOES_SIZE              D_SIZE,
    HAT_SIZE                D_SIZE,
    GAS_MASK_SIZE           D_SIZE,
    RESPIRATOR_SIZE         D_SIZE,
    MITTENS_SIZE            D_SIZE,
    GLOVES_SIZE             D_SIZE
);

CREATE TABLE PACKING (
    ID                D_INT_IDEN NOT NULL,
    CATALOG_ID        D_INT_IDEN NOT NULL,
    PRIORITY          SMALLINT NOT NULL,
    WEIGHT            D_MASS,
    VOLUME            D_MASS,
    MEASURE_ID        D_INT_IDEN,
    WEIGHTMEASURE_ID  D_INT,
    VOLUMEMEASURE_ID  D_INT
);

CREATE TABLE PARTNEMPL (
    ID          D_INT_IDEN,
    PARTNER_ID  D_INT_IDEN,
    CODE        D_BIGCODE,
    FNAME       VARCHAR(20),
    PATRONYMIC  VARCHAR(20),
    SURNAME     VARCHAR(20),
    ADDRESS     D_ADDRESS,
    MILITIA     D_ADDRESS,
    MILIT_CITY  VARCHAR(20),
    PASSP_DATE  TIMESTAMP,
    PASSP_NUM   CHAR(10),
    PASSP_SER   CHAR(10),
    OFFICE      VARCHAR(100),
    COMMENT     D_COMMENT,
    PERSON_ID   D_INT_IDEN
);

CREATE TABLE PARTNER (
    ID               D_INT_IDEN,
    INN              D_BIGCODE NOT NULL,
    OKONH            VARCHAR(40) NOT NULL,
    OKPO             D_BIGCODE NOT NULL,
    CITY             D_SMALLNAME NOT NULL,
    AREA             D_SMALLNAME NOT NULL,
    ADDRESS          D_ADDRESS NOT NULL,
    CITYLEGAL        D_SMALLNAME NOT NULL,
    AREALEGAL        D_SMALLNAME NOT NULL,
    ADDRESSLEGAL     D_ADDRESS NOT NULL,
    COMMENT          D_COMMENT,
    MAXSUPCREDIT     D_SUMMA,
    MAXSUPCREDITCUR  D_SMALLCODE,
    TERMSUPCREDIT    SMALLINT,
    PENALTYSUP       D_RATIO,
    MAXCUSCREDIT     D_SUMMA,
    MAXCUSCREDITCUR  D_SMALLCODE,
    TERMCUSCREDIT    SMALLINT,
    PENALTYCUS       D_RATIO,
    KPP              D_BIGCODE,
    CONTRACTOR_ID    D_INT,
    ZIP              D_ZIPCODE,
    ZIPLEGAL         D_ZIPCODE,
    INN_UNIQUE       D_BOOLEAN,
    OKVED            VARCHAR(40),
    PERSON_ID        D_INT,
    ZIPCODE_ID       D_INT,
    COUNTRY_ID       D_INT,
    REGION_ID        D_INT,
    DISTRICT_ID      D_INT,
    PLACE_ID         D_INT,
    STREET           D_ADDR_STREET,
    HOUSE            D_ADDR_HOUSE,
    BUILDING         D_ADDR_BUILDING,
    ROOM             D_ADDR_ROOM,
    ZIPCODE1_ID      D_INT,
    COUNTRY1_ID      D_INT,
    REGION1_ID       D_INT,
    DISTRICT1_ID     D_INT,
    PLACE1_ID        D_INT,
    STREET1          D_ADDR_STREET,
    HOUSE1           D_ADDR_HOUSE,
    BUILDING1        D_ADDR_BUILDING,
    ROOM1            D_ADDR_ROOM
);

CREATE TABLE PERIOD (
    ID         D_INT_IDEN,
    PNAME      D_BIGCODE NOT NULL,
    DATEFROM   TIMESTAMP NOT NULL,
    DATETO     TIMESTAMP NOT NULL,
    WHOCLOSED  D_USERNAME,
    DATECLOSE  TIMESTAMP
);

CREATE TABLE PERMISSIBLEACCOUNTS (
    ID         D_INT_IDEN,
    ANLDB1_ID  D_INT,
    ANLDB2_ID  D_INT,
    ANLDB3_ID  D_INT,
    ANLDB4_ID  D_INT,
    ANLDB5_ID  D_INT,
    ANLKT1_ID  D_INT,
    ANLKT2_ID  D_INT,
    ANLKT3_ID  D_INT,
    ANLKT4_ID  D_INT,
    ANLKT5_ID  D_INT,
    ACCDB_ID   D_INT,
    ACCKT_ID   D_INT
);

CREATE TABLE PHASEITEM_LINK (
    ID           D_INT_IDEN,
    PLANITEM_ID  D_INT_IDEN,
    FACTITEM_ID  D_INT_IDEN,
    DISTSUM      D_SUMMA
);

CREATE TABLE PHASEITEMFACT (
    ID             D_INT_IDEN,
    DOCHEAD_ID     D_INT_IDEN,
    REGDATE        D_DATE,
    DOCTYPE        D_DOCTYPE,
    DOCNUMBER      D_DOCNUMBER,
    DOCDATE        D_DOCDATE,
    DOC_ID         D_INT,
    FACTSUM        D_SUMMA,
    DISTSUM        D_SUMMA,
    CONTRACTOR_ID  D_INT,
    KIND           D_PHASEITEMKIND
);

CREATE TABLE PHASEITEMPLAN (
    ID                D_INT_IDEN,
    PHASE_ID          D_INT_IDEN,
    DOCNUMBER         D_DOCNUMBER,
    KIND              D_PHASEITEMKIND,
    BEGINACTION_DATE  D_DATE,
    ENDACTION_DATE    D_DATE,
    CONTRACTORFROM    D_INT,
    CONTRACTORTO      D_INT,
    PLANSUM           D_SUMMA,
    FACTSUM           D_SUMMA,
    AVOID             D_BOOLEAN
);

CREATE TABLE PMA_DOCGROUP (
    ID    D_INT_IDEN,
    NAME  D_NAME_N
);

CREATE TABLE PMA_DOCGROUPLINK (
    ID           D_INT_IDEN,
    DOCGROUP_ID  D_INT,
    DOCTYPE      D_DOCTYPE
);

CREATE TABLE PMA_PAYMENT (
    ID                   D_INT_IDEN,
    FOLDER_ID            D_INT,
    PLANNED              D_BOOLEAN,
    PDATE                D_DATE,
    NAME                 D_NAME_N,
    CURCODE              D_SMALLCODE,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT,
    CURRATE              D_RATIO,
    SUMCUR               D_SUMMA,
    SUMNAT               D_SUMMA,
    ALLOCSUMCUR          D_SUMMA,
    ALLOCSUMNAT          D_SUMMA,
    DOC_ID               D_INT,
    DOCTYPE              D_DOCTYPE,
    DOCNUMBER            D_DOCNUMBER,
    DOCDATE              D_DOCDATE,
    BASEDOC_ID           D_INT,
    BASEDOCTYPE          D_DOCTYPE,
    BASEDOCNUMBER        D_DOCNUMBER,
    BASEDOCDATE          D_DOCDATE,
    CONTRACT_ID          D_INT,
    CONTRACTTYPE         D_DOCTYPE,
    CONTRACTNUMBER       D_DOCNUMBER,
    CONTRACTDATE         D_DOCDATE,
    FROM_ID              D_INT,
    TO_ID                D_INT,
    FROMUNIT_ID          D_INT,
    TOUNIT_ID            D_INT,
    DESCRIPTION          D_COMMENT,
    COMMENTS             D_COMMENT,
    IS_MODEL             D_BOOLEAN,
    DESTFOLDER_ID        D_INT,
    MODELNAME            D_NAME_N
);

CREATE TABLE PMA_TRHEAD (
    ID           D_INT_IDEN,
    PAYMENT_ID   D_INT,
    DOCHEAD_ID   D_INT,
    PDATE        D_DATE,
    TOTALSUMCUR  D_SUMMA,
    TOTALSUMNAT  D_SUMMA,
    ALLOCSUMCUR  D_SUMMA,
    ALLOCSUMNAT  D_SUMMA
);

CREATE TABLE PMA_TRSPEC (
    ID          D_INT_IDEN,
    TRHEAD_ID   D_INT,
    DOCSPEC_ID  D_INT,
    TOTALQTY    D_QUANTITY,
    TOTALSUM    D_SUMMA,
    ALLOCQTY    D_QUANTITY,
    ALLOCSUM    D_SUMMA
);

CREATE TABLE PMA_TRTAX (
    ID          D_INT_IDEN,
    TRSPEC_ID   D_INT,
    TAXSUMM_ID  D_INT,
    TAX_ID      D_INT,
    TOTALSUM    D_SUMMA,
    ALLOCSUM    D_SUMMA
);

CREATE TABLE PMC_CONFIG (
    NAT_CURRENCY           D_SMALLCODE,
    CURRENCY_PREC          SMALLINT,
    CUR_RATE_TYPE_ID       D_INT,
    CUR_RATE_AUTHORITY_ID  D_INT
);

CREATE TABLE PMC_EXECUTION (
    ID                   D_INT_IDEN,
    RECEIVABLE           D_BOOLEAN,
    PLANDATE             D_DATE,
    FACTDATE             D_DATE,
    SUMCUR               D_SUMMA,
    SUMNAT               D_SUMMA,
    CURCODE              D_SMALLCODE,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT,
    TRANSFERKIND         D_SHORT,
    FIXEDPERIOD          D_BOOLEAN,
    VERSION_ID           D_INT,
    VERSTATUS_ID         D_INT,
    LIABILITY_ID         D_INT,
    RESOURCEFOLDER_ID    D_INT,
    RESOURCE_ID          D_INT,
    PAYMENT_ID           D_INT,
    DOC_ID               D_INT,
    DOCCREATED           D_BOOLEAN,
    DOCPROCESSED         D_BOOLEAN,
    APPROVED             D_BOOLEAN
);

CREATE TABLE PMC_LIABILITY (
    ID                     D_INT_IDEN,
    FOLDER_ID              D_INT,
    VERSION_ID             D_INT,
    VERSTATUS_ID           D_INT,
    IS_SHARED              D_BOOLEAN,
    PRIORITY               INTEGER,
    RECEIVABLE             D_BOOLEAN,
    NUM                    VARCHAR(20),
    REGDATE                D_DATE,
    DATETOEXECUTE          D_DATE,
    FROM_ID                D_INT,
    TO_ID                  D_INT,
    SUMCUR                 D_SUMMA,
    CURCODE                D_SMALLCODE,
    CURRATETYPE_ID         D_INT,
    CURRATEAUTHORITY_ID    D_INT,
    PAYMENTDELAY           INTEGER,
    DOC_ID                 D_INT,
    DOCNUMBER              D_DOCNUMBER,
    DOCTYPE                D_DOCTYPE,
    DOCDATE                D_DOCDATE,
    BASEDOC_ID             D_INT,
    BASEDOCTYPE            D_DOCTYPE,
    BASEDOCNUMBER          D_DOCNUMBER,
    BASEDOCDATE            D_DOCDATE,
    CONTRACT_ID            D_INT,
    CONTRACTTYPE           D_DOCTYPE,
    CONTRACTNUMBER         D_DOCNUMBER,
    CONTRACTDATE           D_DOCDATE,
    PREFRESOURCE_ID        D_INT,
    PREFRESOURCEFOLDER_ID  D_INT,
    PREFONLY               D_BOOLEAN,
    COMMENTS               D_COMMENT,
    TRANSFERKIND           D_SHORT,
    IS_MODEL               D_BOOLEAN,
    DESTFOLDER_ID          D_INT,
    MODELNAME              D_NAME_N,
    FROMSOURCE             D_SHORT,
    TOSOURCE               D_SHORT,
    FROMBANKACC_ID         D_INT,
    TOBANKACC_ID           D_INT
);

CREATE TABLE PMC_PERIOD (
    ID         D_INT_IDEN,
    NAME       D_NAME_N,
    DATEFROM   D_DATE,
    DATETILL   D_DATE,
    PARENT_ID  D_INT,
    KIND       D_SHORT
);

CREATE TABLE PMC_RESOURCE (
    ID                   D_INT_IDEN,
    FOLDER_ID            D_INT,
    ORGUNIT_ID           D_INT,
    NAME                 D_NAME_N,
    DESCRIPTION          D_COMMENT,
    CATALOG_ID           D_INT,
    ACTDATETILL          D_DATE,
    ACTDATEFROM          D_DATE,
    CURCODE              D_SMALLCODE,
    CURRATEAUTHORITY_ID  D_INT,
    CURRATETYPE_ID       D_INT,
    INDOCMODEL1_ID       D_INT,
    OUTDOCMODEL1_ID      D_INT,
    INDOCMODEL2_ID       D_INT,
    OUTDOCMODEL2_ID      D_INT
);

CREATE TABLE PMC_VERSION (
    ID          D_INT_IDEN,
    NAME        D_NAME_N,
    AVAILABLE   D_BOOLEAN,
    CREATEDATE  D_DATE,
    CREATOR_ID  D_INT
);

CREATE TABLE PMC_VERSTATUS (
    ID          D_INT_IDEN,
    KIND        D_SHORT,
    VERSION_ID  D_INT,
    DATETILL    D_DATE,
    DATEFROM    D_DATE,
    CREATOR_ID  D_INT,
    CREATEDATE  D_DATE
);

CREATE TABLE PP_CATALOG_WAREHOUSE (
    ID                   D_INT_IDEN,
    CATALOG_ID           D_INT_IDEN,
    SAFETY_LEVEL         D_QUANTITY,
    MRP_DAMPING_DAYS     D_SHORT,
    DEMAND_FENCE_DAYS    D_SHORT,
    ORDER_INTERVAL_DAYS  D_SHORT,
    WAREHOUSE_ID         D_INT_IDEN
);

CREATE TABLE PP_FIRM_PLANNED_ORDER (
    ID                      D_INT_IDEN,
    MRP_RECOMENDATION_ID    D_INT,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    MEASURE_ID              D_INT_IDEN,
    WAREHOUSE_ID            D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN,
    REQUIRED_DATE           D_DATE,
    ORDER_QTY               D_QUANTITY,
    VENDOR_ID               D_INT,
    ORDER_DATE              D_DATE,
    FIXED_INPUT             D_BOOLEAN,
    REQUISITION_FLAG        D_BOOLEAN,
    SOURCE_WAREHOUSE_ID     D_INT,
    PURCHASE_OR_TRANSFER    D_SHORT,
    MANUAL_ENTRY            D_BOOLEAN
);

CREATE TABLE PP_FORECAST_VERSION (
    ID           D_INT_IDEN,
    CODE         D_BIGCODE,
    DESCRIPTION  D_NAME
);

CREATE TABLE PP_GENERIC_ITEM (
    ID                   D_INT_IDEN,
    GENERIC_ITEM_CODE    D_BIGCODE,
    GENERIC_ITEM_NAME    D_NAME,
    PLANNING_ITEM_FLAG   D_BOOLEAN,
    PLANNING_SHELF_LIFE  D_SHORT,
    DEMAND_FENCE_DAYS    D_SHORT,
    DAYS_STOCK_COVER     D_SHORT,
    MEASURE_ID           D_INT_IDEN,
    LOW_LEVEL_CODE       D_SHORT
);

CREATE TABLE PP_INVENTORY_FORECAST (
    ID                       D_INT_IDEN,
    INVENTORY_FORECAST_CODE  D_BIGCODE,
    DESCRIPTION              D_NAME
);

CREATE TABLE PP_INVENTORY_FORECAST_LINE (
    ID                     D_INT_IDEN,
    GENERIC_ITEM_ID        D_INT_IDEN,
    INVENTORY_FORECAST_ID  D_INT_IDEN,
    EFF_ON_DATE            D_DATE,
    EFF_OFF_DATE           D_DATE,
    QTY_ON_HAND            D_QUANTITY,
    WAREHOUSE_ID           D_INT_IDEN,
    MEASURE_ID             D_INT_IDEN
);

CREATE TABLE PP_ITEM_FAMILY (
    ID                   D_INT_IDEN,
    PARENT_GENERIC_ITEM  D_INT_IDEN,
    PLANNING_LEVEL_ID    D_INT_IDEN,
    CHILD_GENERIC_ITEM   D_INT_IDEN,
    EFF_ON_DATE          D_DATE,
    EFF_OFF_DATE         D_DATE,
    ALLOCATION_PERCENT   D_RATIO
);

CREATE TABLE PP_MPS (
    ID                     D_INT_IDEN,
    PLANNING_LEVEL_ID      D_INT_IDEN,
    INVENTORY_FORECAST_ID  D_INT,
    FORECAST_VERSION_ID    D_INT,
    CODE                   D_BIGCODE,
    DEMAND_FENCE_DATE      D_DATE,
    DESCRIPTION            D_NAME,
    PLANNING_DATE          D_DATE,
    PP_LEVEL_PROCESSED_TO  D_SHORT,
    PRODUCTION             D_BOOLEAN,
    PROFILE_APPLIED        D_BOOLEAN,
    PURCHASES_FORECASTS    D_BOOLEAN,
    PURCHASES_LIVE         D_BOOLEAN,
    QTY_ON_HAND            D_BOOLEAN,
    SALES_FORECASTS        D_BOOLEAN,
    SALES_LIVE             D_BOOLEAN,
    WAREHOUSE_TRANSFERS    D_BOOLEAN,
    WEEK_CAL_ID            D_INT_IDEN,
    MPS_VERSION            D_INT,
    LAST_RUN_DATETIME      D_DATETIME
);

CREATE TABLE PP_MPS_LINE (
    ID                      D_INT_IDEN,
    PLANNING_ITEM_ID        D_INT_IDEN,
    INVENTORY_FORECAST_ID   D_INT,
    FORECAST_VERSION_ID     D_INT,
    MPS_ID                  D_INT_IDEN,
    ADJUSTMENT_QTY          D_QUANTITY,
    BUCKET_OFFSET           D_SHORT,
    BUCKET_OFFSET_DATE      D_DATE,
    DEMAND_FENCE_DATE       D_DATE,
    DEMAND_QTY              D_QUANTITY,
    MPS_SEQUENCE            D_INT_IDEN,
    OUTPUT_MPS_SEQUENCE     D_INT,
    PLANNED_QTY             D_QUANTITY,
    PP_DEPENDANT_DEMAND     D_QUANTITY,
    PP_LEVEL_CODE           D_SHORT,
    PRODUCTION_DEMAND_QTY   D_QUANTITY,
    PRODUCTION_PROFILE_QTY  D_QUANTITY,
    PRODUCTION_QTY          D_QUANTITY,
    PURCHASE_FORECAST_QTY   D_QUANTITY,
    PURCHASE_ORDER_QTY      D_QUANTITY,
    PURCHASE_QTY            D_QUANTITY,
    QTY_AVAILABLE           D_QUANTITY,
    SALES_FORECAST_QTY      D_QUANTITY,
    SALES_ORDER_QTY         D_QUANTITY,
    SALES_QTY               D_QUANTITY,
    TRANSFERS_IN_QTY        D_QUANTITY,
    TRANSFERS_OUT_QTY       D_QUANTITY,
    LIVE_PRODUCTION_DEMAND  D_QUANTITY,
    SAFETY_LEVEL_QTY        D_QUANTITY,
    MEASURE_ID              D_INT_IDEN,
    FIRM_PLAN_SUGGESTED     D_BOOLEAN,
    MPS_ORDERED             D_BOOLEAN
);

CREATE TABLE PP_MRP_INPUTS (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    PP_REFERENCE            D_NAME_N,
    REFERENCE_ID            D_INT,
    REQUIRED_DATE           D_DATE,
    MRP_QUANTITY            D_QUANTITY,
    MRP_ORDER_TYPE          D_SHORT,
    MRP_SOURCE              D_SHORT,
    FIXED_INPUT             D_BOOLEAN,
    BATCH_DATE              D_DATE,
    WAREHOUSE_ID            D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN
);

CREATE TABLE PP_MRP_OUTPUTS (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    REQUIRED_DATE           D_DATE,
    PP_REFERENCE            D_NAME_N,
    REFERENCE_ID            D_INT,
    MRP_QUANTITY            D_QUANTITY,
    MRP_ORDER_TYPE          D_SHORT,
    MRP_SOURCE              D_SHORT,
    WAREHOUSE_ID            D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN
);

CREATE TABLE PP_MRP_RECOMMENDATION (
    ID                         D_INT_IDEN,
    MRP_VERSION_CONTROL_ID     D_INT_IDEN,
    REQUIRED_DATE              D_DATE,
    ORDER_QTY                  D_QUANTITY,
    MRP_QUANTITY               D_QUANTITY,
    PURCHASE_LEAD_TIME         D_SHORT,
    FIRM_PLAN_SUGGESTED_ORDER  D_BOOLEAN,
    ORDER_DATE                 D_DATE,
    MRP_ARREARS_FLAG           D_BOOLEAN,
    MRP_ORDERED                D_BOOLEAN,
    PURCHASE_OR_TRANSFER       D_SHORT,
    CATALOG_ID                 D_INT_IDEN,
    MEASURE_ID                 D_INT_IDEN,
    VENDOR_ID                  D_INT,
    WAREHOUSE_ID               D_INT_IDEN,
    SOURCE_WAREHOUSE_ID        D_INT,
    PP_REFERENCE               D_NAME_N,
    MANUAL_ENTRY               D_BOOLEAN,
    MRP_RESCHEDULE_FLAG        D_SHORT,
    MRP_SOURCE                 D_SHORT,
    ORIGINAL_DATE              D_DATE,
    BATCH_DATE                 D_DATE,
    ORIGINAL_QUANTITY          D_QUANTITY
);

CREATE TABLE PP_MRP_REPORT (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    REQUIRED_DATE           D_DATE,
    MRP_ORDER_TYPE          D_SHORT,
    PP_REFERENCE            D_NAME_N,
    QTY_AVAILABLE           D_QUANTITY,
    MRP_QUANTITY            D_QUANTITY,
    MRP_SOURCE              D_SHORT,
    MRP_INPUT_OUTPUT_FLAG   D_SHORT,
    FIXED_INPUT             D_BOOLEAN,
    ORDER_DATE              D_DATE,
    MRP_ARREARS_FLAG        D_BOOLEAN,
    WAREHOUSE_ID            D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN,
    ORIGINAL_DATE           D_DATE,
    ORIGINAL_QUANTITY       D_QUANTITY,
    SEQUENCE                D_INT,
    MRP_RESCHEDULE_FLAG     D_SHORT
);

CREATE TABLE PP_MRP_SHORTAGE (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    REQUIRED_DATE           D_DATE,
    SHORTAGE_QTY            D_QUANTITY,
    WAREHOUSE_ID            D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN
);

CREATE TABLE PP_MRP_TOTALS_BY_DATE (
    ID                               D_INT_IDEN,
    MRP_VERSION_CONTROL_ID           D_INT_IDEN,
    REQUIRED_DATE                    D_DATE,
    SALES_ORDER_QTY                  D_QUANTITY,
    SALES_FORECAST_QTY               D_QUANTITY,
    SALES_QTY                        D_QUANTITY,
    PRODUCTION_QTY                   D_QUANTITY,
    PLANNED_PRODUCTION_QTY           D_QUANTITY,
    PRODUCTION_REQUIREMENTS          D_QUANTITY,
    PLANNED_PRODUCTION_REQUIREMENTS  D_QUANTITY,
    SUGGESTED_PURCHASES              D_QUANTITY,
    QTY_ON_HAND                      D_QUANTITY,
    QTY_AVAILABLE                    D_QUANTITY,
    SUGGESTED_TRANSFERS              D_QUANTITY,
    TOTAL_OUTPUTS                    D_QUANTITY,
    WAREHOUSE_ID                     D_INT_IDEN,
    CATALOG_ID                       D_INT_IDEN,
    PURCHASE_QTY_BEFORE              D_QUANTITY,
    TOTAL_INPUTS_AFTER               D_QUANTITY,
    TRANSFER_QTY_AFTER               D_QUANTITY,
    TOTAL_INPUTS_BEFORE              D_QUANTITY,
    TRANSFER_QTY_BEFORE              D_QUANTITY,
    PURCHASE_ORDER_QTY_AFTER         D_QUANTITY,
    FIRM_PLAN_TRANSF_IN_AFTER        D_QUANTITY,
    PURCHASE_FORECAST_QTY_AFTER      D_QUANTITY,
    FIRM_PLAN_TRANSF_IN_BEFORE       D_QUANTITY,
    EXPIRY_QTY                       D_QUANTITY,
    PURCHASE_ORDER_QTY_BEFORE        D_QUANTITY,
    PURCHASE_FORECAST_QTY_BEFORE     D_QUANTITY,
    FIRM_PLANNED_PURCHASES_BEFORE    D_QUANTITY,
    FIRM_PLAN_TRANSF_OUT_AFTER       D_QUANTITY,
    FIRM_PLAN_TRANSF_OUT_BEFORE      D_QUANTITY,
    PURCHASE_QTY_AFTER               D_QUANTITY,
    FIRM_PLANNED_PURCHASES_AFTER     D_QUANTITY
);

CREATE TABLE PP_MRP_VERSION_CONTROL (
    ID                            D_INT_IDEN,
    CODE                          D_BIGCODE,
    DESCRIPTION                   D_NAME,
    MRP_VERSION                   D_INT,
    MRP_SO_FLAG                   D_BOOLEAN,
    MRP_SF_FLAG                   D_BOOLEAN,
    MRP_PO_FLAG                   D_BOOLEAN,
    MRP_PF_FLAG                   D_BOOLEAN,
    MRP_QOH_FLAG                  D_BOOLEAN,
    MRP_FIRM_PLANNED_ORDERS_FLAG  D_BOOLEAN,
    MRP_JOB_FLAG                  D_BOOLEAN,
    DAMPING_DAYS                  D_SHORT,
    QC_RECEIVING_DAYS             D_SHORT,
    RUN_DATE                      D_DATE,
    MRP_START_DATE                D_DATE,
    MRP_END_DATE                  D_DATE,
    LAST_RUN_DATETIME             D_DATETIME,
    MRP_SUGGESTED_ORDERS_FIRMED   D_BOOLEAN
);

CREATE TABLE PP_MRP_VERSION_FORECAST (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    FORECAST_TYPE           D_SHORT,
    FORECAST_VERSION_ID     D_INT_IDEN
);

CREATE TABLE PP_MRP_VERSION_MPS (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    MPS_ID                  D_INT_IDEN
);

CREATE TABLE PP_PLANNING_FORECAST (
    ID                   D_INT_IDEN,
    PLANNING_ITEM_ID     D_INT,
    PLANNING_LEVEL_ID    D_INT_IDEN,
    FORECAST_VERSION_ID  D_INT_IDEN,
    FORECAST_TYPE        D_SHORT,
    FORECAST_METHOD      D_SHORT,
    BUCKET_OFFSET        D_SHORT,
    REQUIRED_DATE        D_DATE,
    FORECAST_QUANTITY    D_QUANTITY,
    MEASURE_ID           D_INT_IDEN,
    CATALOG_ID           D_INT,
    WAREHOUSE_ID         D_INT
);

CREATE TABLE PP_PLANNING_LEVEL (
    ID                  D_INT_IDEN,
    PLANNING_LEVEL_NUM  D_SHORT,
    DESCRIPTION         D_NAME,
    TIME_FENCE          D_SHORT
);

CREATE TABLE PP_PLANNING_LEVEL_BUCKET (
    ID                 D_INT_IDEN,
    PLANNING_LEVEL_ID  D_INT_IDEN,
    START_DATE         D_DATE,
    END_DATE           D_DATE,
    BUCKET_OFFSET      D_SHORT
);

CREATE TABLE PP_PRODUCTION_PROFILE (
    ID                       D_INT_IDEN,
    PLANNING_LEVEL_ID        D_INT_IDEN,
    GENERIC_ITEM_ID          D_INT_IDEN,
    START_BUCKET_OFFSET      D_SHORT,
    END_BUCKET_OFFSET        D_SHORT,
    PRODUCTION_RATIO         D_RATIO,
    BUCKET_PRODUCTION_RATIO  D_RATIO
);

CREATE TABLE PP_RCCP_DETAIL (
    ID                     D_INT_IDEN,
    LOAD_MEASURE_ID        D_INT_IDEN,
    PLANNING_ITEM_ID       D_INT_IDEN,
    RCCP_HEADER_ID         D_INT_IDEN,
    RESOURCE_GROUP_ID      D_INT_IDEN,
    BUCKET_OFFSET          D_SHORT,
    MPS_BUCKET_OFFSET      D_SHORT,
    LOAD_VALUE             D_QUANTITY,
    LOAD_ADJUSTMENT_VALUE  D_QUANTITY,
    LOAD_PRODUCTION_VALUE  D_QUANTITY,
    LOAD_DEMAND_VALUE      D_QUANTITY
);

CREATE TABLE PP_RCCP_HEADER (
    ID                 D_INT_IDEN,
    MPS_ID             D_INT_IDEN,
    NAME               D_NAME,
    RCCP_VERSION       D_INT,
    LAST_RUN_DATETIME  D_DATETIME,
    WEEK_CAL_ID        D_INT_IDEN
);

CREATE TABLE PP_RCCP_RESOURCE_LOAD (
    ID                     D_INT_IDEN,
    LOAD_MEASURE_ID        D_INT_IDEN,
    RCCP_HEADER_ID         D_INT_IDEN,
    RESOURCE_GROUP_ID      D_INT_IDEN,
    BUCKET_OFFSET          D_SHORT,
    LOAD_VALUE             D_QUANTITY,
    LOAD_ADJUSTMENT_VALUE  D_QUANTITY,
    LOAD_PRODUCTION_VALUE  D_QUANTITY,
    LOAD_DEMAND_VALUE      D_QUANTITY,
    CAPACITY               D_QUANTITY,
    MAX_CAPACITY           D_QUANTITY
);

CREATE TABLE PR_CONTACT_HIST (
    ID                 D_INT_IDEN NOT NULL,
    FOLDER_ID          D_INT_IDEN NOT NULL,
    CONTACTKIND_ID     D_INT,
    CDATE              D_DATE,
    CDESCRIPTION       D_CONTRACT_COMMENT,
    PARTNER_ID         D_INT,
    PARTNEMPL_ID       D_INT,
    PARTNEMPLPHONE_ID  D_INT,
    PARTNEMPLEMAIL_ID  D_INT,
    ACCEPT_EMPL_ID     D_INT,
    TO_EMPL_ID         D_INT,
    POSSIBLERESULT_ID  D_INT,
    RESULT_COMMENT     D_CONTRACT_COMMENT,
    NEXTCDATE          D_DATE,
    PRIORITY           D_INT,
    UNID               VARCHAR(32)
);

CREATE TABLE PR_CONTACT_HIST_FILES (
    ID              D_INT_IDEN NOT NULL,
    CONTACTHIST_ID  D_INT_IDEN NOT NULL,
    FILEDOC         D_ORIGINAL,
    FILENAME        D_FILENAME,
    FDESCRIPTION    D_COMMENT,
    FILEDATE        D_DATETIME
);

CREATE TABLE PR_CONTACT_KIND (
    ID     D_INT_IDEN NOT NULL,
    KNAME  D_NAME NOT NULL
);

CREATE TABLE PR_POSSIBLE_RESULT (
    ID     D_INT_IDEN NOT NULL,
    RNAME  D_NAME NOT NULL
);

CREATE TABLE PREF_ABBREVIATION (
    ID        D_INT_IDEN NOT NULL,
    ALEVEL    D_INT,
    SCNAME    D_ABBREVIATION,
    SOCRNAME  VARCHAR(30),
    KOD_T_ST  CHAR(3)
);

CREATE TABLE PREF_ADDITIONAL_EDUCATION_KIND (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE NOT NULL,
    NAME  D_NAME_N,
    OKIN  D_SMALLCODE
);

CREATE TABLE PREF_ADDRESS (
    ID             D_INT_IDEN NOT NULL,
    PERSONNEL_ID   D_INT_IDEN NOT NULL,
    ADDRESS_KIND   D_INT,
    BEGINDATE      D_DATE,
    FULL_ADDRESS   D_COMMENT,
    POST_INDEX     D_MEDIUMCODE,
    COUNTRY        D_SMALLNAME NOT NULL,
    REGION         D_SMALLNAME NOT NULL,
    DISTRICT       D_SMALLNAME NOT NULL,
    DISTRICT_TYPE  D_ABBREVIATION,
    CITY           D_SMALLNAME NOT NULL,
    CITY_TYPE      D_ABBREVIATION,
    AREA           D_SMALLNAME NOT NULL,
    AREA_TYPE      D_ABBREVIATION,
    STREET         D_SMALLNAME NOT NULL,
    STREET_TYPE    D_ABBREVIATION,
    HOUSE          D_MEDIUMCODE,
    BLOCK          D_MEDIUMCODE,
    FLAT           D_MEDIUMCODE,
    REGION_TYPE    D_ABBREVIATION,
    KLADR_CODE     CHAR(15)
);

CREATE TABLE PREF_CALC_PERIOD (
    ID            D_INT_IDEN,
    BEGINDATE     D_DATENOTNULL,
    ENDDATE       D_DATENOTNULL,
    STAFFLIST_ID  D_INT,
    PNAME         D_NAME_N
);

CREATE TABLE PREF_CONFIG (
    ID             D_INT_IDEN,
    COSTS_ANL_ID   D_INT,
    BASE_CURRENCY  D_SMALLCODE,
    NAT_CURRENCY   D_SMALLCODE,
    CURRENCY_PREC  D_SHORT
);

CREATE TABLE PREF_COSTS_ANL (
    ID         D_INT_IDEN,
    ACODE      D_BIGCODE NOT NULL,
    ANAME      D_NAME_N,
    ANLLEVEL   D_SHORT NOT NULL,
    PARENT_ID  D_INT
);

CREATE TABLE PREF_COUNTRY (
    ID     D_INT_IDEN NOT NULL,
    CCODE  D_SMALLCODE NOT NULL,
    CNAME  D_SMALLNAME NOT NULL
);

CREATE TABLE PREF_DEDUCTION_KIND (
    ID               D_INT_IDEN NOT NULL,
    DEDUCTIONCLASS   D_INT_IDEN NOT NULL,
    DCODE            D_BIGCODE NOT NULL,
    DNAME            D_NAME NOT NULL,
    MINSALARYNUMBER  D_QUANTITY,
    FIXEDSUM         D_SUMMA,
    BEGINDATE        D_DATENOTNULL NOT NULL,
    MAX_INCOME       D_SUMMA
);

CREATE TABLE PREF_EDUCATION_DEGREE (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE NOT NULL,
    NAME  D_NAME_N,
    OKIN  D_SMALLCODE
);

CREATE TABLE PREF_FAMILYDEDUCTIONS (
    ID                D_INT_IDEN NOT NULL,
    DEDUCTIONKIND_ID  D_INT_IDEN NOT NULL,
    BEGINDATE         D_DATE,
    ENDDATE           D_DATE,
    RATIO             D_QUANTITY,
    FAMILY_MEMBER_ID  D_INT_IDEN
);

CREATE TABLE PREF_FAMILYMEMBERS (
    ID            D_INT_IDEN NOT NULL,
    PERSONNEL_ID  D_INT_IDEN NOT NULL,
    FNAME         D_NAME NOT NULL,
    PATRONYMIC    D_NAME NOT NULL,
    SURNAME       D_NAME NOT NULL,
    RELATION_ID   D_INT,
    BIRTHDATE     D_DATE
);

CREATE TABLE PREF_FAMILYRELATION (
    ID        D_INT_IDEN NOT NULL,
    RCODE     D_BIGCODE NOT NULL,
    PRIORITY  D_INT,
    OKIN      D_SMALLCODE
);

CREATE TABLE PREF_FAMILYSTATUS (
    ID             D_INT_IDEN NOT NULL,
    PERSONNEL_ID   D_INT_IDEN NOT NULL,
    STATUSKIND_ID  D_INT_IDEN NOT NULL,
    BEGINDATE      D_DATENOTNULL NOT NULL
);

CREATE TABLE PREF_FAMILYSTATUS_KIND (
    ID        D_INT_IDEN NOT NULL,
    KCODE     D_BIGCODE NOT NULL,
    PRIORITY  D_INT,
    OKIN      D_SMALLCODE
);

CREATE TABLE PREF_FOREIGN_LANGUAGE (
    ID    D_INT_IDEN,
    NAME  D_NAME,
    OKIN  D_SMALLCODE
);

CREATE TABLE PREF_IDENTDOC (
    ID                   D_INT_IDEN NOT NULL,
    PERSONNEL_ID         D_INT_IDEN NOT NULL,
    IDENTDOCKIND_ID      D_INT_IDEN NOT NULL,
    IS_BASIC             D_BOOLEAN,
    SERIES_LEFT          D_SMALLCODE,
    SERIES_DIVIDER       D_SMALLCODE,
    SERIES_RIGHT         D_SMALLCODE,
    NUMBER               D_BIGCODE,
    WHO_ISSUED           D_NAME NOT NULL,
    WHEN_ISSUED          D_DATE,
    ACTIVE_TILL          D_DATE,
    CITIZENSHIP          D_SMALLNAME NOT NULL,
    ADDRESS_ID           D_INT,
    BIRTHDATE            D_DATE,
    NATIONALITY_ID       D_INT,
    BIRTHPLACE_COUNTRY   D_SMALLNAME NOT NULL,
    BIRTHPLACE_REGION    D_SMALLNAME NOT NULL,
    BIRTHPLACE_DISTRICT  D_SMALLNAME NOT NULL,
    BIRTHPLACE_CITY      D_SMALLNAME NOT NULL,
    BIRTHPLACE_OKATO     D_BIGCODE
);

CREATE TABLE PREF_IDENTDOC_KIND (
    ID              D_INT_IDEN NOT NULL,
    KCODE           D_BIGCODE NOT NULL,
    KNAME           D_NAME NOT NULL,
    LSERIES_LENGTH  D_INT,
    RSERIES_LENGTH  D_INT,
    SERIES_DIVIDER  D_SMALLCODE,
    NUMBER_LENGTH   D_INT
);

CREATE TABLE PREF_INSUREDCLASS (
    ID                D_INT_IDEN NOT NULL,
    CCODE             D_BIGCODE NOT NULL,
    CNAME             D_NAME NOT NULL,
    INSURED_PERCENT   D_RATIO,
    EMPLOYER_PERCENT  D_RATIO
);

CREATE TABLE PREF_JOB (
    ID      D_INT_IDEN,
    NAME    D_NAME,
    OKPDTR  D_MEDIUMCODE
);

CREATE TABLE PREF_KLADR (
    ID          D_INT_IDEN,
    KNAME       VARCHAR(40),
    KTYPE       VARCHAR(10),
    KCODE       CHAR(13),
    POST_INDEX  CHAR(6),
    GNINMB      CHAR(4),
    OCATD       CHAR(11),
    SYSCOD      CHAR(10)
);

CREATE TABLE PREF_LANGUAGE_KNOWLEDGE (
    ID    D_INT_IDEN,
    NAME  D_NAME,
    OKIN  D_SMALLCODE
);

CREATE TABLE PREF_LEAVE_KIND (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE NOT NULL,
    NAME  D_NAME_N,
    OKIN  D_SMALLCODE
);

CREATE TABLE PREF_MILITARY_RANK (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE NOT NULL,
    NAME  D_NAME_N,
    OKIN  D_SMALLCODE
);

CREATE TABLE PREF_MILITARY_RANK_KIND (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE NOT NULL,
    NAME  D_NAME_N
);

CREATE TABLE PREF_MILITARY_VALIDITY (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE NOT NULL,
    NAME  D_NAME_N
);

CREATE TABLE PREF_NATIONALITY (
    ID     D_INT_IDEN NOT NULL,
    NNAME  D_SMALLNAME NOT NULL
);

CREATE TABLE PREF_PERS_VOCATIONAL_TRAINING (
    ID                       D_INT_IDEN,
    PERSONNEL_ID             D_INT_IDEN,
    TRAINING_BEGINDATE       D_DATE,
    TRAINING_ENDDATE         D_DATE,
    SPECIALITY_ID            D_INT_IDEN,
    CERTIFICATE_DOCUMENT_ID  D_INT,
    ORDER_ID                 D_INT
);

CREATE TABLE PREF_PERSONNEL (
    ID                       D_INT_IDEN NOT NULL,
    GROUP_ID                 D_INT_IDEN NOT NULL,
    ACT_DATE                 D_DATE,
    TABLE_NUMBER             D_BIGCODE,
    NAME1                    D_NAME_N,
    NAME2                    D_NAME_N,
    NAME3                    D_NAME_N,
    BORNDATE                 D_DATE,
    SEX                      D_INT,
    STATURE                  D_QUANTITY,
    MEASURE_UPCODE           D_SMALLCODE,
    PHOTO                    D_ORIGINAL,
    PENSION_NUMBER           D_BIGCODE,
    INSUREDCLASS_ID          D_INT,
    INN                      D_BIGCODE,
    PERSON_ID                D_INT_IDEN,
    EDUCATION_DEGREE_ID      D_INT,
    LABOUR_CONTRACT_NUMBER   D_BIGCODE,
    LABOUR_CONTRACT_DATE     D_DATE,
    ADDITIONAL_INFO          VARCHAR(2048),
    RETIRE_REASON            D_COMMENT,
    RETIRE_DATE              D_DATE,
    RETIRE_ORDER_ID          D_INT,
    MIL_RESERVE_CATEGORY_ID  D_INT,
    MIL_RANK_ID              D_INT,
    MIL_RANK_KIND_ID         D_INT,
    MIL_SPECIALITY           D_BIGCODE,
    MIL_VALIDITY_ID          D_INT,
    MIL_COMMISSARIAT         D_NAME_N,
    MIL_REG_PARTY_NUMBER     D_NAME_N,
    MIL_REG_SPECIAL          D_NAME_N,
    MIL_IS_TAKEN_OFF         D_SHORT
);

CREATE TABLE PREF_PERSONNEL_ATTESTATION (
    ID                      D_INT_IDEN,
    PERSONNEL_ID            D_INT_IDEN,
    ATTESTATION_DATE        D_DATE,
    RESOLUTION              D_NAME_N,
    RESOLUTION_DOCUMENT_ID  D_INT,
    ORDER_ID                D_INT
);

CREATE TABLE PREF_PERSONNEL_EDUCATION (
    ID                            D_INT_IDEN,
    PERSONNEL_ID                  D_INT_IDEN,
    INSTITUTION_NAME              D_NAME,
    DIPLOMA_QUALIFICATION         D_NAME_N,
    DIPLOMA_NUMBER                D_BIGCODE,
    DIPLOMA_DATE                  D_DATE,
    GRADUATION_YEAR               D_INT,
    SPECIALITY_ID                 D_INT,
    IS_ADDITIONAL                 D_SHORT,
    ADDITIONAL_EDUCATION_KIND_ID  D_INT
);

CREATE TABLE PREF_PERSONNEL_GROUP (
    ID            D_INT_IDEN,
    FLDNAME       D_NAME,
    GROUPTYPE_ID  D_INT,
    PARENT_ID     D_INT,
    FOLDER_TAG    D_NAME_N
);

CREATE TABLE PREF_PERSONNEL_GROUP_TYPE (
    ID    D_INT_IDEN,
    NAME  D_NAME
);

CREATE TABLE PREF_PERSONNEL_HIST (
    ID               D_INT_IDEN,
    PERSONNEL_ID     D_INT_IDEN,
    ACT_DATE         D_DATENOTNULL,
    TABLE_NUMBER     D_BIGCODE,
    NAME1            D_NAME,
    NAME2            D_NAME,
    NAME3            D_NAME,
    BORNDATE         D_DATE,
    SEX              D_INT,
    STATURE          D_QUANTITY,
    MEASURE_UPCODE   D_SMALLCODE,
    PHOTO            D_ORIGINAL,
    PENSION_NUMBER   D_BIGCODE,
    INSUREDCLASS_ID  D_INT,
    INN              D_BIGCODE
);

CREATE TABLE PREF_PERSONNEL_LABOUR_CONTRACT (
    ID                    D_INT_IDEN,
    PERSONNEL_ID          D_INT_IDEN,
    NAME                  D_NAME,
    ORIGINAL_DOCUMENT_ID  D_INT
);

CREATE TABLE PREF_PERSONNEL_LANGUAGE (
    ID                     D_INT_IDEN,
    PERSONNEL_ID           D_INT_IDEN,
    FOREIGN_LANGUAGE_ID    D_INT_IDEN,
    LANGUAGE_KNOWLEDGE_ID  D_INT
);

CREATE TABLE PREF_PERSONNEL_LEAVE (
    ID              D_INT_IDEN,
    PERSONNEL_ID    D_INT_IDEN,
    LEAVE_KIND_ID   D_INT_IDEN,
    WORK_BEGINDATE  D_DATE,
    WORK_ENDDATE    D_DATE,
    HOLIDAY_NUMBER  D_INT,
    BEGINDATE       D_DATENOTNULL,
    ENDDATE         D_DATE,
    ORDER_ID        D_INT
);

CREATE TABLE PREF_PERSONNEL_PHONE (
    ID             D_INT_IDEN,
    PERSONNEL_ID   D_INT_IDEN,
    TOWN_CODE      D_PHONE,
    PHONE          D_PHONE,
    PHONE_KIND_ID  D_INT
);

CREATE TABLE PREF_PERSONNEL_PROFESSION (
    ID            D_INT_IDEN,
    PERSONNEL_ID  D_INT_IDEN,
    JOB_ID        D_INT_IDEN,
    IS_BASIC      D_SHORT
);

CREATE TABLE PREF_PERSONNEL_RECORD (
    ID                    D_INT_IDEN,
    PERSONNEL_ID          D_INT_IDEN,
    NAME                  D_NAME,
    ORIGINAL_DOCUMENT_ID  D_INT,
    DESCRIPTION           VARCHAR(2048)
);

CREATE TABLE PREF_PERSONNEL_REWARD (
    ID                    D_INT_IDEN,
    PERSONNEL_ID          D_INT_IDEN,
    REWARD_NAME           D_NAME,
    ORIGINAL_DOCUMENT_ID  D_INT
);

CREATE TABLE PREF_PERSONNEL_SERVICE (
    ID              D_INT_IDEN NOT NULL,
    PERSONNEL_ID    D_INT_IDEN NOT NULL,
    SERVICEKIND_ID  D_INT_IDEN NOT NULL,
    BEGINDATE       D_DATE,
    ENDDATE         D_DATE,
    LENGTHSERVICE   D_QUANTITY,
    COMMENT         D_COMMENT,
    IS_GOINGON      D_BOOLEAN,
    RATIO           D_RATIO
);

CREATE TABLE PREF_PERSONNEL_SKILL_RAISING (
    ID                       D_INT_IDEN,
    PERSONNEL_ID             D_INT_IDEN,
    STUDY_BEGINDATE          D_DATE,
    STUDY_ENDDATE            D_DATE,
    SKILL_RAISING_KIND_ID    D_INT_IDEN,
    INSTITUTION_NAME         D_NAME_N,
    INSTITUTION_ADDRESS      D_ADDRESS,
    CERTIFICATE_DOCUMENT_ID  D_INT,
    ORDER_ID                 D_INT
);

CREATE TABLE PREF_PERSONNEL_SOCIAL_BENEFIT (
    ID                    D_INT_IDEN,
    PERSONNEL_ID          D_INT_IDEN,
    BENEFIT_NAME          D_NAME,
    ORIGINAL_DOCUMENT_ID  D_INT,
    BENEFIT_REASON        D_BIGNAME
);

CREATE TABLE PREF_PERSONNEL_TRANSFER (
    ID                      D_INT_IDEN,
    PERSONNEL_ID            D_INT_IDEN,
    TRANSFER_DATE           D_DATE,
    STAFF_LIST_UNIT_ID      D_INT,
    STAFF_LIST_POSITION_ID  D_INT,
    SALARY                  D_SUMMA,
    SALARY_RAISE            D_SUMMA,
    ORDER_ID                D_INT
);

CREATE TABLE PREF_PFCODE_IN_SERVICE (
    ID                   D_INT_IDEN NOT NULL,
    PERSONNELSERVICE_ID  D_INT_IDEN NOT NULL,
    PFCODE_ID            D_INT_IDEN NOT NULL,
    COMMENT              D_COMMENT
);

CREATE TABLE PREF_PFCODEKIND_IN_SERVICEKIND (
    ID              D_INT_IDEN NOT NULL,
    PFCODEKIND_ID   D_INT_IDEN NOT NULL,
    SERVICEKIND_ID  D_INT_IDEN NOT NULL,
    RATIO           D_RATIO
);

CREATE TABLE PREF_POSITION (
    ID    D_INT_IDEN,
    NAME  D_NAME
);

CREATE TABLE PREF_POSITION_FILL_KIND (
    ID        D_INT_IDEN,
    KCODE     D_BIGCODE NOT NULL,
    PRIORITY  D_INT
);

CREATE TABLE PREF_RESERVE_CATEGORY (
    ID    D_INT_IDEN,
    NAME  D_NAME
);

CREATE TABLE PREF_RISE (
    ID     D_INT_IDEN,
    RCODE  D_BIGCODE NOT NULL,
    RNAME  D_NAME_N
);

CREATE TABLE PREF_RISE_PERCENT (
    ID              D_INT_IDEN,
    RISESCALE_ID    D_INT_IDEN,
    PERCENT_NUMBER  D_INT_IDEN,
    SERVICE_FROM    D_QUANTITY,
    SERVICE_TO      D_QUANTITY,
    RISE_VALUE      D_RATIO
);

CREATE TABLE PREF_RISE_SCALE (
    ID            D_INT_IDEN,
    RISE_ID       D_INT_IDEN,
    SCALE_NUMBER  D_INT_IDEN,
    SNAME         D_NAME_N,
    BEGINDATE     D_DATE
);

CREATE TABLE PREF_SERVICE_KIND (
    ID                    D_INT_IDEN NOT NULL,
    KNAME                 D_NAME NOT NULL,
    PARENT_ID             D_INT,
    KCODE                 D_BIGCODE NOT NULL,
    BEGINSERVICE_ALG_ID   D_INT,
    ENDSERVICE_ALG_ID     D_INT,
    LENGTHSERVICE_ALG_ID  D_INT,
    FOLDER_TAG            D_NAME_N
);

CREATE TABLE PREF_SERVICE_PFCODE (
    ID           D_INT_IDEN NOT NULL,
    FOLDER_ID    D_INT_IDEN NOT NULL,
    CODE         D_BIGCODE NOT NULL,
    DESCRIPTION  D_COMMENT
);

CREATE TABLE PREF_SKILL_RAISING_KIND (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE NOT NULL,
    NAME  D_NAME_N
);

CREATE TABLE PREF_SPECIALITY (
    ID    D_INT_IDEN,
    NAME  D_NAME,
    OKSO  D_BIGCODE,
    MSKO  D_SMALLCODE
);

CREATE TABLE PREF_STAFF_CATEGORY (
    ID        D_INT_IDEN,
    CCODE     D_BIGCODE NOT NULL,
    CNAME     D_NAME_N,
    PRIORITY  D_INT
);

CREATE TABLE PREF_STAFF_LIST (
    ID         D_INT_IDEN,
    LNAME      D_NAME,
    FOLDER_ID  D_INT_IDEN
);

CREATE TABLE PREF_STAFF_LIST_POSITION (
    ID                     D_INT_IDEN,
    STAFFLISTUNIT_ID       D_INT_IDEN,
    POSITION_ID            D_INT_IDEN,
    SL_POSITION_UNIQUE_ID  D_BIGCODE NOT NULL,
    STAFFCATEGORY_ID       D_INT,
    BEGINDATE              D_DATE,
    ENDDATE                D_DATE,
    RATE_NUMBER            D_RATIO,
    HOLIDAY_NUMBER         D_INT,
    WORKCONDITION_ID       D_INT,
    WORK_SCHEDULE_ID       D_INT,
    COSTS_ANL1_ID          D_INT,
    COSTS_ANL2_ID          D_INT,
    COSTS_ANL3_ID          D_INT,
    COSTS_ANL4_ID          D_INT,
    COSTS_ANL5_ID          D_INT,
    TAX_CALC_KIND_ID       D_INT
);

CREATE TABLE PREF_STAFF_LIST_UNIT (
    ID                D_INT_IDEN,
    STAFFLIST_ID      D_INT_IDEN,
    PARENT_ID         D_INT,
    UCODE             D_BIGCODE NOT NULL,
    UNAME             D_NAME,
    COMMENTS          D_COMMENT,
    WORK_SCHEDULE_ID  D_INT,
    COSTS_ANL1_ID     D_INT,
    COSTS_ANL2_ID     D_INT,
    COSTS_ANL3_ID     D_INT,
    COSTS_ANL4_ID     D_INT,
    COSTS_ANL5_ID     D_INT,
    TAX_CALC_KIND_ID  D_INT,
    FOLDER_TAG        D_NAME_N
);

CREATE TABLE PREF_STREET (
    ID          D_INT_IDEN,
    SNAME       VARCHAR(40),
    KTYPE       VARCHAR(10),
    KCODE       CHAR(17),
    POST_INDEX  CHAR(6),
    GNINMB      CHAR(4),
    OCATD       CHAR(11)
);

CREATE TABLE PREF_TARIFF_SCALE (
    ID                  D_INT_IDEN,
    SCODE               D_BIGCODE NOT NULL,
    SNAME               D_NAME_N,
    STYPE               D_SHORT,
    FIRST_CLASS_ALG_ID  D_INT,
    BEGINDATE           D_DATE NOT NULL
);

CREATE TABLE PREF_TARIFF_SCALE_CLASS (
    ID              D_INT_IDEN,
    TARIFFSCALE_ID  D_INT_IDEN,
    CLASS_NUMBER    D_INT_IDEN,
    FACTOR          D_RATIO,
    RATE            D_SUMMA
);

CREATE TABLE PREF_TARIFFING (
    ID                     D_INT_IDEN,
    STAFFLIST_ID           D_INT,
    SL_POSITION_UNIQUE_ID  D_BIGCODE NOT NULL,
    POSITIONFILL_ID        D_INT,
    CATEGORY_ID            D_INT_IDEN,
    BEGINDATE              D_DATE,
    ENDDATE                D_DATE,
    RATE_OF_SALARY         D_SUMMA,
    TARIFFSCALE_CODE       D_BIGCODE,
    TARIFFCLASS            D_INT,
    RISE_VALUE             D_RATIO,
    USE_RISE_REFERENCE     D_BOOLEAN,
    RISE_ID                D_INT,
    RISESCALE_ID           D_INT,
    MINSALARY_NUMBER       D_RATIO,
    COSTS_ANL1_ID          D_INT,
    COSTS_ANL2_ID          D_INT,
    COSTS_ANL3_ID          D_INT,
    COSTS_ANL4_ID          D_INT,
    COSTS_ANL5_ID          D_INT
);

CREATE TABLE PREF_TARIFFING_CATEGORY (
    ID        D_INT_IDEN,
    CCODE     D_BIGCODE NOT NULL,
    CNAME     D_NAME_N,
    CTYPE     D_SHORT NOT NULL,
    PRIORITY  D_INT
);

CREATE TABLE PREF_TAX_CALC_KIND (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE NOT NULL,
    NAME  D_NAME_N
);

CREATE TABLE PREF_WORK_CONDITION (
    ID     D_INT_IDEN,
    CCODE  D_BIGCODE NOT NULL,
    CNAME  D_NAME_N
);

CREATE TABLE PREF_WORK_SCHEDULE (
    ID                 D_INT_IDEN,
    SCODE              D_BIGCODE NOT NULL,
    SNAME              D_NAME_N,
    BEGINDATE          D_DATE,
    ENDDATE            D_DATE,
    LEAVE_SCHEDULE_ID  D_INT
);

CREATE TABLE PREF_WORKTIME_NORM (
    ID                D_INT_IDEN,
    CALC_PERIOD_ID    D_INT_IDEN,
    WORK_SCHEDULE_ID  D_INT_IDEN,
    WORKDAYS_NUMBER   D_INT,
    WORKHOURS_NUMBER  D_INT,
    WORKDAYS_ALG_ID   D_INT,
    WORKHOURS_ALG_ID  D_INT
);

CREATE TABLE PRICELIST_PRICETYPE_LINK (
    PRICELIST_ID      D_INT_IDEN,
    PRICETYPE_ID      D_INT_IDEN,
    PRIORITY          SMALLINT,
    RELATIVE_PERCENT  D_RATIO,
    FORMULA           D_FORMULA,
    ALG_ID            D_INT,
    ID                D_INT_IDEN
);

CREATE TABLE PRICELISTFOLDER (
    ID                D_INT_IDEN,
    PRICELISTHEAD_ID  D_INT_IDEN,
    PARENT_ID         D_INT,
    FNAME             D_NAME,
    FOLDER_TAG        D_NAME_N
);

CREATE TABLE PRICELISTHEAD (
    ID                   D_INT_IDEN,
    PRNAME               D_NAME,
    CREATEDATE           TIMESTAMP default 'today',
    CURRENCY_CODE        D_SMALLCODE NOT NULL,
    BASEPRICETYPE        D_INT,
    ISCURRENT            D_BOOLEAN,
    INSERTSIGN           SMALLINT,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT,
    PRICE_PRECISION      INTEGER,
    CONTRACTOR_ID        D_INT
);

CREATE TABLE PRICELISTHEAD_RIGHTS (
    ID        D_INT_IDEN,
    REC_ID    D_INT_IDEN,
    GROUP_ID  D_INT_IDEN,
    RIGHTS    INTEGER
);

CREATE TABLE PRICELISTSPEC (
    ID                D_INT_IDEN,
    FOLDER_ID         D_INT_IDEN,
    CATALOG_ID        D_INT,
    PRICE             D_SUMMA,
    LASTCOST          D_SUMMA,
    SNAME             D_NAME,
    CANCELED          D_BOOLEAN,
    UNID              VARCHAR(32),
    PRICELISTHEAD_ID  D_INT_IDEN,
    ACTDATE           D_DATE NOT NULL,
    ACTDATETILL       D_DATE NOT NULL,
    INTERNALCODE      D_NAME_N
);

CREATE TABLE PRICELISTSPEC_PRICE (
    PRICELISTSPEC_ID  D_INT_IDEN,
    PRICETYPE_ID      D_INT_IDEN,
    PRICE             D_RATIO NOT NULL
);

CREATE TABLE PRICETYPE (
    ID                    D_INT_IDEN,
    CODE                  D_BIGCODE NOT NULL,
    PNAME                 D_NAME,
    USE_RELATIVE_PERCENT  D_BOOLEAN,
    RELATIVE_PERCENT      D_RATIO,
    ROUND_IN_GREATER      D_BOOLEAN,
    FORMULA               D_FORMULA
);

CREATE TABLE QC_SCRAP_REASON (
    ID    D_INT_IDEN,
    CODE  D_MEDIUMCODE,
    NAME  D_NAME
);

CREATE TABLE QC_SCRAP_TYPE (
    ID    D_INT_IDEN,
    CODE  D_MEDIUMCODE,
    NAME  D_NAME
);

CREATE TABLE REF_BANK (
    ID                 D_INT_IDEN,
    BIK                D_ACCOUNT,
    BIK_UNIQUE         D_BOOLEAN,
    NAME               D_BIGNAME,
    BRANCH             D_BIGNAME,
    COUNTRY_ID         D_INT,
    CITY_TYPE          D_NAME_N,
    CITY               D_ADDRESS,
    ADDRESS            D_ADDRESS,
    ZIP                D_ZIPCODE,
    CORR_ACC           D_ACCOUNT,
    CORR_ACC_CURRENCY  D_SMALLCODE,
    CORR_NAME          D_BIGNAME,
    CORR_ADDRESS       D_ADDRESS,
    SWIFT              D_ACCOUNT,
    IBAN               D_ADDRESS,
    BSC                D_ACCOUNT,
    PHONE              D_PHONE,
    FAX                D_PHONE,
    EMAIL              D_EMAIL,
    WWW                D_EMAIL,
    COMMENTS           D_COMMENT
);

CREATE TABLE REF_BANK_ACCOUNT (
    ID               D_INT_IDEN,
    CONTRACTOR_ID    D_INT,
    BANK_ID          D_INT,
    NAME             D_NAME_N,
    ACCOUNT_TYPE_ID  D_INT,
    CURCODE          D_SMALLCODE,
    ACCOUNT          D_ACCOUNT,
    IS_DEFAULT       D_BOOLEAN,
    UNID             VARCHAR(32)
);

CREATE TABLE REF_BANK_ACCOUNT_TYPE (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE REF_CONFIDENTIAL_DATA (
    ID          D_INT_IDEN NOT NULL,
    PARTNER_ID  D_INT_IDEN NOT NULL,
    DNAME       D_NAME NOT NULL,
    CONFDATA    BLOB SUB_TYPE 0 SEGMENT SIZE 80
);

CREATE TABLE REF_CONTRACTOR_EADDRESS (
    ID             D_INT_IDEN,
    CONTRACTOR_ID  D_INT,
    KIND_ID        D_INT,
    PROTOCOL       SMALLINT,
    ADDRESS        D_NAME_N,
    IS_ACTIVE      D_BOOLEAN
);

CREATE TABLE REF_CONTRACTOR_PHONE (
    ID             D_INT_IDEN,
    CONTRACTOR_ID  D_INT,
    AREA_CODE      D_PHONE,
    PHONE          D_PHONE,
    PHONE_KIND_ID  D_INT
);

CREATE TABLE REF_COUNTRY (
    ID                D_INT_IDEN NOT NULL,
    CCODE             D_SMALLCODE NOT NULL,
    CNAME             D_NAME NOT NULL,
    UNIVERSAL_CODE    CHAR(2),
    UNIVERSAL_ABBR    CHAR(3),
    UNIVERSAL_NUMBER  CHAR(3),
    CAPITAL           D_NAME_N,
    PHONE_CODE        VARCHAR(10),
    FULL_NAME         D_NAME_N,
    ADDRESS_RULE      D_BIGNAME,
    ADDRESS_DLM       VARCHAR(5)
);

CREATE TABLE REF_CURRENCY_RATE (
    ID                 D_INT_IDEN,
    CURRENCY_CODE1     D_SMALLCODE NOT NULL,
    CURRENCY_CODE2     D_SMALLCODE NOT NULL,
    RATE               D_RATIO NOT NULL,
    RATE_AUTHORITY_ID  D_INT NOT NULL,
    RATE_TYPE_ID       D_INT NOT NULL,
    EFFECTIVE_DATE     D_DATETIME NOT NULL
);

CREATE TABLE REF_CURRENCY_RATE_AUTHORITY (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME
);

CREATE TABLE REF_CURRENCY_RATE_TYPE (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME
);

CREATE TABLE REF_DISTRICT (
    ID         D_INT_IDEN,
    REGION_ID  D_INT,
    PREFIX     D_ADDR_PREFIX,
    NAME       D_NAME_N
);

CREATE TABLE REF_EADDRESS_KIND (
    ID    D_INT_IDEN,
    NAME  D_NAME_N
);

CREATE TABLE REF_FAMILY_MEMBER (
    ID           D_INT_IDEN NOT NULL,
    PERSON_ID    D_INT_IDEN NOT NULL,
    FNAME        D_NAME NOT NULL,
    PATRONYMIC   D_NAME NOT NULL,
    SURNAME      D_NAME NOT NULL,
    RELATION_ID  D_INT,
    BIRTHDATE    D_DATE
);

CREATE TABLE REF_FAMILY_RELATION (
    ID        D_INT_IDEN NOT NULL,
    RCODE     D_BIGCODE NOT NULL,
    PRIORITY  D_INT,
    OKIN      D_SMALLCODE
);

CREATE TABLE REF_FAMILY_STATUS (
    ID             D_INT_IDEN,
    PERSON_ID      D_INT_IDEN,
    STATUSKIND_ID  D_INT_IDEN,
    BEGINDATE      D_DATENOTNULL NOT NULL
);

CREATE TABLE REF_FAMILY_STATUS_KIND (
    ID        D_INT_IDEN,
    KCODE     D_BIGCODE NOT NULL,
    PRIORITY  D_INT,
    OKIN      D_SMALLCODE
);

CREATE TABLE REF_HOLIDAYS (
    ID      D_INT_IDEN,
    HNAME   D_NAME NOT NULL,
    HDATE   D_DATENOTNULL,
    HDAY    D_INT_IDEN,
    HMONTH  D_INT_IDEN,
    HYEAR   D_INT_IDEN
);

CREATE TABLE REF_IDENT_DOC (
    ID                   D_INT_IDEN NOT NULL,
    PERSON_ID            D_INT_IDEN NOT NULL,
    IDENTDOCKIND_ID      D_INT_IDEN NOT NULL,
    IS_BASIC             D_BOOLEAN,
    SERIES_LEFT          D_MEDIUMCODE,
    SERIES_DIVIDER       D_SMALLCODE,
    SERIES_RIGHT         D_MEDIUMCODE,
    DOCNUMBER            D_BIGCODE,
    WHO_ISSUED           D_NAME_N,
    WHEN_ISSUED          D_DATE,
    ACTIVE_TILL          D_DATE,
    CITIZENSHIP          D_NAME_N,
    ADDRESS_ID           D_INT,
    BIRTHDATE            D_DATE,
    NATIONALITY_ID       D_INT,
    BIRTHPLACE_COUNTRY   D_NAME_N,
    BIRTHPLACE_REGION    D_NAME_N,
    BIRTHPLACE_DISTRICT  D_NAME_N,
    BIRTHPLACE_CITY      D_NAME_N,
    BIRTHPLACE_OKATO     D_BIGCODE
);

CREATE TABLE REF_IDENT_DOC_KIND (
    ID              D_INT_IDEN NOT NULL,
    KCODE           D_BIGCODE NOT NULL,
    KNAME           D_NAME NOT NULL,
    LSERIES_LENGTH  D_INT,
    RSERIES_LENGTH  D_INT,
    SERIES_DIVIDER  D_SMALLCODE,
    NUMBER_LENGTH   D_INT
);

CREATE TABLE REF_KBK (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE NOT NULL,
    NAME  D_NAME_N
);

CREATE TABLE REF_MEASURE_CONV (
    ID                 D_INT_IDEN NOT NULL,
    MEASURE_FROM_ID    D_INT_IDEN NOT NULL,
    MEASURE_TO_ID      D_INT_IDEN NOT NULL,
    CATALOG_ID         D_INT,
    CONV_ALGORITHM_ID  D_INT
);

CREATE TABLE REF_NATIONALITY (
    ID     D_INT_IDEN NOT NULL,
    NNAME  D_SMALLNAME NOT NULL
);

CREATE TABLE REF_NATURAL_PERSON (
    ID               D_INT_IDEN NOT NULL,
    FOLDER_ID        D_INT_IDEN NOT NULL,
    ACT_DATE         D_DATENOTNULL NOT NULL,
    SURNAME          D_NAME,
    NAME             D_NAME_N,
    PATRONYMIC       D_NAME_N,
    BORNDATE         D_DATE,
    SEX              D_INT,
    PHOTO            D_ORIGINAL,
    INN              D_BIGCODE,
    ADDITIONAL_INFO  VARCHAR(2048),
    CODE             D_NAME_N,
    USER_ID          D_INT
);

CREATE TABLE REF_NATURAL_PERSON_HIST (
    ID          D_INT_IDEN,
    PERSON_ID   D_INT_IDEN,
    ACT_DATE    D_DATENOTNULL,
    SURNAME     D_NAME,
    NAME        D_NAME_N,
    PATRONYMIC  D_NAME_N,
    INN         D_BIGCODE
);

CREATE TABLE REF_OKATO (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE NOT NULL,
    NAME  D_NAME_N
);

CREATE TABLE REF_OKP (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_NAME_N
);

CREATE TABLE REF_ORIGINAL_DOCUMENT (
    ID          D_INT_IDEN,
    FOLDER_ID   D_INT_IDEN,
    DOCNUMBER   D_DOCNUMBER,
    DOCDATE     D_DOCDATE,
    DOCNAME     D_NAME,
    CREATEDATE  D_DATE,
    COMMENTS    D_COMMENT,
    ORIGINAL    D_ORIGINAL
);

CREATE TABLE REF_PARTN_EMPL_EMAIL (
    ID            D_INT_IDEN NOT NULL,
    PARTNEMPL_ID  D_INT_IDEN NOT NULL,
    EMAIL         D_EMAIL NOT NULL,
    IS_ACTIVE     D_BOOLEAN
);

CREATE TABLE REF_PARTN_EMPL_LINK (
    ID            D_INT_IDEN NOT NULL,
    PARTNER_ID    D_INT_IDEN NOT NULL,
    EMPLOYEES_ID  D_INT_IDEN NOT NULL,
    DATEBEGIN     D_DATE,
    DATEEND       D_DATE
);

CREATE TABLE REF_PARTN_EMPL_PHONE (
    ID            D_INT_IDEN NOT NULL,
    PARTNEMPL_ID  D_INT_IDEN NOT NULL,
    TOWNCODE      D_PHONE,
    PHONE         D_PHONELIST NOT NULL,
    PHONEKIND_ID  D_INT,
    IS_ACTIVE     D_BOOLEAN
);

CREATE TABLE REF_PERSON_ADDRESS (
    ID            D_INT_IDEN NOT NULL,
    PERSON_ID     D_INT_IDEN NOT NULL,
    ADDRESS_KIND  D_INT,
    BEGINDATE     D_DATE,
    POST_INDEX    D_MEDIUMCODE,
    COUNTRY_ID    D_INT,
    REGION        D_NAME_N,
    CITY          D_NAME_N,
    STREET        D_ADDR_STREET,
    HOUSE         D_ADDR_HOUSE,
    FULL_ADDRESS  D_BIGNAME,
    REGION_ID     D_INT,
    DISTRICT_ID   D_INT,
    PLACE_ID      D_INT,
    BUILDING      D_ADDR_BUILDING,
    ROOM          D_ADDR_ROOM,
    ZIPCODE_ID    D_INT
);

CREATE TABLE REF_PERSON_EADDRESS (
    ID         D_INT_IDEN,
    PERSON_ID  D_INT,
    KIND_ID    D_INT,
    PROTOCOL   SMALLINT,
    ADDRESS    D_NAME_N,
    IS_ACTIVE  D_BOOLEAN
);

CREATE TABLE REF_PERSON_PHONE (
    ID             D_INT_IDEN,
    PERSON_ID      D_INT_IDEN,
    PHONE          D_PHONE,
    PHONE_KIND_ID  D_INT,
    AREA_CODE      D_PHONE
);

CREATE TABLE REF_PHONE_KIND (
    ID     D_INT_IDEN NOT NULL,
    KNAME  D_NAME NOT NULL
);

CREATE TABLE REF_PLACE (
    ID           D_INT_IDEN,
    DISTRICT_ID  D_INT,
    PREFIX       D_ADDR_PREFIX,
    NAME         D_NAME_N
);

CREATE TABLE REF_REGION (
    ID          D_INT_IDEN,
    COUNTRY_ID  D_INT,
    PREFIX      D_ADDR_PREFIX,
    NAME        D_NAME_N
);

CREATE TABLE REF_ZIPCODE (
    ID           D_INT_IDEN,
    CODE         D_ZIPCODE NOT NULL,
    COUNTRY_ID   D_INT,
    REGION_ID    D_INT,
    DISTRICT_ID  D_INT,
    PLACE_ID     D_INT
);

CREATE TABLE REMNACC (
    ID              D_INT_IDEN,
    PERIOD_ID       D_INT_IDEN,
    ACC_ID          D_INT,
    REMNBEGINNATDB  D_SUMMA NOT NULL,
    REMNBEGINNATKT  D_SUMMA NOT NULL,
    REMNBEGINCURDB  D_SUMMA NOT NULL,
    REMNBEGINCURKT  D_SUMMA NOT NULL
);

CREATE TABLE REMNANL (
    ID              D_INT_IDEN,
    PERIOD_ID       D_INT_IDEN,
    ACC_ID          D_INT,
    REMNBEGINNATDB  D_SUMMA NOT NULL,
    REMNBEGINNATKT  D_SUMMA NOT NULL,
    REMNBEGINCURDB  D_SUMMA NOT NULL,
    REMNBEGINCURKT  D_SUMMA NOT NULL,
    ANLPLAN1_ID     INTEGER,
    ANLPLAN2_ID     INTEGER,
    ANLPLAN3_ID     INTEGER,
    ANLPLAN4_ID     INTEGER,
    ANLPLAN5_ID     INTEGER
);

CREATE TABLE REMNDBKT (
    ID              D_INT_IDEN NOT NULL,
    PERIOD_ID       D_INT_IDEN NOT NULL,
    ACC_ID          D_INT,
    ANLPLAN1_ID     INTEGER,
    ANLPLAN2_ID     INTEGER,
    ANLPLAN3_ID     INTEGER,
    ANLPLAN4_ID     INTEGER,
    ANLPLAN5_ID     INTEGER,
    REMNBEGINNATDB  D_SUMMA NOT NULL,
    REMNBEGINNATKT  D_SUMMA NOT NULL,
    REMNBEGINCURDB  D_SUMMA default 0,
    REMNBEGINCURKT  D_SUMMA default 0,
    RISEDEBTS       TIMESTAMP,
    CLEARDEBTS      TIMESTAMP,
    COMMENT         D_COMMENT,
    DOCBASETYPE     D_DOCTYPE,
    DOCBASENUMBER   D_DOCNUMBER,
    DOCBASEDATE     TIMESTAMP,
    DOCTYPE         D_DOCTYPE,
    DOCNUMBER       D_DOCNUMBER,
    DOCDATE         TIMESTAMP,
    CONTRACTOR_ID   D_INT
);

CREATE TABLE REMNVAL (
    ID             D_INT_IDEN NOT NULL,
    PERIOD_ID      D_INT_IDEN NOT NULL,
    ACC_ID         D_INT,
    CATALOG_ID     D_INT_IDEN NOT NULL,
    ANLPLAN1_ID    INTEGER,
    ANLPLAN2_ID    INTEGER,
    ANLPLAN3_ID    INTEGER,
    ANLPLAN4_ID    INTEGER,
    ANLPLAN5_ID    INTEGER,
    BEGINQUAN      D_MASS NOT NULL,
    REMNBEGINNAT   D_SUMMA,
    REMNBEGINCUR   D_SUMMA,
    BATCH_ID       INTEGER,
    ISREMOVE       SMALLINT,
    CONTRACTOR_ID  D_INT
);

CREATE TABLE RPT_CLASS_LINK (
    ID        D_INT_IDEN,
    RPT_ID    D_INT,
    CLASS_ID  D_INT
);

CREATE TABLE RPT_RIGHTS (
    ID        D_INT_IDEN,
    RPT_ID    D_INT_IDEN,
    GROUP_ID  D_INT_IDEN,
    RIGHTS    INTEGER
);

CREATE TABLE RPT_TEMPLATE (
    ID               D_INT_IDEN,
    RPT_ID           D_INT,
    DRV_NAME         VARCHAR(80),
    DRV_PARAMS       VARCHAR(1024),
    TEMPL            BLOB SUB_TYPE 0 SEGMENT SIZE 4096,
    TEMPL_TIMESTAMP  INTEGER,
    COMMENTS         D_COMMENT,
    AVAILABLE        D_BOOLEAN,
    PRIORITY         INTEGER
);

CREATE TABLE RPTBANDS (
    ID            D_INT_IDEN,
    CODE          D_BIGCODE NOT NULL,
    RPT_ID        D_INT_IDEN,
    PRIORITY      SMALLINT,
    PARENT_ID     INTEGER,
    PARENT_ID_NN  INTEGER,
    KIND          SMALLINT,
    ISPAGEHEADER  D_BOOLEAN,
    HIDE          D_BOOLEAN,
    ISPAGEBREAK   D_BOOLEAN
);

CREATE TABLE RPTFIELDS (
    ID              D_INT_IDEN,
    BAND_ID         D_INT_IDEN,
    QUERY_ID        D_INT,
    NAME            D_NAME_N NOT NULL,
    KIND            SMALLINT,
    MASTERBAND_ID   D_INT,
    MASTERFIELD_ID  D_INT,
    PREC            SMALLINT,
    SETNULL         D_BOOLEAN,
    FORMAT          D_FORMAT
);

CREATE TABLE RPTMAIN (
    ID                D_INT_IDEN,
    CODE              D_BIGCODE NOT NULL,
    RPTNAME           D_NAME,
    ISCOMPLEX         D_BOOLEAN,
    ASKPARAMS         D_BOOLEAN,
    CURREC            D_BOOLEAN,
    KIND              SMALLINT,
    FORMNAME          D_BIGCODE,
    DIRECT_PRINT      D_BOOLEAN NOT NULL,
    COMMENT           D_COMMENT,
    FOLDER_ID         D_INT,
    SHORTCUT          INTEGER,
    INVOKE_FROM_EDIT  D_BOOLEAN
);

CREATE TABLE RPTPARAMS (
    ID             D_INT_IDEN,
    RPT_ID         D_INT_IDEN,
    NAME           D_BIGCODE,
    LABEL          D_COMMENT,
    MASTERBAND_ID  D_INT,
    META           D_BOOLEAN NOT NULL,
    META_ID        D_INT,
    PRIORITY       SMALLINT,
    PTYPE          SMALLINT,
    CLASS_ID       D_INT,
    REQUIRED       D_BOOLEAN,
    ENUMVALUES     D_RPT_ENUMVALUES
);

CREATE TABLE RPTQUERIES (
    ID            D_INT_IDEN,
    BAND_ID       D_INT_IDEN,
    QUERY         D_QUERY,
    CODE          D_BIGCODE,
    DELAY         INTEGER,
    IS_ALGORITHM  D_BOOLEAN,
    ALG_ID        D_INT
);

CREATE TABLE RTL_INVOICEHEAD (
    ID                D_INT_IDEN,
    DOCHEAD_ID        D_INT,
    SUMCUR_DISCOUNT   D_SUMMA,
    SUMNAT_DISCOUNT   D_SUMMA,
    DISCOUNT_ON_DOC   D_RATIO,
    DISCOUNT_ON_LINE  D_RATIO,
    DISCOUNTCARD_ID   D_INT,
    EXTRADISCOUNT_ID  D_INT,
    COMMENTS          D_COMMENT,
    SHIPPER           D_INT,
    CONSIGNEE         D_INT,
    RESPONSIBLE       D_INT,
    CONSUMER          D_INT,
    PLANPAYDATE       D_DATE,
    PAYDATE           D_DATE,
    PAYSUM            D_SUMMA,
    BASE_DISCOUNT     D_RATIO,
    PLANSHIPDATE      D_DATE,
    APPLY_DIS_KIND    INTEGER
);

CREATE TABLE RTL_INVOICEHEADMODEL (
    ID                D_INT_IDEN,
    DOCHEADMODEL_ID   D_INT,
    SUMCUR_DISCOUNT   D_SUMMA,
    SUMNAT_DISCOUNT   D_SUMMA,
    DISCOUNT_ON_DOC   D_RATIO,
    DISCOUNT_ON_LINE  D_RATIO,
    DISCOUNTCARD_ID   D_INT,
    EXTRADISCOUNT_ID  D_INT,
    COMMENTS          D_COMMENT,
    SHIPPER           D_INT,
    CONSIGNEE         D_INT,
    RESPONSIBLE       D_INT,
    CONSUMER          D_INT,
    PLANPAYDATE       D_DATE,
    PAYDATE           D_DATE,
    PAYSUM            D_SUMMA,
    BASE_DISCOUNT     D_RATIO,
    PLANSHIPDATE      D_DATE,
    APPLY_DIS_KIND    INTEGER
);

CREATE TABLE RTL_INVOICESPEC (
    ID              D_INT_IDEN,
    DOCSPEC_ID      D_INT,
    DISCOUNT        D_RATIO,
    PRICE_DISCOUNT  D_SUMMA,
    SUM_DISCOUNT    D_SUMMA,
    DOC_DISCOUNT    D_RATIO
);

CREATE TABLE SAL_CALC_LIST (
    ID                D_INT_IDEN,
    PAY_ROLL_ID       D_INT_IDEN,
    POSITION_FILL_ID  D_INT_IDEN,
    NEED_PARAMS       D_BOOLEAN,
    IS_CALCULATED     D_BOOLEAN,
    TOTAL_SUMMA       D_SUMMA,
    POSITIVE_SUMMA    D_SUMMA,
    NEGATIVE_SUMMA    D_SUMMA,
    NEUTRAL_SUMMA     D_SUMMA,
    IS_CLOSED         D_BOOLEAN
);

CREATE TABLE SAL_CALC_LIST_FEE (
    ID                    D_INT_IDEN,
    CALC_LIST_SECTION_ID  D_INT_IDEN,
    FEE_MODEL_ID          D_INT,
    BEGINDATE             D_DATE,
    ENDDATE               D_DATE,
    PERIOD_BEGINDATE      D_DATE,
    PERIOD_ENDDATE        D_DATE,
    SUMMA                 D_SUMMA,
    NEED_PARAMS           D_BOOLEAN,
    COSTS_ANL1_ID         D_INT,
    COSTS_ANL2_ID         D_INT,
    COSTS_ANL3_ID         D_INT,
    COSTS_ANL4_ID         D_INT,
    COSTS_ANL5_ID         D_INT,
    IS_CALCULATED         D_BOOLEAN,
    DONT_RECALC           D_BOOLEAN
);

CREATE TABLE SAL_CALC_LIST_FEE_PARAM (
    ID                D_INT_IDEN,
    CALC_LIST_FEE_ID  D_INT_IDEN,
    FEE_REF_PARAM_ID  D_INT_IDEN,
    PARAM_VALUE       D_FEATURE
);

CREATE TABLE SAL_CALC_LIST_SECTION (
    ID                        D_INT_IDEN,
    CALC_LIST_ID              D_INT_IDEN,
    CALC_LIST_SECTION_REF_ID  D_INT_IDEN,
    TOTAL_SUMMA               D_SUMMA
);

CREATE TABLE SAL_CALC_LIST_SECTION_REF (
    ID        D_INT_IDEN,
    SNAME     D_NAME,
    PRIORITY  D_INT,
    SUM_SIGN  D_SHORT
);

CREATE TABLE SAL_DISCOUNTKIND (
    ID               D_INT_IDEN NOT NULL,
    DCODE            D_BIGCODE NOT NULL,
    DNAME            D_NAME NOT NULL,
    MINSALARYNUMBER  D_QUANTITY,
    FIXEDSUM         D_SUMMA,
    BEGINDATE        D_DATENOTNULL NOT NULL,
    ACTIONPERIOD     D_QUANTITY,
    IS_ACCUMULATING  D_BOOLEAN
);

CREATE TABLE SAL_FEE_MODEL (
    ID                  D_INT_IDEN,
    FEE_REF_ID          D_INT_IDEN,
    PERSONALACCOUNT_ID  D_INT_IDEN,
    BEGINDATE           D_DATE,
    ENDDATE             D_DATE,
    SUMMA               D_SUMMA,
    ROLL_KIND_ID        D_INT,
    POSITIONFILL_ID     D_INT,
    USE_BASIC_POSITION  D_BOOLEAN,
    COSTS_ANL1_ID       D_INT,
    COSTS_ANL2_ID       D_INT,
    COSTS_ANL3_ID       D_INT,
    COSTS_ANL4_ID       D_INT,
    COSTS_ANL5_ID       D_INT,
    CALC_PERIOD_ID      D_INT
);

CREATE TABLE SAL_FEE_MODEL_PARAM (
    ID                D_INT_IDEN,
    FEE_MODEL_ID      D_INT_IDEN,
    FEE_REF_PARAM_ID  D_INT_IDEN,
    PARAM_VALUE       D_FEATURE
);

CREATE TABLE SAL_FEE_REF (
    ID                     D_INT_IDEN,
    CALCLISTSECTIONREF_ID  D_INT_IDEN,
    GNSCODE_ID             D_INT,
    CALC_ALG_ID            D_INT,
    FEE_TYPE               D_SHORT,
    FCODE                  D_BIGCODE NOT NULL,
    FNAME                  D_NAME_N,
    PRIORITY               D_INT,
    SUM_SIGN               D_SHORT,
    BEGINDATE              D_DATE,
    ENDDATE                D_DATE,
    PERIODICITY            D_SHORT,
    COSTS_ANL1_ID          D_INT,
    COSTS_ANL2_ID          D_INT,
    COSTS_ANL3_ID          D_INT,
    COSTS_ANL4_ID          D_INT,
    COSTS_ANL5_ID          D_INT,
    ROLL_KIND_ID           D_INT,
    INCOME_KIND_ID         D_INT,
    IS_ZERO_INCLUDED       D_BOOLEAN
);

CREATE TABLE SAL_FEE_REF_PARAM (
    ID           D_INT_IDEN,
    FEE_REF_ID   D_INT_IDEN,
    PCODE        D_BIGCODE NOT NULL,
    PNAME        D_NAME_N,
    CALC_ALG_ID  D_INT,
    PRIORITY     D_INT,
    PARAM_TYPE   D_SHORT,
    CALC_ONCE    D_BOOLEAN
);

CREATE TABLE SAL_FEE_SUMMARY_HEAD (
    ID           D_INT_IDEN,
    DOCHEAD_ID   D_INT_IDEN,
    PAY_ROLL_ID  D_INT
);

CREATE TABLE SAL_FEE_SUMMARY_SPEC (
    ID             D_INT_IDEN,
    DOCSPEC_ID     D_INT_IDEN,
    COSTS_ANL1_ID  D_INT,
    COSTS_ANL2_ID  D_INT,
    COSTS_ANL3_ID  D_INT,
    COSTS_ANL4_ID  D_INT,
    COSTS_ANL5_ID  D_INT
);

CREATE TABLE SAL_GNS_CODE (
    ID           D_INT_IDEN,
    CODE         D_MEDIUMCODE,
    DESCRIPTION  D_COMMENT
);

CREATE TABLE SAL_INCLUDED_FEE (
    ID               D_INT_IDEN,
    FEE_REF_ID       D_INT_IDEN,
    INCLUDED_FEE_ID  D_INT_IDEN,
    SUM_SIGN         D_SHORT
);

CREATE TABLE SAL_INCOMEKIND (
    ID         D_INT_IDEN NOT NULL,
    ICODE      D_BIGCODE NOT NULL,
    INAME      D_NAME NOT NULL,
    BEGINDATE  D_DATENOTNULL NOT NULL
);

CREATE TABLE SAL_MINSALARY (
    ID         D_INT_IDEN NOT NULL,
    BEGINDATE  D_DATENOTNULL NOT NULL,
    MINSALARY  D_SUMMA NOT NULL
);

CREATE TABLE SAL_PAY_ROLL (
    ID              D_INT_IDEN,
    ROLL_KIND_ID    D_INT_IDEN,
    CALC_PERIOD_ID  D_INT_IDEN,
    RNUMBER         D_BIGCODE NOT NULL,
    RNAME           D_NAME_N,
    DOCTYPE         D_DOCTYPE,
    DOCNUMBER       D_DOCNUMBER,
    DOCDATE         D_DOCDATE,
    COMMENTS        D_COMMENT,
    CALC_BEGINDATE  D_DATE,
    CALC_ENDDATE    D_DATE
);

CREATE TABLE SAL_PAY_SHEET (
    ID             D_INT_IDEN,
    PAY_ROLL_ID    D_INT,
    SNUMBER        D_BIGCODE,
    BEGINDATE      D_DATE,
    ENDDATE        D_DATE,
    DOCHEAD_ID     D_INT,
    CHIEF_ID       D_INT,
    BOOKKEEPER_ID  D_INT,
    CASHIER_ID     D_INT,
    SUMMA_FULL     D_SUMMA,
    INDOCHEAD_ID   D_INT
);

CREATE TABLE SAL_PAY_SHEET_SPEC (
    ID                D_INT_IDEN,
    PAY_SHEET_ID      D_INT_IDEN,
    POSITION_FILL_ID  D_INT_IDEN,
    SUMMA_FULL        D_SUMMA,
    SUMMA_PAID_OUT    D_SUMMA,
    SUMMA_DEPOSITED   D_SUMMA,
    SUMMA_REST        D_SUMMA
);

CREATE TABLE SAL_PERSONAL_ACCOUNT (
    ID            D_INT_IDEN,
    PERSONNEL_ID  D_INT_IDEN,
    ANUMBER       D_BIGCODE,
    BEGINDATE     D_DATE,
    ENDDATE       D_DATE
);

CREATE TABLE SAL_POSITION_FILL (
    ID                     D_INT_IDEN,
    PERSONALACCOUNT_ID     D_INT_IDEN,
    POSITION_ID            D_INT_IDEN,
    SL_POSITION_UNIQUE_ID  D_BIGCODE NOT NULL,
    POSITIONFILLKIND_ID    D_INT,
    BEGINDATE              D_DATE,
    ENDDATE                D_DATE,
    DOCTYPE                D_DOCTYPE,
    DOCNUMBER              D_DOCNUMBER,
    DOCDATE                D_DOCDATE,
    RATE_NUMBER            D_RATIO,
    IS_BASIC               D_BOOLEAN
);

CREATE TABLE SAL_REPLACED_FEE (
    ID               D_INT_IDEN,
    FEE_REF_ID       D_INT_IDEN,
    REPLACED_FEE_ID  D_INT_IDEN
);

CREATE TABLE SAL_ROLL_KIND (
    ID     D_INT_IDEN,
    KNAME  D_NAME
);

CREATE TABLE SAL_TARIFFING_IN_FEE (
    ID                     D_INT_IDEN,
    FEE_REF_ID             D_INT_IDEN,
    TARIFFING_CATEGORY_ID  D_INT_IDEN
);

CREATE TABLE SAL_TAXHEAD (
    ID     D_INT_IDEN NOT NULL,
    TNAME  D_NAME NOT NULL,
    TCODE  D_BIGCODE NOT NULL
);

CREATE TABLE SAL_TAXRATE (
    ID              D_INT_IDEN NOT NULL,
    TAXSCALE_ID     D_INT_IDEN NOT NULL,
    RNUMBER         D_INT_IDEN NOT NULL,
    MININCOME       D_SUMMA,
    MAXINCOME       D_SUMMA,
    TAX_PERCENT     D_RATIO,
    CONSTVALUE      D_SUMMA,
    PRIVILEGERATIO  D_RATIO
);

CREATE TABLE SAL_TAXSCALE (
    ID          D_INT_IDEN NOT NULL,
    TAXHEAD_ID  D_INT_IDEN NOT NULL,
    SNUMBER     D_INT_IDEN NOT NULL,
    BEGINDATE   D_DATENOTNULL NOT NULL,
    TAXPAYER    D_INT,
    SNAME       D_NAME_N
);

CREATE TABLE SALEBOOK (
    ID                      D_INT_IDEN,
    FOLDER_ID               D_INT_IDEN,
    DOCUMENT_ID             D_INT,
    DOCTYPE                 D_DOCTYPE,
    DOCNUMBER               D_DOCNUMBER,
    DOCDATE                 D_DOCDATE,
    INSERTDATE              D_DATE,
    PAYDATE                 D_DATE,
    TOTALSUM                D_SUMMA,
    SUM_WITHOUT_NDS1        D_SUMMA,
    SUM_WITHOUT_NDS2        D_SUMMA,
    NDS1_SUM                D_SUMMA,
    NDS2_SUM                D_SUMMA,
    NOT_TAXABLE_SUM         D_SUMMA,
    NOT_TAXABLE_EXPORT_SUM  D_SUMMA,
    NSP_SUM                 D_SUMMA,
    CUSTOMER_ID             D_INT,
    ORGUNIT_ID              D_INT,
    SUM_WITHOUT_NDS3        D_SUMMA,
    NDS3_SUM                D_SUMMA
);

CREATE TABLE SCH_TASK (
    ID            D_INT_IDEN,
    FOLDER_ID     D_INT_IDEN NOT NULL,
    CODE          D_BIGCODE NOT NULL,
    NAME          D_NAME NOT NULL,
    ALGORITHM_ID  D_INT_IDEN,
    DESCRIPTION   D_COMMENT
);

CREATE TABLE SEC_GROUPS (
    ID    D_INT_IDEN NOT NULL,
    NAME  D_NAME NOT NULL
);

CREATE TABLE SEC_LINK_USERS_GROUPS (
    ID        D_INT_IDEN NOT NULL,
    USER_ID   D_INT_IDEN NOT NULL,
    GROUP_ID  D_INT_IDEN NOT NULL
);

CREATE TABLE SEC_METHOD_ACCESS (
    ID          D_INT_IDEN,
    GROUP_ID    D_INT_IDEN,
    METHOD_ID   D_INT_IDEN,
    PERMISSION  D_BOOLEAN NOT NULL
);

CREATE TABLE SEC_MODULE_ACCESS (
    ID         D_INT_IDEN NOT NULL,
    MODULE_ID  D_INT_IDEN NOT NULL,
    GROUP_ID   D_INT_IDEN NOT NULL
);

CREATE TABLE SEC_USER_PROFILE (
    ID            D_INT_IDEN,
    USER_ID       D_INT_IDEN,
    PROFILE_TYPE  SMALLINT NOT NULL
);

CREATE TABLE SEC_USER_PROFILE_ITEM (
    ID          D_INT_IDEN,
    PROFILE_ID  D_INT_IDEN,
    CODE        VARCHAR(80) NOT NULL,
    CHECK_SUM   INTEGER,
    DATA        BLOB SUB_TYPE 0 SEGMENT SIZE 80
);

CREATE TABLE SEC_USERS (
    ID                  D_INT_IDEN NOT NULL,
    NAME                D_USERNAME NOT NULL,
    FULLNAME            D_NAME,
    PASSW               D_PASSWORD NOT NULL,
    ACTIVE_FLAG         D_BOOLEAN,
    SMART_CARD_ONLY     D_BOOLEAN,
    EMAIL               D_EMAIL,
    MOBILE              D_PHONE,
    PAGER               D_PHONE,
    USE_REMOTE_PROFILE  D_BOOLEAN,
    USER_TYPE           SMALLINT
);

CREATE TABLE SETOFGOOD (
    ID            D_INT_IDEN NOT NULL,
    GOOD_ID       D_INT_IDEN NOT NULL,
    COMPONENT_ID  D_INT_IDEN NOT NULL,
    QUANTITY      D_RATIO NOT NULL,
    PRICERELATE   D_RATIO
);

CREATE TABLE SPECMARK (
    UPCODE  D_BIGCODE NOT NULL,
    CODE    D_BIGCODE NOT NULL,
    SMNAME  D_NAME NOT NULL
);

CREATE TABLE STL_CONFIG (
    BASE_CURRENCY          D_SMALLCODE,
    NAT_CURRENCY           D_SMALLCODE,
    CURRENCY_PREC          INTEGER,
    CUR_RATE_TYPE_ID       D_INT,
    CUR_RATE_AUTHORITY_ID  D_INT
);

CREATE TABLE STOCKBATCH (
    ID             D_INT_IDEN,
    STOCKCARD_ID   D_INT_IDEN,
    BEGINQUAN      D_QUANTITY_EXT default 0,
    ENDQUAN        D_QUANTITY_EXT default 0,
    PRICENAT       D_SUMMA_EXT default 0,
    PRICECUR       D_SUMMA_EXT default 0,
    CURRENCY_CODE  D_SMALLCODE,
    DOCTYPE        D_DOCTYPE,
    DOCNUMBER      D_DOCNUMBER,
    DOCDATE        D_DOCDATE,
    CREATEDATE     D_DATE default 'today',
    BESTBEFORE     D_DATETIME,
    CONTRACTOR_ID  D_INT,
    NUMBER_LOT     VARCHAR(50),
    VENDOR_LOT     VARCHAR(50),
    CERTIFICATE    VARCHAR(80),
    COMMENT        D_COMMENT,
    BEGINQUAN2     D_QUANTITY_EXT DEFAULT 0,
    ENDQUAN2       D_QUANTITY_EXT DEFAULT 0,
    OWNER_ID       D_INT,
    STOCK_KIND_ID  D_INT
);

CREATE TABLE STOCKBATCHHISTORY (
    ID                      D_INT_IDEN,
    STOCKBATCH_ID           D_INT_IDEN,
    DATETIME                D_DATE default 'now',
    KIND                    D_STOCKBATCHHISTORY_KIND NOT NULL,
    DOCUMENT_ID             D_INT_IDEN,
    DOCUMENTSPEC_ID         D_INT_IDEN,
    QUANTITY                D_QUANTITY_EXT default 0,
    PREV_STOCKBATCHHIST_ID  D_INT,
    PROCESSDATE             TIMESTAMP,
    QUANTITY2               D_QUANTITY_EXT DEFAULT 0
);

CREATE TABLE STOCKCARD (
    ID           D_INT_IDEN,
    STOCK_ID     D_INT_IDEN,
    MOL_ID       D_INT,
    CATALOG_ID   D_INT_IDEN,
    CARDNUMBER   D_DOCNUMBER,
    SUPPLYNORM   D_MASS default 0,
    RESERVE      D_MASS default 0,
    QUANTITY     D_QUANTITY_EXT default 0,
    PLAN_IN      D_MASS default 0,
    PLAN_OUT     D_MASS default 0,
    SUPPLYNORM2  D_QUANTITY DEFAULT 0,
    RESERVE2     D_QUANTITY DEFAULT 0,
    QUANTITY2    D_QUANTITY_EXT DEFAULT 0,
    PLAN_IN2     D_QUANTITY DEFAULT 0,
    PLAN_OUT2    D_QUANTITY DEFAULT 0
);

CREATE TABLE STOCKDOCUMENTHEAD (
    ID                      D_INT_IDEN,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    DOCHEAD_ID              D_INT
);

CREATE TABLE STOCKDOCUMENTHEADMODEL (
    ID                      D_INT_IDEN,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    DOCHEADMODEL_ID         D_INT
);

CREATE TABLE STOCKDOCUMENTSPEC (
    ID                   D_INT_IDEN,
    COST                 D_SUMMA,
    DISCOUNT             D_RATIO,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    DOCSPEC_ID           D_INT,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE STOCKDOCUMENTSPECMODEL (
    ID                   D_INT_IDEN,
    COST                 D_SUMMA,
    DISCOUNT             D_RATIO,
    DOCSPEC_ID           D_INT,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE STOCKPLANHISTORY (
    ID            D_INT_IDEN,
    STOCKCARD_ID  D_INT_IDEN,
    KIND          SMALLINT NOT NULL,
    DIRECTION     SMALLINT default 0 NOT NULL,
    PROCESSDATE   D_DATE,
    SYSDATETIME   D_DATE DEFAULT 'NOW',
    QUANTITY      D_MASS,
    DOCHEAD_ID    D_INT_IDEN NOT NULL,
    DOCSPEC_ID    D_INT_IDEN NOT NULL,
    QUANTITY2     D_QUANTITY
);

CREATE TABLE STRINGS (
    SECTION  D_INT_IDEN,
    VAL      D_INT_IDEN,
    TEXT     D_NAME
);

CREATE TABLE SYS_AUDIT (
    ID           D_BIG_INT_IDEN NOT NULL,
    USER_ID      D_INT_IDEN NOT NULL,
    TIME_STAMP   D_DATETIME NOT NULL,
    SENDER       D_BEAN_NAME NOT NULL,
    AUDIT_EVENT  D_AUDIT_EVENT NOT NULL,
    OPERATION    VARCHAR(100) COLLATE PXW_CYRL,
    DETAILS      D_DESCRIPTION,
    REC_KEY      D_BIGCODE
);

CREATE TABLE SYS_CLASS (
    ID           D_INT_IDEN,
    MODULE_ID    D_INT,
    BEAN_NAME    D_BEAN_NAME,
    DESCRIPTION  D_COMMENT,
    TRG_INIT     D_INT,
    TRG_CREATE   D_INT,
    TRG_STORE    D_INT,
    TRG_REMOVE   D_INT
);

CREATE TABLE SYS_METHOD (
    ID           D_INT_IDEN,
    CLASS_ID     D_INT,
    CORBA_NAME   D_NAME_N,
    DESCRIPTION  D_NAME_N
);

CREATE TABLE SYS_MODULE (
    ID             D_INT_IDEN NOT NULL,
    NAME           D_NAME NOT NULL,
    DESCRIPTION    VARCHAR(100),
    MAJOR_VERSION  SMALLINT,
    MINOR_VERSION  SMALLINT,
    "RELEASE"      SMALLINT
);

CREATE TABLE SYSTEMCONFIG (
    MAJOR_VERSION      SMALLINT NOT NULL,
    MINOR_VERSION      SMALLINT NOT NULL,
    "RELEASE"          SMALLINT NOT NULL,
    BASE_CURRENCY      D_SMALLCODE,
    NATIONAL_CURRENCY  D_SMALLCODE,
    USE_ANALITIC_LINK  D_BOOLEAN,
    RECURSE_FOLDER     D_BOOLEAN,
    RECURSE_CATFOLDER  D_BOOLEAN,
    RECURSE_ORGUNIT    D_BOOLEAN,
    DELAYS_ON          D_BOOLEAN,
    CURRENCY_PREC      SMALLINT,
    DEFER_REMNACC      D_BOOLEAN NOT NULL,
    LOG_V1_DOC_DEL     D_BOOLEAN NOT NULL,
    LOG_V1_ROLLBACK    D_BOOLEAN NOT NULL,
    LOG_V1_PARTNER     D_BOOLEAN,
    LOG_V1_CATALOG     D_BOOLEAN
);

CREATE TABLE TAB_CONFIG (
    ID                    D_INT_IDEN,
    WORK_TIME_KIND_ID     D_INT,
    HOLIDAY_TIME_KIND_ID  D_INT
);

CREATE TABLE TAB_PATTERN_HEAD (
    ID            D_INT_IDEN,
    PCODE         D_BIGCODE NOT NULL,
    PNAME         D_NAME_N,
    DURATION      D_INT_IDEN,
    PATTERN_KIND  D_SHORT
);

CREATE TABLE TAB_PATTERN_SPEC (
    ID               D_INT_IDEN,
    PATTERN_HEAD_ID  D_INT_IDEN,
    TIME_KIND_ID     D_INT_IDEN,
    DAY_NUMBER       D_INT_IDEN,
    HOURS_QUANTITY   D_QUANTITY
);

CREATE TABLE TAB_SCHEDULE_HEAD (
    ID                         D_INT_IDEN,
    WORK_SCHEDULE_ID           D_INT_IDEN,
    DEFAULT_PATTERN_HEAD_ID    D_INT,
    HOLIDAY_ACCOUNT_KIND       D_SHORT,
    HOLIDAY_WORK_TIME_KIND_ID  D_INT,
    PREHOLIDAY_REDUCTION       D_QUANTITY
);

CREATE TABLE TAB_SCHEDULE_SPEC (
    ID                D_INT_IDEN,
    SCHEDULE_HEAD_ID  D_INT_IDEN,
    TIME_KIND_ID      D_INT_IDEN,
    HOURS_QUANTITY    D_QUANTITY,
    SCHEDULE_DATE     D_DATENOTNULL
);

CREATE TABLE TAB_TIME_BOARD_HEAD (
    ID              D_INT_IDEN,
    CALC_PERIOD_ID  D_INT_IDEN,
    BNUMBER         D_BIGCODE,
    COMMENTS        D_COMMENT
);

CREATE TABLE TAB_TIME_BOARD_POSITION (
    ID                  D_INT_IDEN,
    TIME_BOARD_HEAD_ID  D_INT_IDEN,
    STAFF_LIST_UNIT_ID  D_INT_IDEN,
    POSITION_FILL_ID    D_INT_IDEN
);

CREATE TABLE TAB_TIME_BOARD_SPEC (
    ID                      D_INT_IDEN,
    TIME_BOARD_POSITION_ID  D_INT_IDEN,
    TIME_KIND_ID            D_INT_IDEN,
    HOURS_QUANTITY          D_QUANTITY,
    TIME_BOARD_DATE         D_DATENOTNULL
);

CREATE TABLE TAB_TIME_KIND (
    ID                D_INT_IDEN,
    KCODE             D_BIGCODE NOT NULL,
    KNAME             D_NAME_N,
    PRIORITY          D_INT,
    IS_WHOLE_DAY      D_BOOLEAN,
    MNEMOCODE         D_SMALLCODE,
    FONT_COLOR        INTEGER,
    BACKGROUND_COLOR  INTEGER
);

CREATE TABLE TAX (
    ID              D_INT_IDEN,
    UPCODE          D_BIGCODE NOT NULL,
    CODE            D_BIGCODE NOT NULL,
    TNAME           D_NAME NOT NULL,
    ACTIVEDATE      D_DATE default 'today',
    TAXTYPE         SMALLINT NOT NULL,
    TAXFORM         SMALLINT NOT NULL,
    INCLUDED        D_BOOLEAN NOT NULL,
    DIRECTRATE      D_RATIO NOT NULL,
    INVERSERATE     D_RATIO NOT NULL,
    SUMM            D_SUMMA default 0,
    DEACTIVATEDATE  D_DATE
);

CREATE TABLE TAXGROUP (
    ID      D_INT_IDEN,
    CODE    D_BIGCODE,
    TGNAME  D_NAME
);

CREATE TABLE TAXLINK (
    TAXGROUP_ID  D_INT_IDEN,
    TAX_ID       D_INT_IDEN,
    FEEORDER     SMALLINT NOT NULL,
    ID           INTEGER NOT NULL
);

CREATE TABLE TAXSUM_BUF (
    SPECIFICATION_ID  D_INT,
    TAX_ID            D_INT,
    SUMM              D_SUMMA
);

CREATE TABLE TAXSUMM (
    ID                D_INT_IDEN,
    SECTIONDOC        SMALLINT,
    SPECIFICATION_ID  D_INT_IDEN,
    TAX_ID            D_INT_IDEN,
    SUMM              D_SUMMA default 0,
    PRICE             D_SUMMA
);

CREATE TABLE TURNONESFEATURES (
    ID           D_INT_IDEN,
    USERNAME     D_USERNAME default user,
    ACCDB_CODE   D_BIGCODE,
    ACCKT_CODE   D_BIGCODE,
    ANLDB1_ID    D_INT,
    ANLDB2_ID    D_INT,
    ANLDB3_ID    D_INT,
    ANLDB4_ID    D_INT,
    ANLDB5_ID    D_INT,
    ANLKT1_ID    D_INT,
    ANLKT2_ID    D_INT,
    ANLKT3_ID    D_INT,
    ANLKT4_ID    D_INT,
    ANLKT5_ID    D_INT,
    FEATURE1_ID  D_INT,
    FEATURE2_ID  D_INT,
    FEATURE3_ID  D_INT,
    FEATURE4_ID  D_INT,
    FEATURE5_ID  D_INT,
    ORGUNIT_ID   D_INT,
    SUMMNAT      D_SUMMA,
    SUMMCUR      D_SUMMA,
    OPERDATE     D_DATE,
    TOTAL_SIGN   SMALLINT
);

CREATE TABLE TYPEDOC (
    ID                 D_INT_IDEN,
    UPCODE             D_DOCTYPE NOT NULL,
    CODE               D_DOCTYPE,
    TDNAME             D_NAME,
    NUMBERING_ALG_ID   D_INT,
    DOC_PROCESS_GRAPH  BLOB SUB_TYPE 0 SEGMENT SIZE 512,
    SOLID_DOC_PROCESS  D_BOOLEAN,
    RPT_ID             D_INT
);

CREATE TABLE WF_ACTIVITY (
    ID               D_INT_IDEN NOT NULL,
    WF_PROCESS_ID    D_INT_IDEN NOT NULL,
    MODEL_ID         D_INT_IDEN,
    WORKFLOW_STATE   D_WORKFLOW_STATE NOT NULL,
    WHILE_OPEN       D_WF_WHILE_OPEN,
    WHY_NOT_RUNNING  D_WF_WHY_NOT_RUNNING,
    WHY_SUSPENDED    D_WF_WHY_SUSPENDED,
    HOW_CLOSED       D_WF_HOW_CLOSED,
    ANAME            D_NAME NOT NULL,
    AKEY             D_BIGCODE NOT NULL,
    PRIORITY         D_WF_PRIORITY NOT NULL,
    DESCRIPTION      D_COMMENT,
    LAST_STATE_TIME  D_WF_TIME NOT NULL
);

CREATE TABLE WF_ACTIVITY_MODEL (
    ID                       D_INT_IDEN NOT NULL,
    WF_PROCESS_MGR_ID        D_INT_IDEN NOT NULL,
    AMNAME                   D_NAME NOT NULL,
    AMKEY                    D_BIGCODE NOT NULL,
    PRIORITY                 D_WF_PRIORITY NOT NULL,
    DESCRIPTION              D_COMMENT,
    SUBPROCESS_MGR_ID        D_INT,
    ENTRY_THROUGH_AND        D_BOOLEAN,
    COORX                    D_INT,
    COORY                    D_INT,
    ASSIGNMENT_ALGORITHM_ID  D_INT,
    EXECUTION_ALGORITHM_ID   D_INT,
    ROLLBACK_ALGORITHM_ID    D_INT,
    EMAIL_NOTIFICATION       D_BOOLEAN,
    MOBILE_NOTIFICATION      D_BOOLEAN,
    PAGER_NOTIFICATION       D_BOOLEAN
);

CREATE TABLE WF_ASSIGNMENT (
    ID              D_INT_IDEN NOT NULL,
    WF_ACTIVITY_ID  D_INT_IDEN NOT NULL,
    WF_RESOURCE_ID  D_INT_IDEN NOT NULL,
    COMMENT         D_COMMENT
);

CREATE TABLE WF_AUDIT (
    ID               D_INT_IDEN NOT NULL,
    TIME_STAMP       D_WF_TIME NOT NULL,
    EVENT_TYPE       D_WF_EVENT NOT NULL,
    PROCESS_ID       D_INT_IDEN NOT NULL,
    ACTIVITY_ID      D_INT,
    P_ACTIVITY_ID    D_INT,
    NEW_RESOURCE_ID  D_INT,
    NEW_STATE        D_WF_STATE_STR
);

CREATE TABLE WF_AVAILABLE_RESOURCE (
    ID                    D_INT_IDEN NOT NULL,
    WF_ACTIVITY_MODEL_ID  D_INT_IDEN NOT NULL,
    WF_RESOURCE_ID        D_INT_IDEN NOT NULL
);

CREATE TABLE WF_LINK_GROUP_RESOURCE (
    ID           D_INT_IDEN NOT NULL,
    GROUP_ID     D_INT_IDEN NOT NULL,
    RESOURCE_ID  D_INT_IDEN NOT NULL
);

CREATE TABLE WF_MAP_EDGE (
    ID                  D_INT_IDEN NOT NULL,
    SOURCE_ACTIVITY_ID  D_INT NOT NULL,
    DEST_ACTIVITY_ID    D_INT NOT NULL,
    DIRECTION           SMALLINT,
    DESCRIPTION         VARCHAR(100)
);

CREATE TABLE WF_PROCESS (
    ID               D_INT_IDEN NOT NULL,
    PROCESS_MGR_ID   D_INT_IDEN NOT NULL,
    REQUESTER_ID     D_INT_IDEN,
    WORKFLOW_STATE   D_WORKFLOW_STATE NOT NULL,
    WHILE_OPEN       D_WF_WHILE_OPEN,
    WHY_NOT_RUNNING  D_WF_WHY_NOT_RUNNING,
    HOW_CLOSED       D_WF_HOW_CLOSED,
    PNAME            D_NAME NOT NULL,
    PKEY             D_BIGCODE NOT NULL,
    PRIORITY         D_WF_PRIORITY NOT NULL,
    DESCRIPTION      D_COMMENT,
    LAST_STATE_TIME  D_WF_TIME NOT NULL
);

CREATE TABLE WF_PROCESS_MGR (
    ID           D_INT_IDEN NOT NULL,
    FOLDER_ID    D_INT_IDEN,
    STATE        D_PROCESSMGR_STATE NOT NULL,
    PMNAME       D_NAME NOT NULL,
    DESCRIPTION  D_COMMENT,
    CATEGORY     VARCHAR(10),
    "VERSION"    VARCHAR(10) NOT NULL,
    PRIORITY     D_WF_PRIORITY NOT NULL,
    WF_GRAPH     BLOB SUB_TYPE 0 SEGMENT SIZE 512
);

CREATE TABLE WF_REQUESTER (
    ID              D_INT_IDEN NOT NULL,
    REQUESTER_KIND  D_WF_REQUESTER_KIND NOT NULL,
    ENTITY_ID       D_INT_IDEN NOT NULL
);

CREATE TABLE WF_RESOURCE (
    ID             D_INT_IDEN NOT NULL,
    RESOURCE_NAME  D_NAME NOT NULL,
    RESOURCE_KEY   D_BIGCODE NOT NULL,
    KIND           D_WF_RESOURCE_KIND NOT NULL
);

CREATE TABLE WF_RESULT (
    ID           D_BIG_INT_IDEN NOT NULL,
    PROCESS_ID   D_INT NOT NULL,
    ACTIVITY_ID  D_INT,
    THE_NAME     D_BIGCODE NOT NULL,
    THE_VALUE    D_WF_PROCESS_RESULT NOT NULL
);

CREATE TABLE WF_ROLLBACK_SEGMENT (
    ID                  D_INT_IDEN NOT NULL,
    WF_RESOURCE_ID      D_INT NOT NULL,
    WF_ACTIVITY_ID      D_INT NOT NULL,
    ITERATE             SMALLINT NOT NULL,
    COMMENT             D_COMMENT,
    CREATE_TIME         D_DATE NOT NULL,
    RESTORE_ASSIGNMENT  D_BOOLEAN NOT NULL
);

CREATE TABLE WH_BIN_LOCATION (
    ID                 D_INT_IDEN NOT NULL,
    WAREHOUSE_ID       D_INT_IDEN NOT NULL,
    CODE               D_BIGCODE NOT NULL,
    DESCRIPTION        VARCHAR(80),
    TYPE_ID            D_INT,
    ZONE_ID            D_INT,
    INFINITE_VOLUME    D_BOOLEAN,
    MAXIMUM_VOLUME     D_QUANTITY,
    VOLUME_MEASURE_ID  D_INT,
    INFINITE_WEIGHT    D_BOOLEAN,
    MAXIMUM_WEIGHT     D_QUANTITY,
    WEIGHT_MEASURE_ID  D_INT,
    INFINITE_QUAN      D_BOOLEAN,
    MAXIMUM_QUAN       D_QUANTITY,
    QUAN_MEASURE_ID    D_INT
);

CREATE TABLE WH_BIN_LOCATION_DETAIL (
    ID               D_INT_IDEN NOT NULL,
    BIN_LOCATION_ID  D_INT_IDEN NOT NULL,
    STOCKBATCH_ID    D_INT_IDEN NOT NULL,
    QUANTITY         D_QUANTITY,
    DOCSPEC_ID       D_INT,
    KIND             SMALLINT NOT NULL
);

CREATE TABLE WH_BIN_LOCATION_TYPE (
    ID    D_INT_IDEN NOT NULL,
    CODE  D_BIGCODE NOT NULL,
    NAME  D_NAME NOT NULL
);

CREATE TABLE WH_BIN_TYPE_CAP_BY_PROD (
    ID            D_INT_IDEN NOT NULL,
    TYPE_ID       D_INT_IDEN NOT NULL,
    CATALOG_ID    D_INT_IDEN NOT NULL,
    MEASURE_ID    D_INT_IDEN NOT NULL,
    MAX_QUANTITY  D_QUANTITY
);

CREATE TABLE WH_CONFIG (
    BASE_CURRENCY  D_SMALLCODE,
    NAT_CURRENCY   D_SMALLCODE,
    CURRENCY_PREC  INTEGER
);

CREATE TABLE WH_INVACT_COMMISSION (
    ID               D_INT_IDEN,
    INVENTORYACT_ID  D_INT,
    CONTRACTOR_ID    D_INT
);

CREATE TABLE WH_SECURITY (
    ID                    D_INT_IDEN NOT NULL,
    GROUP_ID              D_INT_IDEN NOT NULL,
    DISABLE_SPEC_PRICE    D_BOOLEAN,
    DISABLE_DISCOUNT      D_BOOLEAN,
    DISABLE_EXCEED_QUANT  D_DISABLE_EXCEED_QUANT
);

CREATE TABLE WH_SERIAL_NUM (
    ID                  D_INT_IDEN NOT NULL,
    BATCH_ID            D_INT_IDEN NOT NULL,
    SERIAL_NUM          D_SERIAL_NUMBER,
    INCOME_DOCSPEC_ID   D_INT,
    OUTCOME_DOCSPEC_ID  D_INT
);

CREATE TABLE WH_STOCK_KIND (
    ID    D_INT_IDEN,
    CODE  D_BIGCODE,
    NAME  D_BIGNAME
);

CREATE TABLE WH_WAREHOUSE (
    ID                  D_INT_IDEN NOT NULL,
    CONTRACTOR_ID       D_INT_IDEN NOT NULL,
    STOCKPOLICY         D_STOCKPOLICY,
    CALC_FACT           D_BOOLEAN,
    CALC_FACT_SIGN      D_BOOLEAN,
    CALC_PLAN_IN        D_BOOLEAN,
    CALC_PLAN_IN_SIGN   D_BOOLEAN,
    CALC_PLAN_OUT       D_BOOLEAN,
    CALC_PLAN_OUT_SIGN  D_BOOLEAN,
    CALC_RESERVE        D_BOOLEAN,
    CALC_RESERVE_SIGN   D_BOOLEAN,
    USE_BIN_LOCATION    D_BOOLEAN,
    BIN_SIZING          D_BOOLEAN,
    ALGORITHM_ID        D_INT
);

CREATE TABLE WH_ZONE (
    ID            D_INT_IDEN NOT NULL,
    WAREHOUSE_ID  D_INT_IDEN NOT NULL,
    CODE          D_BIGCODE NOT NULL,
    NAME          D_NAME NOT NULL
);
