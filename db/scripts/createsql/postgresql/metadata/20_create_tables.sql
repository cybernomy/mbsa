
/******************************************************************************/
/****                                Tables                                ****/
/******************************************************************************/



CREATE TABLE ACC_ACCGROUP (
    ID               D_INT_IDEN NOT NULL,
    ACCKIND_ID       D_INT_IDEN NOT NULL,
    GCODE            D_BIGCODE,
    GNAME            D_NAME NOT NULL,
    MIN_USAGEPERIOD  D_INT,
    MAX_USAGEPERIOD  D_INT,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE ACC_ACCKIND (
    ID         D_INT_IDEN NOT NULL,
    KCODE      D_BIGCODE,
    KNAME      D_NAME NOT NULL,
    PRIORITY   D_INT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE ACC_ADVANCEREPHEAD (
    DOCHEAD_ID          D_INT_IDEN,
    COMPANY_ID          D_INT,
    ACC_ID              D_INT,
    PURPOSE             D_COMMENT,
    PREVADVANCESUM      D_SUMMA,
    RECEIVED1SRC        VARCHAR(40),
    RECEIVED1DATE       D_DATE,
    RECEIVED1SUM        D_SUMMA,
    RECEIVED2SRC        VARCHAR(40),
    RECEIVED2DATE       D_DATE,
    RECEIVED2SUM        D_SUMMA,
    RECEIVED3SRC        VARCHAR(40),
    RECEIVED3DATE       D_DATE,
    RECEIVED3SUM        D_SUMMA,
    RESTDOCKIND         D_BOOLEAN,
    RESTDOC_ID          D_INT,
    RESTDOCTYPE         D_DOCTYPE,
    RESTDOCNUMBER       D_DOCNUMBER,
    RESTDOCDATE         D_DATE,
    RESTSUM             D_SUMMA,
    CHIEF_ID            D_INT,
    CHIEFACCOUNTANT_ID  D_INT,
    ACCOUNTANT_ID       D_INT,
    ATTACHEDDOCS        INTEGER,
    ATTACHEDDOCSSHEETS  INTEGER,
    COMMENTS            D_COMMENT,
    RECEIVEDSUM         D_SUMMA,
    BALANCEOROVERRUN    D_BOOLEAN
);

CREATE TABLE ACC_ADVANCEREPHEADMODEL (
    DOCHEADMODEL_ID     D_INT_IDEN,
    COMPANY_ID          D_INT,
    ACC_ID              D_INT,
    PURPOSE             D_COMMENT,
    PREVADVANCESUM      D_SUMMA,
    RECEIVED1SRC        VARCHAR(40),
    RECEIVED1DATE       D_DATE,
    RECEIVED1SUM        D_SUMMA,
    RECEIVED2SRC        VARCHAR(40),
    RECEIVED2DATE       D_DATE,
    RECEIVED2SUM        D_SUMMA,
    RECEIVED3SRC        VARCHAR(40),
    RECEIVED3DATE       D_DATE,
    RECEIVED3SUM        D_SUMMA,
    RESTDOCKIND         D_BOOLEAN,
    RESTDOC_ID          D_INT,
    RESTDOCTYPE         D_DOCTYPE,
    RESTDOCNUMBER       D_DOCNUMBER,
    RESTDOCDATE         D_DATE,
    RESTSUM             D_SUMMA,
    CHIEF_ID            D_INT,
    CHIEFACCOUNTANT_ID  D_INT,
    ACCOUNTANT_ID       D_INT,
    ATTACHEDDOCS        INTEGER,
    ATTACHEDDOCSSHEETS  INTEGER,
    COMMENTS            D_COMMENT
);

CREATE TABLE ACC_ADVANCEREPSPEC (
    DOCSPEC_ID        D_INT_IDEN,
    NUM               INTEGER,
    EXPENSEDOCNUMBER  D_DOCNUMBER,
    EXPENSEDOCDATE    D_DATE,
    EXPENSEDOCNAME    VARCHAR(256),
    EXPENSESUM        D_SUMMA,
    ACC_ID            D_INT,
    ANL1_ID           D_INT,
    ANL2_ID           D_INT,
    ANL3_ID           D_INT,
    ANL4_ID           D_INT,
    ANL5_ID           D_INT,
    CONSIDEREDSUM     D_SUMMA
);

CREATE TABLE ACC_AMCODE (
    ID         D_INT_IDEN NOT NULL,
    CODE       D_BIGCODE,
    CNAME      D_NAME NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE ACC_AMORTIZATION (
    ID             D_INT_IDEN NOT NULL,
    INVENTORY_ID   D_INT_IDEN NOT NULL,
    N_MONTHS       SMALLINT DEFAULT 0,
    BATCH          INTEGER,
    BALANCECOST    D_SUMMA,
    AMRATE         D_RATIO,
    SUM_RATE       D_SUMMA,
    EXPLPERIOD_Y   FLOAT,
    EXPLPERIOD_M   FLOAT,
    SUM_PERIOD     D_SUMMA,
    PRODUCT_EST    FLOAT,
    PRODUCT_FACT   FLOAT,
    SUM_PRODUCT    D_SUMMA,
    FACTOR         FLOAT,
    SUM_ADD        D_SUMMA,
    DEPRVALUE      D_SUMMA,
    SUM_DEPRVALUE  D_SUMMA,
    SUM_TOTAL      D_SUMMA,
    IMONTH         SMALLINT NOT NULL,
    ENDCOST        D_SUMMA,
    AMCODE_ID      D_INT,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE ACC_AMRATE (
    ID           D_INT_IDEN,
    AMCODE_ID    D_INT,
    ACTMONTH     D_INT_IDEN NOT NULL,
    AMRATE       D_RATIO,
    AMRATE1000   D_RATIO,
    PERIODYEAR   SMALLINT,
    VOLUMEPROD   D_MASS,
    PERIODMONTH  SMALLINT default 0,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE ACC_CONFIG (
    BASE_CURRENCY                 D_SMALLCODE,
    NAT_CURRENCY                  D_SMALLCODE,
    CURRENCY_PREC                 INTEGER,
    CUR_RATE_TYPE_ID              D_INT,
    CUR_RATE_AUTHORITY_ID         D_INT,
    BUYBOOK_DELIV_DOCGROUP_ID     D_INT,
    BUYBOOK_INVOICE_DOCGROUP_ID   D_INT,
    SALEBOOK_DELIV_DOCGROUP_ID    D_INT,
    SALEBOOK_INVOICE_DOCGROUP_ID  D_INT,
    SALEBOOK_AVANINV_DOCGROUP_ID  D_INT,
    SALEBOOK_KIND                 SMALLINT,
    CLIENT_ID                     D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE ACC_INVHEAD (
    ID              D_INT_IDEN,
    FOLDER_ID       D_INT_IDEN,
    PARENT_ID       INTEGER,
    GROUPNUM        CHAR(15),
    CARDNUM         CHAR(15),
    OBJNUM          CHAR(30),
    MANUFACTURER    VARCHAR(80),
    MODEL           VARCHAR(80),
    SERIALNUM       CHAR(15),
    PASSPNUM        CHAR(15),
    INOPERDOCNUM    D_DOCNUMBER,
    INOPERDATE      TIMESTAMP,
    OUTOPERDOCNUM   D_DOCNUMBER,
    OUTOPERDATE     TIMESTAMP,
    ISCOMPLEX       SMALLINT,
    ISCOMMON        SMALLINT,
    COMMENT         D_COMMENT,
    CATALOG_ID      D_INT,
    CONTRACTOR_ID   D_INT,
    INVNAME         D_BIGNAME,
    INCOMEDOCNUM    D_DOCNUMBER,
    INCOMEDATE      D_DATE,
    INVLOCATION_ID  D_INT,
    OKOF_ID         D_INT,
    PRODUCTDATE     D_DATE,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE ACC_INVPRODUCTION (
    ID          D_INT_IDEN,
    INVHEAD_ID  D_INT_IDEN NOT NULL,
    AMONTH      INTEGER,
    PRODUCTION  DOUBLE PRECISION,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE ACCBATCH (
    ID             D_INT_IDEN,
    INCOMEDATE     TIMESTAMP NOT NULL,
    INCOMECOSTNAT  D_RATIO NOT NULL,
    INCOMECOSTCUR  D_RATIO default 0,
    CATALOG_ID     D_INT_IDEN,
    DOCSECTION     SMALLINT,
    DOC_ID         INTEGER,
    DOCTYPE        D_DOCTYPE,
    DOCNUMBER      D_DOCNUMBER,
    DOCDATE        TIMESTAMP,
    BEGINQUAN      D_MASS NOT NULL,
    ENDQUAN        D_MASS default 0,
    ANLPLAN1_ID    INTEGER,
    ANLPLAN2_ID    INTEGER,
    ANLPLAN3_ID    INTEGER,
    ANLPLAN4_ID    INTEGER,
    ANLPLAN5_ID    INTEGER,
    ACC_ID         D_INT,
    CONTRACTOR_ID  D_INT,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE ACCBATCHHISTORY (
    ID           D_INT_IDEN,
    ACCBATCH_ID  D_INT_IDEN,
    BEGINDATE    TIMESTAMP NOT NULL,
    ENDDATE      TIMESTAMP,
    QUANTITY     D_MASS default 0,
    COSTNAT      D_RATIO NOT NULL,
    COSTCUR      D_RATIO default 0,
    ACTIONTYPE   SMALLINT default 0,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE ACCPLAN (
    ID             D_INT_IDEN,
    FOLDER_ID      D_INT_IDEN,
    UPACC          D_BIGCODE NOT NULL,
    ACC            D_BIGCODE NOT NULL,
    ACCNAME        D_NAME NOT NULL,
    CURRENCY_CODE  D_SMALLCODE,
    ISANL          SMALLINT NOT NULL,
    ISBAL          SMALLINT NOT NULL,
    ISWORK         SMALLINT NOT NULL,
    ANLFORM        SMALLINT NOT NULL,
    ACCTYPE        SMALLINT NOT NULL,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE ALG_CONST (
    ID           D_INT_IDEN,
    FOLDER_ID    D_INT,
    CODE         D_BIGCODE,
    DESCRIPTION  D_BIGNAME,
    DATATYPE     INTEGER,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE ALG_CONST_VAL (
    ID         D_INT_IDEN,
    CONST_ID   D_INT,
    VAL        D_CONST_VAL,
    STARTDATE  D_DATE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE ALG_CUSTOM_USER_ACTION (
    ID                D_INT_IDEN,
    CODE              D_BIGCODE NOT NULL,
    DESCRIPTION       D_COMMENT,
    CLASS_ID          D_INT_IDEN,
    ALGORITHM_ID      D_INT_IDEN,
    CAPTION           VARCHAR(80),
    HINT              VARCHAR(80),
    FROM_MENU         D_BOOLEAN,
    FROM_TOOLBAR      D_BOOLEAN,
    FORCE_REFRESH     D_BOOLEAN,
    SEPARATOR_BEFORE  D_BOOLEAN,
    SEPARATOR_AFTER   D_BOOLEAN,
    PRIORITY          SMALLINT,
    CLIENT_ID         D_INT_IDEN DEFAULT 1,
    KEY_STROKE        VARCHAR(40),
    ICON              D_JAVA_CLASS_NAME,
    IS_ACTIVE         D_BOOLEAN
);

CREATE TABLE ALG_CUSTOM_USER_ACTION_PERMISS (
    ID         D_INT_IDEN,
    ACTION_ID  D_INT_IDEN,
    ROLE_ID    D_INT_IDEN,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE ALG_REPOSITORY (
    ID           D_INT_IDEN NOT NULL,
    FOLDER_ID    D_INT_IDEN NOT NULL,
    CODE         D_LARGECODE,
    NAME         D_BIGNAME,
    ALGORITHM    D_ALGORITHM,
    ENGINE       SMALLINT,
    IMPL_NAME    D_JAVA_CLASS_NAME,
    CLIENT_ID    D_INT_IDEN DEFAULT 1,
    SYS_VERSION  D_SYS_VERSION
);

CREATE TABLE ANLPLAN (
    ID          D_INT_IDEN NOT NULL,
    ACCPLAN_ID  D_INT_IDEN,
    PARENT_ID   INTEGER,
    UPCODE      D_MEDIUMCODE NOT NULL,
    CODE        D_MEDIUMCODE NOT NULL,
    ANLNAME     D_NAME NOT NULL,
    ANLLEVEL    SMALLINT NOT NULL,
    USESTDFORM  SMALLINT NOT NULL,
    STDFORM     SMALLINT,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE BANKDOCUMENT (
    NDS1RATE             D_SUMMA,
    NDS2RATE             D_SUMMA,
    NDS1SUMMA            D_SUMMA,
    NDS2SUMMA            D_SUMMA,
    CLEARSUMMA           D_SUMMA,
    SUMMAWITHNDS1        D_SUMMA,
    SUMMAWITHNDS2        D_SUMMA,
    INOUTDATE            TIMESTAMP,
    PAYWAY               SMALLINT,
    COMMENT              D_COMMENT,
    PAYTIME              TIMESTAMP,
    PAYTURN              SMALLINT,
    PAYTARGET            D_MEDIUMCODE,
    PAYTYPE              D_MEDIUMCODE,
    PAYCODE              D_MEDIUMCODE,
    PAYERBANKREQ_ID      INTEGER,
    RECIPIENTBANKREQ_ID  INTEGER,
    DOCHEAD_ID           D_INT_IDEN,
    PAYMENTFOR           D_INT,
    RESPONSIBLE          D_INT,
    KBK                  D_BIGCODE,
    OKATO                D_BIGCODE,
    PAYMENTBASEIDX       CHAR(2),
    TAXPERIODIDX1        CHAR(2),
    TAXPERIODIDX2        CHAR(2),
    TAXPERIODIDX3        CHAR(4),
    DOCNUMBERIDX         D_DOCNUMBER,
    DOCDATEIDX           CHAR(10),
    PAYMENTTYPEIDX       CHAR(2),
    PAYERSTATUS          CHAR(2)
);

CREATE TABLE BANKDOCUMENTMODEL (
    NDS1RATE             D_SUMMA,
    NDS2RATE             D_SUMMA,
    NDS1SUMMA            D_SUMMA,
    NDS2SUMMA            D_SUMMA,
    CLEARSUMMA           D_SUMMA,
    SUMMAWITHNDS1        D_SUMMA,
    SUMMAWITHNDS2        D_SUMMA,
    INOUTDATE            TIMESTAMP,
    PAYWAY               SMALLINT,
    COMMENT              D_COMMENT,
    PAYTIME              TIMESTAMP,
    PAYTURN              SMALLINT,
    PAYTARGET            D_MEDIUMCODE,
    PAYTYPE              D_MEDIUMCODE,
    PAYCODE              D_MEDIUMCODE,
    PAYERBANKREQ_ID      INTEGER,
    RECIPIENTBANKREQ_ID  INTEGER,
    DOCHEADMODEL_ID      D_INT_IDEN,
    PAYMENTFOR           D_INT,
    RESPONSIBLE          D_INT,
    KBK                  D_BIGCODE,
    OKATO                D_BIGCODE,
    PAYMENTBASEIDX       CHAR(2),
    TAXPERIODIDX1        CHAR(2),
    TAXPERIODIDX2        CHAR(2),
    TAXPERIODIDX3        CHAR(4),
    DOCNUMBERIDX         D_DOCNUMBER,
    DOCDATEIDX           CHAR(10),
    PAYMENTTYPEIDX       CHAR(2),
    PAYERSTATUS          CHAR(2)
);

CREATE TABLE BILLHEAD (
    DOCHEAD_ID              D_INT_IDEN,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    REGISTDATE              D_DATE,
    ACCEPTANCETERM          D_INT,
    ACCEPTANCEDATE          D_DATE,
    ACCEPTANCESUM           D_SUMMA,
    PAYMENTTERM             D_INT,
    PLANPAYMENTDATEDOC      D_DATE,
    PLANPAYMENTDATE         D_DATE,
    PAYMENTDATE             D_DATE,
    PAYMENTSUM              D_SUMMA,
    ADDEXPENSESSUM          D_SUMMA,
    COMMENT                 D_DESCRIPTION,
    SHIPPER                 D_INT,
    CONSIGNEE               D_INT,
    PARTNERFROM_BANKREQ     D_INT,
    PARTNERTO_BANKREQ       D_INT,
    TOPAYDOCNUMBER          D_DOCNUMBER,
    TOPAYDOCDATE            D_DATE,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT
);

CREATE TABLE BILLHEADMODEL (
    DOCHEADMODEL_ID         D_INT_IDEN,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    REGISTDATE              D_DATE,
    ACCEPTANCETERM          D_INT,
    ACCEPTANCEDATE          D_DATE,
    ACCEPTANCESUM           D_SUMMA,
    PAYMENTTERM             D_INT,
    PLANPAYMENTDATEDOC      D_DATE,
    PLANPAYMENTDATE         D_DATE,
    PAYMENTDATE             D_DATE,
    PAYMENTSUM              D_SUMMA,
    ADDEXPENSESSUM          D_SUMMA,
    COMMENT                 D_DESCRIPTION,
    SHIPPER                 D_INT,
    CONSIGNEE               D_INT,
    PARTNERFROM_BANKREQ     D_INT,
    PARTNERTO_BANKREQ       D_INT,
    TOPAYDOCDATE            D_DATE,
    TOPAYDOCNUMBER          D_DOCNUMBER,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT
);

CREATE TABLE BILLSPEC (
    DOCSPEC_ID             D_INT_IDEN,
    DISCOUNT               D_RATIO,
    PRICE_WITH_DISCOUNT    D_SUMMA,
    SUMMA_WITH_DISCOUNT    D_SUMMA,
    COST                   D_SUMMA,
    ACCEPTANCEQUAN         D_QUANTITY,
    ACCEPTANCESUM          D_SUMMA,
    ACCEPTANCEPACKINGQUAN  D_QUANTITY,
    DOC_DISCOUNT           D_RATIO
);

CREATE TABLE BILLSPECMODEL (
    DOCSPECMODEL_ID        D_INT_IDEN,
    DISCOUNT               D_RATIO,
    PRICE_WITH_DISCOUNT    D_SUMMA,
    SUMMA_WITH_DISCOUNT    D_SUMMA,
    COST                   D_SUMMA,
    ACCEPTANCEQUAN         D_QUANTITY,
    ACCEPTANCESUM          D_SUMMA,
    ACCEPTANCEPACKINGQUAN  D_QUANTITY,
    DOC_DISCOUNT           D_RATIO
);

CREATE TABLE BUYBOOK (
    ID                D_INT_IDEN,
    FOLDER_ID         D_INT_IDEN,
    DOCUMENT_ID       D_INT,
    DOCTYPE           D_DOCTYPE,
    DOCNUMBER         D_DOCNUMBER,
    DOCDATE           D_DOCDATE,
    INSERTDATE        D_DATE,
    INDATE            D_DATE,
    STOCKDATE         D_DATE,
    PAYDATE           D_DATE,
    TOTALSUM          D_SUMMA,
    SUM_WITHOUT_NDS1  D_SUMMA,
    SUM_WITHOUT_NDS2  D_SUMMA,
    NDS1_SUM          D_SUMMA,
    NDS2_SUM          D_SUMMA,
    NOT_TAXABLE_SUM   D_SUMMA,
    NSP_SUM           D_SUMMA,
    PROVIDER_ID       D_INT,
    ORGUNIT_ID        D_INT,
    SUM_WITHOUT_NDS3  D_SUMMA,
    NDS3_SUM          D_SUMMA,
    APPROVED          D_BOOLEAN,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE CALCTAXESKIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    KNAME      D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CALCTAXESLINK (
    ID         D_INT_IDEN,
    KIND_ID    D_INT_IDEN,
    TAX_ID     D_INT_IDEN,
    FEEORDER   SMALLINT default 0,
    INCLUDED   D_BOOLEAN,
    SUBJECT    D_CALCTAXESSUBJECT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CASHDOCUMENT (
    ANLCODE      D_ANLCODE,
    TARGETCODE   D_ANLCODE,
    BASE         D_COMMENT,
    COMMENT      D_COMMENT,
    GETDATE      TIMESTAMP,
    GETDOCUMENT  D_COMMENT,
    DOCHEAD_ID   D_INT_IDEN,
    COMPANY      D_INT,
    BOOKKEEPER   D_INT,
    CHIEF        D_INT,
    CASHIER      D_INT,
    COMMENT1     D_COMMENT,
    ACC_ID       D_INT
);

CREATE TABLE CASHDOCUMENTMODEL (
    ANLCODE          D_ANLCODE,
    TARGETCODE       D_ANLCODE,
    BASE             D_COMMENT,
    COMMENT          D_COMMENT,
    GETDATE          TIMESTAMP,
    GETDOCUMENT      D_COMMENT,
    DOCHEADMODEL_ID  D_INT_IDEN,
    COMPANY          D_INT,
    BOOKKEEPER       D_INT,
    CHIEF            D_INT,
    CASHIER          D_INT,
    ACC_ID           D_INT,
    COMMENT1         D_COMMENT
);

CREATE TABLE CATALOG (
    ID                      D_INT_IDEN NOT NULL,
    FOLDER_ID               D_INT_IDEN NOT NULL,
    UPCODE                  D_BIGCODE NOT NULL,
    CODE                    D_BIGCODE NOT NULL,
    CNAME                   D_NAME NOT NULL,
    GOODTYPE                SMALLINT NOT NULL,
    BARCODE                 D_BIGCODE,
    PLUCODE                 D_BIGCODE,
    OKDP_CODE               D_BIGCODE,
    ISHASWEIGHT             D_BOOLEAN,
    WEIGHT                  D_MASS,
    VOLUME                  D_MASS,
    MARKETING_MARGIN        D_RATIO,
    VALIDITY                SMALLINT,
    ISNOTINUSE              D_BOOLEAN,
    TAXGROUP_ID             D_INT,
    SHELFLIFE               D_QUANTITY,
    SHELFLIFE_MEAS          D_TIME_PERIOD_KIND,
    EXPDATE_CALC_KIND       D_EXP_DATE_CALC_KIND,
    ARTICUL                 D_BIGCODE,
    MEASURE_CONTROL         D_MEASURE_CONTROL,
    PACKAGED                D_BOOLEAN NOT NULL,
    MEASURE1_ID             D_INT,
    MEASURE2_ID             D_INT,
    WEIGHTMEASURE_ID        D_INT,
    VOLUMEMEASURE_ID        D_INT,
    USE_SERIAL_NUM          D_BOOLEAN,
    GENERIC_ITEM_ID         D_INT,
    OKP_ID                  D_INT,
    CLIENT_ID               D_INT_IDEN DEFAULT 1,
    SYS_VERSION             D_SYS_VERSION,
    CUSTOMS_DECLARATION_ID  D_INT,
    COUNTRY_OF_ORIGIN_ID    D_INT
);

CREATE TABLE CATALOGFOLDER (
    ID                D_INT_IDEN NOT NULL,
    PARENT_ID         D_INT,
    FNAME             D_NAME NOT NULL,
    GROUPCODE         D_BIGCODE NOT NULL,
    BARCODE           D_BIGCODE,
    PLUCODE           D_BIGCODE,
    NUMBERING_ALG_ID  D_INT,
    FOLDER_TAG        D_NAME_N,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE CATALOGPRICE (
    ID                     D_INT_IDEN,
    CATALOG_ID             D_INT_IDEN,
    IN_ACTION              D_DATE default 'today',
    CURRENCY_CODE          D_SMALLCODE NOT NULL,
    PRICE                  D_SUMMA default 0,
    EQUIVALENT_PRICE       D_SUMMA default 0,
    CUR_RATE_TYPE_ID       D_INT,
    CUR_RATE_AUTHORITY_ID  D_INT,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE CODEAMOR (
    UPCODE     D_BIGCODE NOT NULL,
    CODE       D_BIGCODE NOT NULL,
    CANAME     D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CONTRACT (
    DOCHEAD_ID                   D_INT_IDEN,
    INCOMING_NUMBER              D_DOCNUMBER,
    REGISTRATION_DATE            D_DATE,
    STATUS                       D_CONTRACTSTATUS,
    RATIFICATION_DATE            D_DATE,
    COMPLETED_DATE               D_DATE,
    BEGINACTION_DATE             D_DATE,
    ENDACTION_DATE               D_DATE,
    SUBJECT                      D_CONTRACT_COMMENT,
    COMMENT                      D_CONTRACT_COMMENT,
    CONTRACTORBANKREQ_ID         D_INT,
    CONTRACTOR_RESPONSIBLE       D_INT,
    BANKREQ_ID                   D_INT,
    RESPONSIBLE                  D_INT,
    SHIPPER                      D_INT,
    SHIPPERBANKREQ_ID            D_INT,
    CONSIGNEE                    D_INT,
    CONSIGNEEBANKREQ_ID          D_INT,
    CALCSUMKIND                  D_CONTARCT_CALC_SUM_KIND,
    SHIPPEDPAYMENT               D_SUMMA,
    RECEIVEDPAYMENT              D_SUMMA,
    SHIPPEDGOOD                  D_SUMMA,
    RECEIVEDGOOD                 D_SUMMA,
    FACTSHIPPEDPAYMENT           D_SUMMA,
    FACTRECEIVEDPAYMENT          D_SUMMA,
    FACTSHIPPEDGOOD              D_SUMMA,
    FACTRECEIVEDGOOD             D_SUMMA,
    PHASESHIPPEDPAYMENT          D_SUMMA,
    PHASERECEIVEDPAYMENT         D_SUMMA,
    PHASESHIPPEDGOOD             D_SUMMA,
    PHASERECEIVEDGOOD            D_SUMMA,
    CONTRACTORBANKDAYS           SMALLINT,
    BANKDAYS                     SMALLINT,
    PENNY_RATE                   D_RATIO,
    CONTRACTORPENNY_RATE         D_RATIO,
    CONTRACT_KIND_ID             D_INT,
    CONTRACT_CATEGORY_ID         D_INT,
    CONTRACTOR_IN_NAME_OF        D_COMMENT,
    CONTRACTOR_ACT_ON_BASIS      D_COMMENT,
    CONTRACTOR_CONSIGNMENT_TERM  SMALLINT,
    CONTRACTOR_GOODS_CREDIT      D_SUMMA,
    IN_NAME_OF                   D_COMMENT,
    ACT_ON_BASIS                 D_COMMENT,
    CONSIGNMENT_TERM             SMALLINT,
    GOODS_CREDIT                 D_SUMMA
);

CREATE TABLE CONTRACT_CATEGORY (
    ID         D_INT_IDEN NOT NULL,
    CODE       D_BIGCODE,
    NAME       D_NAME,
    CLIENT_ID  D_INT_IDEN
);

CREATE TABLE CONTRACT_KIND (
    ID         D_INT_IDEN NOT NULL,
    CODE       D_BIGCODE,
    NAME       D_NAME,
    CLIENT_ID  D_INT_IDEN
);

CREATE TABLE CONTRACTMODIFYDOC (
    ID          D_INT_IDEN,
    DOCHEAD_ID  D_INT_IDEN,
    DOCTYPE     D_DOCTYPE,
    DOCNUMBER   D_DOCNUMBER,
    DOCDATE     D_DOCDATE,
    MODIFYDESC  D_CONTRACT_COMMENT,
    COMMENT     D_CONTRACT_COMMENT,
    ORIGINAL    D_ORIGINAL,
    CLIENT_ID   D_INT_IDEN DEFAULT 1,
    DOC_ID      D_INT
);

CREATE TABLE CONTRACTOR (
    ID         D_INT_IDEN NOT NULL,
    CODE       D_BIGCODE NOT NULL,
    UPCODE     D_BIGCODE NOT NULL,
    CNAME      D_BIGNAME NOT NULL,
    FOLDER_ID  D_INT,
    KIND       D_CONTRACTOR_KIND NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CONTRACTORCARD (
    ID                    D_INT_IDEN,
    CONTRACTOR_ID         D_INT_IDEN,
    TOTALINCOME           D_SUMMA,
    TOTALEXPENSES         D_SUMMA,
    DEBITORINDEBLIMIT     D_SUMMA,
    CREDITORINDEBLIMIT    D_SUMMA,
    PLANINCOME            D_SUMMA,
    PLANEXPENSES          D_SUMMA,
    ORGUNIT_ID            D_INT_IDEN,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE CONTRACTORCARDHIST (
    ID                 D_INT_IDEN,
    DOCHEAD_ID         D_INT_IDEN,
    CONTRACTORCARD_ID  D_INT_IDEN NOT NULL,
    KIND               D_CONTRACTORCARD_HIST_KIND,
    PROCESSDATE        D_DATE,
    SUMCUR             D_SUMMA,
    SUMNAT             D_SUMMA,
    DATETIME           D_DATE default 'now',
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE CONTRACTORCARDPLAN (
    ID                 D_INT_IDEN,
    DOCHEAD_ID         D_INT_IDEN,
    CONTRACTORCARD_ID  D_INT_IDEN NOT NULL,
    KIND               D_CONTRACTORCARD_PLAN_KIND,
    PROCESSDATE        D_DATE,
    SUMCUR             D_SUMMA,
    SUMNAT             D_SUMMA,
    IS_SET             D_BOOLEAN,
    DATETIME           D_DATE default 'now',
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE CONTRACTPHASE (
    ID                      D_INT_IDEN,
    DOCHEAD_ID              D_INT_IDEN,
    DOCNUMBER               D_DOCNUMBER,
    BEGINACTION_DATE        D_DATE,
    ENDACTION_DATE          D_DATE,
    DESCRIPTION             D_CONTRACT_COMMENT,
    COMMENTS                D_CONTRACT_COMMENT,
    CONTRACTOR_ID           D_INT,
    CONTRACTORBANKREQ_ID    D_INT,
    CONTRACTOR_RESPONSIBLE  D_INT,
    COMPANY                 D_INT,
    BANKREQ_ID              D_INT,
    RESPONSIBLE             D_INT,
    SHIPPER                 D_INT,
    SHIPPERBANKREQ_ID       D_INT,
    CONSIGNEE               D_INT,
    CONSIGNEEBANKREQ_ID     D_INT,
    SUMCUR                  D_SUMMA,
    SUMNAT                  D_SUMMA,
    CALCSUMKIND             D_CONTPHASE_CALC_SUM_KIND,
    MARGIN                  D_RATIO,
    AVOID                   D_BOOLEAN,
    SHIPPEDPAYMENT          D_SUMMA,
    RECEIVEDPAYMENT         D_SUMMA,
    SHIPPEDGOOD             D_SUMMA,
    RECEIVEDGOOD            D_SUMMA,
    FACTSHIPPEDPAYMENT      D_SUMMA,
    FACTRECEIVEDPAYMENT     D_SUMMA,
    FACTSHIPPEDGOOD         D_SUMMA,
    FACTRECEIVEDGOOD        D_SUMMA,
    ITEMSHIPPEDPAYMENT      D_SUMMA,
    ITEMRECEIVEDPAYMENT     D_SUMMA,
    ITEMSHIPPEDGOOD         D_SUMMA,
    ITEMRECEIVEDGOOD        D_SUMMA,
    CONTRACTORBANKDAYS      SMALLINT,
    BANKDAYS                SMALLINT,
    PENNY_RATE              D_RATIO,
    CONTRACTORPENNY_RATE    D_RATIO,
    CLIENT_ID               D_INT_IDEN DEFAULT 1,
    PHASE_NUMBER            D_DOCNUMBER,
    DOCTYPE                 D_DOCTYPE,
    DOCDATE                 D_DOCDATE,
    DOC_ID                  D_INT
);

CREATE TABLE CONTRACTSPEC (
    ID                D_INT_IDEN,
    PHASEITEMFACT_ID  D_INT,
    PHASEITEMPLAN_ID  D_INT,
    CATALOG_ID        D_INT_IDEN,
    PRICELIST_ID      D_INT,
    PRICETYPE_ID      D_INT,
    QUANTITY          D_QUANTITY,
    PRICE             D_SUMMA,
    SUMMA             D_SUMMA,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_ACTIVITY_KIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_ACTIVITY_SPHERE (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_BRANCH (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_CLIENT_RANK (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_CLIENT_TYPE (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_CONTACT (
    ID               D_INT_IDEN,
    PERSON_ID        D_INT,
    CONTRACTOR_ID    D_INT,
    RESPONSIBLE_ID   D_INT,
    PRIORITY         INTEGER,
    IS_DEFAULT       D_BOOLEAN,
    THE_POSITION     D_NAME_N,
    IS_RETIRED       D_BOOLEAN,
    NICKNAME         D_NAME_N,
    PERSON_TITLE_ID  D_INT,
    CURATOR_ID       D_INT,
    ADDRESS_SOURCE   SMALLINT,
    COMMENTS         D_COMMENT,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_CONTACT_LINK (
    CONTACT_ID   D_INT,
    RELATION_ID  D_INT,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE CRM_DELIVERY_KIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_LINK_PROBLEM_SOLUTION (
    SOLUTION_ID  D_INT_IDEN,
    PROBLEM_ID   D_INT_IDEN,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE CRM_LINK_SYMPTOM_PROBLEM (
    SYMPTOM_ID  D_INT_IDEN,
    PROBLEM_ID  D_INT_IDEN,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE CRM_LINKED_DOC (
    ID            D_INT_IDEN,
    ORIGINAL_ID   D_INT,
    RELATION_ID   D_INT,
    OPERATION_ID  D_INT,
    CONTACT_ID    D_INT,
    OFFER_ID      D_INT,
    PROBLEM_ID    D_INT,
    SOLUTION_ID   D_INT,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_MARKET (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    WEIGHT     D_INT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_OFFER (
    ID                 D_INT_IDEN NOT NULL,
    CODE               D_BIGCODE,
    NAME               D_BIGNAME,
    OFFER_DATE         D_DATE,
    VALID_UNTIL        D_DATE,
    STATUS_ID          D_INT,
    SUCCESS_REASON_ID  D_INT,
    FAIL_REASON_ID     D_INT,
    KIND_ID            D_INT,
    FORECAST_ID        D_INT,
    RESPONSIBLE_ID     D_INT,
    RELATION_ID        D_INT,
    OPERATION_ID       D_INT,
    CONTACT_ID         D_INT,
    SWOT_S             D_CRM_SWOT,
    SWOT_W             D_CRM_SWOT,
    SWOT_O             D_CRM_SWOT,
    SWOT_T             D_CRM_SWOT,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_OFFER_FORECAST (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_OFFER_KIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_OFFER_REASON (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_OFFER_STATUS (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_OPERATION (
    ID                D_INT_IDEN,
    CODE              D_BIGCODE,
    RELATION_ID       D_INT,
    KIND_ID           D_INT,
    PRIORITY_ID       D_INT,
    PURPOSE_ID        D_INT,
    IS_PLAN           D_BOOLEAN,
    CREATE_DATE       D_DATETIME,
    PLAN_DATE_FROM    D_DATETIME,
    PLAN_DATE_TILL    D_DATETIME,
    FACT_DATE_FROM    D_DATETIME,
    FACT_DATE_TILL    D_DATETIME,
    CURATOR_ID        D_INT,
    RESPONSIBLE_ID    D_INT,
    OPERATION_PLAN    D_CRM_INFO,
    OPERATION_RESULT  D_CRM_INFO,
    PARENT_ID         D_INT,
    CONTACT_ID        D_INT,
    STATUS            D_SHORT,
    STATE             D_SHORT,
    NOTIFIED          D_BOOLEAN,
    NEXT_OPERATION    D_CRM_INFO,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_OPERATION_KIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_OPERATION_PRIORITY (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_OPERATION_PURPOSE (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_OPERATION_STATUS (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_OWNERSHIP_FORM (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_PAYMENT_COND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_PERSON_TITLE (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_POSITION (
    ID         D_INT_IDEN,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_PROBLEM (
    ID               D_INT_IDEN,
    FOLDER_ID        D_INT,
    NAME             D_BIGNAME,
    INFO             D_CRM_INFO,
    KEYWORDS         D_BIGNAME,
    PROBLEM_TYPE_ID  D_INT,
    PRIORITY         INTEGER,
    VALID_FROM       D_DATE,
    VALID_TO         D_DATE,
    CREATOR_ID       D_INT,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_PROBLEM_TYPE (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_BIGNAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_RELATION (
    ID                  D_INT_IDEN,
    FOLDER_ID           D_INT,
    CODE                D_BIGCODE,
    NAME                D_BIGNAME,
    IS_LEGAL_PERSON     D_BOOLEAN,
    MARKET_ID           D_INT,
    DELIVERY_KIND_ID    D_INT,
    INFO                D_CRM_INFO,
    RESPONSIBLE_ID      D_INT,
    CLIENT_TYPE_ID      D_INT,
    CLIENT_RANK_ID      D_INT,
    PAYMENT_COND_ID     D_INT,
    STATUS_ID           D_INT,
    PARENT_ID           D_INT,
    NATURAL_PERSON_ID   D_INT,
    NICKNAME            D_NAME_N,
    PERSON_TITLE_ID     D_INT,
    UIN                 D_EMAIL,
    LEGAL_PERSON_ID     D_INT,
    BRANCH_ID           D_INT,
    ACTIVITY_SPHERE_ID  D_INT,
    ACTIVITY_KIND_ID    D_INT,
    OWNERSHIP_FORM_ID   D_INT,
    CURATOR_ID          D_INT,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_RELATION_STATUS (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_SOLUTION (
    ID                D_INT_IDEN,
    FOLDER_ID         D_INT,
    NAME              D_BIGNAME,
    INFO              D_CRM_INFO,
    SOLUTION_TYPE_ID  D_INT,
    PRIORITY          INTEGER,
    VALID_FROM        D_DATE,
    VALID_TO          D_DATE,
    CREATOR_ID        D_INT,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_SOLUTION_TYPE (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_BIGNAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_SYMPTOM (
    ID          D_INT_IDEN,
    FOLDER_ID   D_INT,
    NAME        D_BIGNAME,
    INFO        D_CRM_INFO,
    CREATOR_ID  D_INT,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE CRM_USER (
    ID            D_INT_IDEN,
    PERSON_ID     D_INT,
    THE_POSITION  D_NAME_N,
    BUSY          D_BOOLEAN,
    IS_ADMIN      D_BOOLEAN,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE CT_CONFIG (
    BASE_CURRENCY          D_SMALLCODE,
    NAT_CURRENCY           D_SMALLCODE,
    CURRENCY_PREC          INTEGER,
    CUR_RATE_AUTHORITY_ID  D_INT,
    CUR_RATE_TYPE_ID       D_INT,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE CURRENCY (
    UPCODE        D_SMALLCODE NOT NULL,
    CODE          D_SMALLCODE NOT NULL,
    ISO           D_SMALLCODE NOT NULL,
    BANK_CODE     D_SMALLCODE NOT NULL,
    CNAME         D_SMALLNAME,
    MEN           SMALLINT NOT NULL,
    ALTNAME1      D_BIGCODE NOT NULL,
    ALTNAME2      D_BIGCODE NOT NULL,
    ALTNAME3      D_BIGCODE NOT NULL,
    ALTUNITNAME1  D_BIGCODE NOT NULL,
    ALTUNITNAME2  D_BIGCODE NOT NULL,
    ALTUNITNAME3  D_BIGCODE NOT NULL,
    ROUNDPRICE    D_RATIO NOT NULL,
    ROUNDSUM      D_RATIO NOT NULL,
    VIEWPRIORITY  INTEGER,
    ID            D_INT_IDEN,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE DIS_CARD (
    ID           D_INT_IDEN,
    FOLDER_ID    D_INT,
    CARDNUM      D_BIGCODE,
    OWNER_ID     D_INT,
    DISCOUNT     D_RATIO,
    CREDITLIMIT  D_SUMMA,
    CREDITDEPTH  INTEGER,
    COMMENTS     D_COMMENT,
    IS_ACTIVE    D_BOOLEAN,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE DIS_CARD_HIST (
    ID          D_INT_IDEN,
    CARD_ID     D_INT,
    TIME_STAMP  D_DATE,
    USER_ID     D_INT,
    DISCOUNT    D_RATIO,
    COMMENTS    D_COMMENT,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE DIS_CARD_USER (
    ID             D_INT_IDEN,
    CARD_ID        D_INT,
    CONTRACTOR_ID  D_INT,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE DIS_COEF (
    ID                D_INT_IDEN,
    CARD_ID           D_INT,
    CATALOGFOLDER_ID  D_INT,
    CATALOG_ID        D_INT,
    COEFFICIENT       D_RATIO,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE DIS_EXTRA_DISCOUNT (
    ID         D_INT_IDEN,
    CARD_ID    D_INT,
    NAME       D_NAME_N,
    DISCOUNT   D_RATIO,
    PLANSALE   D_SUMMA,
    FACTSALE   D_SUMMA,
    COMMENTS   D_COMMENT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1,
    DATE_FROM  D_DATE,
    DATE_TILL  D_DATE,
    IS_ACTIVE  D_BOOLEAN,
    USER_ID    D_INT
);

CREATE TABLE DIS_PROMOTION (
    ID                        D_INT_IDEN,
    NAME                      D_NAME,
    CODE                      D_BIGCODE NOT NULL,
    DATE_FROM                 D_DATE,
    DATE_TILL                 D_DATE,
    PRIORITY                  INTEGER,
    TYPE_ID                   D_INT,
    DATE_APPROVE              D_DATE,
    NUMBER                    CHAR(20),
    IS_ACTIVE                 D_BOOLEAN,
    IS_APPLY_DISCOUNT_GROUP   D_BOOLEAN,
    IS_APPLY_DISCOUNT_ON_DOC  D_BOOLEAN,
    COMMENT                   D_COMMENT,
    CLIENT_ID                 D_INT_IDEN
);

CREATE TABLE DIS_PROMOTION_LINE (
    ID                        D_INT_IDEN,
    PROMOTION_ID              D_INT_IDEN,
    CATALOG_FOLDER_ID         D_INT,
    CATALOG_ID                D_INT,
    DISCOUNT                  D_RATIO,
    PRICE                     D_SUMMA,
    CURRENCY_CODE             D_SMALLCODE,
    IS_ACTIVE                 D_BOOLEAN,
    IS_APPLY_DISCOUNT_GROUP   D_BOOLEAN,
    IS_APPLY_DISCOUNT_ON_DOC  D_BOOLEAN,
    TYPE_ID                   D_INT,
    CLIENT_ID                 D_INT_IDEN
);

CREATE TABLE DIS_PROMOTION_TYPE (
    ID           D_INT_IDEN NOT NULL,
    NAME         D_NAME,
    CODE         D_BIGCODE NOT NULL,
    DESCRIPTION  D_DESCRIPTION,
    BAI_ID       D_INT,
    CLIENT_ID    D_INT_IDEN
);

CREATE TABLE DISCOUNT (
    ID         D_INT_IDEN,
    FOLDER_ID  D_INT_IDEN,
    DNAME      D_NAME,
    FORMULA    D_FORMULA,
    ALG_ID     D_INT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE DOC_SPEC_PACKAGE (
    ID          D_INT_IDEN NOT NULL,
    DOCSPEC_ID  D_INT_IDEN NOT NULL,
    PACKAGE_ID  D_INT_IDEN NOT NULL,
    QUANTITY    D_QUANTITY,
    WEIGHT      D_QUANTITY,
    VOLUME      D_QUANTITY,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE DOC_SPEC_SERIAL_NUM (
    ID          D_INT_IDEN NOT NULL,
    DOCSPEC_ID  D_INT_IDEN NOT NULL,
    SERIAL_NUM  D_SERIAL_NUMBER NOT NULL,
    COMMENT     D_COMMENT,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE DOCACTION (
    ID           D_INT_IDEN,
    DOCUMENT_ID  D_INT_IDEN,
    ACTIONTYPE   SMALLINT,
    STAGE_ID     D_INT,
    STAGESTATE   SMALLINT,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE DOCHEAD (
    ID                   D_INT_IDEN,
    FOLDER_ID            D_INT_IDEN,
    DOCSECTION           D_DOCSECTION NOT NULL,
    DOCTYPE              D_DOCTYPE,
    DOCNUMBER            D_DOCNUMBER,
    DOCDATE              D_DOCDATE,
    CURRENCY_CODE        D_SMALLCODE,
    CURCOURCE            D_CURCOURCE,
    SUMMACUR             D_SUMMA,
    SUMMANAT             D_SUMMA,
    BASEDOC_ID           D_INT,
    BASEDOCTYPE          D_DOCTYPE,
    BASEDOCNUMBER        D_DOCNUMBER,
    BASEDOCDATE          D_DOCDATE,
    CONTRACT_ID          D_INT,
    CONTRACTTYPE         D_DOCTYPE,
    CONTRACTNUMBER       D_DOCNUMBER,
    CONTRACTDATE         D_DOCDATE,
    WEIGHT               D_WEIGHT,
    VOLUME               D_VOLUME,
    PRICELIST_ID         D_INT,
    PRICETYPE_ID         D_INT,
    CALCTAXESKIND_ID     D_INT,
    STOCKSRC             D_INT,
    STOCKDEST            D_INT,
    MOLSRC               D_INT,
    MOLDEST              D_INT,
    DISCOUNT_FOLDER_ID   D_INT,
    FROM_ID              D_INT,
    TO_ID                D_INT,
    THROUGH_ID           D_INT,
    REQUESTER            SMALLINT,
    ORIGINAL             D_ORIGINAL,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT,
    UNID                 VARCHAR(32),
    SCHEDULE_ID          D_INT,
    CLIENT_ID            D_INT_IDEN DEFAULT 1,
    MANUAL_DOC_NUMBER    D_BOOLEAN,
    SYS_VERSION          D_SYS_VERSION,
    SYS_COMPANY_ID       D_INT_IDEN,
    DESCRIPTION          D_DESCRIPTION
);

CREATE TABLE DOCHEADMODEL (
    ID                    D_INT_IDEN,
    FOLDER_ID             D_INT_IDEN,
    DOCSECTION            D_DOCSECTION NOT NULL,
    MODELNAME             D_NAME,
    DOCTYPE               D_DOCTYPE,
    DOCNUMBER             D_DOCNUMBER,
    DOCDATE               D_DOCDATE,
    CURRENCY_CODE         D_SMALLCODE,
    CURCOURCE             D_CURCOURCE,
    SUMMACUR              D_SUMMA,
    SUMMANAT              D_SUMMA,
    BASEDOC_ID            D_INT,
    BASEDOCTYPE           D_DOCTYPE,
    BASEDOCNUMBER         D_DOCNUMBER,
    BASEDOCDATE           D_DOCDATE,
    CONTRACT_ID           D_INT,
    CONTRACTTYPE          D_DOCTYPE,
    CONTRACTNUMBER        D_DOCNUMBER,
    CONTRACTDATE          D_DOCDATE,
    WEIGHT                D_WEIGHT,
    VOLUME                D_VOLUME,
    PRICELIST_ID          D_INT,
    PRICETYPE_ID          D_INT,
    PROVIDERPRICELIST_ID  D_INT,
    CALCTAXESKIND_ID      D_INT,
    STOCKSRC              D_INT,
    STOCKDEST             D_INT,
    MOLSRC                D_INT,
    MOLDEST               D_INT,
    DISCOUNT_FOLDER_ID    D_INT,
    MODELDESTFOLDER_ID    D_INT,
    FROM_ID               D_INT,
    TO_ID                 D_INT,
    THROUGH_ID            D_INT,
    CURRATETYPE_ID        D_INT,
    CURRATEAUTHORITY_ID   D_INT,
    CLIENT_ID             D_INT_IDEN DEFAULT 1,
    MANUAL_DOC_NUMBER     D_BOOLEAN,
    SYS_COMPANY_ID        D_INT,
    DESCRIPTION           D_DESCRIPTION
);

CREATE TABLE DOCHEADSTATE (
    ID            D_INT_IDEN,
    DOCACTION_ID  D_INT_IDEN,
    READYSUMMA    D_SUMMA default 0,
    DATA1         D_INT,
    DATA2         D_INT,
    DATETIME      TIMESTAMP default 'now',
    USER_ID       D_INT,
    STATE_VALUE   bytea
);

CREATE TABLE DOCPROCESSSTAGE (
    ID                            D_INT_IDEN,
    DOCTYPE_ID                    D_INT_IDEN,
    PARTIAL                       D_BOOLEAN,
    PREVISCOMPLETE                D_BOOLEAN,
    SHOWNEWDOCUMENT               D_BOOLEAN,
    STAGE                         D_INT_IDEN,
    DPSNAME                       D_NAME,
    COMMENT                       D_COMMENT,
    LINKDOCSECTION                SMALLINT,
    LINKDOCTYPE                   D_DOCTYPE,
    LINKDOCMODEL                  D_INT,
    LINKDOCDESTFOLDER             D_INT,
    ISANDIN                       D_BOOLEAN,
    ISANDOUT                      D_BOOLEAN,
    ISORIN                        D_BOOLEAN,
    ISOROUT                       D_BOOLEAN,
    PRIORITY                      SMALLINT,
    LINKDOCMODELFOLDER            D_INT,
    COORX                         INTEGER,
    COORY                         INTEGER,
    DEPENDENT                     D_BOOLEAN,
    ALGORITHM                     D_CUSTOMALGORITHM,
    ROLLBACK_ALGORITHM            D_CUSTOMALGORITHM,
    ALG_ID                        D_INT,
    RBALG_ID                      D_INT,
    USE_CURRENT_DATE              D_BOOLEAN,
    CODE                          D_BIGCODE NOT NULL,
    VALUE_OUT_OF_BOUND            D_BOOLEAN,
    LINKDOC_ROLLBACK              D_BOOLEAN,
    LINKDOC_ROLLBACK_INTERACTIVE  SMALLINT,
    CLIENT_ID                     D_INT_IDEN DEFAULT 1,
    JOIN_FLOW                     D_BOOLEAN,
    FORK_FLOW                     D_BOOLEAN,
    SIZEX                         INTEGER,
    SIZEY                         INTEGER,
    PRE_PERFORM_BAI_ID            D_INT,
    PRE_ROLLBACK_BAI_ID           D_INT
);

CREATE TABLE DOCPROCESSSTAGE_RIGHTS (
    ID         D_INT_IDEN,
    STAGE_ID   D_INT_IDEN,
    GROUP_ID   D_INT_IDEN,
    GRANTS     SMALLINT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE DOCSECTION (
    ID                    D_INT_IDEN NOT NULL,
    DSNAME                D_NAME NOT NULL,
    FOLDERTYPE            D_INT_IDEN NOT NULL,
    MODEL_FOLDERTYPE      D_INT,
    WITH_TAXES            D_BOOLEAN NOT NULL,
    WITH_SPEC             D_BOOLEAN NOT NULL,
    DIRECTION             SMALLINT NOT NULL,
    DUMMY                 D_BOOLEAN NOT NULL,
    CLASS_ID              D_INT,
    MODEL_CLASS_ID        D_INT,
    SPEC_CLASS_ID         D_INT,
    MODEL_SPEC_CLASS_ID   D_INT,
    DOC_SEARCH_HELP       D_JAVA_CLASS_NAME,
    DOCMODEL_SEARCH_HELP  D_JAVA_CLASS_NAME
);

CREATE TABLE DOCSPEC (
    ID                      D_INT_IDEN,
    DOCHEAD_ID              D_INT_IDEN,
    CATALOG_ID              D_INT,
    PRICELISTSPEC_ID        D_INT,
    QUANTITY                D_QUANTITY,
    PRICE                   D_SUMMA,
    SUMMA                   D_SUMMA,
    PRICE1                  D_SUMMA,
    SUMMA1                  D_SUMMA,
    WEIGHT                  D_WEIGHT,
    VOLUME                  D_VOLUME,
    BESTBEFORE              D_DATE,
    TAXGROUP_ID             D_INT,
    SHELFLIFE               D_QUANTITY,
    SHELFLIFE_MEAS          D_TIME_PERIOD_KIND NOT NULL,
    PRODUCTIONDATE          D_DATE,
    MEASURE1_ID             D_INT,
    MEASURE2_ID             D_INT,
    QUANTITY2               D_QUANTITY,
    COMMENT                 D_COMMENT,
    CONTRACTOR_ID           D_INT,
    UNID                    VARCHAR(32),
    ORDER_SPEC_ID           D_INT,
    STOCKSRC                D_INT,
    STOCKDEST               D_INT,
    MOLSRC                  D_INT,
    MOLDEST                 D_INT,
    CLIENT_ID               D_INT_IDEN DEFAULT 1,
    CUSTOMS_DECLARATION_ID  D_INT,
    COUNTRY_OF_ORIGIN_ID    D_INT
);

CREATE TABLE DOCSPECMODEL (
    ID                D_INT_IDEN,
    DOCHEAD_ID        D_INT_IDEN,
    CATALOG_ID        D_INT,
    PRICELISTSPEC_ID  D_INT,
    QUANTITY          D_QUANTITY,
    PRICE             D_SUMMA,
    SUMMA             D_SUMMA,
    PRICE1            D_SUMMA,
    SUMMA1            D_SUMMA,
    WEIGHT            D_WEIGHT,
    VOLUME            D_VOLUME,
    BESTBEFORE        D_DATE,
    PACKING_ID        D_INT,
    PACKINGQUAN       D_QUANTITY,
    TAXGROUP_ID       D_INT,
    PRODUCTIONDATE    D_DATE,
    SHELFLIFE         D_QUANTITY,
    SHELFLIFE_MEAS    D_TIME_PERIOD_KIND NOT NULL,
    MEASURE1_ID       D_INT,
    MEASURE2_ID       D_INT,
    QUANTITY2         D_QUANTITY,
    COMMENT           D_COMMENT,
    CONTRACTOR_ID     D_INT,
    STOCKSRC          D_INT,
    STOCKDEST         D_INT,
    MOLSRC            D_INT,
    MOLDEST           D_INT,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE DOCSPECSTATE (
    ID               D_INT_IDEN,
    DOCHEADSTATE_ID  D_INT_IDEN,
    DOCSPEC_ID       D_INT_IDEN,
    READYQUANTITY    D_MASS,
    READYSUMMA       D_SUMMA,
    DATA1            D_INT,
    READYQUANTITY2   D_QUANTITY DEFAULT 0,
    DATA2            D_INT,
    STATE_VALUE      bytea
);

CREATE TABLE DOCTYPE_DOCSECTION_LINK (
    ID             D_INT_IDEN NOT NULL,
    KIND           D_DOCKIND NOT NULL,
    DOCTYPE_ID     D_INT_IDEN NOT NULL,
    DOCSECTION_ID  D_INT_IDEN NOT NULL,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE DOCTYPE_RIGHTS (
    ID         D_INT_IDEN,
    REC_ID     D_INT_IDEN,
    GROUP_ID   D_INT_IDEN,
    RIGHTS     INTEGER,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE DOCUMENT_LINK (
    ID          D_INT_IDEN NOT NULL,
    DOC_ID      D_INT_IDEN NOT NULL,
    BASEDOC_ID  D_INT_IDEN NOT NULL,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE DP_STAGE_ACTION (
    ID              D_INT_IDEN NOT NULL,
    NAME            D_NAME NOT NULL,
    CREATEDOC_FLAG  D_BOOLEAN NOT NULL
);

CREATE TABLE ECONOMICOPER (
    ID              D_INT_IDEN NOT NULL,
    FOLDER_ID       D_INT_IDEN,
    KEEPDATE        TIMESTAMP default 'now',
    COMMENT         D_COMMENT,
    SPECMARK        D_BIGCODE,
    DOCBASETYPE     D_DOCTYPE,
    DOCBASENUMBER   D_DOCNUMBER,
    DOCBASEDATE     TIMESTAMP,
    DOCBASE_ID      INTEGER,
    DOCTYPE         D_DOCTYPE,
    DOCNUMBER       D_DOCNUMBER,
    DOCDATE         TIMESTAMP,
    DOC_ID          INTEGER,
    SUMMA           D_SUMMA,
    INSERTSIGN      SMALLINT,
    CONTRACT_ID     D_INT,
    CONTRACTTYPE    D_DOCTYPE,
    CONTRACTNUMBER  D_DOCNUMBER,
    CONTRACTDATE    D_DOCDATE,
    FROM_ID         D_INT,
    TO_ID           D_INT,
    USER_ID         D_INT,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE ECONOMICOPERMODEL (
    ID                  D_INT_IDEN NOT NULL,
    FOLDER_ID           D_INT_IDEN,
    MODELNAME           D_NAME,
    KEEPDATE            TIMESTAMP,
    COMMENT             D_COMMENT,
    SPECMARK            D_BIGCODE,
    DOCBASETYPE         D_DOCTYPE,
    DOCBASENUMBER       D_DOCNUMBER,
    DOCBASEDATE         TIMESTAMP,
    DOCBASE_ID          INTEGER,
    DOCTYPE             D_DOCTYPE,
    DOCNUMBER           D_DOCNUMBER,
    DOCDATE             TIMESTAMP,
    DOC_ID              INTEGER,
    SUMMA               D_SUMMA,
    SOURCEFROM          SMALLINT default 0,
    SOURCETO            SMALLINT default 0,
    CONTRACT_ID         D_INT,
    CONTRACTTYPE        D_DOCTYPE,
    CONTRACTNUMBER      D_DOCNUMBER,
    CONTRACTDATE        D_DOCDATE,
    FROM_ID             D_INT,
    TO_ID               D_INT,
    MODELDESTFOLDER_ID  D_INT,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE ECONOMICSPEC (
    ID                    D_INT_IDEN,
    ECONOMICOPER_ID       D_INT_IDEN,
    ANLDB1_ID             INTEGER,
    ANLDB2_ID             INTEGER,
    ANLDB3_ID             INTEGER,
    ANLDB4_ID             INTEGER,
    ANLDB5_ID             INTEGER,
    ANLKT1_ID             INTEGER,
    ANLKT2_ID             INTEGER,
    ANLKT3_ID             INTEGER,
    ANLKT4_ID             INTEGER,
    ANLKT5_ID             INTEGER,
    CATALOG_ID            D_INT,
    QUANTITY              D_MASS,
    SUMMANAT              D_SUMMA,
    SUMMACUR              D_SUMMA,
    CURCOURCE             D_RATIO default 0,
    REMNACCDB_ID          INTEGER,
    REMNACCKT_ID          INTEGER,
    REMNANLDB_ID          INTEGER,
    REMNANLKT_ID          INTEGER,
    REMNVALDB_ID          INTEGER,
    REMNVALKT_ID          INTEGER,
    REMNDB_ID             INTEGER,
    REMNKT_ID             INTEGER,
    ACCBATCHDB_ID         INTEGER,
    ACCBATCHHISTORYDB_ID  INTEGER,
    ACCBATCHKT_ID         INTEGER,
    ACCBATCHHISTORYKT_ID  INTEGER,
    FEATURE1_ID           D_INT,
    FEATURE2_ID           D_INT,
    FEATURE3_ID           D_INT,
    FEATURE4_ID           D_INT,
    FEATURE5_ID           D_INT,
    ACCDB_ID              D_INT,
    ACCKT_ID              D_INT,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE ECONOMICSPECMODEL (
    ID               D_INT_IDEN,
    ECONOMICOPER_ID  D_INT_IDEN,
    ANLDB1_ID        INTEGER,
    ANLDB2_ID        INTEGER,
    ANLDB3_ID        INTEGER,
    ANLDB4_ID        INTEGER,
    ANLDB5_ID        INTEGER,
    ANLKT1_ID        INTEGER,
    ANLKT2_ID        INTEGER,
    ANLKT3_ID        INTEGER,
    ANLKT4_ID        INTEGER,
    ANLKT5_ID        INTEGER,
    CATALOG_ID       D_INT,
    ENTRYFOLDER      D_INT,
    QUANTITY         D_MASS,
    SUMMANAT         D_SUMMA,
    SUMMACUR         D_SUMMA,
    CURCOURCE        D_RATIO DEFAULT 0,
    SUMMAFORMULA     D_FORMULA,
    QUANFORMULA      D_FORMULA,
    FEATURE1_ID      D_INT,
    FEATURE2_ID      D_INT,
    FEATURE3_ID      D_INT,
    FEATURE4_ID      D_INT,
    FEATURE5_ID      D_INT,
    ENTRYGOODTYPE    SMALLINT,
    ENTRYTAXGROUP    D_INT,
    ACCDB_ID         D_INT,
    ACCKT_ID         D_INT,
    SUMALG_ID        D_INT,
    QTYALG_ID        D_INT,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE ECONSPEC_FEATURE (
    ID         D_INT_IDEN,
    UPCODE     D_ECONSPEC_FEATURE_CODE NOT NULL,
    CODE       D_ECONSPEC_FEATURE_CODE NOT NULL,
    FNAME      D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE EMPLOYEES (
    FNAME          VARCHAR(20),
    PATRONYMIC     VARCHAR(20),
    SURNAME        VARCHAR(20),
    ADDRESS        D_ADDRESS,
    PASSP_GIVEN    D_COMMENT,
    PASSP_CITY     VARCHAR(20),
    PASSP_DATE     TIMESTAMP,
    PASSP_NUM      CHAR(10),
    PASSP_SER      CHAR(10),
    OFFICE         VARCHAR(40),
    PHONE          D_PHONE,
    COMMENT        D_COMMENT,
    TABNUM         CHAR(10),
    CONTRACTOR_ID  D_INT_IDEN,
    PERSONNEL_ID   D_INT,
    IS_DEFAULT     D_BOOLEAN,
    PERSON_ID      D_INT_IDEN
);

CREATE TABLE ENTITY_TRANSFORMER_MAPPING (
    ID           D_INT_IDEN NOT NULL,
    APP_LAYER    D_APP_LAYER,
    CLASS_A      D_JAVA_CLASS_NAME NOT NULL,
    CLASS_B      D_JAVA_CLASS_NAME NOT NULL,
    MAP_ID       D_BIGCODE NOT NULL,
    HASHAB       D_INT,
    CLIENT_ID    D_INT_IDEN,
    SYS_VERSION  TIMESTAMP
);

CREATE TABLE EXCH_CONFIG (
    SITE_CODE  CHAR(5),
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE EXCH_EXPORT (
    ID           D_INT_IDEN,
    SITE_ID      D_INT,
    BEAN_NAME    D_BEAN_NAME,
    ORIGIN       D_TABLE_NAME,
    REC_ID       D_INT,
    PACKET       INTEGER,
    STATUS       D_EXCH_EXPORT_STATUS,
    PACKET_TIME  D_DATETIME,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE EXCH_IMPORT (
    ID           D_INT_IDEN,
    SITE_ID      D_INT,
    BEAN_NAME    D_BEAN_NAME,
    ORIGIN       D_TABLE_NAME,
    OLD_KEY      D_BIG_INT_IDEN,
    NEW_KEY      D_BIG_INT_IDEN,
    PACKET       INTEGER,
    PACKET_TIME  D_DATETIME,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE EXCH_SITE (
    ID               D_INT_IDEN,
    CODE             CHAR(5),
    NAME             D_NAME_N,
    PATH_IN          D_FILENAME,
    PATH_OUT         D_FILENAME,
    PACKET_IN        INTEGER,
    PACKET_IN_TIME   TIMESTAMP,
    PACKET_OUT       INTEGER,
    PACKET_OUT_TIME  TIMESTAMP,
    REQUEST_DONE     D_BOOLEAN,
    EXPORT_CMD       VARCHAR(256),
    IMPORT_CMD       VARCHAR(256),
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE EXCH_TABLE (
    CLASS_ID    D_INT_IDEN,
    TABLE_NAME  D_TABLE_NAME,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE FACTURAHEAD (
    INDATE               TIMESTAMP,
    STOCKDATE            TIMESTAMP,
    PAYDATE              TIMESTAMP,
    PARTNERFROM_BANKREQ  D_INT,
    PARTNERTO_BANKREQ    D_INT,
    TOPAYDOCNUMBER       D_DOCNUMBER,
    TOPAYDOCDATE         TIMESTAMP,
    COMMENT              D_DESCRIPTION,
    DOCHEAD_ID           D_INT_IDEN,
    SHIPPER              D_INT,
    CONSIGNEE            D_INT
);

CREATE TABLE FACTURAHEADMODEL (
    INDATE               TIMESTAMP,
    STOCKDATE            TIMESTAMP,
    PAYDATE              TIMESTAMP,
    PARTNERFROM_BANKREQ  D_INT,
    PARTNERTO_BANKREQ    D_INT,
    TOPAYDOCNUMBER       D_DOCNUMBER,
    TOPAYDOCDATE         TIMESTAMP,
    COMMENT              D_DESCRIPTION,
    DOCHEADMODEL_ID      D_INT_IDEN,
    SHIPPER              D_INT,
    CONSIGNEE            D_INT
);

CREATE TABLE FEATURE (
    ID               INTEGER NOT NULL,
    NAME             D_NAME NOT NULL,
    DATATYPE         SMALLINT,
    PRIORITY         INTEGER,
    NULL_VALUE       D_FEATURE,
    ENTITY_CLASS_ID  D_INT,
    CODE             D_BIGCODE NOT NULL,
    IS_ARRAY         D_BOOLEAN,
    CLIENT_ID        D_INT_IDEN DEFAULT 1,
    ARRAY_SIZE       SMALLINT
);

CREATE TABLE FEATURELINK (
    ID          INTEGER NOT NULL,
    REC_ID      INTEGER,
    FEATURE_ID  INTEGER,
    VAL         D_FEATURE,
    VAL_FOLDER  D_FEATURE_INT,
    VAL_TEXT    D_FEATURE_STR,
    CLASS_ID    D_INT,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE FEATUREVAL (
    ID          INTEGER NOT NULL,
    FEATURE_ID  INTEGER,
    VAL         D_FEATURE,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE FIN_CONFIG (
    BASE_CURRENCY          D_SMALLCODE,
    NAT_CURRENCY           D_SMALLCODE,
    CURRENCY_PREC          INTEGER,
    CUR_RATE_AUTHORITY_ID  D_INT,
    CUR_RATE_TYPE_ID       D_INT,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE FINACCOUNT (
    ID             D_INT_IDEN,
    FOLDER_ID      D_INT_IDEN,
    CODE           D_BIGCODE NOT NULL,
    UPCODE         D_BIGCODE NOT NULL,
    ACCNAME        D_NAME,
    CURRENCY_CODE  D_SMALLCODE,
    KIND           SMALLINT NOT NULL,
    ANL1_KIND      D_BOOLEAN,
    ANL2_KIND      D_BOOLEAN,
    ANL3_KIND      D_BOOLEAN,
    ANL4_KIND      D_BOOLEAN,
    ANL5_KIND      D_BOOLEAN,
    ANL1_CLASS_ID  D_INT,
    ANL2_CLASS_ID  D_INT,
    ANL3_CLASS_ID  D_INT,
    ANL4_CLASS_ID  D_INT,
    ANL5_CLASS_ID  D_INT,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE FINANL (
    ID         D_INT_IDEN,
    PARENT_ID  D_INT,
    FINACC_ID  D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    UPCODE     D_BIGCODE NOT NULL,
    ANLNAME    D_NAME,
    ANLLEVEL   SMALLINT NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE FINOPER (
    ID                   D_INT_IDEN NOT NULL,
    FOLDER_ID            D_INT_IDEN,
    INSERTSIGN           SMALLINT,
    KEEPDATE             TIMESTAMP default 'now',
    COMMENT              D_COMMENT,
    DOCBASETYPE          D_DOCTYPE,
    DOCBASENUMBER        D_DOCNUMBER,
    DOCBASEDATE          TIMESTAMP,
    DOCBASE_ID           INTEGER,
    DOCTYPE              D_DOCTYPE,
    DOCNUMBER            D_DOCNUMBER,
    DOCDATE              TIMESTAMP,
    DOC_ID               INTEGER,
    CONTRACT_ID          D_INT,
    CONTRACTTYPE         D_DOCTYPE,
    CONTRACTNUMBER       D_DOCNUMBER,
    CONTRACTDATE         D_DOCDATE,
    RESPONSIBLE          D_INT,
    SUMNAT               D_SUMMA,
    SUMCUR               D_SUMMA,
    CURCODE              D_SMALLCODE,
    CURRATE              D_CURCOURCE,
    USER_ID              D_INT,
    FROM_ID              D_INT,
    TO_ID                D_INT,
    PLANNED              D_BOOLEAN,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE FINOPERMODEL (
    ID                   D_INT_IDEN NOT NULL,
    FOLDER_ID            D_INT_IDEN,
    MODELNAME            D_NAME,
    KEEPDATE             TIMESTAMP default 'now',
    COMMENT              D_COMMENT,
    DOCBASETYPE          D_DOCTYPE,
    DOCBASENUMBER        D_DOCNUMBER,
    DOCBASEDATE          TIMESTAMP,
    DOCBASE_ID           INTEGER,
    DOCTYPE              D_DOCTYPE,
    DOCNUMBER            D_DOCNUMBER,
    DOCDATE              TIMESTAMP,
    DOC_ID               INTEGER,
    CONTRACT_ID          D_INT,
    CONTRACTTYPE         D_DOCTYPE,
    CONTRACTNUMBER       D_DOCNUMBER,
    CONTRACTDATE         D_DOCDATE,
    RESPONSIBLE          D_INT,
    SUMNAT               D_SUMMA,
    SUMCUR               D_SUMMA,
    CURCODE              D_SMALLCODE,
    CURRATE              D_CURCOURCE,
    FROM_ID              D_INT,
    TO_ID                D_INT,
    PLANNED              D_BOOLEAN,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT,
    MODELDESTFOLDER_ID   D_INT,
    SOURCEFROM           INTEGER,
    SOURCETO             INTEGER,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE FINPERIOD (
    ID         D_INT_IDEN,
    PNAME      D_BIGCODE NOT NULL,
    DATEFROM   TIMESTAMP NOT NULL,
    DATETO     TIMESTAMP NOT NULL,
    WHOCLOSED  D_USERNAME,
    DATECLOSE  TIMESTAMP,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE FINSPEC (
    ID              D_INT_IDEN,
    FINOPER_ID      D_INT_IDEN,
    PARENT_ID       D_INT,
    SRCACC_ID       D_INT,
    DSTACC_ID       D_INT,
    SRCANL1_ID      D_INT,
    SRCANL2_ID      D_INT,
    SRCANL3_ID      D_INT,
    SRCANL4_ID      D_INT,
    SRCANL5_ID      D_INT,
    DSTANL1_ID      D_INT,
    DSTANL2_ID      D_INT,
    DSTANL3_ID      D_INT,
    DSTANL4_ID      D_INT,
    DSTANL5_ID      D_INT,
    SUMNAT          D_SUMMA,
    SUMCUR          D_SUMMA,
    SRCTURNACC_ID   D_INT,
    DSTTURNACC_ID   D_INT,
    SRCTURNFEAT_ID  D_INT,
    DSTTURNFEAT_ID  D_INT,
    PLANNED         D_BOOLEAN,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE FINSPECMODEL (
    ID          D_INT_IDEN,
    FINOPER_ID  D_INT_IDEN,
    PARENT_ID   D_INT,
    SRCACC_ID   D_INT,
    DSTACC_ID   D_INT,
    SRCANL1_ID  D_INT,
    SRCANL2_ID  D_INT,
    SRCANL3_ID  D_INT,
    SRCANL4_ID  D_INT,
    SRCANL5_ID  D_INT,
    DSTANL1_ID  D_INT,
    DSTANL2_ID  D_INT,
    DSTANL3_ID  D_INT,
    DSTANL4_ID  D_INT,
    DSTANL5_ID  D_INT,
    SUMNAT      D_SUMMA,
    SUMCUR      D_SUMMA,
    FORMULA     D_FORMULA,
    PLANNED     D_BOOLEAN,
    ALG_ID      D_INT,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE FINSTRUCTURE (
    ID         D_INT_IDEN,
    PARENT_ID  D_INT,
    CODE       D_BIGCODE NOT NULL,
    UPCODE     D_BIGCODE NOT NULL,
    SNAME      D_NAME,
    KIND       D_FINCENTER_KIND,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE FINTURNACC (
    ID              D_INT_IDEN,
    PERIOD_ID       D_INT,
    ACC_ID          D_INT,
    ANL1_ID         D_INT,
    ANL2_ID         D_INT,
    ANL3_ID         D_INT,
    ANL4_ID         D_INT,
    ANL5_ID         D_INT,
    REMNBEGCUR      D_SUMMA,
    REMNBEGNAT      D_SUMMA,
    REMNBEGCURPLAN  D_SUMMA,
    REMNBEGNATPLAN  D_SUMMA,
    CURCODE         D_SMALLCODE,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE FINTURNFEAT (
    ID              D_INT_IDEN,
    FINTURNACC_ID   D_INT,
    PERIOD_ID       D_INT,
    FEAT_ID         D_INT,
    FANL1_ID        D_INT,
    FANL2_ID        D_INT,
    FANL3_ID        D_INT,
    FANL4_ID        D_INT,
    FANL5_ID        D_INT,
    REMNBEGCUR      D_SUMMA,
    REMNBEGNAT      D_SUMMA,
    REMNBEGCURPLAN  D_SUMMA,
    REMNBEGNATPLAN  D_SUMMA,
    CURCODE         D_SMALLCODE,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE FOLDER (
    ID          D_INT_IDEN,
    PARENT_ID   D_INT,
    FNAME       D_NAME,
    FOLDERTYPE  SMALLINT,
    DATA        SMALLINT,
    FOLDER_TAG  D_NAME_N,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE FOLDER_RIGHTS (
    ID          D_INT_IDEN,
    GROUP_ID    D_INT_IDEN,
    FOLDERPART  SMALLINT,
    FOLDER_ID   D_INT_IDEN,
    RIGHTS      D_BOOLEAN,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE FORMULA (
    UPCODE           D_BIGCODE NOT NULL,
    CODE             D_BIGCODE NOT NULL,
    FNAME            D_NAME,
    STOREDPROCEDURE  D_STORED_PROC_NAME,
    CONTEXT          SMALLINT NOT NULL,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE FUEL_DENSITY_HEAD (
    ID             D_INT_IDEN NOT NULL,
    FOLDER_ID      D_INT,
    DATE_TIME      D_DATETIME,
    CONTRACTOR_ID  D_INT,
    CODE           D_BIGCODE,
    DHNAME         D_NAME NOT NULL,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE FUEL_DENSITY_SPEC (
    ID           D_INT_IDEN NOT NULL,
    HEAD_ID      D_INT_IDEN NOT NULL,
    DATE_TIME    D_DATETIME,
    TANK_ID      D_INT,
    FUEL_ID      D_INT,
    DENSITY      DOUBLE PRECISION,
    TEMPERATURE  DOUBLE PRECISION,
    OPERATOR_ID  D_INT,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE HR_ORDER (
    ID            D_INT_IDEN,
    FOLDER_ID     D_INT_IDEN,
    ORDER_NUMBER  D_DOCNUMBER NOT NULL,
    ORDER_DATE    D_DOCDATE NOT NULL,
    HEADER        D_FEATURE_STR,
    FOOTER        D_FEATURE_STR,
    ORDER_STATUS  D_SHORT,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE HR_ORDER_ITEM (
    ID            D_INT_IDEN,
    ORDER_ID      D_INT_IDEN,
    ITEM_KIND_ID  D_INT_IDEN,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE HR_ORDER_ITEM_KIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME,
    PRIORITY   D_INT,
    SYS_CODE   D_BIGCODE NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE HR_ORDER_ITEM_KIND_PARAM (
    ID            D_INT_IDEN,
    ITEM_KIND_ID  D_INT_IDEN,
    CODE          D_BIGCODE NOT NULL,
    NAME          D_NAME,
    PRIORITY      D_INT,
    PARAM_TYPE    D_SHORT,
    SYS_CODE      D_BIGCODE NOT NULL,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE HR_ORDER_ITEM_PARAM (
    ID                  D_INT_IDEN,
    ORDER_ITEM_ID       D_INT_IDEN,
    ITEM_KIND_PARAM_ID  D_INT_IDEN,
    PARAM_VALUE         D_FEATURE,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE HR_ORDER_ITEM_ROLLBACK (
    ID             D_INT_IDEN,
    ORDER_ITEM_ID  D_INT_IDEN,
    SYS_CODE       D_BIGCODE NOT NULL,
    PARAM_VALUE    D_FEATURE,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE HR_ORDER_MODEL (
    ID         D_INT_IDEN,
    FOLDER_ID  D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    HEADER     D_FEATURE_STR,
    FOOTER     D_FEATURE_STR,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE HR_ORDER_MODEL_ITEM (
    ID              D_INT_IDEN,
    ORDER_MODEL_ID  D_INT_IDEN,
    ITEM_KIND_ID    D_INT_IDEN,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE HR_ORDER_MODEL_ITEM_PARAM (
    ID                  D_INT_IDEN,
    MODEL_ITEM_ID       D_INT_IDEN,
    ITEM_KIND_PARAM_ID  D_INT_IDEN,
    PARAM_VALUE         D_FEATURE,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE INTERNALINVOICESPEC (
    REQUESTQUAN   D_MASS,
    REQUESTSUMMA  D_SUMMA,
    DOCSPEC_ID    D_INT_IDEN
);

CREATE TABLE INTERNALINVOICESPECMODEL (
    REQUESTQUAN   D_MASS,
    REQUESTSUMMA  D_SUMMA,
    DOCSPEC_ID    D_INT_IDEN
);

CREATE TABLE INVENTORY (
    ID              D_INT_IDEN,
    FOLDER_ID       D_INT_IDEN,
    PARENT_ID       INTEGER,
    GROUPNUM        CHAR(15),
    CARDNUM         CHAR(15),
    OBJNUM          CHAR(30),
    MANUFACTURER    VARCHAR(80),
    MODEL           VARCHAR(80),
    SERIALNUM       CHAR(15),
    PASSPNUM        CHAR(15),
    INOPERDOCNUM    D_DOCNUMBER,
    INOPERDATE      TIMESTAMP,
    OUTOPERDOCNUM   D_DOCNUMBER,
    OUTOPERDATE     TIMESTAMP,
    BALANCECOST     D_SUMMA,
    BEGINCOST       D_SUMMA,
    BEGINLOSS       D_SUMMA,
    AMORT           D_SUMMA,
    ENDCOST         D_SUMMA,
    BEGINLOSSDATE   TIMESTAMP,
    AMORTDATE       TIMESTAMP,
    ISCOMPLEX       SMALLINT,
    ISCOMMON        SMALLINT,
    FACTOR          FLOAT,
    ALGORITHM       SMALLINT,
    YEARAMORTRATE   D_RATIO,
    EXPLPERIOD_Y    FLOAT,
    EXPLPERIOD_M    FLOAT,
    PRODUCTION      FLOAT,
    ANL1_ID         INTEGER,
    ANL2_ID         INTEGER,
    ANL3_ID         INTEGER,
    ANL4_ID         INTEGER,
    ANL5_ID         INTEGER,
    ANLDB1_ID       INTEGER,
    ANLDB2_ID       INTEGER,
    ANLDB3_ID       INTEGER,
    ANLDB4_ID       INTEGER,
    ANLDB5_ID       INTEGER,
    ANLKT1_ID       INTEGER,
    ANLKT2_ID       INTEGER,
    ANLKT3_ID       INTEGER,
    ANLKT4_ID       INTEGER,
    ANLKT5_ID       INTEGER,
    COMMENT         D_COMMENT,
    CATALOG_ID      D_INT,
    INITIALLOSS     D_SUMMA,
    ACC_ID          D_INT,
    ACCDB_ID        D_INT,
    ACCKT_ID        D_INT,
    CONTRACTOR_ID   D_INT,
    AMCODE_ID       D_INT,
    INCOMEDOCNUM    D_DOCNUMBER,
    INCOMEDATE      D_DATE,
    INVNAME         D_BIGNAME,
    INVHEAD_ID      D_INT_IDEN NOT NULL,
    ACCKIND_ID      D_INT_IDEN NOT NULL,
    ACCGROUP_ID     D_INT,
    INVLOCATION_ID  D_INT,
    OKOF_ID         D_INT,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE INVENTORYACTHEAD (
    REALSUMMANAT  D_SUMMA,
    REALSUMMACUR  D_SUMMA,
    DOCHEAD_ID    D_INT_IDEN,
    CHAIRMAN      D_INT,
    ENDDATE       D_DATE
);

CREATE TABLE INVENTORYACTSPEC (
    REALQUANTITY   D_QUANTITY,
    REALSUMMA      D_SUMMA,
    DOCSPEC_ID     D_INT_IDEN,
    REALQUANTITY2  D_QUANTITY
);

CREATE TABLE INVHISTORY (
    ID                  D_INT_IDEN NOT NULL,
    INVENTORY_ID        D_INT_IDEN NOT NULL,
    AMORTIZATION_ID     D_INT,
    EO_ID               D_INT,
    ES_ID               D_INT,
    KIND                SMALLINT,
    DELTA_BALCOST       D_SUMMA,
    DELTA_DEPRVAL       D_SUMMA,
    REVAL_FACTOR        D_RATIO,
    REVAL_SUM           D_SUMMA,
    ACT_DATE            TIMESTAMP,
    DELTA_BEGINLOSS     D_SUMMA,
    DELTA_INITIALLOSS   D_SUMMA,
    OLD_INVLOCATION     D_BIGCODE,
    OLD_INVLOCATION_ID  D_INT,
    OLD_INOPERDOCNUM    D_DOCNUMBER,
    OLD_INOPERDATE      TIMESTAMP,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE INVLOCATION (
    UPCODE     D_BIGCODE NOT NULL,
    CODE       D_BIGCODE NOT NULL,
    ILNAME     D_NAME,
    ID         D_INT_IDEN,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE INVMETAL (
    ID          D_INT_IDEN NOT NULL,
    METAL_CODE  D_BIGCODE NOT NULL,
    MASS        DOUBLE PRECISION,
    INVHEAD_ID  D_INT_IDEN,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE INVOICEHEAD (
    DOCHEAD_ID              D_INT_IDEN,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    PARTNERFROM_BANKREQ     D_INT,
    PARTNERTO_BANKREQ       D_INT,
    TOPAYDOCNUMBER          D_DOCNUMBER,
    TOPAYDOCDATE            D_DATE,
    COMMENT                 D_DESCRIPTION,
    SHIPPER                 D_INT,
    CONSIGNEE               D_INT,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT
);

CREATE TABLE INVOICEHEADMODEL (
    DOCHEADMODEL_ID         D_INT_IDEN,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    PARTNERFROM_BANKREQ     D_INT,
    PARTNERTO_BANKREQ       D_INT,
    TOPAYDOCNUMBER          D_DOCNUMBER,
    TOPAYDOCDATE            D_DATE,
    COMMENT                 D_DESCRIPTION,
    SHIPPER                 D_INT,
    CONSIGNEE               D_INT,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT
);

CREATE TABLE INVOICESPEC (
    DOCSPEC_ID           D_INT_IDEN,
    DISCOUNT             D_RATIO,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    COST                 D_SUMMA,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE INVOICESPECMODEL (
    DOCSPECMODEL_ID      D_INT_IDEN,
    DISCOUNT             D_RATIO,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    COST                 D_SUMMA,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE JBPM_ACTION (
    ID_                     NUMERIC(18,0) NOT NULL,
    CLASS                   CHAR(1) NOT NULL,
    NAME_                   VARCHAR(255),
    ISPROPAGATIONALLOWED_   SMALLINT,
    ACTIONEXPRESSION_       VARCHAR(255),
    ISASYNC_                SMALLINT,
    REFERENCEDACTION_       NUMERIC(18,0),
    ACTIONDELEGATION_       NUMERIC(18,0),
    EVENT_                  NUMERIC(18,0),
    PROCESSDEFINITION_      NUMERIC(18,0),
    TIMERNAME_              VARCHAR(255),
    DUEDATE_                VARCHAR(255),
    REPEAT_                 VARCHAR(255),
    TRANSITIONNAME_         VARCHAR(255),
    TIMERACTION_            NUMERIC(18,0),
    EXPRESSION_             VARCHAR(4000),
    EVENTINDEX_             INTEGER,
    EXCEPTIONHANDLER_       NUMERIC(18,0),
    EXCEPTIONHANDLERINDEX_  INTEGER
);

CREATE TABLE JBPM_BYTEARRAY (
    ID_              NUMERIC(18,0) NOT NULL,
    NAME_            VARCHAR(255),
    FILEDEFINITION_  NUMERIC(18,0)
);

CREATE TABLE JBPM_BYTEBLOCK (
    PROCESSFILE_  NUMERIC(18,0) NOT NULL,
    BYTES_        bytea,
    INDEX_        INTEGER NOT NULL
);

CREATE TABLE JBPM_COMMENT (
    ID_                 NUMERIC(18,0) NOT NULL,
    VERSION_            INTEGER NOT NULL,
    ACTORID_            VARCHAR(255),
    TIME_               TIMESTAMP,
    MESSAGE_            VARCHAR(4000),
    TOKEN_              NUMERIC(18,0),
    TASKINSTANCE_       NUMERIC(18,0),
    TOKENINDEX_         INTEGER,
    TASKINSTANCEINDEX_  INTEGER
);

CREATE TABLE JBPM_DECISIONCONDITIONS (
    DECISION_        NUMERIC(18,0) NOT NULL,
    TRANSITIONNAME_  VARCHAR(255),
    EXPRESSION_      VARCHAR(255),
    INDEX_           INTEGER NOT NULL
);

CREATE TABLE JBPM_DELEGATION (
    ID_                 NUMERIC(18,0) NOT NULL,
    CLASSNAME_          VARCHAR(4000),
    CONFIGURATION_      VARCHAR(4000),
    CONFIGTYPE_         VARCHAR(255),
    PROCESSDEFINITION_  NUMERIC(18,0)
);

CREATE TABLE JBPM_EVENT (
    ID_                 NUMERIC(18,0) NOT NULL,
    EVENTTYPE_          VARCHAR(255),
    TYPE_               CHAR(1),
    GRAPHELEMENT_       NUMERIC(18,0),
    NODE_               NUMERIC(18,0),
    PROCESSDEFINITION_  NUMERIC(18,0),
    TRANSITION_         NUMERIC(18,0),
    TASK_               NUMERIC(18,0)
);

CREATE TABLE JBPM_EXCEPTIONHANDLER (
    ID_                  NUMERIC(18,0) NOT NULL,
    EXCEPTIONCLASSNAME_  VARCHAR(4000),
    TYPE_                CHAR(1),
    GRAPHELEMENT_        NUMERIC(18,0),
    NODE_                NUMERIC(18,0),
    GRAPHELEMENTINDEX_   INTEGER,
    PROCESSDEFINITION_   NUMERIC(18,0),
    TRANSITION_          NUMERIC(18,0),
    TASK_                NUMERIC(18,0)
);

CREATE TABLE JBPM_JOB (
    ID_                NUMERIC(18,0) NOT NULL,
    CLASS_             CHAR(1) NOT NULL,
    VERSION_           INTEGER NOT NULL,
    DUEDATE_           TIMESTAMP,
    PROCESSINSTANCE_   NUMERIC(18,0),
    TOKEN_             NUMERIC(18,0),
    TASKINSTANCE_      NUMERIC(18,0),
    ISSUSPENDED_       SMALLINT,
    ISEXCLUSIVE_       SMALLINT,
    LOCKOWNER_         VARCHAR(255),
    LOCKTIME_          TIMESTAMP,
    EXCEPTION_         VARCHAR(4000),
    RETRIES_           INTEGER,
    NAME_              VARCHAR(255),
    REPEAT_            VARCHAR(255),
    TRANSITIONNAME_    VARCHAR(255),
    ACTION_            NUMERIC(18,0),
    GRAPHELEMENTTYPE_  VARCHAR(255),
    GRAPHELEMENT_      NUMERIC(18,0),
    NODE_              NUMERIC(18,0)
);

CREATE TABLE JBPM_LOG (
    ID_                NUMERIC(18,0) NOT NULL,
    CLASS_             CHAR(1) NOT NULL,
    INDEX_             INTEGER,
    DATE_              TIMESTAMP,
    TOKEN_             NUMERIC(18,0),
    PARENT_            NUMERIC(18,0),
    SWIMLANEINSTANCE_  NUMERIC(18,0),
    TASKINSTANCE_      NUMERIC(18,0),
    TRANSITION_        NUMERIC(18,0),
    TASKACTORID_       VARCHAR(255),
    MESSAGE_           VARCHAR(4000),
    SOURCENODE_        NUMERIC(18,0),
    DESTINATIONNODE_   NUMERIC(18,0),
    TASKOLDACTORID_    VARCHAR(255),
    CHILD_             NUMERIC(18,0),
    NODE_              NUMERIC(18,0),
    ENTER_             TIMESTAMP,
    LEAVE_             TIMESTAMP,
    DURATION_          NUMERIC(18,0),
    NEWLONGVALUE_      NUMERIC(18,0),
    VARIABLEINSTANCE_  NUMERIC(18,0),
    OLDSTRINGIDCLASS_  VARCHAR(255),
    OLDSTRINGIDVALUE_  VARCHAR(255),
    NEWSTRINGIDCLASS_  VARCHAR(255),
    NEWSTRINGIDVALUE_  VARCHAR(255),
    OLDBYTEARRAY_      NUMERIC(18,0),
    NEWBYTEARRAY_      NUMERIC(18,0),
    OLDDOUBLEVALUE_    DOUBLE PRECISION,
    NEWDOUBLEVALUE_    DOUBLE PRECISION,
    OLDLONGVALUE_      NUMERIC(18,0),
    OLDLONGIDCLASS_    VARCHAR(255),
    OLDLONGIDVALUE_    NUMERIC(18,0),
    NEWLONGIDCLASS_    VARCHAR(255),
    NEWLONGIDVALUE_    NUMERIC(18,0),
    OLDDATEVALUE_      TIMESTAMP,
    NEWDATEVALUE_      TIMESTAMP,
    OLDSTRINGVALUE_    VARCHAR(4000),
    NEWSTRINGVALUE_    VARCHAR(4000),
    EXCEPTION_         VARCHAR(4000),
    ACTION_            NUMERIC(18,0)
);

CREATE TABLE JBPM_MODULEDEFINITION (
    ID_                 NUMERIC(18,0) NOT NULL,
    CLASS_              CHAR(1) NOT NULL,
    NAME_               VARCHAR(4000),
    PROCESSDEFINITION_  NUMERIC(18,0),
    STARTTASK_          NUMERIC(18,0)
);

CREATE TABLE JBPM_MODULEINSTANCE (
    ID_                  NUMERIC(18,0) NOT NULL,
    CLASS_               CHAR(1) NOT NULL,
    VERSION_             INTEGER NOT NULL,
    PROCESSINSTANCE_     NUMERIC(18,0),
    TASKMGMTDEFINITION_  NUMERIC(18,0),
    NAME_                VARCHAR(255)
);

CREATE TABLE JBPM_NODE (
    ID_                    NUMERIC(18,0) NOT NULL,
    CLASS_                 CHAR(1) NOT NULL,
    NAME_                  VARCHAR(255),
    DESCRIPTION_           VARCHAR(4000),
    PROCESSDEFINITION_     NUMERIC(18,0),
    ISASYNC_               SMALLINT,
    ISASYNCEXCL_           SMALLINT,
    ACTION_                NUMERIC(18,0),
    SUPERSTATE_            NUMERIC(18,0),
    DECISIONEXPRESSION_    VARCHAR(255),
    DECISIONDELEGATION     NUMERIC(18,0),
    SUBPROCNAME_           VARCHAR(255),
    SCRIPT_                NUMERIC(18,0),
    SUBPROCESSDEFINITION_  NUMERIC(18,0),
    SIGNAL_                INTEGER,
    CREATETASKS_           SMALLINT,
    ENDTASKS_              SMALLINT,
    NODECOLLECTIONINDEX_   INTEGER
);

CREATE TABLE JBPM_POOLEDACTOR (
    ID_                NUMERIC(18,0) NOT NULL,
    VERSION_           INTEGER NOT NULL,
    ACTORID_           VARCHAR(255),
    SWIMLANEINSTANCE_  NUMERIC(18,0)
);

CREATE TABLE JBPM_PROCESSDEFINITION (
    ID_                     NUMERIC(18,0) NOT NULL,
    CLASS_                  CHAR(1) NOT NULL,
    NAME_                   VARCHAR(255),
    DESCRIPTION_            VARCHAR(4000),
    VERSION_                INTEGER,
    ISTERMINATIONIMPLICIT_  SMALLINT,
    STARTSTATE_             NUMERIC(18,0)
);

CREATE TABLE JBPM_PROCESSINSTANCE (
    ID_                 NUMERIC(18,0) NOT NULL,
    VERSION_            INTEGER NOT NULL,
    KEY_                VARCHAR(255),
    START_              TIMESTAMP,
    END_                TIMESTAMP,
    ISSUSPENDED_        SMALLINT,
    PROCESSDEFINITION_  NUMERIC(18,0),
    ROOTTOKEN_          NUMERIC(18,0),
    SUPERPROCESSTOKEN_  NUMERIC(18,0)
);

CREATE TABLE JBPM_RUNTIMEACTION (
    ID_                    NUMERIC(18,0) NOT NULL,
    VERSION_               INTEGER NOT NULL,
    EVENTTYPE_             VARCHAR(255),
    TYPE_                  CHAR(1),
    GRAPHELEMENT_          NUMERIC(18,0),
    PROCESSINSTANCE_       NUMERIC(18,0),
    ACTION_                NUMERIC(18,0),
    PROCESSINSTANCEINDEX_  INTEGER
);

CREATE TABLE JBPM_SWIMLANE (
    ID_                      NUMERIC(18,0) NOT NULL,
    NAME_                    VARCHAR(255),
    ACTORIDEXPRESSION_       VARCHAR(255),
    POOLEDACTORSEXPRESSION_  VARCHAR(255),
    ASSIGNMENTDELEGATION_    NUMERIC(18,0),
    TASKMGMTDEFINITION_      NUMERIC(18,0)
);

CREATE TABLE JBPM_SWIMLANEINSTANCE (
    ID_                NUMERIC(18,0) NOT NULL,
    VERSION_           INTEGER NOT NULL,
    NAME_              VARCHAR(255),
    ACTORID_           VARCHAR(255),
    SWIMLANE_          NUMERIC(18,0),
    TASKMGMTINSTANCE_  NUMERIC(18,0)
);

CREATE TABLE JBPM_TASK (
    ID_                      NUMERIC(18,0) NOT NULL,
    NAME_                    VARCHAR(255),
    DESCRIPTION_             VARCHAR(4000),
    PROCESSDEFINITION_       NUMERIC(18,0),
    ISBLOCKING_              SMALLINT,
    ISSIGNALLING_            SMALLINT,
    CONDITION_               VARCHAR(255),
    DUEDATE_                 VARCHAR(255),
    PRIORITY_                INTEGER,
    ACTORIDEXPRESSION_       VARCHAR(255),
    POOLEDACTORSEXPRESSION_  VARCHAR(255),
    TASKMGMTDEFINITION_      NUMERIC(18,0),
    TASKNODE_                NUMERIC(18,0),
    STARTSTATE_              NUMERIC(18,0),
    ASSIGNMENTDELEGATION_    NUMERIC(18,0),
    SWIMLANE_                NUMERIC(18,0),
    TASKCONTROLLER_          NUMERIC(18,0)
);

CREATE TABLE JBPM_TASKACTORPOOL (
    POOLEDACTOR_   NUMERIC(18,0) NOT NULL,
    TASKINSTANCE_  NUMERIC(18,0) NOT NULL
);

CREATE TABLE JBPM_TASKCONTROLLER (
    ID_                        NUMERIC(18,0) NOT NULL,
    TASKCONTROLLERDELEGATION_  NUMERIC(18,0)
);

CREATE TABLE JBPM_TASKINSTANCE (
    ID_                NUMERIC(18,0) NOT NULL,
    CLASS_             CHAR(1) NOT NULL,
    VERSION_           INTEGER NOT NULL,
    NAME_              VARCHAR(255),
    DESCRIPTION_       VARCHAR(4000),
    ACTORID_           VARCHAR(255),
    CREATE_            TIMESTAMP,
    START_             TIMESTAMP,
    END_               TIMESTAMP,
    DUEDATE_           TIMESTAMP,
    PRIORITY_          INTEGER,
    ISCANCELLED_       SMALLINT,
    ISSUSPENDED_       SMALLINT,
    ISOPEN_            SMALLINT,
    ISSIGNALLING_      SMALLINT,
    ISBLOCKING_        SMALLINT,
    TASK_              NUMERIC(18,0),
    TOKEN_             NUMERIC(18,0),
    PROCINST_          NUMERIC(18,0),
    SWIMLANINSTANCE_   NUMERIC(18,0),
    TASKMGMTINSTANCE_  NUMERIC(18,0)
);

CREATE TABLE JBPM_TOKEN (
    ID_                        NUMERIC(18,0) NOT NULL,
    VERSION_                   INTEGER NOT NULL,
    NAME_                      VARCHAR(255),
    START_                     TIMESTAMP,
    END_                       TIMESTAMP,
    NODEENTER_                 TIMESTAMP,
    NEXTLOGINDEX_              INTEGER,
    ISABLETOREACTIVATEPARENT_  SMALLINT,
    ISTERMINATIONIMPLICIT_     SMALLINT,
    ISSUSPENDED_               SMALLINT,
    LOCK_                      VARCHAR(255),
    NODE_                      NUMERIC(18,0),
    PROCESSINSTANCE_           NUMERIC(18,0),
    PARENT_                    NUMERIC(18,0),
    SUBPROCESSINSTANCE_        NUMERIC(18,0)
);

CREATE TABLE JBPM_TOKENVARIABLEMAP (
    ID_               NUMERIC(18,0) NOT NULL,
    VERSION_          INTEGER NOT NULL,
    TOKEN_            NUMERIC(18,0),
    CONTEXTINSTANCE_  NUMERIC(18,0)
);

CREATE TABLE JBPM_TRANSITION (
    ID_                 NUMERIC(18,0) NOT NULL,
    NAME_               VARCHAR(255),
    DESCRIPTION_        VARCHAR(4000),
    PROCESSDEFINITION_  NUMERIC(18,0),
    FROM_               NUMERIC(18,0),
    TO_                 NUMERIC(18,0),
    CONDITION_          VARCHAR(255),
    FROMINDEX_          INTEGER
);

CREATE TABLE JBPM_VARIABLEACCESS (
    ID_              NUMERIC(18,0) NOT NULL,
    VARIABLENAME_    VARCHAR(255),
    ACCESS_          VARCHAR(255),
    MAPPEDNAME_      VARCHAR(255),
    PROCESSSTATE_    NUMERIC(18,0),
    TASKCONTROLLER_  NUMERIC(18,0),
    INDEX_           INTEGER,
    SCRIPT_          NUMERIC(18,0)
);

CREATE TABLE JBPM_VARIABLEINSTANCE (
    ID_                NUMERIC(18,0) NOT NULL,
    CLASS_             CHAR(1) NOT NULL,
    VERSION_           INTEGER NOT NULL,
    NAME_              VARCHAR(255),
    CONVERTER_         CHAR(1),
    TOKEN_             NUMERIC(18,0),
    TOKENVARIABLEMAP_  NUMERIC(18,0),
    PROCESSINSTANCE_   NUMERIC(18,0),
    LONGIDCLASS_       VARCHAR(255),
    STRINGIDCLASS_     VARCHAR(255),
    STRINGVALUE_       VARCHAR(255),
    DATEVALUE_         TIMESTAMP,
    LONGVALUE_         NUMERIC(18,0),
    BYTEARRAYVALUE_    NUMERIC(18,0),
    DOUBLEVALUE_       DOUBLE PRECISION,
    TASKINSTANCE_      NUMERIC(18,0)
);

CREATE TABLE JG_APP_PRINCIPAL (
    ID    INTEGER NOT NULL,
    NAME  VARCHAR(255) NOT NULL
);

CREATE TABLE JG_CREDENTIAL (
    ID                 INTEGER NOT NULL,
    USER_ID            INTEGER NOT NULL,
    PUBLIC_VISIBILITY  BOOLEAN NOT NULL,
    CRED_NAME          VARCHAR(255) NOT NULL,
    CRED_VALUE         VARCHAR(255) NOT NULL
);

CREATE TABLE JG_DOMAIN (
    ID    INTEGER NOT NULL,
    NAME  VARCHAR(255) NOT NULL
);

CREATE TABLE JG_PERMISSION (
    ID         INTEGER NOT NULL,
    CLASS      VARCHAR(255),
    NAME       VARCHAR(255) NOT NULL,
    ACTIONS    VARCHAR(255),
    DOMAIN_ID  INTEGER
);

CREATE TABLE JG_PRINCIPAL (
    ID                INTEGER NOT NULL,
    NAME              VARCHAR(255) NOT NULL,
    APPLICATION_NAME  VARCHAR(255) NOT NULL,
    CLASS_NAME        VARCHAR(255) NOT NULL
);

CREATE TABLE JG_PRINCIPAL_DOMAIN (
    DOMAIN_ID     INTEGER NOT NULL,
    PRINCIPAL_ID  INTEGER NOT NULL
);

CREATE TABLE JG_PRINCIPAL_HIERARCHY (
    PRINCIPAL_ASC_ID   INTEGER NOT NULL,
    PRINCIPAL_DESC_ID  INTEGER NOT NULL
);

CREATE TABLE JG_PRINCIPAL_PERMISSION (
    PERMISSION_ID  INTEGER NOT NULL,
    PRINCIPAL_ID   INTEGER NOT NULL
);

CREATE TABLE JG_ST_CREDENTIAL (
    ID                 INTEGER NOT NULL,
    CRED_NAME          VARCHAR(255) NOT NULL,
    PUBLIC_VISIBILITY  BOOLEAN NOT NULL,
    REQUIRED           BOOLEAN NOT NULL,
    IDTITY             BOOLEAN NOT NULL,
    ST_USER_ID         INTEGER
);

CREATE TABLE JG_ST_PRINCIPAL (
    ID                INTEGER NOT NULL,
    NAME              VARCHAR(255) NOT NULL,
    APPLICATION_NAME  VARCHAR(255) NOT NULL,
    CLASS_NAME        VARCHAR(255) NOT NULL,
    ST_USER_ID        INTEGER NOT NULL
);

CREATE TABLE JG_ST_USER (
    ID    INTEGER NOT NULL,
    NAME  VARCHAR(255) NOT NULL
);

CREATE TABLE JG_USER (
    ID  INTEGER NOT NULL
);

CREATE TABLE JG_USER_PRINCIPAL (
    USER_ID       INTEGER NOT NULL,
    PRINCIPAL_ID  INTEGER NOT NULL,
    DEFINITION    VARCHAR(255),
    "active"      BOOLEAN
);

CREATE TABLE LINKSTAGE (
    ID            D_INT_IDEN,
    PREVSTAGE_ID  D_INT_IDEN,
    NEXTSTAGE_ID  D_INT_IDEN,
    DIRECTLY      D_BOOLEAN NOT NULL,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE LS_CONFIG (
    DEFAULT_FOLDER_ID  D_INT,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE LS_ITEM (
    ID                   D_INT_IDEN,
    SCHEDULE_ID          D_INT,
    COMMENTS             D_COMMENT,
    NUM                  D_SHORT,
    ITEMKIND_ID          D_INT,
    STATUS               D_SHORT,
    TOSOURCE             D_SHORT,
    FROMSOURCE           D_SHORT,
    FROM_ID              D_INT,
    TO_ID                D_INT,
    RESOURCEFROM_ID      D_INT,
    RESOURCETO_ID        D_INT,
    SPECSOURCE           D_SHORT,
    HAS_SPEC             D_BOOLEAN,
    PRICELISTHEAD_ID     D_INT,
    PRICETYPE_ID         D_INT,
    ABS_DATE             D_DATE,
    IS_ABS_DATE          D_BOOLEAN,
    DATEOFFSETKIND       D_SHORT,
    DATEOFFSET           D_INT,
    DATERELITEM_ID       D_INT,
    ABS_SUM              D_SUMMA,
    IS_ABS_SUM           D_BOOLEAN,
    RESULTDATE           D_DATE,
    IS_RELFACT           D_BOOLEAN,
    SUMRELITEM_ID        D_INT,
    FACTSUM              D_SUMMA,
    RESULTSUM            D_SUMMA,
    CURRATEAUTHORITY_ID  D_INT,
    CURRATETYPE_ID       D_INT,
    CURCODE              D_SMALLCODE,
    IS_DATERELDOC        D_BOOLEAN,
    IS_SUMRELDOC         D_BOOLEAN,
    PERC                 D_QUANTITY,
    RESULTDATEEND        D_DATE,
    IS_DATERELEND        D_BOOLEAN,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE LS_ITEMKIND (
    ID         D_INT_IDEN,
    NAME       D_NAME_N,
    CODE       D_BIGCODE NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE LS_ITEMSPEC (
    ID           D_INT_IDEN,
    ITEM_ID      D_INT,
    DOCSPEC_ID   D_INT,
    CATALOG_ID   D_INT,
    PRICE        D_SUMMA,
    CLEARPRICE   D_SUMMA,
    SUMMA        D_SUMMA,
    CLEARSUMMA   D_SUMMA,
    QTY1         D_QUANTITY,
    QTY2         D_QUANTITY,
    MEASURE1_ID  D_INT,
    MEASURE2_ID  D_INT,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE LS_ITEMSPECALT (
    ID           D_INT_IDEN,
    ITEMSPEC_ID  D_INT,
    CATALOG_ID   D_INT,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE LS_ITEMSPECTAX (
    ID           D_INT_IDEN,
    ITEMSPEC_ID  D_INT,
    TAX_ID       D_INT,
    SUMMA        D_SUMMA,
    PRICE        D_SUMMA,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE LS_SCHEDULE (
    ID         D_INT_IDEN,
    FOLDER_ID  D_INT,
    COMMENTS   D_COMMENT,
    NAME       D_NAME_N,
    STATUS     D_SHORT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE LS_SCHEDULE_DOCHEAD (
    ID              D_INT_IDEN NOT NULL,
    LS_SCHEDULE_ID  D_INT_IDEN,
    DOCHEAD_ID      D_INT_IDEN,
    CLIENT_ID       D_INT_IDEN
);

CREATE TABLE MBPM_RESOURCE (
    ID             D_INT_IDEN,
    RESOURCE_NAME  D_NAME,
    RESOURCE_KEY   D_BIGCODE NOT NULL,
    CLIENT_ID      D_INT_IDEN,
    USER_ID        D_INT
);

CREATE TABLE MBPM_RESOURCE_GROUP_LINK (
    ID           D_INT_IDEN,
    GROUP_ID     D_INT_IDEN,
    RESOURCE_ID  D_INT_IDEN
);

CREATE TABLE MEASURE (
    ID              D_INT_IDEN,
    UPCODE          D_SMALLCODE NOT NULL,
    CODE            D_SMALLCODE NOT NULL,
    MNAME           D_NAME NOT NULL,
    DIVIDE          D_BOOLEAN,
    UNIVERSAL_CODE  D_SMALLCODE,
    CLIENT_ID       D_INT_IDEN DEFAULT 1,
    INTERNAL_CODE   D_BIGCODE
);

CREATE TABLE METAL (
    UPCODE     D_BIGCODE NOT NULL,
    CODE       D_BIGCODE NOT NULL,
    MNAME      D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_BOM (
    ID                    D_INT_IDEN,
    BOM_TYPE              D_MF_BOM_TYPE,
    BOM_STATUS            D_MF_BOM_STATUS,
    CATALOG_ID            D_INT_IDEN,
    DEF_SRC_STOCK_ID      D_INT_IDEN,
    DEF_DST_STOCK_ID      D_INT_IDEN,
    DEF_SRC_MOL_ID        D_INT,
    DEF_DST_MOL_ID        D_INT,
    REVISION              INTEGER,
    FOLDER_ID             D_INT_IDEN,
    REVISION_DATETIME     D_DATETIME,
    STD_COST_DETAIL_ID    D_INT_IDEN,
    ROLLUP_DATETIME       D_DATETIME,
    SETUP_TICKS           D_MF_TICK,
    SETUP_TIME_UM         D_INT_IDEN,
    RUN_TICKS             D_MF_TICK,
    RUN_TIME_UM           D_INT_IDEN,
    SCHED_DIRECTION       D_MF_SCHEDULE_DIR,
    USE_MOVE_TIMES        D_BOOLEAN,
    USE_QUEUE_TIMES       D_BOOLEAN,
    USE_FINITE_CAPACITY   D_BOOLEAN,
    PRIORITY              D_RATIO,
    PRIORITY_FREEZE_FLAG  D_BOOLEAN,
    CELL_ID               D_INT,
    PCS_PER_HR_CELL       D_MF_CAPACITY,
    APPROVED_FLAG         D_BOOLEAN,
    BOM_VERSION_REQUIRED  D_BOOLEAN,
    CREATE_JOB_APPROVED   D_BOOLEAN,
    COMMENT               D_COMMENT,
    MIN_LOT_QTY           D_QUANTITY,
    MAX_LOT_QTY           D_QUANTITY,
    LOT_INCREMENT_QTY     D_QUANTITY,
    PLANNING_LOT_QTY      D_QUANTITY,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_BOM_LABOR (
    LABOR_CLASS_ID         D_INT_IDEN,
    BOM_ROUTE_RESOURCE_ID  D_INT_IDEN,
    RUN_TICKS_LBR          D_MF_CAPACITY,
    RUN_TIME_LBR_UM        D_INT_IDEN,
    LBR_NUMBER             D_QUANTITY_EXT,
    LBR_BACKFLUSH_FLAG     D_BOOLEAN,
    LBR_OH_BACKFLUSH_FLAG  D_BOOLEAN
);

CREATE TABLE MF_BOM_MACHINE (
    BOM_ROUTE_RESOURCE_ID    D_INT_IDEN,
    TIME_RATE_FLAG           D_MF_LBR_TIME_RATE_FLAG,
    RUN_TICKS_MCH            D_MF_CAPACITY,
    RUN_TIME_MCH_UM          D_INT_IDEN,
    MCH_NUMBER               D_QUANTITY_EXT,
    MCH_RECOVERY_FLAG        D_MF_MCH_RECOVERY_FLAG,
    MCH_RATE                 D_SUMMA_EXT,
    MCH_RATE_CUR_CODE        D_SMALLCODE NOT NULL,
    MCH_COST_CATEGORY_ID     D_INT,
    MCH_BACKFLUSH_FLAG       D_BOOLEAN,
    MCH_OH_ALLOCATION_FLAG   D_MF_MCH_OH_ALLOCATION_FLAG,
    MCH_OH_RATE              D_SUMMA_EXT,
    MCH_OH_RATE_CUR_CODE     D_SMALLCODE NOT NULL,
    MCH_OH_RATIO             D_RATIO,
    MCH_OH_COST_CATEGORY_ID  D_INT,
    MCH_OH_BACKFLUSH_FLAG    D_BOOLEAN
);

CREATE TABLE MF_BOM_MATERIAL (
    BOM_ROUTE_RESOURCE_ID    D_INT_IDEN,
    CATALOG_ID               D_INT_IDEN,
    REVISION                 D_INT,
    VIEW_SEQUENCE            D_INT NOT NULL,
    REPORT_SEQUENCE          D_INT,
    PROBABLE                 D_RATIO,
    QUANTITY_RATE_FLAG       D_MF_MTL_QUAN_RATE_FLAG,
    MTL_QTY                  D_QUANTITY_EXT,
    SCRAP_FACTOR             D_RATIO,
    MEASURE_ID               D_INT_IDEN,
    MTL_COST_CATEGORY_ID     D_INT,
    MTL_BACKFLUSH_FLAG       D_BOOLEAN,
    BACKFLUSH_ZONE_ID        D_INT,
    MTL_OH_ALLOCATION_FLAG   D_MF_MTL_OH_ACCLOC_FLAG,
    MTL_OH_RATE              D_SUMMA_EXT,
    CURRENCY_CODE            D_SMALLCODE NOT NULL,
    MTL_OH_RATIO             D_RATIO,
    MTL_OH_COST_CATEGORY_ID  D_INT,
    MTL_OH_BACKFLUSH_FLAG    D_BOOLEAN
);

CREATE TABLE MF_BOM_ROUTE (
    ID                    D_INT_IDEN,
    BOM_ID                D_INT_IDEN,
    OPER_NUM              D_INT,
    DESCRIPTION           D_BIGNAME,
    EFF_ON_DATE           D_DATE,
    EFF_OFF_DATE          D_DATE,
    WC_ID                 D_INT_IDEN,
    EFFICIENCY            D_RATIO,
    MOVE_TICKS            D_MF_TICK,
    MOVE_TIME_UM          D_INT_IDEN,
    SETUP_TICKS           D_MF_TICK,
    SETUP_TIME_UM         D_INT_IDEN,
    RUN_TICKS             D_MF_TICK,
    RUN_TIME_UM           D_INT_IDEN,
    SCHED_TICKS           D_MF_TICK,
    SCHED_TIME_UM         D_INT_IDEN,
    SCHED_OFFSET_TICKS    D_MF_TICK,
    SCHED_OFFSET_TIME_UM  D_INT_IDEN,
    QUEUE_TICKS           D_MF_TICK,
    QUEUE_TIME_UM         D_INT_IDEN,
    CONTROL_POINT_FLAG    D_BOOLEAN,
    STD_COST_DETAIL_ID    D_INT_IDEN,
    COMMENT               D_COMMENT,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_BOM_ROUTE_RESOURCE (
    ID                  D_INT_IDEN,
    RESOURCE_GROUP_ID   D_INT,
    BOM_OPER_ID         D_INT_IDEN,
    RESOURCE_TYPE       D_MF_RESOURCE_TYPE,
    TIME_SEQUENCE       D_INT,
    EFF_ON_DATE         D_DATE,
    EFF_OFF_DATE        D_DATE,
    STD_COST_DETAIL_ID  D_INT_IDEN,
    COMMENT             D_COMMENT,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_CELL (
    ID                 D_INT_IDEN,
    WEEK_CAL_ID        D_INT_IDEN,
    CELL_NAME          D_NAME,
    BOTTLE_NECK_WC_ID  D_INT,
    CAPACITY_FACTOR    D_RATIO,
    COMMENT            D_COMMENT,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_CONFIG (
    TICK_UM                       D_INT_IDEN,
    MAIN_TIME_UM                  D_INT_IDEN,
    BASE_CURRENCY                 D_SMALLCODE,
    NAT_CURRENCY                  D_SMALLCODE,
    CURRENCY_RATE_AUTHORITY       D_INT,
    CURRENCY_RATE_TYPE            D_INT,
    CURRENCY_PREC                 SMALLINT,
    INPUT_MATERIAL_MODEL_BF       D_INT,
    INPUT_LABOR_MODEL_BF          D_INT,
    INPUT_MACHINE_MODEL_BF        D_INT,
    LABOR_TIME                    D_INT,
    MACHINE_TIME                  D_INT,
    MATERIAL_OVERHEAD             D_INT,
    LABOR_OVERHEAD                D_INT,
    MACHINE_OVERHEAD              D_INT,
    PURCHASE_ORDER_MODEL_MRP_REC  D_INT,
    SCRAP_MATERIAL_MODEL          D_INT,
    SCRAP_LABOR_MODEL             D_INT,
    SCRAP_MACHINE_MODEL           D_INT,
    VARIANCE_DOCUMENT_MODEL       D_INT,
    CLIENT_ID                     D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE MF_COST_CATEGORIES (
    ID                    D_INT_IDEN,
    CODE                  D_BIGCODE,
    DESCRIPTION           D_BIGNAME,
    VIEW_ORDER            D_INT,
    CALCULATION_SEQUENCE  D_INT,
    FORMULA_ID            D_INT_IDEN NOT NULL,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_COST_DETAIL (
    ID         D_INT_IDEN,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_COST_DETAIL_LINE (
    ID                  D_INT_IDEN,
    COST_DETAIL_ID      D_INT_IDEN,
    COST_CATEGORIES_ID  D_INT_IDEN,
    SUMMA               D_SUMMA,
    CURRENCY_CODE       D_SMALLCODE NOT NULL,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_CREW (
    ID         D_INT_IDEN,
    CODE       D_MEDIUMCODE,
    NAME       D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_DAY_CAL (
    ID            D_INT_IDEN,
    CODE          D_BIGCODE,
    DAY_CAL_NAME  D_NAME,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_DAY_TIME (
    ID          D_INT_IDEN,
    DAY_CAL_ID  D_INT_IDEN,
    START_TICK  D_MF_TICK,
    TICKS       D_MF_TICK,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_INPUT_DOC_HEAD (
    DOCHEAD_ID          D_INT_IDEN,
    OUTPUT_DOC_HEAD_ID  D_INT,
    BACKFLUSH_FLAG      D_BOOLEAN,
    CONTRACTOR_ID       D_INT,
    WC_ID               D_INT,
    JOB_ID              D_INT,
    OPER_ID             D_INT,
    CREW_ID             D_INT,
    EMPLOYEE_ID         D_INT
);

CREATE TABLE MF_INPUT_DOC_HEAD_MODEL (
    DOCHEADMODEL_ID     D_INT_IDEN,
    OUTPUT_DOC_HEAD_ID  D_INT,
    BACKFLUSH_FLAG      D_BOOLEAN,
    CONTRACTOR_ID       D_INT,
    WC_ID               D_INT,
    JOB_ID              D_INT,
    OPER_ID             D_INT,
    CREW_ID             D_INT,
    EMPLOYEE_ID         D_INT
);

CREATE TABLE MF_INPUT_DOC_SPEC (
    DOCSPEC_ID             D_INT_IDEN,
    JOB_ROUTE_RESOURCE_ID  D_INT_IDEN,
    COST_CATEGORY_ID       D_INT
);

CREATE TABLE MF_JOB (
    ID                      D_INT_IDEN,
    DEF_SRC_STOCK_ID        D_INT_IDEN,
    DEF_DST_STOCK_ID        D_INT_IDEN,
    DEF_SRC_MOL_ID          D_INT,
    DEF_DST_MOL_ID          D_INT,
    JOB_NUMBER              D_DOCNUMBER,
    JOB_DATE                D_DOCDATE,
    JOB_STATUS              D_MF_JOB_STATUS,
    FOLDER_ID               D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN,
    QTY_RELEASED            D_QUANTITY DEFAULT 0,
    QTY_COMPLETE            D_QUANTITY DEFAULT 0,
    QTY_SCRAPPED            D_QUANTITY DEFAULT 0,
    PARENT_JOB_ID           D_INT,
    ROOT_JOB_ID             D_INT,
    STD_COST_DETAIL_ID      D_INT,
    ACT_WIP_COST_DETAIL_ID  D_INT,
    ROLLUP_DATETIME         D_DATETIME,
    START_DATE              D_DATE,
    END_DATE                D_DATE,
    START_TICK              D_MF_TICK,
    END_TICK                D_MF_TICK,
    START_JOB               D_MF_TICK DEFAULT 0,
    FINISH_JOB              D_MF_TICK DEFAULT 0,
    SCHED_DIRECTION         D_MF_SCHEDULE_DIR,
    USE_MOVE_TIMES          D_BOOLEAN DEFAULT FALSE,
    USE_QUEUE_TIMES         D_BOOLEAN DEFAULT FALSE,
    USE_FINITE_CAPACITY     D_BOOLEAN DEFAULT FALSE,
    PRIORITY                D_RATIO DEFAULT 0,
    PRIORITY_FREEZE_FLAG    D_BOOLEAN DEFAULT FALSE,
    MRP_END_DATE            D_DATE,
    CELL_ID                 D_INT,
    CHANGE_JOB_APPROVED     D_BOOLEAN,
    COMMENT                 D_COMMENT,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_JOB_LABOR (
    JOB_ROUTE_RESOURCE_ID    D_INT_IDEN,
    TIME_RATE_FLAG           D_MF_LBR_TIME_RATE_FLAG,
    RUN_TICKS_LBR            D_MF_CAPACITY DEFAULT 0,
    RUN_TIME_LBR_UM          D_INT_IDEN,
    LBR_NUMBER               D_QUANTITY_EXT DEFAULT 0,
    LBR_RATE                 D_SUMMA_EXT DEFAULT 0,
    LBR_COST_CATEGORY_ID     D_INT,
    LBR_RATE_CUR_CODE        D_SMALLCODE NOT NULL,
    LBR_BACKFLUSH_FLAG       D_BOOLEAN DEFAULT FALSE,
    LBR_OH_ALLOCATION_FLAG   D_MF_LBR_OH_ALLOC_FLAG,
    LBR_OH_RATE              D_SUMMA_EXT DEFAULT 0,
    LBR_OH_RATE_CUR_CODE     D_SMALLCODE NOT NULL,
    LBR_OH_RATIO             D_RATIO DEFAULT 0,
    LBR_OH_COST_CATEGORY_ID  D_INT,
    LBR_OH_BACKFLUSH_FLAG    D_BOOLEAN DEFAULT FALSE
);

CREATE TABLE MF_JOB_MACHINE (
    JOB_ROUTE_RESOURCE_ID    D_INT_IDEN,
    TIME_RATE_FLAG           SMALLINT,
    RUN_TICKS_MCH            D_MF_CAPACITY DEFAULT 0,
    RUN_TIME_MCH_UM          D_INT_IDEN,
    MCH_NUMBER               D_QUANTITY_EXT DEFAULT 0,
    MCH_RECOVERY_FLAG        D_MF_MCH_RECOVERY_FLAG,
    MCH_RATE                 D_SUMMA_EXT DEFAULT 0,
    MCH_RATE_CUR_CODE        D_SMALLCODE NOT NULL,
    MCH_COST_CATEGORY_ID     D_INT,
    MCH_BACKFLUSH_FLAG       D_BOOLEAN DEFAULT FALSE,
    MCH_OH_ALLOCATION_FLAG   D_MF_MCH_OH_ALLOCATION_FLAG,
    MCH_OH_RATE              D_SUMMA_EXT DEFAULT 0,
    MCH_OH_RATE_CUR_CODE     D_SMALLCODE NOT NULL,
    MCH_OH_RATIO             D_RATIO DEFAULT 0,
    MCH_OH_COST_CATEGORY_ID  D_INT,
    MCH_OH_BACKFLUSH_FLAG    D_BOOLEAN DEFAULT FALSE
);

CREATE TABLE MF_JOB_MATERIAL (
    JOB_ROUTE_RESOURCE_ID    D_INT_IDEN,
    CATALOG_ID               D_INT_IDEN,
    REVISION                 D_INT,
    VIEW_SEQUENCE            D_INT DEFAULT 0 NOT NULL,
    REPORT_SEQUENCE          D_INT,
    QUANTITY_RATE_FLAG       D_MF_MTL_QUAN_RATE_FLAG,
    MTL_QTY                  D_QUANTITY_EXT DEFAULT 1,
    SCRAP_FACTOR             D_RATIO,
    MEASURE_ID               D_INT_IDEN,
    MTL_COST_CATEGORY_ID     D_INT,
    MTL_BACKFLUSH_FLAG       D_BOOLEAN DEFAULT FALSE,
    BACKFLUSH_ZONE_ID        D_INT,
    MTL_OH_ALLOCATION_FLAG   D_MF_MTL_OH_ACCLOC_FLAG,
    MTL_OH_RATE              D_SUMMA_EXT DEFAULT 0,
    CURRENCY_CODE            D_SMALLCODE NOT NULL,
    MTL_OH_RATIO             D_RATIO DEFAULT 0,
    MTL_OH_COST_CATEGORY_ID  D_INT,
    MTL_OH_BACKFLUSH_FLAG    D_BOOLEAN DEFAULT FALSE
);

CREATE TABLE MF_JOB_ROUTE (
    ID                    D_INT_IDEN,
    JOB_ID                D_INT_IDEN,
    OPER_NUM              D_INT,
    DESCRIPTION           D_BIGNAME,
    EFF_ON_DATE           D_DATE,
    EFF_OFF_DATE          D_DATE,
    WC_ID                 D_INT_IDEN,
    COMPLETE_FLAG         D_BOOLEAN DEFAULT FALSE,
    EFFICIENCY_FACTOR     D_RATIO DEFAULT 100,
    START_DATE            D_DATE,
    END_DATE              D_DATE,
    START_TICK            D_MF_TICK,
    END_TICK              D_MF_TICK,
    MOVE_TICKS            D_MF_TICK DEFAULT 0,
    MOVE_TIME_UM          D_INT_IDEN,
    SETUP_TICKS           D_MF_TICK DEFAULT 0,
    SETUP_TIME_UM         D_INT_IDEN,
    RUN_TICKS             D_MF_TICK DEFAULT 0,
    RUN_TIME_UM           D_INT_IDEN,
    SCHED_TICKS           D_MF_TICK,
    SCHED_TIME_UM         D_INT_IDEN,
    SCHED_OFFSET_TICKS    D_MF_TICK,
    SCHED_OFFSET_TIME_UM  D_INT_IDEN,
    QUEUE_TICKS           D_MF_TICK DEFAULT 0,
    QUEUE_TIME_UM         D_INT_IDEN,
    FREEZE_SCHEDULE_FLAG  D_BOOLEAN DEFAULT FALSE,
    QTY_RECEIVED          D_QUANTITY,
    QTY_COMPLETE          D_QUANTITY DEFAULT 0,
    QTY_SCRAPPED          D_QUANTITY DEFAULT 0,
    QTY_MOVED             D_QUANTITY DEFAULT 0,
    CONTROL_POINT_FLAG    D_BOOLEAN DEFAULT FALSE,
    STD_COST_DETAIL_ID    D_INT,
    ACT_COST_DETAIL_ID    D_INT,
    COMMENT               D_COMMENT,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_JOB_ROUTE_RESOURCE (
    ID                  D_INT_IDEN,
    RESOURCE_GROUP_ID   D_INT,
    OPER_ID             D_INT_IDEN,
    RESOURCE_TYPE       D_MF_RESOURCE_TYPE,
    TIME_SEQUENCE       D_INT,
    EFF_ON_DATE         D_DATE,
    EFF_OFF_DATE        D_DATE,
    STD_COST_DETAIL_ID  D_INT_IDEN,
    ACT_COST_DETAIL_ID  D_INT_IDEN,
    COMMENT             D_COMMENT,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_LABOR_CLASS (
    ID                       D_INT_IDEN,
    DESCRIPTION              D_BIGNAME,
    TIME_RATE_FLAG           D_MF_LBR_TIME_RATE_FLAG,
    LBR_RATE                 D_SUMMA_EXT,
    LBR_TIME_UM              D_INT_IDEN,
    LBR_RATE_CUR_CODE        D_SMALLCODE,
    LBR_COST_CATEGORY_ID     D_INT,
    LBR_OH_ALLOCATION_FLAG   D_MF_LBR_OH_ALLOC_FLAG,
    LBR_OH_RATE              D_SUMMA_EXT,
    LBR_OH_TIME_UM           D_INT_IDEN,
    LBR_OH_RATE_CUR_CODE     D_SMALLCODE,
    LBR_OH_RATIO             D_RATIO,
    LBR_OH_COST_CATEGORY_ID  D_INT,
    CLIENT_ID                D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_OUTPUT_DOC_HEAD (
    DOCHEAD_ID     D_INT_IDEN,
    CONTRACTOR_ID  D_INT,
    WC_ID          D_INT,
    JOB_ID         D_INT,
    OPER_ID        D_INT,
    CREW_ID        D_INT,
    EMPLOYEE_ID    D_INT
);

CREATE TABLE MF_OUTPUT_DOC_HEAD_MODEL (
    DOCHEADMODEL_ID  D_INT_IDEN,
    CONTRACTOR_ID    D_INT,
    WC_ID            D_INT,
    JOB_ID           D_INT,
    OPER_ID          D_INT,
    CREW_ID          D_INT,
    EMPLOYEE_ID      D_INT
);

CREATE TABLE MF_RESOURCE_FAMILY (
    ID                        D_INT_IDEN,
    PLANNING_LEVEL_ID         D_INT_IDEN,
    PARENT_RESOURCE_GROUP_ID  D_INT_IDEN,
    CHILD_RESOURCE_GROUP_ID   D_INT_IDEN,
    CLIENT_ID                 D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_RESOURCE_GROUP (
    ID                     D_INT_IDEN,
    RESOURCE_GROUP_CODE    D_BIGCODE,
    DESCRIPTION            D_SMALLNAME,
    RESOURCE_TYPE          SMALLINT,
    LIMITED_RESOURCE_FLAG  D_BOOLEAN,
    CRITICAL_LEVEL_ID      D_INT NOT NULL,
    COMMENT                D_COMMENT,
    MEASURE_ID             D_INT_IDEN,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_RESOURCE_GROUP_CAPACITY (
    ID                 D_INT_IDEN,
    PLANNING_CAPACITY  D_QUANTITY,
    MAXIMUM_CAPACITY   D_QUANTITY,
    EFF_ON_DATE        D_DATE,
    EFF_OFF_DATE       D_DATE,
    RESOURCE_GROUP_ID  D_INT_IDEN,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_ROUTE (
    ID                 D_INT_IDEN,
    CATALOG_ID         D_INT_IDEN,
    VENDOR_ID          D_INT,
    SRC_TYPE           D_SHORT NOT NULL,
    SRC_CYCLE          D_INT,
    SRC_RANK           D_SHORT,
    SUPPLY_PERCENT     D_QUANTITY,
    DEST_TYPE          D_SHORT NOT NULL,
    REORDER_MIN_QTY    D_QUANTITY,
    CUSTOMER_ID        D_INT,
    REORDER_LOT_SIZE   D_QUANTITY,
    DEST_WAREHOUSE_ID  D_INT_IDEN,
    DEST_CYCLE         D_INT,
    QC_RECEIVING_DAYS  D_SHORT,
    LEAD_TIME          D_SHORT,
    SAFETY_DAYS        D_SHORT,
    SRC_WAREHOUSE_ID   D_INT,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_SCRAP_DOC_HEAD (
    DOCHEAD_ID            D_INT_IDEN,
    DETECT_CONTRACTOR_ID  D_INT,
    DETECT_WC_ID          D_INT,
    DETECT_JOB_ID         D_INT,
    DETECT_OPER_ID        D_INT,
    DETECT_CREW_ID        D_INT,
    DETECT_EMPLOYEE_ID    D_INT,
    CAUSE_CONTRACTOR_ID   D_INT,
    CAUSE_WC_ID           D_INT,
    CAUSE_JOB_ID          D_INT,
    CAUSE_OPER_ID         D_INT,
    CAUSE_CREW_ID         D_INT,
    CAUSE_EMPLOYEE_ID     D_INT,
    SCRAP_TYPE_ID         D_INT,
    SCRAP_REASON_ID       D_INT
);

CREATE TABLE MF_SCRAP_DOC_HEAD_MODEL (
    DOCHEADMODEL_ID       D_INT_IDEN,
    DETECT_CONTRACTOR_ID  D_INT,
    DETECT_WC_ID          D_INT,
    DETECT_JOB_ID         D_INT,
    DETECT_OPER_ID        D_INT,
    DETECT_CREW_ID        D_INT,
    DETECT_EMPLOYEE_ID    D_INT,
    CAUSE_CONTRACTOR_ID   D_INT,
    CAUSE_WC_ID           D_INT,
    CAUSE_JOB_ID          D_INT,
    CAUSE_OPER_ID         D_INT,
    CAUSE_CREW_ID         D_INT,
    CAUSE_EMPLOYEE_ID     D_INT,
    SCRAP_TYPE_ID         D_INT,
    SCRAP_REASON_ID       D_INT
);

CREATE TABLE MF_SCRAP_DOC_SPEC (
    DOCSPEC_ID             D_INT_IDEN,
    JOB_ROUTE_RESOURCE_ID  D_INT_IDEN,
    COST_CATEGORY_ID       D_INT
);

CREATE TABLE MF_TRANSACTION (
    ID                     D_INT_IDEN,
    BACKFLUSH_FLAG         D_BOOLEAN,
    CONTRACTOR_ID          D_INT,
    WC_ID                  D_INT,
    JOB_ID                 D_INT,
    OPER_ID                D_INT,
    CREW_ID                D_INT,
    EMPLOYEE_ID            D_INT,
    DOCSPEC_ID             D_INT_IDEN,
    JOB_ROUTE_RESOURCE_ID  D_INT,
    COST_CATEGORY_ID       D_INT,
    QUANTITY               D_QUANTITY,
    SUMMA                  D_SUMMA,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_VARIANCE_DOC_HEAD (
    DOCHEAD_ID  D_INT_IDEN,
    WC_ID       D_INT,
    JOB_ID      D_INT
);

CREATE TABLE MF_VARIANCE_DOC_HEAD_MODEL (
    DOCHEADMODEL_ID  D_INT_IDEN NOT NULL,
    WC_ID            D_INT,
    JOB_ID           D_INT
);

CREATE TABLE MF_VARIANCE_DOC_SPEC (
    DOCSPEC_ID        D_INT_IDEN,
    COST_CATEGORY_ID  D_INT_IDEN,
    VARIANCE_TYPE     SMALLINT NOT NULL
);

CREATE TABLE MF_WC_RATES (
    ID              D_INT_IDEN,
    WC_ID           D_INT_IDEN,
    EFF_ON_DATE     D_DATE,
    EFF_OFF_DATE    D_DATE,
    MCH_FOH_RATE    D_SUMMA DEFAULT 0,
    MCH_VOH_RATE    D_SUMMA DEFAULT 0,
    LBR_RUN_RATE    D_SUMMA DEFAULT 0,
    LBR_SETUP_RATE  D_SUMMA DEFAULT 0,
    LBR_FOH_RATE    D_SUMMA DEFAULT 0,
    LBR_VOH_RATE    D_SUMMA DEFAULT 0,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_WEEK_CAL (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_WEEK_CAL_CHANGE (
    ID            D_INT_IDEN,
    WEEK_CAL_ID   D_INT_IDEN,
    EFF_ON_DATE   D_DATE,
    EFF_OFF_DATE  D_DATE,
    DAY_CAL_MON   D_INT_IDEN,
    DAY_CAL_TUE   D_INT_IDEN,
    DAY_CAL_WED   D_INT_IDEN,
    DAY_CAL_THU   D_INT_IDEN,
    DAY_CAL_FRI   D_INT_IDEN,
    DAY_CAL_SAT   D_INT_IDEN,
    DAY_CAL_SUN   D_INT_IDEN,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE MF_WORK_CENTER (
    ID                   D_INT_IDEN,
    WC_CODE              D_BIGCODE NOT NULL,
    WC_NAME              D_NAME,
    CELL_ID              D_INT,
    WEEK_CAL_ID          D_INT,
    EFFICIENCY           D_RATIO,
    UTILIZATION          D_RATIO,
    CAPACITY_PLAN        D_BOOLEAN,
    CAPACITY_SCHEDULE    D_BOOLEAN,
    MCH_FLAG             D_BOOLEAN,
    MCH_NUMBER           D_INT,
    LBR_FLAG             D_BOOLEAN,
    LBR_NUMBER           D_QUANTITY,
    SCH_TOLERANCE        D_RATIO,
    QUEUE_TICKS          D_MF_TICK,
    MCH_RUN_TOTAL_HRS    D_HOUR,
    LBR_SETUP_TOTAL_HRS  D_HOUR,
    LBR_RUN_TOTAL_HRS    D_HOUR,
    QUEUE_TOTAL_QTY      D_QUANTITY,
    QUEUE_AVG_HRS        D_HOUR,
    OUTSIDE_FLAG         D_BOOLEAN,
    CONTRACTOR_ID        D_INT,
    MCH_BACKFLUSH_FLAG   D_BOOLEAN,
    LBR_BACKFLUSH_FLAG   D_BOOLEAN,
    MCH_BASE_OH_FLAG     D_BOOLEAN,
    LBR_BASE_OH_FLAG     D_BOOLEAN,
    MTL_BASE_OH_FLAG     D_BOOLEAN,
    CONTROL_POINT_FLAG   D_BOOLEAN,
    WIP_LBR_TOTAL        D_SUMMA,
    WIP_MTL_TOTAL        D_SUMMA,
    WIP_FOH_TOTAL        D_SUMMA,
    WIP_VOH_TOTAL        D_SUMMA,
    WIP_OUT_TOTAL        D_SUMMA,
    LBR_SETUP_AVG_RATE   D_SUMMA,
    LBR_RUN_AVG_RATE     D_SUMMA,
    STD_COST_DETAIL_ID   D_INT,
    ACT_COST_DETAIL_ID   D_INT,
    COMMENT              D_COMMENT,
    RESOURCE_GROUP_ID    D_INT,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE OKDP (
    UPCODE     D_BIGCODE NOT NULL,
    CODE       D_BIGCODE NOT NULL,
    ONAME      D_NAME NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE OKOF (
    UPCODE     D_BIGCODE NOT NULL,
    CODE       D_BIGCODE NOT NULL,
    OKOFNAME   D_NAME,
    ID         D_INT_IDEN,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE OLAP_DATAPUMP (
    ID               D_INT_IDEN NOT NULL,
    PUMPNAME         D_NAME NOT NULL,
    OLAPDB_TYPE      SMALLINT,
    OLAPDB_NAME      VARCHAR(255),
    OLAPDB_USER      D_USERNAME,
    OLAPDB_PASSWORD  D_PASSWORD,
    CREATE_ALG_ID    D_INT,
    DELETE_ALG_ID    D_INT,
    PUMP_ALG_ID      D_INT,
    CLEAR_ALG_ID     D_INT,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE ORDERHEAD (
    DOCHEAD_ID              D_INT_IDEN,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    DUEDATE_KIND            D_TIME_PERIOD_KIND,
    DUEDATE_QUAN            D_QUANTITY,
    DUEDATE                 D_DATE,
    CREDITTERM              D_SHORT,
    PENALTY                 D_RATIO,
    COMMENT                 D_DESCRIPTION,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT,
    FIXED_INPUT             D_BOOLEAN,
    STATUS                  D_ORDER_STATUS
);

CREATE TABLE ORDERHEADMODEL (
    DOCHEADMODEL_ID         D_INT_IDEN,
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    DUEDATE_KIND            D_TIME_PERIOD_KIND,
    DUEDATE_QUAN            D_QUANTITY,
    DUEDATE                 D_DATE,
    CREDITTERM              D_SHORT,
    PENALTY                 D_RATIO,
    COMMENT                 D_DESCRIPTION,
    RESPONSIBLE             D_INT,
    CONSUMER                D_INT,
    FIXED_INPUT             D_BOOLEAN,
    STATUS                  D_ORDER_STATUS
);

CREATE TABLE ORDERSPEC (
    DOCSPEC_ID           D_INT_IDEN,
    DISCOUNT             D_RATIO,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    COST                 D_SUMMA,
    REQUIRED_DATE        D_DATE,
    PROMISED_DATE        D_DATETIME,
    VENDOR_ITEM_CODE     D_BIGCODE,
    WAREHOUSE_ID         D_INT,
    QTY_ACCEPTED         D_QUANTITY,
    QTY_INVOICED         D_QUANTITY,
    QTY_RETURNED         D_QUANTITY,
    QTY_SHIPPED          D_QUANTITY,
    QTY_PICKED           D_QUANTITY,
    QTY_OUTSTANDING      D_QUANTITY,
    CLOSED_FOR_PLANNING  D_BOOLEAN,
    STATUS               D_ORDER_STATUS,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE ORDERSPECMODEL (
    DOCSPECMODEL_ID      D_INT_IDEN,
    DISCOUNT             D_RATIO,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    COST                 D_SUMMA,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE ORGUNIT (
    KIND               SMALLINT,
    IS_OFFICE          D_BOOLEAN,
    IS_STORE           D_BOOLEAN,
    PARTNER_ID         D_INT,
    CONTRACTOR_ID      D_INT_IDEN,
    RESOURCE_GROUP_ID  D_INT,
    FOLDER_TAG         D_NAME_N
);

CREATE TABLE OVR_CANCELLATION (
    ID                          D_INT_IDEN,
    OVR_CARD_HIST_ID            D_INT_IDEN,
    CANCELLATION_DATE           D_DATE,
    CURRENT_CANCELLATION_SUMMA  D_INT,
    DOCHEAD_ID                  D_INT,
    DOCTYPE                     D_DOCTYPE,
    DOCNUMBER                   D_DOCNUMBER,
    DOCDATE                     D_DOCDATE,
    CANCELLATION_REASON         D_COMMENT,
    CLIENT_ID                   D_INT_IDEN DEFAULT 1
);

CREATE TABLE OVR_CARD (
    ID                D_INT_IDEN,
    REF_PERSONNEL_ID  D_INT,
    STF_JOB_ID        D_INT,
    STF_POSITION_ID   D_INT,
    ACTDATE_FROM      D_DATE,
    ACTDATE_TO        D_DATE,
    ORGUNIT_ID        D_INT_IDEN NOT NULL,
    OVR_CARD_NUMBER   D_BIGCODE,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE OVR_CARD_DOCUMENT_LINK (
    ID                D_INT_IDEN NOT NULL,
    DOCHEAD_ID        D_INT,
    OVR_CARD_ID       D_INT,
    OVR_NORM_HEAD_ID  D_INT,
    REMOVE_TYPE_ID    D_INT,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE OVR_CARD_HIST (
    ID                      D_INT_IDEN NOT NULL,
    OVR_CARD_ID             D_INT,
    MEASURE_UPCODE          D_SMALLCODE,
    CATALOG_ID              D_INT,
    OVR_NORM_SPEC_ID        D_INT,
    OVR_NORM_HEAD_ID        D_INT,
    CATALOG_GROUPS_TYPE_ID  D_CATALOG_GROUPS_TYPE,
    ISBASIC                 D_INT,
    ISPERIODIC              D_INT,
    RETURNABLE              D_INT,
    GIVE_DATE               D_DATE,
    READOUT_DATE            D_DATE,
    SHELFLIFE               D_QUANTITY,
    SHELFLIFE_MEAS          D_TIME_PERIOD_KIND,
    QUANTITY                D_QUANTITY,
    NDE_COST                D_SUMMA,
    NDE_SUMMA               D_SUMMA,
    DETERIORATION           D_INT,
    DEPRECIABLE_VALUE       D_SUMMA,
    COMMON_SUMMA_FOR_DINCH  D_SUMMA,
    DINCHED_SUMMA           D_SUMMA,
    REST_OF_DINCH_SUMMA     D_SUMMA,
    ARREAR_SUMMA            D_SUMMA,
    GIVE_DOCHEAD_ID         D_INT,
    GIVE_DOCSPEC_ID         D_INT,
    GIVE_DOCTYPE            D_DOCTYPE,
    GIVE_DOCNUMBER          D_DOCNUMBER,
    GIVE_DOCDATE            D_DOCDATE,
    EXPL_DOCHEAD_ID         D_INT,
    EXPL_DOCSPEC_ID         D_INT,
    EXPL_DOCTYPE            D_DOCTYPE,
    EXPL_DOCNUMBER          D_DOCNUMBER,
    EXPL_DOCDATE            D_DOCDATE,
    REMOVE_DOCHEAD_ID       D_INT,
    REMOVE_DOCSPEC_ID       D_INT,
    REMOVE_DOCTYPE          D_DOCTYPE,
    REMOVE_DOCNUMBER        D_DOCNUMBER,
    REMOVE_DOCDATE          D_DOCDATE,
    REMOVE_TYPE_ID          D_INT,
    REMOVE_DATE             D_DATE,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE OVR_CARD_HIST_DOC_SPEC_LINK (
    ID                D_INT_IDEN,
    OVR_CARD_HIST_ID  D_INT,
    DOCSPEC_ID        D_INT,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE OVR_HIST_STATUS (
    ID                    D_INT_IDEN,
    OVR_CARD_HIST_ID      D_INT NOT NULL,
    DOCHEAD_ID            D_INT,
    DOCSPEC_ID            D_INT,
    DOCTYPE               D_DOCTYPE,
    DOCNUMBER             D_DOCNUMBER,
    DOCDATE               D_DOCDATE,
    OVR_HIST_STATUS_ID    D_INT_IDEN,
    OVR_HIST_STATUS_DATE  DATE,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE OVR_NORM_HEAD (
    ID                   D_INT_IDEN NOT NULL,
    FOLDER_ID            D_INT,
    OVR_NORM_NAME        D_NAME NOT NULL,
    OVR_NORM_TYPE_ID     D_INT,
    STF_JOB_ID           D_INT,
    STF_POSITION_ID      D_INT,
    OVR_NORM_BEGIN_DATE  D_DATE,
    OVR_NORM_END_DATE    D_DATE,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE OVR_NORM_SPEC (
    ID                      D_INT_IDEN NOT NULL,
    OVR_NORM_HEAD_ID        D_INT,
    OVR_NORM_SPEC_NAME      D_NAME NOT NULL,
    MEASURE_UPCODE          D_SMALLCODE,
    CATALOG_GROUPS_TYPE_ID  D_CATALOG_GROUPS_TYPE,
    SHELFLIFE               D_QUANTITY,
    SHELFLIFE_MEAS          D_TIME_PERIOD_KIND,
    ISBASIC                 D_INT,
    ISPERIODIC              D_INT,
    ISDINCH                 D_INT,
    DINCH_FORMULA           D_FORMULA,
    DOC_NAME                D_COMMENT,
    QUANTITY                D_QUANTITY,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE OVR_NORM_SPEC_DOC_SPEC_LINK (
    ID                D_INT_IDEN NOT NULL,
    OVR_NORM_SPEC_ID  D_INT,
    DOCSPEC_ID        D_INT,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE OVR_NORM_SPEC_LINK (
    ID                D_INT_IDEN,
    OVR_NORM_SPEC_ID  D_INT_IDEN,
    CATALOG_ID        D_INT_IDEN,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE OVR_SIZE (
    ID                      D_INT_IDEN,
    OVR_CARD_ID             D_INT_IDEN,
    CATALOG_GROUPS_TYPE_ID  D_INT_IDEN,
    CLOTHES_SIZE            D_SIZE,
    SHOES_SIZE              D_SIZE,
    HAT_SIZE                D_SIZE,
    GAS_MASK_SIZE           D_SIZE,
    RESPIRATOR_SIZE         D_SIZE,
    MITTENS_SIZE            D_SIZE,
    GLOVES_SIZE             D_SIZE,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE PACKING (
    ID                D_INT_IDEN NOT NULL,
    CATALOG_ID        D_INT_IDEN NOT NULL,
    PRIORITY          SMALLINT NOT NULL,
    WEIGHT            D_MASS,
    VOLUME            D_MASS,
    MEASURE_ID        D_INT_IDEN,
    WEIGHTMEASURE_ID  D_INT,
    VOLUMEMEASURE_ID  D_INT,
    CLIENT_ID         D_INT_IDEN DEFAULT 1,
    QANTITY_MEASURE1  D_QUANTITY,
    QANTITY_MEASURE2  D_QUANTITY
);

CREATE TABLE PARTNEMPL (
    ID          D_INT_IDEN,
    PARTNER_ID  D_INT_IDEN,
    CODE        D_BIGCODE,
    FNAME       VARCHAR(20),
    PATRONYMIC  VARCHAR(20),
    SURNAME     VARCHAR(20),
    ADDRESS     D_ADDRESS,
    MILITIA     D_ADDRESS,
    MILIT_CITY  VARCHAR(20),
    PASSP_DATE  TIMESTAMP,
    PASSP_NUM   CHAR(10),
    PASSP_SER   CHAR(10),
    OFFICE      VARCHAR(100),
    COMMENT     D_COMMENT,
    PERSON_ID   D_INT_IDEN,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE PARTNER (
    INN              D_BIGCODE NOT NULL,
    OKONH            VARCHAR(40) NOT NULL,
    OKPO             D_BIGCODE NOT NULL,
    CITY             D_SMALLNAME NOT NULL,
    AREA             D_SMALLNAME NOT NULL,
    ADDRESS          D_ADDRESS NOT NULL,
    CITYLEGAL        D_SMALLNAME NOT NULL,
    AREALEGAL        D_SMALLNAME NOT NULL,
    ADDRESSLEGAL     D_ADDRESS NOT NULL,
    COMMENT          D_COMMENT,
    MAXSUPCREDIT     D_SUMMA,
    MAXSUPCREDITCUR  D_SMALLCODE,
    TERMSUPCREDIT    SMALLINT,
    PENALTYSUP       D_RATIO,
    MAXCUSCREDIT     D_SUMMA,
    MAXCUSCREDITCUR  D_SMALLCODE,
    TERMCUSCREDIT    SMALLINT,
    PENALTYCUS       D_RATIO,
    KPP              D_BIGCODE,
    CONTRACTOR_ID    D_INT_IDEN,
    ZIP              D_ZIPCODE,
    ZIPLEGAL         D_ZIPCODE,
    INN_UNIQUE       D_BOOLEAN,
    OKVED            VARCHAR(40),
    PERSON_ID        D_INT,
    ZIPCODE_ID       D_INT,
    COUNTRY_ID       D_INT,
    REGION_ID        D_INT,
    DISTRICT_ID      D_INT,
    PLACE_ID         D_INT,
    STREET           D_ADDR_STREET,
    HOUSE            D_ADDR_HOUSE,
    BUILDING         D_ADDR_BUILDING,
    ROOM             D_ADDR_ROOM,
    ZIPCODE1_ID      D_INT,
    COUNTRY1_ID      D_INT,
    REGION1_ID       D_INT,
    DISTRICT1_ID     D_INT,
    PLACE1_ID        D_INT,
    STREET1          D_ADDR_STREET,
    HOUSE1           D_ADDR_HOUSE,
    BUILDING1        D_ADDR_BUILDING,
    ROOM1            D_ADDR_ROOM
);

CREATE TABLE PERIOD (
    ID         D_INT_IDEN,
    PNAME      D_BIGCODE NOT NULL,
    DATEFROM   TIMESTAMP NOT NULL,
    DATETO     TIMESTAMP NOT NULL,
    WHOCLOSED  D_USERNAME,
    DATECLOSE  TIMESTAMP,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PERMISSIBLEACCOUNTS (
    ID         D_INT_IDEN,
    ANLDB1_ID  D_INT,
    ANLDB2_ID  D_INT,
    ANLDB3_ID  D_INT,
    ANLDB4_ID  D_INT,
    ANLDB5_ID  D_INT,
    ANLKT1_ID  D_INT,
    ANLKT2_ID  D_INT,
    ANLKT3_ID  D_INT,
    ANLKT4_ID  D_INT,
    ANLKT5_ID  D_INT,
    ACCDB_ID   D_INT,
    ACCKT_ID   D_INT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PHASEITEM_LINK (
    ID           D_INT_IDEN,
    PLANITEM_ID  D_INT_IDEN,
    FACTITEM_ID  D_INT_IDEN,
    DISTSUM      D_SUMMA,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE PHASEITEMFACT (
    ID             D_INT_IDEN,
    DOCHEAD_ID     D_INT_IDEN,
    REGDATE        D_DATE,
    DOCTYPE        D_DOCTYPE,
    DOCNUMBER      D_DOCNUMBER,
    DOCDATE        D_DOCDATE,
    DOC_ID         D_INT,
    FACTSUM        D_SUMMA,
    DISTSUM        D_SUMMA,
    CONTRACTOR_ID  D_INT,
    KIND           D_PHASEITEMKIND,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE PHASEITEMPLAN (
    ID                D_INT_IDEN,
    PHASE_ID          D_INT_IDEN,
    DOCNUMBER         D_DOCNUMBER,
    KIND              D_PHASEITEMKIND,
    BEGINACTION_DATE  D_DATE,
    ENDACTION_DATE    D_DATE,
    CONTRACTORFROM    D_INT,
    CONTRACTORTO      D_INT,
    PLANSUM           D_SUMMA,
    FACTSUM           D_SUMMA,
    AVOID             D_BOOLEAN,
    CLIENT_ID         D_INT_IDEN DEFAULT 1,
    ITEM_NUMBER       D_DOCNUMBER,
    DOCTYPE           D_DOCTYPE,
    DOCDATE           D_DOCDATE,
    DOC_ID            D_INT
);

CREATE TABLE PMA_DOCGROUP (
    ID         D_INT_IDEN,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PMA_DOCGROUPLINK (
    ID           D_INT_IDEN,
    DOCGROUP_ID  D_INT,
    DOCTYPE      D_DOCTYPE,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE PMA_PAYMENT (
    ID                   D_INT_IDEN,
    FOLDER_ID            D_INT,
    PLANNED              D_BOOLEAN,
    PDATE                D_DATE,
    NAME                 D_NAME_N,
    CURCODE              D_SMALLCODE,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT,
    CURRATE              D_RATIO,
    SUMCUR               D_SUMMA,
    SUMNAT               D_SUMMA,
    ALLOCSUMCUR          D_SUMMA,
    ALLOCSUMNAT          D_SUMMA,
    DOC_ID               D_INT,
    DOCTYPE              D_DOCTYPE,
    DOCNUMBER            D_DOCNUMBER,
    DOCDATE              D_DOCDATE,
    BASEDOC_ID           D_INT,
    BASEDOCTYPE          D_DOCTYPE,
    BASEDOCNUMBER        D_DOCNUMBER,
    BASEDOCDATE          D_DOCDATE,
    CONTRACT_ID          D_INT,
    CONTRACTTYPE         D_DOCTYPE,
    CONTRACTNUMBER       D_DOCNUMBER,
    CONTRACTDATE         D_DOCDATE,
    FROM_ID              D_INT,
    TO_ID                D_INT,
    FROMUNIT_ID          D_INT,
    TOUNIT_ID            D_INT,
    DESCRIPTION          D_COMMENT,
    COMMENTS             D_COMMENT,
    IS_MODEL             D_BOOLEAN,
    DESTFOLDER_ID        D_INT,
    MODELNAME            D_NAME_N,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE PMA_TRHEAD (
    ID           D_INT_IDEN,
    PAYMENT_ID   D_INT,
    DOCHEAD_ID   D_INT,
    PDATE        D_DATE,
    TOTALSUMCUR  D_SUMMA,
    TOTALSUMNAT  D_SUMMA,
    ALLOCSUMCUR  D_SUMMA,
    ALLOCSUMNAT  D_SUMMA,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE PMA_TRSPEC (
    ID          D_INT_IDEN,
    TRHEAD_ID   D_INT,
    DOCSPEC_ID  D_INT,
    TOTALQTY    D_QUANTITY,
    TOTALSUM    D_SUMMA,
    ALLOCQTY    D_QUANTITY,
    ALLOCSUM    D_SUMMA,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE PMA_TRTAX (
    ID          D_INT_IDEN,
    TRSPEC_ID   D_INT,
    TAXSUMM_ID  D_INT,
    TAX_ID      D_INT,
    TOTALSUM    D_SUMMA,
    ALLOCSUM    D_SUMMA,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE PMC_CONFIG (
    NAT_CURRENCY           D_SMALLCODE,
    CURRENCY_PREC          SMALLINT,
    CUR_RATE_TYPE_ID       D_INT,
    CUR_RATE_AUTHORITY_ID  D_INT,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE PMC_EXECUTION (
    ID                   D_INT_IDEN,
    RECEIVABLE           D_BOOLEAN,
    PLANDATE             D_DATE,
    FACTDATE             D_DATE,
    SUMCUR               D_SUMMA,
    SUMNAT               D_SUMMA,
    CURCODE              D_SMALLCODE,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT,
    TRANSFERKIND         D_SHORT,
    FIXEDPERIOD          D_BOOLEAN,
    VERSION_ID           D_INT,
    VERSTATUS_ID         D_INT,
    LIABILITY_ID         D_INT,
    RESOURCEFOLDER_ID    D_INT,
    RESOURCE_ID          D_INT,
    PAYMENT_ID           D_INT,
    DOC_ID               D_INT,
    DOCCREATED           D_BOOLEAN,
    DOCPROCESSED         D_BOOLEAN,
    APPROVED             D_BOOLEAN,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE PMC_LIABILITY (
    ID                     D_INT_IDEN,
    FOLDER_ID              D_INT,
    VERSION_ID             D_INT,
    VERSTATUS_ID           D_INT,
    IS_SHARED              D_BOOLEAN,
    PRIORITY               INTEGER,
    RECEIVABLE             D_BOOLEAN,
    NUM                    VARCHAR(20),
    REGDATE                D_DATE,
    DATETOEXECUTE          D_DATE,
    FROM_ID                D_INT,
    TO_ID                  D_INT,
    SUMCUR                 D_SUMMA,
    CURCODE                D_SMALLCODE,
    CURRATETYPE_ID         D_INT,
    CURRATEAUTHORITY_ID    D_INT,
    PAYMENTDELAY           INTEGER,
    DOC_ID                 D_INT,
    DOCNUMBER              D_DOCNUMBER,
    DOCTYPE                D_DOCTYPE,
    DOCDATE                D_DOCDATE,
    BASEDOC_ID             D_INT,
    BASEDOCTYPE            D_DOCTYPE,
    BASEDOCNUMBER          D_DOCNUMBER,
    BASEDOCDATE            D_DOCDATE,
    CONTRACT_ID            D_INT,
    CONTRACTTYPE           D_DOCTYPE,
    CONTRACTNUMBER         D_DOCNUMBER,
    CONTRACTDATE           D_DOCDATE,
    PREFRESOURCE_ID        D_INT,
    PREFRESOURCEFOLDER_ID  D_INT,
    PREFONLY               D_BOOLEAN,
    COMMENTS               D_COMMENT,
    TRANSFERKIND           D_SHORT,
    IS_MODEL               D_BOOLEAN,
    DESTFOLDER_ID          D_INT,
    MODELNAME              D_NAME_N,
    FROMSOURCE             D_SHORT,
    TOSOURCE               D_SHORT,
    FROMBANKACC_ID         D_INT,
    TOBANKACC_ID           D_INT,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE PMC_PERIOD (
    ID         D_INT_IDEN,
    NAME       D_NAME_N,
    DATEFROM   D_DATE,
    DATETILL   D_DATE,
    PARENT_ID  D_INT,
    KIND       D_SHORT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PMC_RESOURCE (
    ID                   D_INT_IDEN,
    FOLDER_ID            D_INT,
    ORGUNIT_ID           D_INT,
    NAME                 D_NAME_N,
    DESCRIPTION          D_COMMENT,
    CATALOG_ID           D_INT,
    ACTDATETILL          D_DATE,
    ACTDATEFROM          D_DATE,
    CURCODE              D_SMALLCODE,
    CURRATEAUTHORITY_ID  D_INT,
    CURRATETYPE_ID       D_INT,
    INDOCMODEL1_ID       D_INT,
    OUTDOCMODEL1_ID      D_INT,
    INDOCMODEL2_ID       D_INT,
    OUTDOCMODEL2_ID      D_INT,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE PMC_VERSION (
    ID          D_INT_IDEN,
    NAME        D_NAME_N,
    AVAILABLE   D_BOOLEAN,
    CREATEDATE  D_DATE,
    CREATOR_ID  D_INT,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE PMC_VERSTATUS (
    ID          D_INT_IDEN,
    KIND        D_SHORT,
    VERSION_ID  D_INT,
    DATETILL    D_DATE,
    DATEFROM    D_DATE,
    CREATOR_ID  D_INT,
    CREATEDATE  D_DATE,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_CATALOG_WAREHOUSE (
    ID                   D_INT_IDEN,
    CATALOG_ID           D_INT_IDEN,
    SAFETY_LEVEL         D_QUANTITY,
    MRP_DAMPING_DAYS     D_SHORT,
    DEMAND_FENCE_DAYS    D_SHORT,
    ORDER_INTERVAL_DAYS  D_SHORT,
    WAREHOUSE_ID         D_INT_IDEN,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_FIRM_PLANNED_ORDER (
    ID                      D_INT_IDEN,
    MRP_RECOMENDATION_ID    D_INT,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    MEASURE_ID              D_INT_IDEN,
    WAREHOUSE_ID            D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN,
    REQUIRED_DATE           D_DATE,
    ORDER_QTY               D_QUANTITY,
    VENDOR_ID               D_INT,
    ORDER_DATE              D_DATE,
    FIXED_INPUT             D_BOOLEAN,
    REQUISITION_FLAG        D_BOOLEAN,
    SOURCE_WAREHOUSE_ID     D_INT,
    PURCHASE_OR_TRANSFER    D_SHORT,
    MANUAL_ENTRY            D_BOOLEAN,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_FORECAST_VERSION (
    ID           D_INT_IDEN,
    CODE         D_BIGCODE,
    DESCRIPTION  D_NAME,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_GENERIC_ITEM (
    ID                   D_INT_IDEN,
    GENERIC_ITEM_CODE    D_BIGCODE,
    GENERIC_ITEM_NAME    D_NAME,
    PLANNING_ITEM_FLAG   D_BOOLEAN,
    PLANNING_SHELF_LIFE  D_SHORT,
    DEMAND_FENCE_DAYS    D_SHORT,
    DAYS_STOCK_COVER     D_SHORT,
    MEASURE_ID           D_INT_IDEN,
    LOW_LEVEL_CODE       D_SHORT,
    CLIENT_ID            D_INT_IDEN DEFAULT 1,
    CATALOG_ID           D_INT
);

CREATE TABLE PP_INVENTORY_FORECAST (
    ID                       D_INT_IDEN,
    INVENTORY_FORECAST_CODE  D_BIGCODE,
    DESCRIPTION              D_NAME,
    CLIENT_ID                D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_INVENTORY_FORECAST_LINE (
    ID                     D_INT_IDEN,
    GENERIC_ITEM_ID        D_INT_IDEN,
    INVENTORY_FORECAST_ID  D_INT_IDEN,
    EFF_ON_DATE            D_DATE,
    EFF_OFF_DATE           D_DATE,
    QTY_ON_HAND            D_QUANTITY,
    WAREHOUSE_ID           D_INT_IDEN,
    MEASURE_ID             D_INT_IDEN,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_ITEM_FAMILY (
    ID                   D_INT_IDEN,
    PARENT_GENERIC_ITEM  D_INT_IDEN,
    PLANNING_LEVEL_ID    D_INT_IDEN,
    CHILD_GENERIC_ITEM   D_INT_IDEN,
    EFF_ON_DATE          D_DATE,
    EFF_OFF_DATE         D_DATE,
    ALLOCATION_PERCENT   D_RATIO,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_MPS (
    ID                     D_INT_IDEN,
    PLANNING_LEVEL_ID      D_INT_IDEN,
    INVENTORY_FORECAST_ID  D_INT,
    FORECAST_VERSION_ID    D_INT,
    CODE                   D_BIGCODE,
    DEMAND_FENCE_DATE      D_DATE,
    DESCRIPTION            D_NAME,
    PLANNING_DATE          D_DATE,
    PP_LEVEL_PROCESSED_TO  D_SHORT,
    PRODUCTION             D_BOOLEAN,
    PROFILE_APPLIED        D_BOOLEAN,
    PURCHASES_FORECASTS    D_BOOLEAN,
    PURCHASES_LIVE         D_BOOLEAN,
    QTY_ON_HAND            D_BOOLEAN,
    SALES_FORECASTS        D_BOOLEAN,
    SALES_LIVE             D_BOOLEAN,
    WAREHOUSE_TRANSFERS    D_BOOLEAN,
    WEEK_CAL_ID            D_INT_IDEN,
    MPS_VERSION            D_INT,
    LAST_RUN_DATETIME      D_DATETIME,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_MPS_LINE (
    ID                      D_INT_IDEN,
    PLANNING_ITEM_ID        D_INT_IDEN,
    INVENTORY_FORECAST_ID   D_INT,
    FORECAST_VERSION_ID     D_INT,
    MPS_ID                  D_INT_IDEN,
    ADJUSTMENT_QTY          D_QUANTITY,
    BUCKET_OFFSET           D_SHORT,
    BUCKET_OFFSET_DATE      D_DATE,
    DEMAND_FENCE_DATE       D_DATE,
    DEMAND_QTY              D_QUANTITY,
    MPS_SEQUENCE            D_INT_IDEN,
    OUTPUT_MPS_SEQUENCE     D_INT,
    PLANNED_QTY             D_QUANTITY,
    PP_DEPENDANT_DEMAND     D_QUANTITY,
    PP_LEVEL_CODE           D_SHORT,
    PRODUCTION_DEMAND_QTY   D_QUANTITY,
    PRODUCTION_PROFILE_QTY  D_QUANTITY,
    PRODUCTION_QTY          D_QUANTITY,
    PURCHASE_FORECAST_QTY   D_QUANTITY,
    PURCHASE_ORDER_QTY      D_QUANTITY,
    PURCHASE_QTY            D_QUANTITY,
    QTY_AVAILABLE           D_QUANTITY,
    SALES_FORECAST_QTY      D_QUANTITY,
    SALES_ORDER_QTY         D_QUANTITY,
    SALES_QTY               D_QUANTITY,
    TRANSFERS_IN_QTY        D_QUANTITY,
    TRANSFERS_OUT_QTY       D_QUANTITY,
    LIVE_PRODUCTION_DEMAND  D_QUANTITY,
    SAFETY_LEVEL_QTY        D_QUANTITY,
    MEASURE_ID              D_INT_IDEN,
    FIRM_PLAN_SUGGESTED     D_BOOLEAN,
    MPS_ORDERED             D_BOOLEAN,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_MRP_INPUTS (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    PP_REFERENCE            D_NAME_N,
    REFERENCE_ID            D_INT,
    REQUIRED_DATE           D_DATE,
    MRP_QUANTITY            D_QUANTITY,
    MRP_ORDER_TYPE          D_SHORT,
    MRP_SOURCE              D_SHORT,
    FIXED_INPUT             D_BOOLEAN,
    BATCH_DATE              D_DATE,
    WAREHOUSE_ID            D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_MRP_OUTPUTS (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    REQUIRED_DATE           D_DATE,
    PP_REFERENCE            D_NAME_N,
    REFERENCE_ID            D_INT,
    MRP_QUANTITY            D_QUANTITY,
    MRP_ORDER_TYPE          D_SHORT,
    MRP_SOURCE              D_SHORT,
    WAREHOUSE_ID            D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_MRP_RECOMMENDATION (
    ID                         D_INT_IDEN,
    MRP_VERSION_CONTROL_ID     D_INT_IDEN,
    REQUIRED_DATE              D_DATE,
    ORDER_QTY                  D_QUANTITY,
    MRP_QUANTITY               D_QUANTITY,
    PURCHASE_LEAD_TIME         D_SHORT,
    FIRM_PLAN_SUGGESTED_ORDER  D_BOOLEAN,
    ORDER_DATE                 D_DATE,
    MRP_ARREARS_FLAG           D_BOOLEAN,
    MRP_ORDERED                D_BOOLEAN,
    PURCHASE_OR_TRANSFER       D_SHORT,
    CATALOG_ID                 D_INT_IDEN,
    MEASURE_ID                 D_INT_IDEN,
    VENDOR_ID                  D_INT,
    WAREHOUSE_ID               D_INT_IDEN,
    SOURCE_WAREHOUSE_ID        D_INT,
    PP_REFERENCE               D_NAME_N,
    MANUAL_ENTRY               D_BOOLEAN,
    MRP_RESCHEDULE_FLAG        D_SHORT,
    MRP_SOURCE                 D_SHORT,
    ORIGINAL_DATE              D_DATE,
    BATCH_DATE                 D_DATE,
    ORIGINAL_QUANTITY          D_QUANTITY,
    CLIENT_ID                  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_MRP_REPORT (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    REQUIRED_DATE           D_DATE,
    MRP_ORDER_TYPE          D_SHORT,
    PP_REFERENCE            D_NAME_N,
    QTY_AVAILABLE           D_QUANTITY,
    MRP_QUANTITY            D_QUANTITY,
    MRP_SOURCE              D_SHORT,
    MRP_INPUT_OUTPUT_FLAG   D_SHORT,
    FIXED_INPUT             D_BOOLEAN,
    ORDER_DATE              D_DATE,
    MRP_ARREARS_FLAG        D_BOOLEAN,
    WAREHOUSE_ID            D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN,
    ORIGINAL_DATE           D_DATE,
    ORIGINAL_QUANTITY       D_QUANTITY,
    "SEQUENCE"              D_INT,
    MRP_RESCHEDULE_FLAG     D_SHORT,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_MRP_SHORTAGE (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    REQUIRED_DATE           D_DATE,
    SHORTAGE_QTY            D_QUANTITY,
    WAREHOUSE_ID            D_INT_IDEN,
    CATALOG_ID              D_INT_IDEN,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_MRP_TOTALS_BY_DATE (
    ID                               D_INT_IDEN,
    MRP_VERSION_CONTROL_ID           D_INT_IDEN,
    REQUIRED_DATE                    D_DATE,
    SALES_ORDER_QTY                  D_QUANTITY,
    SALES_FORECAST_QTY               D_QUANTITY,
    SALES_QTY                        D_QUANTITY,
    PRODUCTION_QTY                   D_QUANTITY,
    PLANNED_PRODUCTION_QTY           D_QUANTITY,
    PRODUCTION_REQUIREMENTS          D_QUANTITY,
    PLANNED_PRODUCTION_REQUIREMENTS  D_QUANTITY,
    SUGGESTED_PURCHASES              D_QUANTITY,
    QTY_ON_HAND                      D_QUANTITY,
    QTY_AVAILABLE                    D_QUANTITY,
    SUGGESTED_TRANSFERS              D_QUANTITY,
    TOTAL_OUTPUTS                    D_QUANTITY,
    WAREHOUSE_ID                     D_INT_IDEN,
    CATALOG_ID                       D_INT_IDEN,
    PURCHASE_QTY_BEFORE              D_QUANTITY,
    TOTAL_INPUTS_AFTER               D_QUANTITY,
    TRANSFER_QTY_AFTER               D_QUANTITY,
    TOTAL_INPUTS_BEFORE              D_QUANTITY,
    TRANSFER_QTY_BEFORE              D_QUANTITY,
    PURCHASE_ORDER_QTY_AFTER         D_QUANTITY,
    FIRM_PLAN_TRANSF_IN_AFTER        D_QUANTITY,
    PURCHASE_FORECAST_QTY_AFTER      D_QUANTITY,
    FIRM_PLAN_TRANSF_IN_BEFORE       D_QUANTITY,
    EXPIRY_QTY                       D_QUANTITY,
    PURCHASE_ORDER_QTY_BEFORE        D_QUANTITY,
    PURCHASE_FORECAST_QTY_BEFORE     D_QUANTITY,
    FIRM_PLANNED_PURCHASES_BEFORE    D_QUANTITY,
    FIRM_PLAN_TRANSF_OUT_AFTER       D_QUANTITY,
    FIRM_PLAN_TRANSF_OUT_BEFORE      D_QUANTITY,
    PURCHASE_QTY_AFTER               D_QUANTITY,
    FIRM_PLANNED_PURCHASES_AFTER     D_QUANTITY,
    CLIENT_ID                        D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_MRP_VERSION_CONTROL (
    ID                            D_INT_IDEN,
    CODE                          D_BIGCODE,
    DESCRIPTION                   D_NAME,
    MRP_VERSION                   D_INT,
    MRP_SO_FLAG                   D_BOOLEAN,
    MRP_SF_FLAG                   D_BOOLEAN,
    MRP_PO_FLAG                   D_BOOLEAN,
    MRP_PF_FLAG                   D_BOOLEAN,
    MRP_QOH_FLAG                  D_BOOLEAN,
    MRP_FIRM_PLANNED_ORDERS_FLAG  D_BOOLEAN,
    MRP_JOB_FLAG                  D_BOOLEAN,
    DAMPING_DAYS                  D_SHORT,
    QC_RECEIVING_DAYS             D_SHORT,
    RUN_DATE                      D_DATE,
    MRP_START_DATE                D_DATE,
    MRP_END_DATE                  D_DATE,
    LAST_RUN_DATETIME             D_DATETIME,
    MRP_SUGGESTED_ORDERS_FIRMED   D_BOOLEAN,
    CLIENT_ID                     D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_MRP_VERSION_FORECAST (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    FORECAST_TYPE           D_SHORT,
    FORECAST_VERSION_ID     D_INT_IDEN,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_MRP_VERSION_MPS (
    ID                      D_INT_IDEN,
    MRP_VERSION_CONTROL_ID  D_INT_IDEN,
    MPS_ID                  D_INT_IDEN,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_PLANNING_FORECAST (
    ID                   D_INT_IDEN,
    PLANNING_ITEM_ID     D_INT,
    PLANNING_LEVEL_ID    D_INT_IDEN,
    FORECAST_VERSION_ID  D_INT_IDEN,
    FORECAST_TYPE        D_SHORT,
    FORECAST_METHOD      D_SHORT,
    BUCKET_OFFSET        D_SHORT,
    REQUIRED_DATE        D_DATE,
    FORECAST_QUANTITY    D_QUANTITY,
    MEASURE_ID           D_INT_IDEN,
    CATALOG_ID           D_INT,
    WAREHOUSE_ID         D_INT,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_PLANNING_LEVEL (
    ID                  D_INT_IDEN,
    PLANNING_LEVEL_NUM  D_SHORT,
    DESCRIPTION         D_NAME,
    TIME_FENCE          D_SHORT,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_PLANNING_LEVEL_BUCKET (
    ID                 D_INT_IDEN,
    PLANNING_LEVEL_ID  D_INT_IDEN,
    START_DATE         D_DATE,
    END_DATE           D_DATE,
    BUCKET_OFFSET      D_SHORT,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_PRODUCTION_PROFILE (
    ID                       D_INT_IDEN,
    PLANNING_LEVEL_ID        D_INT_IDEN,
    GENERIC_ITEM_ID          D_INT_IDEN,
    START_BUCKET_OFFSET      D_SHORT,
    END_BUCKET_OFFSET        D_SHORT,
    PRODUCTION_RATIO         D_RATIO,
    BUCKET_PRODUCTION_RATIO  D_RATIO,
    CLIENT_ID                D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_RCCP_DETAIL (
    ID                     D_INT_IDEN,
    LOAD_MEASURE_ID        D_INT_IDEN,
    PLANNING_ITEM_ID       D_INT_IDEN,
    RCCP_HEADER_ID         D_INT_IDEN,
    RESOURCE_GROUP_ID      D_INT_IDEN,
    BUCKET_OFFSET          D_SHORT,
    MPS_BUCKET_OFFSET      D_SHORT,
    LOAD_VALUE             D_QUANTITY,
    LOAD_ADJUSTMENT_VALUE  D_QUANTITY,
    LOAD_PRODUCTION_VALUE  D_QUANTITY,
    LOAD_DEMAND_VALUE      D_QUANTITY,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_RCCP_HEADER (
    ID                 D_INT_IDEN,
    MPS_ID             D_INT_IDEN,
    NAME               D_NAME,
    RCCP_VERSION       D_INT,
    LAST_RUN_DATETIME  D_DATETIME,
    WEEK_CAL_ID        D_INT_IDEN,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE PP_RCCP_RESOURCE_LOAD (
    ID                     D_INT_IDEN,
    LOAD_MEASURE_ID        D_INT_IDEN,
    RCCP_HEADER_ID         D_INT_IDEN,
    RESOURCE_GROUP_ID      D_INT_IDEN,
    BUCKET_OFFSET          D_SHORT,
    LOAD_VALUE             D_QUANTITY,
    LOAD_ADJUSTMENT_VALUE  D_QUANTITY,
    LOAD_PRODUCTION_VALUE  D_QUANTITY,
    LOAD_DEMAND_VALUE      D_QUANTITY,
    CAPACITY               D_QUANTITY,
    MAX_CAPACITY           D_QUANTITY,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE PR_CONTACT_HIST (
    ID                 D_INT_IDEN NOT NULL,
    FOLDER_ID          D_INT_IDEN NOT NULL,
    CONTACTKIND_ID     D_INT,
    CDATE              D_DATE,
    CDESCRIPTION       D_CONTRACT_COMMENT,
    PARTNER_ID         D_INT,
    PARTNEMPL_ID       D_INT,
    PARTNEMPLPHONE_ID  D_INT,
    PARTNEMPLEMAIL_ID  D_INT,
    ACCEPT_EMPL_ID     D_INT,
    TO_EMPL_ID         D_INT,
    POSSIBLERESULT_ID  D_INT,
    RESULT_COMMENT     D_CONTRACT_COMMENT,
    NEXTCDATE          D_DATE,
    PRIORITY           D_INT,
    UNID               VARCHAR(32),
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE PR_CONTACT_HIST_FILES (
    ID              D_INT_IDEN NOT NULL,
    CONTACTHIST_ID  D_INT_IDEN NOT NULL,
    FILEDOC         D_ORIGINAL,
    FILENAME        D_FILENAME,
    FDESCRIPTION    D_COMMENT,
    FILEDATE        D_DATETIME,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE PR_CONTACT_KIND (
    ID         D_INT_IDEN NOT NULL,
    KNAME      D_NAME NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PR_POSSIBLE_RESULT (
    ID         D_INT_IDEN NOT NULL,
    RNAME      D_NAME NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_ABBREVIATION (
    ID         D_INT_IDEN NOT NULL,
    ALEVEL     D_INT,
    SCNAME     D_ABBREVIATION,
    SOCRNAME   VARCHAR(30),
    KOD_T_ST   CHAR(3),
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_ADDITIONAL_EDUCATION_KIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    OKIN       D_SMALLCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_ADDRESS (
    ID             D_INT_IDEN NOT NULL,
    PERSONNEL_ID   D_INT_IDEN NOT NULL,
    ADDRESS_KIND   D_INT,
    BEGINDATE      D_DATE,
    FULL_ADDRESS   D_COMMENT,
    POST_INDEX     D_MEDIUMCODE,
    COUNTRY        D_SMALLNAME NOT NULL,
    REGION         D_SMALLNAME NOT NULL,
    DISTRICT       D_SMALLNAME NOT NULL,
    DISTRICT_TYPE  D_ABBREVIATION,
    CITY           D_SMALLNAME NOT NULL,
    CITY_TYPE      D_ABBREVIATION,
    AREA           D_SMALLNAME NOT NULL,
    AREA_TYPE      D_ABBREVIATION,
    STREET         D_SMALLNAME NOT NULL,
    STREET_TYPE    D_ABBREVIATION,
    HOUSE          D_MEDIUMCODE,
    "BLOCK"        D_MEDIUMCODE,
    FLAT           D_MEDIUMCODE,
    REGION_TYPE    D_ABBREVIATION,
    KLADR_CODE     CHAR(15),
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_CALC_PERIOD (
    ID            D_INT_IDEN,
    BEGINDATE     D_DATENOTNULL,
    ENDDATE       D_DATENOTNULL,
    STAFFLIST_ID  D_INT,
    PNAME         D_NAME_N,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_CONFIG (
    ID                     D_INT_IDEN,
    COSTS_ANL_ID           D_INT,
    BASE_CURRENCY          D_SMALLCODE,
    NAT_CURRENCY           D_SMALLCODE,
    CURRENCY_PREC          D_SHORT,
    CUR_RATE_AUTHORITY_ID  D_INT,
    CUR_RATE_TYPE_ID       D_INT,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_COSTS_ANL (
    ID         D_INT_IDEN,
    ACODE      D_BIGCODE NOT NULL,
    ANAME      D_NAME_N,
    ANLLEVEL   D_SHORT NOT NULL,
    PARENT_ID  D_INT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_COUNTRY (
    ID         D_INT_IDEN NOT NULL,
    CCODE      D_SMALLCODE NOT NULL,
    CNAME      D_SMALLNAME NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_DEDUCTION_KIND (
    ID               D_INT_IDEN NOT NULL,
    DEDUCTIONCLASS   D_INT_IDEN NOT NULL,
    DCODE            D_BIGCODE NOT NULL,
    DNAME            D_NAME NOT NULL,
    MINSALARYNUMBER  D_QUANTITY,
    FIXEDSUM         D_SUMMA,
    BEGINDATE        D_DATENOTNULL NOT NULL,
    MAX_INCOME       D_SUMMA,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_EDUCATION_DEGREE (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    OKIN       D_SMALLCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_FAMILYDEDUCTIONS (
    ID                D_INT_IDEN NOT NULL,
    DEDUCTIONKIND_ID  D_INT_IDEN NOT NULL,
    BEGINDATE         D_DATE,
    ENDDATE           D_DATE,
    RATIO             D_QUANTITY,
    FAMILY_MEMBER_ID  D_INT_IDEN,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_FAMILYMEMBERS (
    ID            D_INT_IDEN NOT NULL,
    PERSONNEL_ID  D_INT_IDEN NOT NULL,
    FNAME         D_NAME NOT NULL,
    PATRONYMIC    D_NAME NOT NULL,
    SURNAME       D_NAME NOT NULL,
    RELATION_ID   D_INT,
    BIRTHDATE     D_DATE,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_FAMILYRELATION (
    ID         D_INT_IDEN NOT NULL,
    RCODE      D_BIGCODE NOT NULL,
    PRIORITY   D_INT,
    OKIN       D_SMALLCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_FAMILYSTATUS (
    ID             D_INT_IDEN NOT NULL,
    PERSONNEL_ID   D_INT_IDEN NOT NULL,
    STATUSKIND_ID  D_INT_IDEN NOT NULL,
    BEGINDATE      D_DATENOTNULL NOT NULL,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_FAMILYSTATUS_KIND (
    ID         D_INT_IDEN NOT NULL,
    KCODE      D_BIGCODE NOT NULL,
    PRIORITY   D_INT,
    OKIN       D_SMALLCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_FOREIGN_LANGUAGE (
    ID         D_INT_IDEN,
    NAME       D_NAME,
    OKIN       D_SMALLCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_IDENTDOC (
    ID                   D_INT_IDEN NOT NULL,
    PERSONNEL_ID         D_INT_IDEN NOT NULL,
    IDENTDOCKIND_ID      D_INT_IDEN NOT NULL,
    IS_BASIC             D_BOOLEAN,
    SERIES_LEFT          D_SMALLCODE,
    SERIES_DIVIDER       D_SMALLCODE,
    SERIES_RIGHT         D_SMALLCODE,
    NUMBER               D_BIGCODE,
    WHO_ISSUED           D_NAME NOT NULL,
    WHEN_ISSUED          D_DATE,
    ACTIVE_TILL          D_DATE,
    CITIZENSHIP          D_SMALLNAME NOT NULL,
    ADDRESS_ID           D_INT,
    BIRTHDATE            D_DATE,
    NATIONALITY_ID       D_INT,
    BIRTHPLACE_COUNTRY   D_SMALLNAME NOT NULL,
    BIRTHPLACE_REGION    D_SMALLNAME NOT NULL,
    BIRTHPLACE_DISTRICT  D_SMALLNAME NOT NULL,
    BIRTHPLACE_CITY      D_SMALLNAME NOT NULL,
    BIRTHPLACE_OKATO     D_BIGCODE,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_IDENTDOC_KIND (
    ID              D_INT_IDEN NOT NULL,
    KCODE           D_BIGCODE NOT NULL,
    KNAME           D_NAME NOT NULL,
    LSERIES_LENGTH  D_INT,
    RSERIES_LENGTH  D_INT,
    SERIES_DIVIDER  D_SMALLCODE,
    NUMBER_LENGTH   D_INT,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_INSUREDCLASS (
    ID                D_INT_IDEN NOT NULL,
    CCODE             D_BIGCODE NOT NULL,
    CNAME             D_NAME NOT NULL,
    INSURED_PERCENT   D_RATIO,
    EMPLOYER_PERCENT  D_RATIO,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_JOB (
    ID         D_INT_IDEN,
    NAME       D_NAME,
    OKPDTR     D_MEDIUMCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_KLADR (
    ID          D_INT_IDEN,
    KNAME       VARCHAR(40),
    KTYPE       VARCHAR(10),
    KCODE       CHAR(13),
    POST_INDEX  CHAR(6),
    GNINMB      CHAR(4),
    OCATD       CHAR(11),
    SYSCOD      CHAR(10),
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_LANGUAGE_KNOWLEDGE (
    ID         D_INT_IDEN,
    NAME       D_NAME,
    OKIN       D_SMALLCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_LEAVE_KIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    OKIN       D_SMALLCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_MILITARY_RANK (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    OKIN       D_SMALLCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_MILITARY_RANK_KIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_MILITARY_VALIDITY (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_NATIONALITY (
    ID         D_INT_IDEN NOT NULL,
    NNAME      D_SMALLNAME NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERS_VOCATIONAL_TRAINING (
    ID                       D_INT_IDEN,
    PERSONNEL_ID             D_INT_IDEN,
    TRAINING_BEGINDATE       D_DATE,
    TRAINING_ENDDATE         D_DATE,
    SPECIALITY_ID            D_INT_IDEN,
    CERTIFICATE_DOCUMENT_ID  D_INT,
    ORDER_ID                 D_INT,
    CLIENT_ID                D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL (
    ID                       D_INT_IDEN NOT NULL,
    GROUP_ID                 D_INT_IDEN NOT NULL,
    ACT_DATE                 D_DATE,
    TABLE_NUMBER             D_BIGCODE,
    NAME1                    D_NAME_N,
    NAME2                    D_NAME_N,
    NAME3                    D_NAME_N,
    BORNDATE                 D_DATE,
    SEX                      D_INT,
    STATURE                  D_QUANTITY,
    MEASURE_UPCODE           D_SMALLCODE,
    PHOTO                    D_ORIGINAL,
    PENSION_NUMBER           D_BIGCODE,
    INSUREDCLASS_ID          D_INT,
    INN                      D_BIGCODE,
    PERSON_ID                D_INT_IDEN,
    EDUCATION_DEGREE_ID      D_INT,
    LABOUR_CONTRACT_NUMBER   D_BIGCODE,
    LABOUR_CONTRACT_DATE     D_DATE,
    ADDITIONAL_INFO          VARCHAR(2048),
    RETIRE_REASON            D_COMMENT,
    RETIRE_DATE              D_DATE,
    RETIRE_ORDER_ID          D_INT,
    MIL_RESERVE_CATEGORY_ID  D_INT,
    MIL_RANK_ID              D_INT,
    MIL_RANK_KIND_ID         D_INT,
    MIL_SPECIALITY           D_BIGCODE,
    MIL_VALIDITY_ID          D_INT,
    MIL_COMMISSARIAT         D_NAME_N,
    MIL_REG_PARTY_NUMBER     D_NAME_N,
    MIL_REG_SPECIAL          D_NAME_N,
    MIL_IS_TAKEN_OFF         D_SHORT,
    CLIENT_ID                D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_ATTESTATION (
    ID                      D_INT_IDEN,
    PERSONNEL_ID            D_INT_IDEN,
    ATTESTATION_DATE        D_DATE,
    RESOLUTION              D_NAME_N,
    RESOLUTION_DOCUMENT_ID  D_INT,
    ORDER_ID                D_INT,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_EDUCATION (
    ID                            D_INT_IDEN,
    PERSONNEL_ID                  D_INT_IDEN,
    INSTITUTION_NAME              D_NAME,
    DIPLOMA_QUALIFICATION         D_NAME_N,
    DIPLOMA_NUMBER                D_BIGCODE,
    DIPLOMA_DATE                  D_DATE,
    GRADUATION_YEAR               D_INT,
    SPECIALITY_ID                 D_INT,
    IS_ADDITIONAL                 D_SHORT,
    ADDITIONAL_EDUCATION_KIND_ID  D_INT,
    CLIENT_ID                     D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_GROUP (
    ID            D_INT_IDEN,
    FLDNAME       D_NAME,
    GROUPTYPE_ID  D_INT,
    PARENT_ID     D_INT,
    FOLDER_TAG    D_NAME_N,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_GROUP_TYPE (
    ID         D_INT_IDEN,
    NAME       D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_HIST (
    ID               D_INT_IDEN,
    PERSONNEL_ID     D_INT_IDEN,
    ACT_DATE         D_DATENOTNULL,
    TABLE_NUMBER     D_BIGCODE,
    NAME1            D_NAME,
    NAME2            D_NAME,
    NAME3            D_NAME,
    BORNDATE         D_DATE,
    SEX              D_INT,
    STATURE          D_QUANTITY,
    MEASURE_UPCODE   D_SMALLCODE,
    PHOTO            D_ORIGINAL,
    PENSION_NUMBER   D_BIGCODE,
    INSUREDCLASS_ID  D_INT,
    INN              D_BIGCODE,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_LABOUR_CONTRACT (
    ID                    D_INT_IDEN,
    PERSONNEL_ID          D_INT_IDEN,
    NAME                  D_NAME,
    ORIGINAL_DOCUMENT_ID  D_INT,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_LANGUAGE (
    ID                     D_INT_IDEN,
    PERSONNEL_ID           D_INT_IDEN,
    FOREIGN_LANGUAGE_ID    D_INT_IDEN,
    LANGUAGE_KNOWLEDGE_ID  D_INT,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_LEAVE (
    ID              D_INT_IDEN,
    PERSONNEL_ID    D_INT_IDEN,
    LEAVE_KIND_ID   D_INT_IDEN,
    WORK_BEGINDATE  D_DATE,
    WORK_ENDDATE    D_DATE,
    HOLIDAY_NUMBER  D_INT,
    BEGINDATE       D_DATENOTNULL,
    ENDDATE         D_DATE,
    ORDER_ID        D_INT,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_PHONE (
    ID             D_INT_IDEN,
    PERSONNEL_ID   D_INT_IDEN,
    TOWN_CODE      D_PHONE,
    PHONE          D_PHONE,
    PHONE_KIND_ID  D_INT,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_PROFESSION (
    ID            D_INT_IDEN,
    PERSONNEL_ID  D_INT_IDEN,
    JOB_ID        D_INT_IDEN,
    IS_BASIC      D_SHORT,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_RECORD (
    ID                    D_INT_IDEN,
    PERSONNEL_ID          D_INT_IDEN,
    NAME                  D_NAME,
    ORIGINAL_DOCUMENT_ID  D_INT,
    DESCRIPTION           VARCHAR(2048),
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_REWARD (
    ID                    D_INT_IDEN,
    PERSONNEL_ID          D_INT_IDEN,
    REWARD_NAME           D_NAME,
    ORIGINAL_DOCUMENT_ID  D_INT,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_SERVICE (
    ID              D_INT_IDEN NOT NULL,
    PERSONNEL_ID    D_INT_IDEN NOT NULL,
    SERVICEKIND_ID  D_INT_IDEN NOT NULL,
    BEGINDATE       D_DATE,
    ENDDATE         D_DATE,
    LENGTHSERVICE   D_QUANTITY,
    COMMENT         D_COMMENT,
    IS_GOINGON      D_BOOLEAN,
    RATIO           D_RATIO,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_SKILL_RAISING (
    ID                       D_INT_IDEN,
    PERSONNEL_ID             D_INT_IDEN,
    STUDY_BEGINDATE          D_DATE,
    STUDY_ENDDATE            D_DATE,
    SKILL_RAISING_KIND_ID    D_INT_IDEN,
    INSTITUTION_NAME         D_NAME_N,
    INSTITUTION_ADDRESS      D_ADDRESS,
    CERTIFICATE_DOCUMENT_ID  D_INT,
    ORDER_ID                 D_INT,
    CLIENT_ID                D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_SOCIAL_BENEFIT (
    ID                    D_INT_IDEN,
    PERSONNEL_ID          D_INT_IDEN,
    BENEFIT_NAME          D_NAME,
    ORIGINAL_DOCUMENT_ID  D_INT,
    BENEFIT_REASON        D_BIGNAME,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PERSONNEL_TRANSFER (
    ID                      D_INT_IDEN,
    PERSONNEL_ID            D_INT_IDEN,
    TRANSFER_DATE           D_DATE,
    STAFF_LIST_UNIT_ID      D_INT,
    STAFF_LIST_POSITION_ID  D_INT,
    SALARY                  D_SUMMA,
    SALARY_RAISE            D_SUMMA,
    ORDER_ID                D_INT,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PFCODE_IN_SERVICE (
    ID                   D_INT_IDEN NOT NULL,
    PERSONNELSERVICE_ID  D_INT_IDEN NOT NULL,
    PFCODE_ID            D_INT_IDEN NOT NULL,
    COMMENT              D_COMMENT,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_PFCODEKIND_IN_SERVICEKIND (
    ID              D_INT_IDEN NOT NULL,
    PFCODEKIND_ID   D_INT_IDEN NOT NULL,
    SERVICEKIND_ID  D_INT_IDEN NOT NULL,
    RATIO           D_RATIO,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_POSITION (
    ID         D_INT_IDEN,
    NAME       D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_POSITION_FILL_KIND (
    ID         D_INT_IDEN,
    KCODE      D_BIGCODE NOT NULL,
    PRIORITY   D_INT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_RESERVE_CATEGORY (
    ID         D_INT_IDEN,
    NAME       D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_RISE (
    ID         D_INT_IDEN,
    RCODE      D_BIGCODE NOT NULL,
    RNAME      D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_RISE_PERCENT (
    ID              D_INT_IDEN,
    RISESCALE_ID    D_INT_IDEN,
    PERCENT_NUMBER  D_INT_IDEN,
    SERVICE_FROM    D_QUANTITY,
    SERVICE_TO      D_QUANTITY,
    RISE_VALUE      D_RATIO,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_RISE_SCALE (
    ID            D_INT_IDEN,
    RISE_ID       D_INT_IDEN,
    SCALE_NUMBER  D_INT_IDEN,
    SNAME         D_NAME_N,
    BEGINDATE     D_DATE,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_SERVICE_KIND (
    ID                    D_INT_IDEN NOT NULL,
    KNAME                 D_NAME NOT NULL,
    PARENT_ID             D_INT,
    KCODE                 D_BIGCODE NOT NULL,
    BEGINSERVICE_ALG_ID   D_INT,
    ENDSERVICE_ALG_ID     D_INT,
    LENGTHSERVICE_ALG_ID  D_INT,
    FOLDER_TAG            D_NAME_N,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_SERVICE_PFCODE (
    ID           D_INT_IDEN NOT NULL,
    FOLDER_ID    D_INT_IDEN NOT NULL,
    CODE         D_BIGCODE NOT NULL,
    DESCRIPTION  D_COMMENT,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_SKILL_RAISING_KIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_SPECIALITY (
    ID         D_INT_IDEN,
    NAME       D_NAME,
    OKSO       D_BIGCODE,
    MSKO       D_SMALLCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_STAFF_CATEGORY (
    ID         D_INT_IDEN,
    CCODE      D_BIGCODE NOT NULL,
    CNAME      D_NAME_N,
    PRIORITY   D_INT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_STAFF_LIST (
    ID         D_INT_IDEN,
    LNAME      D_NAME,
    FOLDER_ID  D_INT_IDEN,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_STAFF_LIST_POSITION (
    ID                     D_INT_IDEN,
    STAFFLISTUNIT_ID       D_INT_IDEN,
    POSITION_ID            D_INT_IDEN,
    SL_POSITION_UNIQUE_ID  D_BIGCODE NOT NULL,
    STAFFCATEGORY_ID       D_INT,
    BEGINDATE              D_DATE,
    ENDDATE                D_DATE,
    RATE_NUMBER            D_RATIO,
    HOLIDAY_NUMBER         D_INT,
    WORKCONDITION_ID       D_INT,
    WORK_SCHEDULE_ID       D_INT,
    COSTS_ANL1_ID          D_INT,
    COSTS_ANL2_ID          D_INT,
    COSTS_ANL3_ID          D_INT,
    COSTS_ANL4_ID          D_INT,
    COSTS_ANL5_ID          D_INT,
    TAX_CALC_KIND_ID       D_INT,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_STAFF_LIST_UNIT (
    ID                D_INT_IDEN,
    STAFFLIST_ID      D_INT_IDEN,
    PARENT_ID         D_INT,
    UCODE             D_BIGCODE NOT NULL,
    UNAME             D_NAME,
    COMMENTS          D_COMMENT,
    WORK_SCHEDULE_ID  D_INT,
    COSTS_ANL1_ID     D_INT,
    COSTS_ANL2_ID     D_INT,
    COSTS_ANL3_ID     D_INT,
    COSTS_ANL4_ID     D_INT,
    COSTS_ANL5_ID     D_INT,
    TAX_CALC_KIND_ID  D_INT,
    FOLDER_TAG        D_NAME_N,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_STREET (
    ID          D_INT_IDEN,
    SNAME       VARCHAR(40),
    KTYPE       VARCHAR(10),
    KCODE       CHAR(17),
    POST_INDEX  CHAR(6),
    GNINMB      CHAR(4),
    OCATD       CHAR(11),
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_TARIFF_SCALE (
    ID                  D_INT_IDEN,
    SCODE               D_BIGCODE NOT NULL,
    SNAME               D_NAME_N,
    STYPE               D_SHORT,
    FIRST_CLASS_ALG_ID  D_INT,
    BEGINDATE           D_DATE NOT NULL,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_TARIFF_SCALE_CLASS (
    ID              D_INT_IDEN,
    TARIFFSCALE_ID  D_INT_IDEN,
    CLASS_NUMBER    D_INT_IDEN,
    FACTOR          D_RATIO,
    RATE            D_SUMMA,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_TARIFFING (
    ID                     D_INT_IDEN,
    STAFFLIST_ID           D_INT,
    SL_POSITION_UNIQUE_ID  D_BIGCODE NOT NULL,
    POSITIONFILL_ID        D_INT,
    CATEGORY_ID            D_INT_IDEN,
    BEGINDATE              D_DATE,
    ENDDATE                D_DATE,
    RATE_OF_SALARY         D_SUMMA,
    TARIFFSCALE_CODE       D_BIGCODE,
    TARIFFCLASS            D_INT,
    RISE_VALUE             D_RATIO,
    USE_RISE_REFERENCE     D_BOOLEAN,
    RISE_ID                D_INT,
    RISESCALE_ID           D_INT,
    MINSALARY_NUMBER       D_RATIO,
    COSTS_ANL1_ID          D_INT,
    COSTS_ANL2_ID          D_INT,
    COSTS_ANL3_ID          D_INT,
    COSTS_ANL4_ID          D_INT,
    COSTS_ANL5_ID          D_INT,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_TARIFFING_CATEGORY (
    ID         D_INT_IDEN,
    CCODE      D_BIGCODE NOT NULL,
    CNAME      D_NAME_N,
    CTYPE      D_SHORT NOT NULL,
    PRIORITY   D_INT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_TAX_CALC_KIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_WORK_CONDITION (
    ID         D_INT_IDEN,
    CCODE      D_BIGCODE NOT NULL,
    CNAME      D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_WORK_SCHEDULE (
    ID                 D_INT_IDEN,
    SCODE              D_BIGCODE NOT NULL,
    SNAME              D_NAME_N,
    BEGINDATE          D_DATE,
    ENDDATE            D_DATE,
    LEAVE_SCHEDULE_ID  D_INT,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE PREF_WORKTIME_NORM (
    ID                D_INT_IDEN,
    CALC_PERIOD_ID    D_INT_IDEN,
    WORK_SCHEDULE_ID  D_INT_IDEN,
    WORKDAYS_NUMBER   D_INT,
    WORKHOURS_NUMBER  D_INT,
    WORKDAYS_ALG_ID   D_INT,
    WORKHOURS_ALG_ID  D_INT,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE PRICELIST_PRICETYPE_LINK (
    PRICELIST_ID      D_INT_IDEN,
    PRICETYPE_ID      D_INT_IDEN,
    PRIORITY          SMALLINT,
    RELATIVE_PERCENT  D_RATIO,
    ID                D_INT_IDEN,
    ALG_ID            D_INT,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE PRICELISTFOLDER (
    ID                D_INT_IDEN,
    PRICELISTHEAD_ID  D_INT_IDEN,
    PARENT_ID         D_INT,
    FNAME             D_NAME,
    FOLDER_TAG        D_NAME_N,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE PRICELISTHEAD (
    ID                   D_INT_IDEN,
    PRNAME               D_NAME,
    CREATEDATE           TIMESTAMP default 'today',
    CURRENCY_CODE        D_SMALLCODE NOT NULL,
    BASEPRICETYPE        D_INT,
    ISCURRENT            D_BOOLEAN,
    INSERTSIGN           D_BOOLEAN,
    CURRATETYPE_ID       D_INT,
    CURRATEAUTHORITY_ID  D_INT,
    PRICE_PRECISION      INTEGER,
    CONTRACTOR_ID        D_INT,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE PRICELISTHEAD_RIGHTS (
    ID         D_INT_IDEN,
    REC_ID     D_INT_IDEN,
    GROUP_ID   D_INT_IDEN,
    RIGHTS     INTEGER,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE PRICELISTSPEC (
    ID                D_INT_IDEN,
    FOLDER_ID         D_INT_IDEN,
    CATALOG_ID        D_INT,
    PRICE             D_SUMMA,
    LASTCOST          D_SUMMA,
    SNAME             D_NAME,
    CANCELED          D_BOOLEAN,
    UNID              VARCHAR(32),
    PRICELISTHEAD_ID  D_INT_IDEN,
    ACTDATE           D_DATE NOT NULL,
    ACTDATETILL       D_DATE NOT NULL,
    INTERNALCODE      D_NAME_N,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE PRICELISTSPEC_PRICE (
    PRICELISTSPEC_ID  D_INT_IDEN,
    PRICETYPE_ID      D_INT_IDEN,
    PRICE             D_RATIO NOT NULL,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE PRICETYPE (
    ID                    D_INT_IDEN,
    CODE                  D_BIGCODE NOT NULL,
    PNAME                 D_NAME,
    USE_RELATIVE_PERCENT  D_BOOLEAN,
    RELATIVE_PERCENT      D_RATIO,
    ROUND_IN_GREATER      D_BOOLEAN,
    FORMULA               D_FORMULA,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE QC_SCRAP_REASON (
    ID         D_INT_IDEN,
    CODE       D_MEDIUMCODE,
    NAME       D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE QC_SCRAP_TYPE (
    ID         D_INT_IDEN,
    CODE       D_MEDIUMCODE,
    NAME       D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_BANK (
    ID                 D_INT_IDEN,
    BIK                D_ACCOUNT,
    BIK_UNIQUE         D_BOOLEAN,
    NAME               D_BIGNAME,
    BRANCH             D_BIGNAME,
    COUNTRY_ID         D_INT,
    CITY_TYPE          D_NAME_N,
    CITY               D_ADDRESS,
    ADDRESS            D_ADDRESS,
    ZIP                D_ZIPCODE,
    CORR_ACC           D_ACCOUNT,
    CORR_ACC_CURRENCY  D_SMALLCODE,
    CORR_NAME          D_BIGNAME,
    CORR_ADDRESS       D_ADDRESS,
    SWIFT              D_ACCOUNT,
    IBAN               D_ADDRESS,
    BSC                D_ACCOUNT,
    PHONE              D_PHONE,
    FAX                D_PHONE,
    EMAIL              D_EMAIL,
    WWW                D_EMAIL,
    COMMENTS           D_COMMENT,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_BANK_ACCOUNT (
    ID               D_INT_IDEN,
    CONTRACTOR_ID    D_INT,
    BANK_ID          D_INT,
    NAME             D_NAME_N,
    ACCOUNT_TYPE_ID  D_INT,
    CURCODE          D_SMALLCODE,
    ACCOUNT          D_ACCOUNT,
    IS_DEFAULT       D_BOOLEAN,
    UNID             VARCHAR(32),
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_BANK_ACCOUNT_TYPE (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_CONFIDENTIAL_DATA (
    ID          D_INT_IDEN NOT NULL,
    PARTNER_ID  D_INT_IDEN NOT NULL,
    DNAME       D_NAME NOT NULL,
    CONFDATA    bytea,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_CONTRACTOR_EADDRESS (
    ID             D_INT_IDEN,
    CONTRACTOR_ID  D_INT,
    KIND_ID        D_INT,
    PROTOCOL       SMALLINT,
    ADDRESS        D_NAME_N,
    IS_ACTIVE      D_BOOLEAN,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_CONTRACTOR_PHONE (
    ID             D_INT_IDEN,
    CONTRACTOR_ID  D_INT,
    AREA_CODE      D_PHONE,
    PHONE          D_PHONE,
    PHONE_KIND_ID  D_INT,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_COUNTRY (
    ID                D_INT_IDEN NOT NULL,
    CCODE             D_SMALLCODE NOT NULL,
    CNAME             D_NAME NOT NULL,
    UNIVERSAL_CODE    CHAR(2),
    UNIVERSAL_ABBR    CHAR(3),
    UNIVERSAL_NUMBER  CHAR(3),
    CAPITAL           D_NAME_N,
    PHONE_CODE        VARCHAR(10),
    FULL_NAME         D_NAME_N,
    ADDRESS_RULE      D_BIGNAME,
    ADDRESS_DLM       VARCHAR(5),
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_CURRENCY_RATE (
    ID                 D_INT_IDEN,
    CURRENCY_CODE1     D_SMALLCODE NOT NULL,
    CURRENCY_CODE2     D_SMALLCODE NOT NULL,
    RATE               D_RATIO NOT NULL,
    RATE_AUTHORITY_ID  D_INT NOT NULL,
    RATE_TYPE_ID       D_INT NOT NULL,
    EFFECTIVE_DATE     D_DATETIME NOT NULL,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_CURRENCY_RATE_AUTHORITY (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_CURRENCY_RATE_TYPE (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_CUSTOMS_DECLARATION (
    ID         D_INT_IDEN NOT NULL,
    NOTE       D_COMMENT,
    CLIENT_ID  D_INT_IDEN,
    CDNUMBER   VARCHAR(30) NOT NULL
);

CREATE TABLE REF_DISTRICT (
    ID         D_INT_IDEN,
    REGION_ID  D_INT,
    PREFIX     D_ADDR_PREFIX,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_EADDRESS_KIND (
    ID         D_INT_IDEN,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_FAMILY_MEMBER (
    ID           D_INT_IDEN NOT NULL,
    PERSON_ID    D_INT_IDEN NOT NULL,
    FNAME        D_NAME NOT NULL,
    PATRONYMIC   D_NAME NOT NULL,
    SURNAME      D_NAME NOT NULL,
    RELATION_ID  D_INT,
    BIRTHDATE    D_DATE,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_FAMILY_RELATION (
    ID         D_INT_IDEN NOT NULL,
    RCODE      D_BIGCODE NOT NULL,
    PRIORITY   D_INT,
    OKIN       D_SMALLCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_FAMILY_STATUS (
    ID             D_INT_IDEN,
    PERSON_ID      D_INT_IDEN,
    STATUSKIND_ID  D_INT_IDEN,
    BEGINDATE      D_DATENOTNULL NOT NULL,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_FAMILY_STATUS_KIND (
    ID         D_INT_IDEN,
    KCODE      D_BIGCODE NOT NULL,
    PRIORITY   D_INT,
    OKIN       D_SMALLCODE,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_HOLIDAYS (
    ID         D_INT_IDEN,
    HNAME      D_NAME NOT NULL,
    HDATE      D_DATENOTNULL,
    HDAY       D_INT_IDEN,
    HMONTH     D_INT_IDEN,
    HYEAR      D_INT_IDEN,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_IDENT_DOC (
    ID                   D_INT_IDEN NOT NULL,
    PERSON_ID            D_INT_IDEN NOT NULL,
    IDENTDOCKIND_ID      D_INT_IDEN NOT NULL,
    IS_BASIC             D_BOOLEAN,
    SERIES_LEFT          D_MEDIUMCODE,
    SERIES_DIVIDER       D_SMALLCODE,
    SERIES_RIGHT         D_MEDIUMCODE,
    DOCNUMBER            D_BIGCODE,
    WHO_ISSUED           D_NAME_N,
    WHEN_ISSUED          D_DATE,
    ACTIVE_TILL          D_DATE,
    CITIZENSHIP          D_NAME_N,
    ADDRESS_ID           D_INT,
    BIRTHDATE            D_DATE,
    NATIONALITY_ID       D_INT,
    BIRTHPLACE_COUNTRY   D_NAME_N,
    BIRTHPLACE_REGION    D_NAME_N,
    BIRTHPLACE_DISTRICT  D_NAME_N,
    BIRTHPLACE_CITY      D_NAME_N,
    BIRTHPLACE_OKATO     D_BIGCODE,
    CLIENT_ID            D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_IDENT_DOC_KIND (
    ID              D_INT_IDEN NOT NULL,
    KCODE           D_BIGCODE NOT NULL,
    KNAME           D_NAME NOT NULL,
    LSERIES_LENGTH  D_INT,
    RSERIES_LENGTH  D_INT,
    SERIES_DIVIDER  D_SMALLCODE,
    NUMBER_LENGTH   D_INT,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_KBK (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_MEASURE_CONV (
    ID                 D_INT_IDEN NOT NULL,
    MEASURE_FROM_ID    D_INT_IDEN NOT NULL,
    MEASURE_TO_ID      D_INT_IDEN NOT NULL,
    CATALOG_ID         D_INT,
    CONV_ALGORITHM_ID  D_INT,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_NATIONALITY (
    ID         D_INT_IDEN NOT NULL,
    NNAME      D_SMALLNAME NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_NATURAL_PERSON (
    ID               D_INT_IDEN NOT NULL,
    FOLDER_ID        D_INT_IDEN NOT NULL,
    ACT_DATE         D_DATENOTNULL NOT NULL,
    SURNAME          D_NAME,
    NAME             D_NAME_N,
    PATRONYMIC       D_NAME_N,
    BORNDATE         D_DATE,
    SEX              D_INT,
    PHOTO            D_ORIGINAL,
    INN              D_BIGCODE,
    ADDITIONAL_INFO  VARCHAR(2048),
    CODE             D_NAME_N,
    USER_ID          D_INT,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_NATURAL_PERSON_HIST (
    ID          D_INT_IDEN,
    PERSON_ID   D_INT_IDEN,
    ACT_DATE    D_DATENOTNULL,
    SURNAME     D_NAME,
    NAME        D_NAME_N,
    PATRONYMIC  D_NAME_N,
    INN         D_BIGCODE,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_OKATO (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_OKP (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_NAME_N,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_ORIGINAL_DOCUMENT (
    ID          D_INT_IDEN,
    FOLDER_ID   D_INT_IDEN,
    DOCNUMBER   D_DOCNUMBER,
    DOCDATE     D_DOCDATE,
    DOCNAME     D_NAME,
    CREATEDATE  D_DATE,
    COMMENTS    D_COMMENT,
    ORIGINAL    D_ORIGINAL,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_PARTN_EMPL_EMAIL (
    ID            D_INT_IDEN NOT NULL,
    PARTNEMPL_ID  D_INT_IDEN NOT NULL,
    EMAIL         D_EMAIL NOT NULL,
    IS_ACTIVE     D_BOOLEAN,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_PARTN_EMPL_LINK (
    ID            D_INT_IDEN NOT NULL,
    PARTNER_ID    D_INT_IDEN NOT NULL,
    EMPLOYEES_ID  D_INT_IDEN NOT NULL,
    DATEBEGIN     D_DATE,
    DATEEND       D_DATE,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_PARTN_EMPL_PHONE (
    ID            D_INT_IDEN NOT NULL,
    PARTNEMPL_ID  D_INT_IDEN NOT NULL,
    TOWNCODE      D_PHONE,
    PHONE         D_PHONELIST NOT NULL,
    PHONEKIND_ID  D_INT,
    IS_ACTIVE     D_BOOLEAN,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_PERSON_ADDRESS (
    ID            D_INT_IDEN NOT NULL,
    PERSON_ID     D_INT_IDEN NOT NULL,
    ADDRESS_KIND  D_INT,
    BEGINDATE     D_DATE,
    POST_INDEX    D_MEDIUMCODE,
    COUNTRY_ID    D_INT,
    REGION        D_NAME_N,
    CITY          D_NAME_N,
    STREET        D_ADDR_STREET,
    HOUSE         D_ADDR_HOUSE,
    FULL_ADDRESS  D_BIGNAME,
    REGION_ID     D_INT,
    DISTRICT_ID   D_INT,
    PLACE_ID      D_INT,
    BUILDING      D_ADDR_BUILDING,
    ROOM          D_ADDR_ROOM,
    ZIPCODE_ID    D_INT,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_PERSON_EADDRESS (
    ID         D_INT_IDEN,
    PERSON_ID  D_INT,
    KIND_ID    D_INT,
    PROTOCOL   SMALLINT,
    ADDRESS    D_NAME_N,
    IS_ACTIVE  D_BOOLEAN,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_PERSON_PHONE (
    ID             D_INT_IDEN,
    PERSON_ID      D_INT_IDEN,
    PHONE          D_PHONE,
    PHONE_KIND_ID  D_INT,
    AREA_CODE      D_PHONE,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_PHONE_KIND (
    ID         D_INT_IDEN NOT NULL,
    KNAME      D_NAME NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_PLACE (
    ID           D_INT_IDEN,
    DISTRICT_ID  D_INT,
    PREFIX       D_ADDR_PREFIX,
    NAME         D_NAME_N,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_REGION (
    ID          D_INT_IDEN,
    COUNTRY_ID  D_INT,
    PREFIX      D_ADDR_PREFIX,
    NAME        D_NAME_N,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE REF_ZIPCODE (
    ID           D_INT_IDEN,
    CODE         D_ZIPCODE NOT NULL,
    COUNTRY_ID   D_INT,
    REGION_ID    D_INT,
    DISTRICT_ID  D_INT,
    PLACE_ID     D_INT,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE REMNACC (
    ID              D_INT_IDEN,
    PERIOD_ID       D_INT_IDEN,
    ACC_ID          D_INT,
    REMNBEGINNATDB  D_SUMMA NOT NULL,
    REMNBEGINNATKT  D_SUMMA NOT NULL,
    REMNBEGINCURDB  D_SUMMA NOT NULL,
    REMNBEGINCURKT  D_SUMMA NOT NULL,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE REMNANL (
    ID              D_INT_IDEN,
    PERIOD_ID       D_INT_IDEN,
    ACC_ID          D_INT,
    REMNBEGINNATDB  D_SUMMA NOT NULL,
    REMNBEGINNATKT  D_SUMMA NOT NULL,
    REMNBEGINCURDB  D_SUMMA NOT NULL,
    REMNBEGINCURKT  D_SUMMA NOT NULL,
    ANLPLAN1_ID     INTEGER,
    ANLPLAN2_ID     INTEGER,
    ANLPLAN3_ID     INTEGER,
    ANLPLAN4_ID     INTEGER,
    ANLPLAN5_ID     INTEGER,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE REMNDBKT (
    ID              D_INT_IDEN NOT NULL,
    PERIOD_ID       D_INT_IDEN NOT NULL,
    ACC_ID          D_INT,
    ANLPLAN1_ID     INTEGER,
    ANLPLAN2_ID     INTEGER,
    ANLPLAN3_ID     INTEGER,
    ANLPLAN4_ID     INTEGER,
    ANLPLAN5_ID     INTEGER,
    REMNBEGINNATDB  D_SUMMA NOT NULL,
    REMNBEGINNATKT  D_SUMMA NOT NULL,
    REMNBEGINCURDB  D_SUMMA default 0,
    REMNBEGINCURKT  D_SUMMA default 0,
    RISEDEBTS       TIMESTAMP,
    CLEARDEBTS      TIMESTAMP,
    COMMENT         D_COMMENT,
    DOCBASETYPE     D_DOCTYPE,
    DOCBASENUMBER   D_DOCNUMBER,
    DOCBASEDATE     TIMESTAMP,
    DOCTYPE         D_DOCTYPE,
    DOCNUMBER       D_DOCNUMBER,
    DOCDATE         TIMESTAMP,
    CONTRACTOR_ID   D_INT,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE REMNVAL (
    ID             D_INT_IDEN NOT NULL,
    PERIOD_ID      D_INT_IDEN NOT NULL,
    ACC_ID         D_INT,
    CATALOG_ID     D_INT_IDEN NOT NULL,
    ANLPLAN1_ID    INTEGER,
    ANLPLAN2_ID    INTEGER,
    ANLPLAN3_ID    INTEGER,
    ANLPLAN4_ID    INTEGER,
    ANLPLAN5_ID    INTEGER,
    BEGINQUAN      D_MASS NOT NULL,
    REMNBEGINNAT   D_SUMMA,
    REMNBEGINCUR   D_SUMMA,
    BATCH_ID       INTEGER,
    ISREMOVE       SMALLINT,
    CONTRACTOR_ID  D_INT,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE RPT_CLASS_LINK (
    ID         D_INT_IDEN,
    RPT_ID     D_INT,
    CLASS_ID   D_INT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE RPT_MAIN (
    ID                D_INT_IDEN,
    CLIENT_ID         D_INT_IDEN DEFAULT 1,
    CODE              D_LARGECODE NOT NULL,
    RPTNAME           D_NAME,
    ASKPARAMS         D_BOOLEAN,
    DIRECT_PRINT      D_BOOLEAN NOT NULL,
    COMMENT           D_COMMENT,
    INVOKE_FROM_EDIT  D_BOOLEAN,
    PRIORITY          D_INT,
    SYS_VERSION       D_SYS_VERSION,
    TEMPLATE          bytea,
    PARAMS_FORM_NAME  D_JAVA_CLASS_NAME,
    OUTPUT_FORMAT     CHAR(10)
);

CREATE TABLE RPT_RIGHTS (
    ID         D_INT_IDEN,
    RPT_ID     D_INT_IDEN,
    GROUP_ID   D_INT_IDEN,
    RIGHTS     INTEGER,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE RTL_INVOICEHEAD (
    DOCHEAD_ID        D_INT_IDEN,
    SUMCUR_DISCOUNT   D_SUMMA,
    SUMNAT_DISCOUNT   D_SUMMA,
    DISCOUNT_ON_DOC   D_RATIO,
    DISCOUNT_ON_LINE  D_RATIO,
    DISCOUNTCARD_ID   D_INT,
    EXTRADISCOUNT_ID  D_INT,
    COMMENTS          D_COMMENT,
    SHIPPER           D_INT,
    CONSIGNEE         D_INT,
    RESPONSIBLE       D_INT,
    CONSUMER          D_INT,
    PLANPAYDATE       D_DATE,
    PAYDATE           D_DATE,
    PAYSUM            D_SUMMA,
    BASE_DISCOUNT     D_RATIO,
    PLANSHIPDATE      D_DATE,
    APPLY_DIS_KIND    INTEGER
);

CREATE TABLE RTL_INVOICEHEADMODEL (
    DOCHEADMODEL_ID   D_INT_IDEN,
    SUMCUR_DISCOUNT   D_SUMMA,
    SUMNAT_DISCOUNT   D_SUMMA,
    DISCOUNT_ON_DOC   D_RATIO,
    DISCOUNT_ON_LINE  D_RATIO,
    DISCOUNTCARD_ID   D_INT,
    EXTRADISCOUNT_ID  D_INT,
    COMMENTS          D_COMMENT,
    SHIPPER           D_INT,
    CONSIGNEE         D_INT,
    RESPONSIBLE       D_INT,
    CONSUMER          D_INT,
    PLANPAYDATE       D_DATE,
    PAYDATE           D_DATE,
    PAYSUM            D_SUMMA,
    BASE_DISCOUNT     D_RATIO,
    PLANSHIPDATE      D_DATE,
    APPLY_DIS_KIND    INTEGER
);

CREATE TABLE RTL_INVOICESPEC (
    DOCSPEC_ID      D_INT_IDEN,
    DISCOUNT        D_RATIO,
    PRICE_DISCOUNT  D_SUMMA,
    SUM_DISCOUNT    D_SUMMA,
    DOC_DISCOUNT    D_RATIO
);

CREATE TABLE SAL_CALC_LIST (
    ID                D_INT_IDEN,
    PAY_ROLL_ID       D_INT_IDEN,
    POSITION_FILL_ID  D_INT_IDEN,
    NEED_PARAMS       D_BOOLEAN,
    IS_CALCULATED     D_BOOLEAN,
    TOTAL_SUMMA       D_SUMMA,
    POSITIVE_SUMMA    D_SUMMA,
    NEGATIVE_SUMMA    D_SUMMA,
    NEUTRAL_SUMMA     D_SUMMA,
    IS_CLOSED         D_BOOLEAN,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_CALC_LIST_FEE (
    ID                    D_INT_IDEN,
    CALC_LIST_SECTION_ID  D_INT_IDEN,
    FEE_MODEL_ID          D_INT,
    BEGINDATE             D_DATE,
    ENDDATE               D_DATE,
    PERIOD_BEGINDATE      D_DATE,
    PERIOD_ENDDATE        D_DATE,
    SUMMA                 D_SUMMA,
    NEED_PARAMS           D_BOOLEAN,
    COSTS_ANL1_ID         D_INT,
    COSTS_ANL2_ID         D_INT,
    COSTS_ANL3_ID         D_INT,
    COSTS_ANL4_ID         D_INT,
    COSTS_ANL5_ID         D_INT,
    IS_CALCULATED         D_BOOLEAN,
    DONT_RECALC           D_BOOLEAN,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_CALC_LIST_FEE_PARAM (
    ID                D_INT_IDEN,
    CALC_LIST_FEE_ID  D_INT_IDEN,
    FEE_REF_PARAM_ID  D_INT_IDEN,
    PARAM_VALUE       D_FEATURE,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_CALC_LIST_SECTION (
    ID                        D_INT_IDEN,
    CALC_LIST_ID              D_INT_IDEN,
    CALC_LIST_SECTION_REF_ID  D_INT_IDEN,
    TOTAL_SUMMA               D_SUMMA,
    CLIENT_ID                 D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_CALC_LIST_SECTION_REF (
    ID         D_INT_IDEN,
    SNAME      D_NAME,
    PRIORITY   D_INT,
    SUM_SIGN   D_SHORT,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_DISCOUNTKIND (
    ID               D_INT_IDEN NOT NULL,
    DCODE            D_BIGCODE NOT NULL,
    DNAME            D_NAME NOT NULL,
    MINSALARYNUMBER  D_QUANTITY,
    FIXEDSUM         D_SUMMA,
    BEGINDATE        D_DATENOTNULL NOT NULL,
    ACTIONPERIOD     D_QUANTITY,
    IS_ACCUMULATING  D_BOOLEAN,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_FEE_MODEL (
    ID                  D_INT_IDEN,
    FEE_REF_ID          D_INT_IDEN,
    PERSONALACCOUNT_ID  D_INT_IDEN,
    BEGINDATE           D_DATE,
    ENDDATE             D_DATE,
    SUMMA               D_SUMMA,
    ROLL_KIND_ID        D_INT,
    POSITIONFILL_ID     D_INT,
    USE_BASIC_POSITION  D_BOOLEAN,
    COSTS_ANL1_ID       D_INT,
    COSTS_ANL2_ID       D_INT,
    COSTS_ANL3_ID       D_INT,
    COSTS_ANL4_ID       D_INT,
    COSTS_ANL5_ID       D_INT,
    CALC_PERIOD_ID      D_INT,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_FEE_MODEL_PARAM (
    ID                D_INT_IDEN,
    FEE_MODEL_ID      D_INT_IDEN,
    FEE_REF_PARAM_ID  D_INT_IDEN,
    PARAM_VALUE       D_FEATURE,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_FEE_REF (
    ID                     D_INT_IDEN,
    CALCLISTSECTIONREF_ID  D_INT_IDEN,
    GNSCODE_ID             D_INT,
    CALC_ALG_ID            D_INT,
    FEE_TYPE               D_SHORT,
    FCODE                  D_BIGCODE NOT NULL,
    FNAME                  D_NAME_N,
    PRIORITY               D_INT,
    SUM_SIGN               D_SHORT,
    BEGINDATE              D_DATE,
    ENDDATE                D_DATE,
    PERIODICITY            D_SHORT,
    COSTS_ANL1_ID          D_INT,
    COSTS_ANL2_ID          D_INT,
    COSTS_ANL3_ID          D_INT,
    COSTS_ANL4_ID          D_INT,
    COSTS_ANL5_ID          D_INT,
    ROLL_KIND_ID           D_INT,
    INCOME_KIND_ID         D_INT,
    IS_ZERO_INCLUDED       D_BOOLEAN,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_FEE_REF_PARAM (
    ID           D_INT_IDEN,
    FEE_REF_ID   D_INT_IDEN,
    PCODE        D_BIGCODE NOT NULL,
    PNAME        D_NAME_N,
    CALC_ALG_ID  D_INT,
    PRIORITY     D_INT,
    PARAM_TYPE   D_SHORT,
    CALC_ONCE    D_BOOLEAN,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_FEE_SUMMARY_HEAD (
    DOCHEAD_ID   D_INT_IDEN,
    PAY_ROLL_ID  D_INT
);

CREATE TABLE SAL_FEE_SUMMARY_SPEC (
    DOCSPEC_ID     D_INT_IDEN,
    COSTS_ANL1_ID  D_INT,
    COSTS_ANL2_ID  D_INT,
    COSTS_ANL3_ID  D_INT,
    COSTS_ANL4_ID  D_INT,
    COSTS_ANL5_ID  D_INT
);

CREATE TABLE SAL_GNS_CODE (
    ID           D_INT_IDEN,
    CODE         D_MEDIUMCODE,
    DESCRIPTION  D_COMMENT,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_INCLUDED_FEE (
    ID               D_INT_IDEN,
    FEE_REF_ID       D_INT_IDEN,
    INCLUDED_FEE_ID  D_INT_IDEN,
    SUM_SIGN         D_SHORT,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_INCOMEKIND (
    ID         D_INT_IDEN NOT NULL,
    ICODE      D_BIGCODE NOT NULL,
    INAME      D_NAME NOT NULL,
    BEGINDATE  D_DATENOTNULL NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_MINSALARY (
    ID         D_INT_IDEN NOT NULL,
    BEGINDATE  D_DATENOTNULL NOT NULL,
    MINSALARY  D_SUMMA NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_PAY_ROLL (
    ID              D_INT_IDEN,
    ROLL_KIND_ID    D_INT_IDEN,
    CALC_PERIOD_ID  D_INT_IDEN,
    RNUMBER         D_BIGCODE NOT NULL,
    RNAME           D_NAME_N,
    DOCTYPE         D_DOCTYPE,
    DOCNUMBER       D_DOCNUMBER,
    DOCDATE         D_DOCDATE,
    COMMENTS        D_COMMENT,
    CALC_BEGINDATE  D_DATE,
    CALC_ENDDATE    D_DATE,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_PAY_SHEET (
    ID             D_INT_IDEN,
    PAY_ROLL_ID    D_INT,
    SNUMBER        D_BIGCODE,
    BEGINDATE      D_DATE,
    ENDDATE        D_DATE,
    DOCHEAD_ID     D_INT,
    CHIEF_ID       D_INT,
    BOOKKEEPER_ID  D_INT,
    CASHIER_ID     D_INT,
    SUMMA_FULL     D_SUMMA,
    INDOCHEAD_ID   D_INT,
    CLIENT_ID      D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_PAY_SHEET_SPEC (
    ID                D_INT_IDEN,
    PAY_SHEET_ID      D_INT_IDEN,
    POSITION_FILL_ID  D_INT_IDEN,
    SUMMA_FULL        D_SUMMA,
    SUMMA_PAID_OUT    D_SUMMA,
    SUMMA_DEPOSITED   D_SUMMA,
    SUMMA_REST        D_SUMMA,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_PERSONAL_ACCOUNT (
    ID            D_INT_IDEN,
    PERSONNEL_ID  D_INT_IDEN,
    ANUMBER       D_BIGCODE,
    BEGINDATE     D_DATE,
    ENDDATE       D_DATE,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_POSITION_FILL (
    ID                     D_INT_IDEN,
    PERSONALACCOUNT_ID     D_INT_IDEN,
    POSITION_ID            D_INT_IDEN,
    SL_POSITION_UNIQUE_ID  D_BIGCODE NOT NULL,
    POSITIONFILLKIND_ID    D_INT,
    BEGINDATE              D_DATE,
    ENDDATE                D_DATE,
    DOCTYPE                D_DOCTYPE,
    DOCNUMBER              D_DOCNUMBER,
    DOCDATE                D_DOCDATE,
    RATE_NUMBER            D_RATIO,
    IS_BASIC               D_BOOLEAN,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_REPLACED_FEE (
    ID               D_INT_IDEN,
    FEE_REF_ID       D_INT_IDEN,
    REPLACED_FEE_ID  D_INT_IDEN,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_ROLL_KIND (
    ID         D_INT_IDEN,
    KNAME      D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_TARIFFING_IN_FEE (
    ID                     D_INT_IDEN,
    FEE_REF_ID             D_INT_IDEN,
    TARIFFING_CATEGORY_ID  D_INT_IDEN,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_TAXHEAD (
    ID         D_INT_IDEN NOT NULL,
    TNAME      D_NAME NOT NULL,
    TCODE      D_BIGCODE NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_TAXRATE (
    ID              D_INT_IDEN NOT NULL,
    TAXSCALE_ID     D_INT_IDEN NOT NULL,
    RNUMBER         D_INT_IDEN NOT NULL,
    MININCOME       D_SUMMA,
    MAXINCOME       D_SUMMA,
    TAX_PERCENT     D_RATIO,
    CONSTVALUE      D_SUMMA,
    PRIVILEGERATIO  D_RATIO,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE SAL_TAXSCALE (
    ID          D_INT_IDEN NOT NULL,
    TAXHEAD_ID  D_INT_IDEN NOT NULL,
    SNUMBER     D_INT_IDEN NOT NULL,
    BEGINDATE   D_DATENOTNULL NOT NULL,
    TAXPAYER    D_INT,
    SNAME       D_NAME_N,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE SALEBOOK (
    ID                      D_INT_IDEN,
    FOLDER_ID               D_INT_IDEN,
    DOCUMENT_ID             D_INT,
    DOCTYPE                 D_DOCTYPE,
    DOCNUMBER               D_DOCNUMBER,
    DOCDATE                 D_DOCDATE,
    INSERTDATE              D_DATE,
    PAYDATE                 D_DATE,
    TOTALSUM                D_SUMMA,
    SUM_WITHOUT_NDS1        D_SUMMA,
    SUM_WITHOUT_NDS2        D_SUMMA,
    NDS1_SUM                D_SUMMA,
    NDS2_SUM                D_SUMMA,
    NOT_TAXABLE_SUM         D_SUMMA,
    NOT_TAXABLE_EXPORT_SUM  D_SUMMA,
    NSP_SUM                 D_SUMMA,
    CUSTOMER_ID             D_INT,
    ORGUNIT_ID              D_INT,
    SUM_WITHOUT_NDS3        D_SUMMA,
    NDS3_SUM                D_SUMMA,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE SCH_TASK (
    ID               D_INT_IDEN,
    FOLDER_ID        D_INT_IDEN NOT NULL,
    CODE             D_BIGCODE NOT NULL,
    NAME             D_NAME NOT NULL,
    ALGORITHM_ID     D_INT_IDEN,
    DESCRIPTION      D_COMMENT,
    CLIENT_ID        D_INT_IDEN DEFAULT 1,
    CRON_EXPRESSION  VARCHAR(256) NOT NULL,
    IS_ACTIVE        D_BOOLEAN
);

CREATE TABLE SEC_GROUPS (
    ID         D_INT_IDEN NOT NULL,
    NAME       D_NAME NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE SEC_LINK_USERS_GROUPS (
    ID         D_INT_IDEN NOT NULL,
    USER_ID    D_INT_IDEN NOT NULL,
    GROUP_ID   D_INT_IDEN NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE SEC_METHOD_ACCESS (
    ID          D_INT_IDEN,
    GROUP_ID    D_INT_IDEN,
    METHOD_ID   D_INT_IDEN,
    PERMISSION  D_BOOLEAN NOT NULL,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE SEC_MODULE_ACCESS (
    ID         D_INT_IDEN NOT NULL,
    MODULE_ID  D_INT_IDEN NOT NULL,
    GROUP_ID   D_INT_IDEN NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE SEC_USER_PROFILE (
    ID            D_INT_IDEN,
    USER_ID       D_INT_IDEN,
    PROFILE_TYPE  SMALLINT NOT NULL,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE SEC_USER_PROFILE_ITEM (
    ID          D_INT_IDEN,
    PROFILE_ID  D_INT_IDEN,
    CODE        D_JAVA_CLASS_NAME NOT NULL,
    CHECK_SUM   INTEGER,
    DATA        bytea,
    CLIENT_ID   D_INT_IDEN DEFAULT 1
);

CREATE TABLE SEC_USERS (
    ID                  D_INT_IDEN NOT NULL,
    NAME                D_USERNAME NOT NULL,
    FULLNAME            D_NAME,
    PASSW               D_PASSWORD,
    ACTIVE_FLAG         D_BOOLEAN,
    SMART_CARD_ONLY     D_BOOLEAN,
    EMAIL               D_EMAIL,
    MOBILE              D_PHONE,
    PAGER               D_PHONE,
    USE_REMOTE_PROFILE  D_BOOLEAN,
    USER_TYPE           SMALLINT,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE SETOFGOOD (
    ID            D_INT_IDEN NOT NULL,
    GOOD_ID       D_INT_IDEN NOT NULL,
    COMPONENT_ID  D_INT_IDEN NOT NULL,
    QUANTITY      D_RATIO NOT NULL,
    PRICERELATE   D_RATIO,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE SPECMARK (
    UPCODE     D_BIGCODE NOT NULL,
    CODE       D_BIGCODE NOT NULL,
    SMNAME     D_NAME NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1,
    ID         D_INT_IDEN
);

CREATE TABLE STL_CONFIG (
    BASE_CURRENCY          D_SMALLCODE,
    NAT_CURRENCY           D_SMALLCODE,
    CURRENCY_PREC          INTEGER,
    CUR_RATE_TYPE_ID       D_INT,
    CUR_RATE_AUTHORITY_ID  D_INT,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE STOCKBATCH (
    ID                      D_INT_IDEN,
    STOCKCARD_ID            D_INT_IDEN,
    BEGINQUAN               D_QUANTITY_EXT default 0,
    ENDQUAN                 D_QUANTITY_EXT default 0,
    PRICENAT                D_SUMMA_EXT default 0,
    PRICECUR                D_SUMMA_EXT default 0,
    CURRENCY_CODE           D_SMALLCODE,
    DOCTYPE                 D_DOCTYPE,
    DOCNUMBER               D_DOCNUMBER,
    DOCDATE                 D_DOCDATE,
    CREATEDATE              D_DATE default 'today',
    BESTBEFORE              D_DATETIME,
    CONTRACTOR_ID           D_INT,
    NUMBER_LOT              VARCHAR(50),
    VENDOR_LOT              VARCHAR(50),
    CERTIFICATE             VARCHAR(80),
    COMMENT                 D_COMMENT,
    BEGINQUAN2              D_QUANTITY_EXT DEFAULT 0,
    ENDQUAN2                D_QUANTITY_EXT DEFAULT 0,
    OWNER_ID                D_INT,
    STOCK_KIND_ID           D_INT,
    CLIENT_ID               D_INT_IDEN DEFAULT 1,
    CUSTOMS_DECLARATION_ID  D_INT,
    COUNTRY_OF_ORIGIN_ID    D_INT
);

CREATE TABLE STOCKBATCHHISTORY (
    ID                      D_INT_IDEN,
    STOCKBATCH_ID           D_INT_IDEN,
    DATETIME                D_DATE default 'now',
    KIND                    D_STOCKBATCHHISTORY_KIND NOT NULL,
    DOCUMENT_ID             D_INT_IDEN,
    DOCUMENTSPEC_ID         D_INT_IDEN,
    QUANTITY                D_QUANTITY_EXT default 0,
    PREV_STOCKBATCHHIST_ID  D_INT,
    PROCESSDATE             TIMESTAMP,
    QUANTITY2               D_QUANTITY_EXT DEFAULT 0,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE STOCKCARD (
    ID           D_INT_IDEN,
    STOCK_ID     D_INT_IDEN,
    MOL_ID       D_INT,
    CATALOG_ID   D_INT_IDEN,
    CARDNUMBER   D_DOCNUMBER,
    SUPPLYNORM   D_MASS default 0,
    RESERVE      D_MASS default 0,
    QUANTITY     D_QUANTITY_EXT default 0,
    PLAN_IN      D_MASS default 0,
    PLAN_OUT     D_MASS default 0,
    SUPPLYNORM2  D_QUANTITY DEFAULT 0,
    RESERVE2     D_QUANTITY DEFAULT 0,
    QUANTITY2    D_QUANTITY_EXT DEFAULT 0,
    PLAN_IN2     D_QUANTITY DEFAULT 0,
    PLAN_OUT2    D_QUANTITY DEFAULT 0,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE STOCKDOCUMENTHEAD (
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    DOCHEAD_ID              D_INT_IDEN
);

CREATE TABLE STOCKDOCUMENTHEADMODEL (
    SUMMACUR_WITH_DISCOUNT  D_SUMMA,
    SUMMANAT_WITH_DISCOUNT  D_SUMMA,
    ADD_EXPENSES            D_SUMMA,
    DISCOUNT_ON_DOC         D_RATIO,
    DISCOUNT_ON_LINE        D_RATIO,
    DOCHEADMODEL_ID         D_INT_IDEN
);

CREATE TABLE STOCKDOCUMENTSPEC (
    COST                 D_SUMMA,
    DISCOUNT             D_RATIO,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    DOCSPEC_ID           D_INT_IDEN,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE STOCKDOCUMENTSPECMODEL (
    COST                 D_SUMMA,
    DISCOUNT             D_RATIO,
    DOCSPEC_ID           D_INT_IDEN,
    PRICE_WITH_DISCOUNT  D_SUMMA,
    SUMMA_WITH_DISCOUNT  D_SUMMA,
    DOC_DISCOUNT         D_RATIO
);

CREATE TABLE STOCKPLANHISTORY (
    ID            D_INT_IDEN,
    STOCKCARD_ID  D_INT_IDEN,
    KIND          SMALLINT NOT NULL,
    DIRECTION     SMALLINT default 0 NOT NULL,
    PROCESSDATE   D_DATE,
    SYSDATETIME   D_DATE DEFAULT 'NOW',
    QUANTITY      D_MASS,
    DOCHEAD_ID    D_INT_IDEN NOT NULL,
    DOCSPEC_ID    D_INT_IDEN NOT NULL,
    QUANTITY2     D_QUANTITY,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE STRINGS (
    SECTION  D_INT_IDEN,
    VAL      D_INT_IDEN,
    TEXT     D_NAME
);

CREATE TABLE SYS_AUDIT (
    ID              D_BIG_INT_IDEN NOT NULL,
    CLIENT_ID       D_INT_IDEN,
    USER_NAME       D_USERNAME NOT NULL,
    EVENT_DATETIME  D_DATETIME NOT NULL,
    AUDIT_BEAN      D_JAVA_CLASS_NAME NOT NULL,
    OPERATION       VARCHAR(256),
    DETAILS         D_DESCRIPTION
);

CREATE TABLE SYS_CLASS (
    ID           D_INT_IDEN,
    MODULE_ID    D_INT,
    BEAN_NAME    D_BEAN_NAME,
    DESCRIPTION  D_COMMENT,
    TRG_INIT     D_INT,
    TRG_CREATE   D_INT,
    TRG_STORE    D_INT,
    TRG_REMOVE   D_INT
);

CREATE TABLE SYS_CLASS_IMPL (
    ID         D_INT_IDEN,
    CLIENT_ID  D_INT_IDEN,
    APP_LAYER  D_APP_LAYER,
    CLASS_ID   D_INT_IDEN,
    KIND       D_CLASS_IMPL_KIND,
    NAME       D_BEAN_NAME
);

CREATE TABLE SYS_CLIENT (
    ID           D_INT_IDEN,
    CODE         D_SMALLCODE NOT NULL,
    NAME         D_NAME,
    DESCRIPTION  D_DESCRIPTION,
    IS_ACTIVE    D_BOOLEAN,
    LANGUAGE     VARCHAR(6)
);

CREATE TABLE SYS_COMPANY (
    ID           D_INT_IDEN,
    CLIENT_ID    D_INT_IDEN,
    CODE         D_BIGCODE NOT NULL,
    NAME         D_NAME,
    DESCRIPTION  D_DESCRIPTION,
    IS_ACTIVE    D_BOOLEAN
);

CREATE TABLE SYS_DATAITEM (
    ID                       D_INT_IDEN,
    APP_LAYER                D_APP_LAYER,
    NAME                     D_NAME,
    DATAITEM_KIND            D_SYS_DATAITEM_KIND,
    DESCRIPTION              D_DESCRIPTION,
    DOMAIN_ID                D_INT,
    REFERENCE_DATAITEM_NAME  D_NAME_N,
    DEFAULT_COMPONENT_NAME   D_NAME_N,
    SHORT_LABEL              D_JAVA_CLASS_NAME,
    MEDIUM_LABEL             D_JAVA_CLASS_NAME,
    LONG_LABEL               D_JAVA_CLASS_NAME,
    HEADER                   D_JAVA_CLASS_NAME,
    SEARCH_HELP              D_JAVA_CLASS_NAME,
    REPORT_LABEL             D_JAVA_CLASS_NAME,
    ENTITY_PROPERTY_TEXT     VARCHAR(80),
    ENTITY_TEXT_FORMAT       VARCHAR(80),
    IS_READ_ONLY             D_BOOLEAN,
    ASSIGN_PARAMETER_NAME    D_BIGNAME
);

CREATE TABLE SYS_DB_AUDIT (
    ID              D_BIG_INT_IDEN NOT NULL,
    CLIENT_ID       D_INT_IDEN,
    USER_NAME       D_USERNAME NOT NULL,
    EVENT_DATETIME  D_DATETIME NOT NULL,
    AUDIT_TYPE      SMALLINT NOT NULL,
    ENTITY_NAME     D_JAVA_CLASS_NAME NOT NULL
);

CREATE TABLE SYS_DB_AUDIT_DETAIL (
    ID             D_BIG_INT_IDEN NOT NULL,
    DB_AUDIT_ID    D_BIG_INT_IDEN NOT NULL,
    PROPERTY_NAME  D_JAVA_CLASS_NAME NOT NULL,
    STATE          VARCHAR(256),
    OLD_STATE      VARCHAR(256)
);

CREATE TABLE SYS_DB_AUDIT_SETUP (
    ID             D_INT_IDEN,
    CLIENT_ID      D_INT_IDEN,
    ENTITY_NAME    D_JAVA_CLASS_NAME NOT NULL,
    PROPERTY_NAME  D_JAVA_CLASS_NAME,
    AUDIT_CREATE   SMALLINT,
    AUDIT_MODIFY   SMALLINT,
    AUDIT_REMOVE   SMALLINT
);

CREATE TABLE SYS_DOMAIN (
    ID                        D_INT_IDEN,
    NAME                      D_NAME,
    DESCRIPTION               D_DESCRIPTION,
    BUILT_IN_TYPE             SMALLINT,
    STRING_LENGTH             INTEGER,
    NUMBER_OF_PLACES          INTEGER,
    NUMBER_OF_DECIMAL_PLACES  INTEGER,
    IS_LOWERCASE              D_BOOLEAN,
    IS_MANDATORY              D_BOOLEAN,
    IS_SIGN                   D_BOOLEAN,
    CONVERSION_ROUTINE        D_JAVA_CLASS_NAME,
    FIXED_VALUES              D_JAVA_CLASS_NAME,
    DEFAULT_VALUE             D_JAVA_CLASS_NAME
);

CREATE TABLE SYS_FORM (
    ID           D_INT_IDEN,
    APP_LAYER    D_APP_LAYER,
    NAME         D_NAME,
    IMPL_NAME    D_JAVA_CLASS_NAME,
    CLASS_ID     D_INT_IDEN,
    DESCRIPTION  D_DESCRIPTION,
    ROLE_ID      D_INT,
    USER_ID      D_INT
);

CREATE TABLE SYS_METHOD (
    ID           D_INT_IDEN,
    CLASS_ID     D_INT,
    CORBA_NAME   D_NAME_N,
    DESCRIPTION  D_NAME_N
);

CREATE TABLE SYS_MODULE (
    ID             D_INT_IDEN NOT NULL,
    NAME           D_NAME NOT NULL,
    DESCRIPTION    VARCHAR(100),
    MAJOR_VERSION  SMALLINT,
    MINOR_VERSION  SMALLINT,
    "RELEASE"      SMALLINT
);

CREATE TABLE SYS_SECURITY_AUDIT (
    ID              D_BIG_INT_IDEN NOT NULL,
    CLIENT_ID       D_INT_IDEN,
    USER_NAME       D_USERNAME NOT NULL,
    EVENT_DATETIME  D_DATETIME NOT NULL,
    AUDIT_TYPE      SMALLINT NOT NULL,
    AUDIT_BEAN      D_JAVA_CLASS_NAME NOT NULL,
    DETAILS         D_DESCRIPTION
);

CREATE TABLE SYS_WINDOW (
    ID           D_INT_IDEN,
    APP_LAYER    D_APP_LAYER,
    ROLE_ID      D_INT,
    USER_ID      D_INT,
    NAME         D_JAVA_CLASS_NAME,
    IMPL_NAME    D_JAVA_CLASS_NAME,
    DESCRIPTION  D_DESCRIPTION
);

CREATE TABLE SYSTEMCONFIG (
    MAJOR_VERSION      SMALLINT NOT NULL,
    MINOR_VERSION      SMALLINT NOT NULL,
    "RELEASE"          SMALLINT NOT NULL,
    BASE_CURRENCY      D_SMALLCODE,
    NATIONAL_CURRENCY  D_SMALLCODE,
    USE_ANALITIC_LINK  D_BOOLEAN,
    RECURSE_FOLDER     D_BOOLEAN,
    RECURSE_CATFOLDER  D_BOOLEAN,
    RECURSE_ORGUNIT    D_BOOLEAN,
    DELAYS_ON          D_BOOLEAN,
    CURRENCY_PREC      SMALLINT,
    DEFER_REMNACC      D_BOOLEAN NOT NULL,
    LOG_V1_DOC_DEL     D_BOOLEAN NOT NULL,
    LOG_V1_ROLLBACK    D_BOOLEAN NOT NULL,
    LOG_V1_PARTNER     D_BOOLEAN,
    LOG_V1_CATALOG     D_BOOLEAN
) WITH OIDS;

CREATE TABLE TAB_CONFIG (
    WORK_TIME_KIND_ID     D_INT,
    HOLIDAY_TIME_KIND_ID  D_INT,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE TAB_PATTERN_HEAD (
    ID            D_INT_IDEN,
    PCODE         D_BIGCODE NOT NULL,
    PNAME         D_NAME_N,
    DURATION      D_INT_IDEN,
    PATTERN_KIND  D_SHORT,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAB_PATTERN_SPEC (
    ID               D_INT_IDEN,
    PATTERN_HEAD_ID  D_INT_IDEN,
    TIME_KIND_ID     D_INT_IDEN,
    DAY_NUMBER       D_INT_IDEN,
    HOURS_QUANTITY   D_QUANTITY,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAB_SCHEDULE_HEAD (
    ID                         D_INT_IDEN,
    WORK_SCHEDULE_ID           D_INT_IDEN,
    DEFAULT_PATTERN_HEAD_ID    D_INT,
    HOLIDAY_ACCOUNT_KIND       D_SHORT,
    HOLIDAY_WORK_TIME_KIND_ID  D_INT,
    PREHOLIDAY_REDUCTION       D_QUANTITY,
    CLIENT_ID                  D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAB_SCHEDULE_SPEC (
    ID                D_INT_IDEN,
    SCHEDULE_HEAD_ID  D_INT_IDEN,
    TIME_KIND_ID      D_INT_IDEN,
    HOURS_QUANTITY    D_QUANTITY,
    SCHEDULE_DATE     D_DATENOTNULL,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAB_TIME_BOARD_HEAD (
    ID              D_INT_IDEN,
    CALC_PERIOD_ID  D_INT_IDEN,
    BNUMBER         D_BIGCODE,
    COMMENTS        D_COMMENT,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAB_TIME_BOARD_POSITION (
    ID                  D_INT_IDEN,
    TIME_BOARD_HEAD_ID  D_INT_IDEN,
    STAFF_LIST_UNIT_ID  D_INT_IDEN,
    POSITION_FILL_ID    D_INT_IDEN,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAB_TIME_BOARD_SPEC (
    ID                      D_INT_IDEN,
    TIME_BOARD_POSITION_ID  D_INT_IDEN,
    TIME_KIND_ID            D_INT_IDEN,
    HOURS_QUANTITY          D_QUANTITY,
    TIME_BOARD_DATE         D_DATENOTNULL,
    CLIENT_ID               D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAB_TIME_KIND (
    ID                D_INT_IDEN,
    KCODE             D_BIGCODE NOT NULL,
    KNAME             D_NAME_N,
    PRIORITY          D_INT,
    IS_WHOLE_DAY      D_BOOLEAN,
    MNEMOCODE         D_SMALLCODE,
    FONT_COLOR        INTEGER,
    BACKGROUND_COLOR  INTEGER,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAX (
    ID              D_INT_IDEN,
    UPCODE          D_BIGCODE NOT NULL,
    CODE            D_BIGCODE NOT NULL,
    TNAME           D_NAME NOT NULL,
    ACTIVEDATE      D_DATE default 'today',
    TAXTYPE         SMALLINT NOT NULL,
    TAXFORM         SMALLINT NOT NULL,
    INCLUDED        D_BOOLEAN NOT NULL,
    DIRECTRATE      D_RATIO NOT NULL,
    INVERSERATE     D_RATIO NOT NULL,
    SUMM            D_SUMMA default 0,
    DEACTIVATEDATE  D_DATE,
    CLIENT_ID       D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAXGROUP (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    TGNAME     D_NAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAXLINK (
    TAXGROUP_ID  D_INT_IDEN,
    TAX_ID       D_INT_IDEN,
    FEEORDER     SMALLINT NOT NULL,
    ID           INTEGER NOT NULL,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAXSUM_BUF (
    SPECIFICATION_ID  D_INT,
    TAX_ID            D_INT,
    SUMM              D_SUMMA,
    CLIENT_ID         D_INT_IDEN DEFAULT 1
);

CREATE TABLE TAXSUMM (
    ID                D_INT_IDEN,
    SECTIONDOC        SMALLINT,
    SPECIFICATION_ID  D_INT_IDEN,
    TAX_ID            D_INT_IDEN,
    SUMM              D_SUMMA default 0,
    PRICE             D_SUMMA
);

CREATE TABLE TURNONESFEATURES (
    ID           D_INT_IDEN,
    USERNAME     D_USERNAME default user,
    ACCDB_CODE   D_BIGCODE,
    ACCKT_CODE   D_BIGCODE,
    ANLDB1_ID    D_INT,
    ANLDB2_ID    D_INT,
    ANLDB3_ID    D_INT,
    ANLDB4_ID    D_INT,
    ANLDB5_ID    D_INT,
    ANLKT1_ID    D_INT,
    ANLKT2_ID    D_INT,
    ANLKT3_ID    D_INT,
    ANLKT4_ID    D_INT,
    ANLKT5_ID    D_INT,
    FEATURE1_ID  D_INT,
    FEATURE2_ID  D_INT,
    FEATURE3_ID  D_INT,
    FEATURE4_ID  D_INT,
    FEATURE5_ID  D_INT,
    ORGUNIT_ID   D_INT,
    SUMMNAT      D_SUMMA,
    SUMMCUR      D_SUMMA,
    OPERDATE     D_DATE,
    TOTAL_SIGN   SMALLINT,
    CLIENT_ID    D_INT_IDEN DEFAULT 1
);

CREATE TABLE TYPEDOC (
    ID                 D_INT_IDEN,
    UPCODE             D_DOCTYPE NOT NULL,
    CODE               D_DOCTYPE,
    TDNAME             D_NAME,
    NUMBERING_ALG_ID   D_INT,
    DOC_PROCESS_GRAPH  bytea,
    SOLID_DOC_PROCESS  D_BOOLEAN,
    RPT_ID             D_INT,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE WH_BIN_LOCATION (
    ID                 D_INT_IDEN NOT NULL,
    WAREHOUSE_ID       D_INT_IDEN NOT NULL,
    CODE               D_BIGCODE NOT NULL,
    DESCRIPTION        VARCHAR(80),
    TYPE_ID            D_INT,
    ZONE_ID            D_INT,
    INFINITE_VOLUME    D_BOOLEAN,
    MAXIMUM_VOLUME     D_QUANTITY,
    VOLUME_MEASURE_ID  D_INT,
    INFINITE_WEIGHT    D_BOOLEAN,
    MAXIMUM_WEIGHT     D_QUANTITY,
    WEIGHT_MEASURE_ID  D_INT,
    INFINITE_QUAN      D_BOOLEAN,
    MAXIMUM_QUAN       D_QUANTITY,
    QUAN_MEASURE_ID    D_INT,
    CLIENT_ID          D_INT_IDEN DEFAULT 1
);

CREATE TABLE WH_BIN_LOCATION_DETAIL (
    ID               D_INT_IDEN NOT NULL,
    BIN_LOCATION_ID  D_INT_IDEN NOT NULL,
    STOCKBATCH_ID    D_INT_IDEN NOT NULL,
    QUANTITY         D_QUANTITY,
    DOCSPEC_ID       D_INT,
    KIND             SMALLINT NOT NULL,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE WH_BIN_LOCATION_TYPE (
    ID         D_INT_IDEN NOT NULL,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME NOT NULL,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE WH_BIN_TYPE_CAP_BY_PROD (
    ID            D_INT_IDEN NOT NULL,
    TYPE_ID       D_INT_IDEN NOT NULL,
    CATALOG_ID    D_INT_IDEN NOT NULL,
    MEASURE_ID    D_INT_IDEN NOT NULL,
    MAX_QUANTITY  D_QUANTITY,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);

CREATE TABLE WH_CONFIG (
    BASE_CURRENCY          D_SMALLCODE,
    NAT_CURRENCY           D_SMALLCODE,
    CURRENCY_PREC          INTEGER,
    CUR_RATE_TYPE_ID       D_INT,
    CUR_RATE_AUTHORITY_ID  D_INT,
    CLIENT_ID              D_INT_IDEN DEFAULT 1
) WITH OIDS;

CREATE TABLE WH_INVACT_COMMISSION (
    ID               D_INT_IDEN,
    INVENTORYACT_ID  D_INT,
    CONTRACTOR_ID    D_INT,
    CLIENT_ID        D_INT_IDEN DEFAULT 1
);

CREATE TABLE WH_SECURITY (
    ID                    D_INT_IDEN NOT NULL,
    GROUP_ID              D_INT_IDEN NOT NULL,
    DISABLE_SPEC_PRICE    D_BOOLEAN,
    DISABLE_DISCOUNT      D_BOOLEAN,
    DISABLE_EXCEED_QUANT  D_DISABLE_EXCEED_QUANT,
    CLIENT_ID             D_INT_IDEN DEFAULT 1
);

CREATE TABLE WH_SERIAL_NUM (
    ID                  D_INT_IDEN NOT NULL,
    BATCH_ID            D_INT_IDEN NOT NULL,
    SERIAL_NUM          D_SERIAL_NUMBER,
    INCOME_DOCSPEC_ID   D_INT,
    OUTCOME_DOCSPEC_ID  D_INT,
    CLIENT_ID           D_INT_IDEN DEFAULT 1
);

CREATE TABLE WH_STOCK_KIND (
    ID         D_INT_IDEN,
    CODE       D_BIGCODE,
    NAME       D_BIGNAME,
    CLIENT_ID  D_INT_IDEN DEFAULT 1
);

CREATE TABLE WH_WAREHOUSE (
    ID                            D_INT_IDEN NOT NULL,
    CONTRACTOR_ID                 D_INT_IDEN NOT NULL,
    STOCKPOLICY                   D_STOCKPOLICY,
    CALC_FACT                     D_BOOLEAN,
    CALC_FACT_SIGN                D_BOOLEAN,
    CALC_PLAN_IN                  D_BOOLEAN,
    CALC_PLAN_IN_SIGN             D_BOOLEAN,
    CALC_PLAN_OUT                 D_BOOLEAN,
    CALC_PLAN_OUT_SIGN            D_BOOLEAN,
    CALC_RESERVE                  D_BOOLEAN,
    CALC_RESERVE_SIGN             D_BOOLEAN,
    USE_BIN_LOCATION              D_BOOLEAN,
    BIN_SIZING                    D_BOOLEAN,
    ALGORITHM_ID                  D_INT,
    CLIENT_ID                     D_INT_IDEN DEFAULT 1,
    DISPOSAL_STRAT_ID             D_INT,
    WAREHOUSE_TYPE_ID             D_INT,
    CHECK_TRANSACTION_DAY         D_BOOLEAN,
    WAREHOUSE_TRANSACTION_CLOSED  D_BOOLEAN,
    CLOSED_DATE_TILL              D_DATE,
    USER_STOCK_CLOSED             D_USERNAME,
    OPERATION_DATE                D_DATE
);

CREATE TABLE WH_WAREHOUSE_TRANSACTION_DAY (
    ID                 D_INT_IDEN NOT NULL,
    STOCK              D_INT_IDEN,
    CLOSED_DAY         D_DATE,
    USER_STOCK_CLOSED  D_USERNAME,
    OPERATION_DATE     D_DATE
);

CREATE TABLE WH_WAREHOUSE_TYPE (
    ID         D_INT_IDEN NOT NULL,
    CODE       D_BIGCODE NOT NULL,
    NAME       D_NAME,
    CLIENT_ID  D_INT_IDEN
);

CREATE TABLE WH_ZONE (
    ID            D_INT_IDEN NOT NULL,
    WAREHOUSE_ID  D_INT_IDEN NOT NULL,
    CODE          D_BIGCODE NOT NULL,
    NAME          D_NAME NOT NULL,
    CLIENT_ID     D_INT_IDEN DEFAULT 1
);



/* Check constraints definition */

ALTER TABLE ANLPLAN ADD CONSTRAINT C_ANLPLAN_RANGELEVEL CHECK ((anllevel>=1) and (anllevel<6));
ALTER TABLE FINANL ADD CONSTRAINT C_FINANL_RANGELEVEL CHECK ((anllevel>=1) and (anllevel<6));
ALTER TABLE FINPERIOD ADD CONSTRAINT C_FINPERIOD_FROMD_LESS_TOD check(datefrom < dateto);
ALTER TABLE PERIOD ADD CONSTRAINT C_PERIOD_FROMD_LESS_TOD check(datefrom < dateto);
ALTER TABLE SETOFGOOD ADD CONSTRAINT C_SETOFGOOD_GOOD_NQ_COMP check (good_id <> component_id);
ALTER TABLE REF_CURRENCY_RATE ADD CONSTRAINT C_REF_CURRENCY_RATE check (CURRENCY_CODE1 <> CURRENCY_CODE2
);
ALTER TABLE PP_ITEM_FAMILY ADD CONSTRAINT C_PP_ITEM_FAMILY_CHILD_PAR check (PARENT_GENERIC_ITEM <> CHILD_GENERIC_ITEM);
ALTER TABLE PP_PLANNING_FORECAST ADD CONSTRAINT CHK_PP_PLAN_FRCT_GEN_CAT check ((planning_item_id is null) and (catalog_id is not null) or (planning_item_id is not null) and (catalog_id is null));


/******************************************************************************/
/****                          Unique Constraints                          ****/
/******************************************************************************/

ALTER TABLE ACCPLAN ADD CONSTRAINT U_ACCPLAN_UPACC UNIQUE (UPACC);
ALTER TABLE ALG_CUSTOM_USER_ACTION ADD CONSTRAINT UNQ_CUSTOM_USER_ACTION_CODE UNIQUE (CODE);
ALTER TABLE ANLPLAN ADD CONSTRAINT U_ANLPLAN_ACCID_CODE_ALEVEL UNIQUE (UPCODE, ANLLEVEL, ACCPLAN_ID);
ALTER TABLE CATALOG ADD CONSTRAINT U_CATALOG_UPCODE UNIQUE (UPCODE);
ALTER TABLE CONTRACTOR ADD CONSTRAINT UNQ_CONTRACTOR UNIQUE (UPCODE, KIND);
ALTER TABLE CURRENCY ADD CONSTRAINT U_CURRENCY_BANK_CODE UNIQUE (BANK_CODE);
ALTER TABLE CURRENCY ADD CONSTRAINT U_CURRENCY_ID UNIQUE (ID);
ALTER TABLE CURRENCY ADD CONSTRAINT U_CURRENCY_ISO UNIQUE (ISO);
ALTER TABLE DIS_PROMOTION ADD CONSTRAINT UNQ_DIS_PROMOTION_CODE UNIQUE (CODE);
ALTER TABLE DOCPROCESSSTAGE ADD CONSTRAINT U_DOCPROCESSSTAGE_CODE UNIQUE (DOCTYPE_ID, CODE);
ALTER TABLE ECONSPEC_FEATURE ADD CONSTRAINT U_ECONSPEC_FEATURE_UPCODE UNIQUE (UPCODE);
ALTER TABLE ENTITY_TRANSFORMER_MAPPING ADD CONSTRAINT HASHAB_UNQ UNIQUE (HASHAB, APP_LAYER);
ALTER TABLE ENTITY_TRANSFORMER_MAPPING ADD CONSTRAINT MAP_ID_UNQ UNIQUE (MAP_ID);
ALTER TABLE FEATURE ADD CONSTRAINT U_FEATURE_CODE UNIQUE (CODE);
ALTER TABLE FEATURE ADD CONSTRAINT U_FEATURE_NAME UNIQUE (NAME);
ALTER TABLE FINACCOUNT ADD CONSTRAINT U_FINACCOUNT_UPCODE UNIQUE (UPCODE, KIND);
ALTER TABLE FINANL ADD CONSTRAINT U_FINANL_UPCODE UNIQUE (UPCODE, ANLLEVEL, FINACC_ID);
ALTER TABLE FINSTRUCTURE ADD CONSTRAINT U_FINSTRUCTURE_UPCODE UNIQUE (UPCODE);
ALTER TABLE HR_ORDER ADD CONSTRAINT UNQ_HR_ORDER_NUMBER UNIQUE (ORDER_NUMBER, ORDER_DATE);
ALTER TABLE HR_ORDER_ITEM_KIND ADD CONSTRAINT UNQ_HR_ORDER_ITEM_KIND_CODE UNIQUE (CODE);
ALTER TABLE HR_ORDER_ITEM_KIND ADD CONSTRAINT UNQ_HR_ORDER_ITEM_KIND_SYSCODE UNIQUE (SYS_CODE);
ALTER TABLE HR_ORDER_ITEM_KIND_PARAM ADD CONSTRAINT UNQ_HR_ORDER_ITEM_KIND_PARAM UNIQUE (ITEM_KIND_ID, CODE);
ALTER TABLE HR_ORDER_ITEM_KIND_PARAM ADD CONSTRAINT UNQ_HR_ORD_IKIND_PRM_SYSCODE UNIQUE (ITEM_KIND_ID, SYS_CODE);
ALTER TABLE HR_ORDER_ITEM_PARAM ADD CONSTRAINT UNQ_HR_ORDER_ITEM_PARAM UNIQUE (ORDER_ITEM_ID, ITEM_KIND_PARAM_ID);
ALTER TABLE HR_ORDER_MODEL ADD CONSTRAINT UNQ_HR_ORDER_MODEL UNIQUE (CODE);
ALTER TABLE HR_ORDER_MODEL_ITEM_PARAM ADD CONSTRAINT UNQ_HR_ORD_MDL_IPARAM UNIQUE (MODEL_ITEM_ID, ITEM_KIND_PARAM_ID);
ALTER TABLE INVENTORY ADD CONSTRAINT UNQ_INVENTORY_ACCKIND UNIQUE (INVHEAD_ID, ACCKIND_ID);
ALTER TABLE JBPM_PROCESSINSTANCE ADD UNIQUE (KEY_, PROCESSDEFINITION_);
ALTER TABLE LS_ITEMKIND ADD CONSTRAINT UNQ_LS_ITEMKIND_CODE UNIQUE (CODE);
ALTER TABLE LS_SCHEDULE_DOCHEAD ADD CONSTRAINT UNQ_LS_DOCHEAD UNIQUE (DOCHEAD_ID);
ALTER TABLE LS_SCHEDULE_DOCHEAD ADD CONSTRAINT UNQ_LS_SCHEDULE UNIQUE (LS_SCHEDULE_ID);
ALTER TABLE MEASURE ADD CONSTRAINT U_MEASURE_UPCODE UNIQUE (UPCODE);
ALTER TABLE OVR_NORM_SPEC_LINK ADD CONSTRAINT UNQ_OVR_NORM_SPEC_LINK UNIQUE (OVR_NORM_SPEC_ID, CATALOG_ID);
ALTER TABLE PP_CATALOG_WAREHOUSE ADD CONSTRAINT U_PP_CATALOG_WAREHOUSE UNIQUE (CATALOG_ID, WAREHOUSE_ID);
ALTER TABLE PREF_COSTS_ANL ADD CONSTRAINT UNQ_PREF_COSTS_ANL_CODE UNIQUE (ACODE, ANLLEVEL);
ALTER TABLE PREF_COUNTRY ADD CONSTRAINT UNQ_PREF_COUNTRY_CCODE UNIQUE (CCODE);
ALTER TABLE PREF_FAMILYSTATUS ADD CONSTRAINT UNQ_PREF_FAMILYSTATUS_BEGINDATE UNIQUE (PERSONNEL_ID, STATUSKIND_ID, BEGINDATE);
ALTER TABLE PREF_INSUREDCLASS ADD CONSTRAINT UNQ_PREF_INSUREDCLASS_CCODE UNIQUE (CCODE);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT UNQ_PREF_PERSONNEL_PERSON UNIQUE (PERSON_ID);
ALTER TABLE PREF_PERSONNEL_HIST ADD CONSTRAINT UNQ_PREF_PERSONNEL_HIST UNIQUE (PERSONNEL_ID, ACT_DATE);
ALTER TABLE PREF_POSITION_FILL_KIND ADD CONSTRAINT UNQ_PREF_POS_FILL_KIND_CODE UNIQUE (KCODE);
ALTER TABLE PREF_RISE ADD CONSTRAINT UNQ_PREF_RISE_CODE UNIQUE (RCODE);
ALTER TABLE PREF_RISE_PERCENT ADD CONSTRAINT UNQ_PREF_RISE_PERCENT_NUMBER UNIQUE (RISESCALE_ID, PERCENT_NUMBER);
ALTER TABLE PREF_RISE_SCALE ADD CONSTRAINT UNQ_PREF_RISE_SCALE_NUMBER UNIQUE (RISE_ID, SCALE_NUMBER);
ALTER TABLE PREF_SERVICE_PFCODE ADD CONSTRAINT UNQ_PREF_SERVICE_PFCODE_CODE UNIQUE (CODE);
ALTER TABLE PREF_STAFF_CATEGORY ADD CONSTRAINT UNQ_PREF_STAFF_CATEGORY_CODE UNIQUE (CCODE);
ALTER TABLE PREF_STAFF_LIST ADD CONSTRAINT UNQ_PREF_STAFF_LIST_NAME UNIQUE (LNAME);
ALTER TABLE PREF_TARIFFING_CATEGORY ADD CONSTRAINT UNQ_PREF_TARIFF_CATEG_CODE UNIQUE (CCODE);
ALTER TABLE PREF_TARIFF_SCALE ADD CONSTRAINT UNQ_PREF_TARIFF_SCALE_CODE UNIQUE (SCODE, BEGINDATE);
ALTER TABLE PREF_TARIFF_SCALE_CLASS ADD CONSTRAINT UNQ_PREF_TSCALE_CLASS_NUMBER UNIQUE (TARIFFSCALE_ID, CLASS_NUMBER);
ALTER TABLE PREF_TAX_CALC_KIND ADD CONSTRAINT UNQ_PREF_TAX_CALC_KIND_CODE UNIQUE (CODE);
ALTER TABLE PREF_WORKTIME_NORM ADD CONSTRAINT UNQ_PREF_WTIME_NORM_PERIOD UNIQUE (CALC_PERIOD_ID, WORK_SCHEDULE_ID);
ALTER TABLE PREF_WORK_CONDITION ADD CONSTRAINT UNQ_PREF_WORK_CONDITION_CODE UNIQUE (CCODE);
ALTER TABLE REF_COUNTRY ADD CONSTRAINT UNQ_REF_COUNTRY_CCODE UNIQUE (CCODE);
ALTER TABLE REF_CURRENCY_RATE ADD CONSTRAINT U_REF_CURRENCY_RATE UNIQUE (EFFECTIVE_DATE, RATE_TYPE_ID, RATE_AUTHORITY_ID, CURRENCY_CODE2, CURRENCY_CODE1);
ALTER TABLE REF_CUSTOMS_DECLARATION ADD CONSTRAINT UNQ_REF_CUSTOMS_DECLARATION UNIQUE (CDNUMBER);
ALTER TABLE REF_FAMILY_STATUS ADD CONSTRAINT UNQ_REF_FAM_STATUS_BEGINDATE UNIQUE (PERSON_ID, STATUSKIND_ID, BEGINDATE);
ALTER TABLE REF_HOLIDAYS ADD CONSTRAINT UNQ_REF_HOLIDAYS_HDATE UNIQUE (HDATE);
ALTER TABLE REF_KBK ADD CONSTRAINT UNQ_REF_KBK UNIQUE (CODE);
ALTER TABLE REF_NATURAL_PERSON_HIST ADD CONSTRAINT UNQ_REF_NATURAL_PERSON_HIST UNIQUE (PERSON_ID, ACT_DATE);
ALTER TABLE REF_OKATO ADD CONSTRAINT UNQ_REF_OKATO UNIQUE (CODE);
ALTER TABLE RPT_MAIN ADD CONSTRAINT U_CODE_RPT_MAIN UNIQUE (CODE);
ALTER TABLE SAL_CALC_LIST ADD CONSTRAINT UNQ_SAL_CALC_LIST UNIQUE (PAY_ROLL_ID, POSITION_FILL_ID);
ALTER TABLE SAL_CALC_LIST_FEE_PARAM ADD CONSTRAINT UNQ_SAL_CALC_LIST_FEE_PARAM UNIQUE (CALC_LIST_FEE_ID, FEE_REF_PARAM_ID);
ALTER TABLE SAL_CALC_LIST_SECTION ADD CONSTRAINT UNQ_SAL_CALC_LIST_SECTION UNIQUE (CALC_LIST_SECTION_REF_ID, CALC_LIST_ID);
ALTER TABLE SAL_FEE_MODEL_PARAM ADD CONSTRAINT UNQ_SAL_FEE_MODEL_PARAM UNIQUE (FEE_MODEL_ID, FEE_REF_PARAM_ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT UNQ_SAL_FEE_REF_CODE UNIQUE (FCODE);
ALTER TABLE SAL_FEE_REF_PARAM ADD CONSTRAINT UNQ_SAL_FEE_REF_PARAM_CODE UNIQUE (FEE_REF_ID, PCODE);
ALTER TABLE SAL_INCLUDED_FEE ADD CONSTRAINT UNQ_SAL_INCLUDED_FEE UNIQUE (FEE_REF_ID, INCLUDED_FEE_ID);
ALTER TABLE SAL_MINSALARY ADD CONSTRAINT UNQ_SAL_MINSALARY_BEGINDATE UNIQUE (BEGINDATE);
ALTER TABLE SAL_REPLACED_FEE ADD CONSTRAINT UNQ_SAL_REPLACED_FEE UNIQUE (FEE_REF_ID, REPLACED_FEE_ID);
ALTER TABLE SAL_TARIFFING_IN_FEE ADD CONSTRAINT UNQ_SAL_TARIFFING_IN_FEE UNIQUE (FEE_REF_ID, TARIFFING_CATEGORY_ID);
ALTER TABLE SAL_TAXHEAD ADD CONSTRAINT UNQ_SAL_TAXHEAD_CODE UNIQUE (TCODE);
ALTER TABLE SAL_TAXRATE ADD CONSTRAINT UNQ_SAL_TAXRATE_RNUMBER UNIQUE (TAXSCALE_ID, RNUMBER);
ALTER TABLE SAL_TAXSCALE ADD CONSTRAINT UNQ_SAL_TAXSCALE UNIQUE (TAXHEAD_ID, SNUMBER, BEGINDATE);
ALTER TABLE SCH_TASK ADD CONSTRAINT UNQ_SCH_TASK_CODE UNIQUE (CODE);
ALTER TABLE SEC_USERS ADD CONSTRAINT U_SEC_USERS_NAME UNIQUE (NAME);
ALTER TABLE SEC_USER_PROFILE ADD CONSTRAINT U_SEC_USER_PROFILE_TYPE UNIQUE (USER_ID, PROFILE_TYPE);
ALTER TABLE SEC_USER_PROFILE_ITEM ADD CONSTRAINT U_SEC_PROFILE_ITEM_CODE UNIQUE (PROFILE_ID, CODE);
ALTER TABLE SPECMARK ADD CONSTRAINT UNQ_SPECMARK UNIQUE (UPCODE);
ALTER TABLE SYS_CLIENT ADD CONSTRAINT UNQ_SYS_CLIENT_CODE UNIQUE (CODE);
ALTER TABLE SYS_COMPANY ADD CONSTRAINT UNQ_SYS_COMPANY_CODE UNIQUE (CLIENT_ID, CODE);
ALTER TABLE SYS_DATAITEM ADD CONSTRAINT UNQ_SYS_DATAITEM_NAME_LAYER UNIQUE (NAME, APP_LAYER);
ALTER TABLE SYS_DOMAIN ADD CONSTRAINT UNQ_SYS_DOMAIN_NAME UNIQUE (NAME);
ALTER TABLE SYS_MODULE ADD CONSTRAINT U_SYS_MODULE_NAME UNIQUE (NAME);
ALTER TABLE TAB_PATTERN_HEAD ADD CONSTRAINT UNQ_TAB_PATTERN_HEAD_CODE UNIQUE (PCODE);
ALTER TABLE TAB_PATTERN_SPEC ADD CONSTRAINT UNQ_TAB_PATTERN_SPEC_TKIND UNIQUE (DAY_NUMBER, TIME_KIND_ID, PATTERN_HEAD_ID);
ALTER TABLE TAB_SCHEDULE_HEAD ADD CONSTRAINT UNQ_TAB_SCHED_HEAD_SCHED UNIQUE (WORK_SCHEDULE_ID);
ALTER TABLE TAB_SCHEDULE_SPEC ADD CONSTRAINT UNQ_TAB_SCHEDULE_SPEC_TKIND UNIQUE (SCHEDULE_DATE, TIME_KIND_ID, SCHEDULE_HEAD_ID);
ALTER TABLE TAB_TIME_BOARD_HEAD ADD CONSTRAINT UNQ_TAB_TBOARD_HEAD_PERIOD UNIQUE (CALC_PERIOD_ID);
ALTER TABLE TAB_TIME_BOARD_POSITION ADD CONSTRAINT UNQ_TAB_TB_SPEC_POSITION UNIQUE (TIME_BOARD_HEAD_ID, POSITION_FILL_ID);
ALTER TABLE TAB_TIME_BOARD_SPEC ADD CONSTRAINT UNQ_TAB_TIME_BOARD_SPEC UNIQUE (TIME_BOARD_POSITION_ID, TIME_KIND_ID, TIME_BOARD_DATE);
ALTER TABLE TAB_TIME_KIND ADD CONSTRAINT UNQ_TAB_TIME_KIND_CODE UNIQUE (KCODE);
ALTER TABLE TAX ADD CONSTRAINT U_TAX_UPCODE UNIQUE (UPCODE);
ALTER TABLE TYPEDOC ADD CONSTRAINT U_TYPEDOC_UPCODE UNIQUE (UPCODE);
ALTER TABLE WH_BIN_LOCATION ADD CONSTRAINT U_WH_BIN_LOCATION_CODE UNIQUE (WAREHOUSE_ID, CODE);
ALTER TABLE WH_BIN_LOCATION_TYPE ADD CONSTRAINT U_WH_BIN_LOCATION_TYPE_CODE UNIQUE (CODE);
ALTER TABLE WH_WAREHOUSE ADD CONSTRAINT UNQ_WH_WAREHOUSE_CONT UNIQUE (CONTRACTOR_ID);
ALTER TABLE WH_ZONE ADD CONSTRAINT U_WH_ZONE_CODE UNIQUE (WAREHOUSE_ID, CODE);


/******************************************************************************/
/****                             Primary Keys                             ****/
/******************************************************************************/

ALTER TABLE ACCBATCH ADD CONSTRAINT PKEY_ACCBATCH PRIMARY KEY (ID);
ALTER TABLE ACCBATCHHISTORY ADD CONSTRAINT PKEY_ACCBATCHHISTORY PRIMARY KEY (ID);
ALTER TABLE ACCPLAN ADD CONSTRAINT PKEY_ACCPLAN PRIMARY KEY (ID);
ALTER TABLE ACC_ACCGROUP ADD CONSTRAINT PKEY_ACC_ACCGROUP PRIMARY KEY (ID);
ALTER TABLE ACC_ACCKIND ADD CONSTRAINT PKEY_ACC_ACCKIND PRIMARY KEY (ID);
ALTER TABLE ACC_ADVANCEREPHEAD ADD CONSTRAINT PK_ACC_ADVANCEREPHEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE ACC_ADVANCEREPHEADMODEL ADD CONSTRAINT PK_ACC_ADVANCEREPHEADMODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE ACC_ADVANCEREPSPEC ADD CONSTRAINT PK_ACC_ADVANCEREPSPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE ACC_AMCODE ADD PRIMARY KEY (ID);
ALTER TABLE ACC_AMORTIZATION ADD CONSTRAINT PK_ACC_AMORTIZATION PRIMARY KEY (ID);
ALTER TABLE ACC_AMRATE ADD CONSTRAINT PK_ACC_AMRATE PRIMARY KEY (ID);
ALTER TABLE ACC_INVHEAD ADD CONSTRAINT PKEY_ACC_INVHEAD PRIMARY KEY (ID);
ALTER TABLE ACC_INVPRODUCTION ADD CONSTRAINT PK_ACC_INVPRODUCTION PRIMARY KEY (ID);
ALTER TABLE ALG_CONST ADD CONSTRAINT PK_ALG_CONST PRIMARY KEY (ID);
ALTER TABLE ALG_CONST_VAL ADD CONSTRAINT PK_ALG_CONST_VAL PRIMARY KEY (ID);
ALTER TABLE ALG_CUSTOM_USER_ACTION ADD CONSTRAINT FK_ALG_CUSTOM_USER_ACTION PRIMARY KEY (ID);
ALTER TABLE ALG_CUSTOM_USER_ACTION_PERMISS ADD CONSTRAINT FK_ALG_CUSTOM_USER_ACTION_P PRIMARY KEY (ID);
ALTER TABLE ALG_REPOSITORY ADD CONSTRAINT PK_ALG_REPOSITORY PRIMARY KEY (ID);
ALTER TABLE ANLPLAN ADD CONSTRAINT PKEY_ANLPLAN PRIMARY KEY (ID);
ALTER TABLE BANKDOCUMENT ADD CONSTRAINT PKEY_BANKDOCUMENT PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE BANKDOCUMENTMODEL ADD CONSTRAINT PKEY_BANKDOCUMENTMODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE BILLHEAD ADD CONSTRAINT PKEY_BILLHEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE BILLHEADMODEL ADD CONSTRAINT PKEY_BILLHEADMODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE BILLSPEC ADD CONSTRAINT PKEY_BILLSPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE BILLSPECMODEL ADD CONSTRAINT PKEY_BILLSPECMODEL PRIMARY KEY (DOCSPECMODEL_ID);
ALTER TABLE BUYBOOK ADD CONSTRAINT PKEY_BUYBOOK PRIMARY KEY (ID);
ALTER TABLE CALCTAXESKIND ADD CONSTRAINT PKEY_CALCTAXESKIND PRIMARY KEY (ID);
ALTER TABLE CALCTAXESLINK ADD CONSTRAINT PKEY_CALCTAXESLINK PRIMARY KEY (ID);
ALTER TABLE CASHDOCUMENT ADD CONSTRAINT PKEY_CASHDOCUMENT PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE CASHDOCUMENTMODEL ADD CONSTRAINT PKEY_CASHDOCUMENTMODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE CATALOG ADD CONSTRAINT PKEY_CATALOG PRIMARY KEY (ID);
ALTER TABLE CATALOGFOLDER ADD CONSTRAINT PKEY_CATALOGFOLDER PRIMARY KEY (ID);
ALTER TABLE CATALOGPRICE ADD CONSTRAINT PKEY_CATALOGPRICE PRIMARY KEY (ID);
ALTER TABLE CODEAMOR ADD CONSTRAINT PKEY_CODEAMOR PRIMARY KEY (UPCODE);
ALTER TABLE CONTRACT ADD CONSTRAINT PKEY_CONTRACT PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE CONTRACTMODIFYDOC ADD CONSTRAINT PKEY_CONTRACTMODIFYDOC PRIMARY KEY (ID);
ALTER TABLE CONTRACTOR ADD CONSTRAINT PK_CONTRACTOR PRIMARY KEY (ID);
ALTER TABLE CONTRACTORCARD ADD CONSTRAINT PK_CONTRACTORCARD PRIMARY KEY (ID);
ALTER TABLE CONTRACTORCARDHIST ADD CONSTRAINT PKEY_CONTRACTORCARDHIST PRIMARY KEY (ID);
ALTER TABLE CONTRACTORCARDPLAN ADD CONSTRAINT PKEY_CONTRACTORCARDPLAN PRIMARY KEY (ID);
ALTER TABLE CONTRACTPHASE ADD CONSTRAINT PKEY_CONTRACTPHASE PRIMARY KEY (ID);
ALTER TABLE CONTRACTSPEC ADD CONSTRAINT PKEY_CONTRACTSPEC PRIMARY KEY (ID);
ALTER TABLE CONTRACT_CATEGORY ADD CONSTRAINT PK_CONTRACT_CATEGORY PRIMARY KEY (ID);
ALTER TABLE CONTRACT_KIND ADD CONSTRAINT PK_CONTRACT_KIND PRIMARY KEY (ID);
ALTER TABLE CRM_ACTIVITY_KIND ADD CONSTRAINT PK_CRM_ACTIVITY_KIND PRIMARY KEY (ID);
ALTER TABLE CRM_ACTIVITY_SPHERE ADD CONSTRAINT PK_CRM_ACTIVITY_SPHERE PRIMARY KEY (ID);
ALTER TABLE CRM_BRANCH ADD CONSTRAINT PK_CRM_BRANCH PRIMARY KEY (ID);
ALTER TABLE CRM_CLIENT_RANK ADD CONSTRAINT PK_CRM_CLIENT_RANK PRIMARY KEY (ID);
ALTER TABLE CRM_CLIENT_TYPE ADD CONSTRAINT PK_CRM_CLIENT_TYPE PRIMARY KEY (ID);
ALTER TABLE CRM_CONTACT ADD CONSTRAINT PK_CRM_CONTACT PRIMARY KEY (ID);
ALTER TABLE CRM_DELIVERY_KIND ADD CONSTRAINT PK_CRM_DELIVERY_KIND PRIMARY KEY (ID);
ALTER TABLE CRM_LINKED_DOC ADD CONSTRAINT PK_CRM_LINKED_DOC PRIMARY KEY (ID);
ALTER TABLE CRM_MARKET ADD CONSTRAINT PK_CRM_MARKET PRIMARY KEY (ID);
ALTER TABLE CRM_OFFER ADD CONSTRAINT PK_CRM_OFFER PRIMARY KEY (ID);
ALTER TABLE CRM_OFFER_FORECAST ADD CONSTRAINT PK_CRM_OFFER_FORECAST PRIMARY KEY (ID);
ALTER TABLE CRM_OFFER_KIND ADD CONSTRAINT PK_CRM_OFFER_KIND PRIMARY KEY (ID);
ALTER TABLE CRM_OFFER_REASON ADD CONSTRAINT PK_CRM_OFFER_REASON PRIMARY KEY (ID);
ALTER TABLE CRM_OFFER_STATUS ADD CONSTRAINT PK_CRM_OFFER_STATUS PRIMARY KEY (ID);
ALTER TABLE CRM_OPERATION ADD CONSTRAINT PK_CRM_OPERATION PRIMARY KEY (ID);
ALTER TABLE CRM_OPERATION_KIND ADD CONSTRAINT PK_CRM_OPERATION_KIND PRIMARY KEY (ID);
ALTER TABLE CRM_OPERATION_PRIORITY ADD CONSTRAINT PK_CRM_OPERATION_PRIORITY PRIMARY KEY (ID);
ALTER TABLE CRM_OPERATION_PURPOSE ADD CONSTRAINT PK_CRM_OPERATION_PURPOSE PRIMARY KEY (ID);
ALTER TABLE CRM_OPERATION_STATUS ADD CONSTRAINT PK_CRM_OPERATION_STATUS PRIMARY KEY (ID);
ALTER TABLE CRM_OWNERSHIP_FORM ADD CONSTRAINT PK_CRM_OWNERSHIP_FORM PRIMARY KEY (ID);
ALTER TABLE CRM_PAYMENT_COND ADD CONSTRAINT PK_CRM_PAYMENT_COND PRIMARY KEY (ID);
ALTER TABLE CRM_PERSON_TITLE ADD CONSTRAINT PK_CRM_PERSON_TITLE PRIMARY KEY (ID);
ALTER TABLE CRM_POSITION ADD CONSTRAINT PK_CRM_POSITION PRIMARY KEY (ID);
ALTER TABLE CRM_PROBLEM ADD CONSTRAINT PK_CRM_PROBLEM PRIMARY KEY (ID);
ALTER TABLE CRM_PROBLEM_TYPE ADD CONSTRAINT PK_CRM_PROBLEM_TYPE PRIMARY KEY (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT PK_CRM_RELATION PRIMARY KEY (ID);
ALTER TABLE CRM_RELATION_STATUS ADD CONSTRAINT PK_CRM_RELATION_STATUS PRIMARY KEY (ID);
ALTER TABLE CRM_SOLUTION ADD CONSTRAINT PK_CRM_SOLUTION PRIMARY KEY (ID);
ALTER TABLE CRM_SOLUTION_TYPE ADD CONSTRAINT PK_CRM_SOLUTION_TYPE PRIMARY KEY (ID);
ALTER TABLE CRM_SYMPTOM ADD CONSTRAINT PK_CRM_SYMPTOM PRIMARY KEY (ID);
ALTER TABLE CRM_USER ADD CONSTRAINT PK_CRM_USER PRIMARY KEY (ID);
ALTER TABLE CURRENCY ADD CONSTRAINT PKEY_CURRENCY PRIMARY KEY (UPCODE);
ALTER TABLE DISCOUNT ADD CONSTRAINT PKEY_DISCOUNT PRIMARY KEY (ID);
ALTER TABLE DIS_CARD ADD CONSTRAINT PK_DIS_CARD PRIMARY KEY (ID);
ALTER TABLE DIS_CARD_HIST ADD CONSTRAINT PK_DIS_CARD_HIST PRIMARY KEY (ID);
ALTER TABLE DIS_CARD_USER ADD CONSTRAINT PK_DIS_CARD_USER PRIMARY KEY (ID);
ALTER TABLE DIS_COEF ADD CONSTRAINT PK_DIS_COEF PRIMARY KEY (ID);
ALTER TABLE DIS_EXTRA_DISCOUNT ADD CONSTRAINT PK_DIS_EXTRA_DISCOUNT PRIMARY KEY (ID);
ALTER TABLE DIS_PROMOTION ADD CONSTRAINT PK_DIS_PROMOTION PRIMARY KEY (ID);
ALTER TABLE DIS_PROMOTION_LINE ADD CONSTRAINT PK_DIS_PROMOTION_LINE PRIMARY KEY (ID);
ALTER TABLE DIS_PROMOTION_TYPE ADD CONSTRAINT PK_DIS_PROMOTION_TYPE PRIMARY KEY (ID);
ALTER TABLE DOCACTION ADD CONSTRAINT PKEY_DOCACTION PRIMARY KEY (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT PKEY_DOCHEAD PRIMARY KEY (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT PKEY_DOCHEADSPEC PRIMARY KEY (ID);
ALTER TABLE DOCHEADSTATE ADD CONSTRAINT PKEY_DOCHEADSTATE PRIMARY KEY (ID);
ALTER TABLE DOCPROCESSSTAGE ADD CONSTRAINT PKEY_DOCPROCESSSTAGE PRIMARY KEY (ID);
ALTER TABLE DOCPROCESSSTAGE_RIGHTS ADD CONSTRAINT PKEY_DOCPROCESSSTAGE_RIGHTS PRIMARY KEY (ID);
ALTER TABLE DOCSECTION ADD CONSTRAINT PKEY_DOCSECTION PRIMARY KEY (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT PKEY_DOCSPEC PRIMARY KEY (ID);
ALTER TABLE DOCSPECMODEL ADD CONSTRAINT PKEY_DOCSPECMODEL PRIMARY KEY (ID);
ALTER TABLE DOCSPECSTATE ADD CONSTRAINT PKEY_DOCSPECSTATE PRIMARY KEY (ID);
ALTER TABLE DOCTYPE_DOCSECTION_LINK ADD CONSTRAINT PKEY_DOCTYPE_DOCSECTION_LINK PRIMARY KEY (ID);
ALTER TABLE DOCTYPE_RIGHTS ADD CONSTRAINT PK_DOCTYPE_RIGHTS PRIMARY KEY (ID);
ALTER TABLE DOCUMENT_LINK ADD CONSTRAINT PKEY_DOCUMENT_LINK PRIMARY KEY (ID);
ALTER TABLE DOC_SPEC_PACKAGE ADD CONSTRAINT PKEY_DOC_SPEC_PACKAGE PRIMARY KEY (ID);
ALTER TABLE DOC_SPEC_SERIAL_NUM ADD CONSTRAINT PKEY_DOC_SPEC_SERIAL_NUM PRIMARY KEY (ID);
ALTER TABLE DP_STAGE_ACTION ADD CONSTRAINT PKEY_DP_STAGE_ACTION PRIMARY KEY (ID);
ALTER TABLE ECONOMICOPER ADD CONSTRAINT PKEY_ECONOMICOPER PRIMARY KEY (ID);
ALTER TABLE ECONOMICOPERMODEL ADD CONSTRAINT PKEY_ECONOMICOPERMODEL PRIMARY KEY (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT PKEY_ECONOMICSPEC PRIMARY KEY (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT PKEY_ESMODEL PRIMARY KEY (ID);
ALTER TABLE ECONSPEC_FEATURE ADD CONSTRAINT PKEY_ECONSPEC_FEATURE PRIMARY KEY (ID);
ALTER TABLE EMPLOYEES ADD CONSTRAINT PKEY_EMPLOYEES PRIMARY KEY (CONTRACTOR_ID);
ALTER TABLE ENTITY_TRANSFORMER_MAPPING ADD CONSTRAINT PK_ENTITY_TRANSFORMER_MAPPING PRIMARY KEY (ID);
ALTER TABLE EXCH_EXPORT ADD CONSTRAINT PK_EXCH_EXPORT PRIMARY KEY (ID);
ALTER TABLE EXCH_IMPORT ADD CONSTRAINT PK_EXCH_IMPORT PRIMARY KEY (ID);
ALTER TABLE EXCH_SITE ADD CONSTRAINT PK_EXCH_SITE PRIMARY KEY (ID);
ALTER TABLE EXCH_TABLE ADD CONSTRAINT PK_EXCH_TABLE PRIMARY KEY (CLASS_ID);
ALTER TABLE FACTURAHEAD ADD CONSTRAINT PKEY_FACTURAHEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE FACTURAHEADMODEL ADD CONSTRAINT PKEY_FACTURAHEADMODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE FEATURE ADD CONSTRAINT PKEY_FEATURE PRIMARY KEY (ID);
ALTER TABLE FEATURELINK ADD CONSTRAINT PKEY_FEATURELINK PRIMARY KEY (ID);
ALTER TABLE FEATUREVAL ADD CONSTRAINT PKEY_FEATUREVAL PRIMARY KEY (ID);
ALTER TABLE FINACCOUNT ADD CONSTRAINT PKEY_FINACCOUNT PRIMARY KEY (ID);
ALTER TABLE FINANL ADD CONSTRAINT PKEY_FINANL PRIMARY KEY (ID);
ALTER TABLE FINOPER ADD CONSTRAINT PKEY_FINOPER PRIMARY KEY (ID);
ALTER TABLE FINOPERMODEL ADD CONSTRAINT PKEY_FINOPERMODEL PRIMARY KEY (ID);
ALTER TABLE FINPERIOD ADD CONSTRAINT PKEY_FINPERIOD PRIMARY KEY (ID);
ALTER TABLE FINSPEC ADD CONSTRAINT PKEY_FINSPEC PRIMARY KEY (ID);
ALTER TABLE FINSPECMODEL ADD CONSTRAINT PKEY_FINSPECMODEL PRIMARY KEY (ID);
ALTER TABLE FINSTRUCTURE ADD CONSTRAINT PKEY_FINSTRUCTURE PRIMARY KEY (ID);
ALTER TABLE FINTURNACC ADD CONSTRAINT PKEY_FINTURNACC PRIMARY KEY (ID);
ALTER TABLE FINTURNFEAT ADD CONSTRAINT PKEY_FINTURNFEAT PRIMARY KEY (ID);
ALTER TABLE FOLDER ADD CONSTRAINT PKEY_FOLDER PRIMARY KEY (ID);
ALTER TABLE FOLDER_RIGHTS ADD CONSTRAINT PKEY_FOLDER_RIGHTS PRIMARY KEY (ID);
ALTER TABLE FORMULA ADD CONSTRAINT PKEY_FORMULA PRIMARY KEY (UPCODE);
ALTER TABLE FUEL_DENSITY_HEAD ADD CONSTRAINT PK_FUEL_DENSITY_HEAD PRIMARY KEY (ID);
ALTER TABLE FUEL_DENSITY_SPEC ADD CONSTRAINT PK_FUEL_DENSITY_SPEC PRIMARY KEY (ID);
ALTER TABLE HR_ORDER ADD CONSTRAINT PK_HR_ORDER PRIMARY KEY (ID);
ALTER TABLE HR_ORDER_ITEM ADD CONSTRAINT PK_HR_ORDER_ITEM PRIMARY KEY (ID);
ALTER TABLE HR_ORDER_ITEM_KIND ADD CONSTRAINT PK_HR_ORDER_ITEM_KIND PRIMARY KEY (ID);
ALTER TABLE HR_ORDER_ITEM_KIND_PARAM ADD CONSTRAINT PK_HR_ORDER_ITEM_KIND_PARAM PRIMARY KEY (ID);
ALTER TABLE HR_ORDER_ITEM_PARAM ADD CONSTRAINT PK_HR_ORDER_ITEM_PARAM PRIMARY KEY (ID);
ALTER TABLE HR_ORDER_ITEM_ROLLBACK ADD CONSTRAINT PK_HR_ORDER_ITEM_ROLLBACK PRIMARY KEY (ID);
ALTER TABLE HR_ORDER_MODEL ADD CONSTRAINT PK_HR_ORDER_MODEL PRIMARY KEY (ID);
ALTER TABLE HR_ORDER_MODEL_ITEM ADD CONSTRAINT PK_HR_ORDER_MODEL_ITEM PRIMARY KEY (ID);
ALTER TABLE HR_ORDER_MODEL_ITEM_PARAM ADD CONSTRAINT PK_HR_ORD_MODEL_ITEM_PARAM PRIMARY KEY (ID);
ALTER TABLE INTERNALINVOICESPEC ADD CONSTRAINT PKEY_INTERNALINVOICESPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE INTERNALINVOICESPECMODEL ADD CONSTRAINT PKEY_INTINVOICESPECMODEL PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE INVENTORY ADD CONSTRAINT PKEY_INVENTORY PRIMARY KEY (ID);
ALTER TABLE INVENTORYACTHEAD ADD CONSTRAINT PKEY_INVENTORYACTHEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE INVENTORYACTSPEC ADD CONSTRAINT PKEY_INVENTORYACTSPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE INVHISTORY ADD CONSTRAINT PKEY_INVHISTORY PRIMARY KEY (ID);
ALTER TABLE INVLOCATION ADD CONSTRAINT PK_INVLOCATION PRIMARY KEY (ID);
ALTER TABLE INVMETAL ADD CONSTRAINT PKEY_INVMETAL PRIMARY KEY (ID);
ALTER TABLE INVOICEHEAD ADD CONSTRAINT PKEY_INVOICEHEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE INVOICEHEADMODEL ADD CONSTRAINT PKEY_INVOICEHEADMODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE INVOICESPEC ADD CONSTRAINT PKEY_INVOICESPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE INVOICESPECMODEL ADD CONSTRAINT PKEY_INVOICESPECMODEL PRIMARY KEY (DOCSPECMODEL_ID);
ALTER TABLE JBPM_ACTION ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_BYTEARRAY ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_BYTEBLOCK ADD PRIMARY KEY (PROCESSFILE_, INDEX_);
ALTER TABLE JBPM_COMMENT ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_DECISIONCONDITIONS ADD PRIMARY KEY (DECISION_, INDEX_);
ALTER TABLE JBPM_DELEGATION ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_EVENT ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_EXCEPTIONHANDLER ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_JOB ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_LOG ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_MODULEDEFINITION ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_MODULEINSTANCE ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_NODE ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_POOLEDACTOR ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_PROCESSDEFINITION ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_PROCESSINSTANCE ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_RUNTIMEACTION ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_SWIMLANE ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_SWIMLANEINSTANCE ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_TASK ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_TASKACTORPOOL ADD PRIMARY KEY (TASKINSTANCE_, POOLEDACTOR_);
ALTER TABLE JBPM_TASKCONTROLLER ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_TASKINSTANCE ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_TOKEN ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_TOKENVARIABLEMAP ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_TRANSITION ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_VARIABLEACCESS ADD PRIMARY KEY (ID_);
ALTER TABLE JBPM_VARIABLEINSTANCE ADD PRIMARY KEY (ID_);
ALTER TABLE JG_APP_PRINCIPAL ADD CONSTRAINT PK_JG_APP_PRINCIPAL PRIMARY KEY (ID);
ALTER TABLE JG_CREDENTIAL ADD CONSTRAINT PK_JG_CREDENTIAL PRIMARY KEY (ID);
ALTER TABLE JG_DOMAIN ADD CONSTRAINT PK_JG_DOMAIN PRIMARY KEY (ID);
ALTER TABLE JG_PERMISSION ADD CONSTRAINT PK_JG_PERMISSION PRIMARY KEY (ID);
ALTER TABLE JG_PRINCIPAL ADD CONSTRAINT PK_JG_PRINCIPAL PRIMARY KEY (ID);
ALTER TABLE JG_PRINCIPAL_DOMAIN ADD CONSTRAINT PK_JG_PRINCIPAL_DOMAIN PRIMARY KEY (PRINCIPAL_ID, DOMAIN_ID);
ALTER TABLE JG_PRINCIPAL_HIERARCHY ADD CONSTRAINT PK_JG_PRINCIPAL_HIERARCHY PRIMARY KEY (PRINCIPAL_ASC_ID, PRINCIPAL_DESC_ID);
ALTER TABLE JG_PRINCIPAL_PERMISSION ADD CONSTRAINT PK_JG_PRINCIPAL_PERMISSION PRIMARY KEY (PRINCIPAL_ID, PERMISSION_ID);
ALTER TABLE JG_ST_CREDENTIAL ADD CONSTRAINT PK_JG_ST_CREDENTIAL PRIMARY KEY (ID);
ALTER TABLE JG_ST_PRINCIPAL ADD CONSTRAINT PK_JG_ST_PRINCIPAL PRIMARY KEY (ID);
ALTER TABLE JG_ST_USER ADD CONSTRAINT PK_JG_ST_USER PRIMARY KEY (ID);
ALTER TABLE JG_USER ADD CONSTRAINT PK_JG_USER PRIMARY KEY (ID);
ALTER TABLE JG_USER_PRINCIPAL ADD CONSTRAINT PK_JG_USER_PRINCIPAL PRIMARY KEY (PRINCIPAL_ID, USER_ID);
ALTER TABLE LINKSTAGE ADD CONSTRAINT PKEY_LINKSTAGE PRIMARY KEY (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT PK_LS_ITEM PRIMARY KEY (ID);
ALTER TABLE LS_ITEMKIND ADD CONSTRAINT PK_LS_ITEMKIND PRIMARY KEY (ID);
ALTER TABLE LS_ITEMSPEC ADD CONSTRAINT PK_LS_ITEMSPEC PRIMARY KEY (ID);
ALTER TABLE LS_ITEMSPECALT ADD CONSTRAINT PK_LS_ITEMSPECALT PRIMARY KEY (ID);
ALTER TABLE LS_ITEMSPECTAX ADD CONSTRAINT PK_LS_ITEMSPECTAX PRIMARY KEY (ID);
ALTER TABLE LS_SCHEDULE ADD CONSTRAINT PK_LS_SCHEDULE PRIMARY KEY (ID);
ALTER TABLE LS_SCHEDULE_DOCHEAD ADD CONSTRAINT PK_LS_SCHEDULE_DOCHEAD PRIMARY KEY (ID);
ALTER TABLE MBPM_RESOURCE ADD CONSTRAINT PK_MBPM_RESOURCE PRIMARY KEY (ID);
ALTER TABLE MBPM_RESOURCE_GROUP_LINK ADD CONSTRAINT PK_MBPM_RESOURCE_GROUP_LINK PRIMARY KEY (ID);
ALTER TABLE MEASURE ADD CONSTRAINT PKEY_MEASURE PRIMARY KEY (ID);
ALTER TABLE METAL ADD CONSTRAINT PKEY_METAL PRIMARY KEY (UPCODE);
ALTER TABLE MF_BOM ADD CONSTRAINT PK_MF_BOM PRIMARY KEY (ID);
ALTER TABLE MF_BOM_LABOR ADD CONSTRAINT PKEY_MF_BOM_LABOR PRIMARY KEY (BOM_ROUTE_RESOURCE_ID);
ALTER TABLE MF_BOM_MACHINE ADD CONSTRAINT PKEY_MF_BOM_MACHINE PRIMARY KEY (BOM_ROUTE_RESOURCE_ID);
ALTER TABLE MF_BOM_MATERIAL ADD CONSTRAINT PKEY_MF_BOM_MATERIAL PRIMARY KEY (BOM_ROUTE_RESOURCE_ID);
ALTER TABLE MF_BOM_ROUTE ADD CONSTRAINT PK_MF_BOM_ROUTE PRIMARY KEY (ID);
ALTER TABLE MF_BOM_ROUTE_RESOURCE ADD CONSTRAINT PK_MF_BOM_ROUTE_RESOURCE PRIMARY KEY (ID);
ALTER TABLE MF_CELL ADD CONSTRAINT PK_MF_CELL PRIMARY KEY (ID);
ALTER TABLE MF_COST_CATEGORIES ADD CONSTRAINT PK_MF_COST_CATEGORIES PRIMARY KEY (ID);
ALTER TABLE MF_COST_DETAIL ADD CONSTRAINT PK_MF_COST_DTL PRIMARY KEY (ID);
ALTER TABLE MF_COST_DETAIL_LINE ADD CONSTRAINT PK_MF_COST_DETAIL_LINE PRIMARY KEY (ID);
ALTER TABLE MF_CREW ADD CONSTRAINT PK_MF_CREW PRIMARY KEY (ID);
ALTER TABLE MF_DAY_CAL ADD CONSTRAINT PKEY_MF_DAY_CAL PRIMARY KEY (ID);
ALTER TABLE MF_DAY_TIME ADD CONSTRAINT PKEY_MF_DAY_TIME PRIMARY KEY (ID);
ALTER TABLE MF_INPUT_DOC_HEAD ADD CONSTRAINT PK_MF_INPUT_DOC_HEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE MF_INPUT_DOC_HEAD_MODEL ADD CONSTRAINT PK_MF_INPUT_DOC_HEAD_MODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE MF_INPUT_DOC_SPEC ADD CONSTRAINT PK_MF_INPUT_DOC_SPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE MF_JOB ADD CONSTRAINT PK_MF_JOB PRIMARY KEY (ID);
ALTER TABLE MF_JOB_LABOR ADD CONSTRAINT PKEY_MF_JOB_LABOR PRIMARY KEY (JOB_ROUTE_RESOURCE_ID);
ALTER TABLE MF_JOB_MACHINE ADD CONSTRAINT PKEY_MF_JOB_MACHINE PRIMARY KEY (JOB_ROUTE_RESOURCE_ID);
ALTER TABLE MF_JOB_MATERIAL ADD CONSTRAINT PKEY_MF_JOB_MATERIAL PRIMARY KEY (JOB_ROUTE_RESOURCE_ID);
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT PK_MF_JOB_ROUTE PRIMARY KEY (ID);
ALTER TABLE MF_JOB_ROUTE_RESOURCE ADD CONSTRAINT PK_MF_JOB_ROUTE_RESOURCE PRIMARY KEY (ID);
ALTER TABLE MF_LABOR_CLASS ADD CONSTRAINT PK_MF_LABOR_CLASS PRIMARY KEY (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD ADD CONSTRAINT PK_MF_OUTPUT_DOC_HEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD_MODEL ADD CONSTRAINT PK_MF_OUTPUT_DOC_HEAD_MODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE MF_RESOURCE_FAMILY ADD CONSTRAINT PK_MF_RESOURCE_FAMILY PRIMARY KEY (ID);
ALTER TABLE MF_RESOURCE_GROUP ADD CONSTRAINT PK_MF_RESOURCE_GROUP PRIMARY KEY (ID);
ALTER TABLE MF_RESOURCE_GROUP_CAPACITY ADD CONSTRAINT PK_MF_RESOURCE_GROUP_CAPACITY PRIMARY KEY (ID);
ALTER TABLE MF_ROUTE ADD CONSTRAINT PK_MF_ROUTE PRIMARY KEY (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT PK_MF_SCRAP_DOC_HEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT PK_MF_SCRAP_DOC_HEAD_MODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE MF_SCRAP_DOC_SPEC ADD CONSTRAINT PK_MF_SCRAP_DOC_SPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE MF_TRANSACTION ADD CONSTRAINT PK_MF_TRANSACTION PRIMARY KEY (ID);
ALTER TABLE MF_VARIANCE_DOC_HEAD ADD CONSTRAINT PK_MF_VARIANCE_DOC_HEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE MF_VARIANCE_DOC_HEAD_MODEL ADD CONSTRAINT PK_MF_VARIANCE_DOC_HEAD_MOD PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE MF_VARIANCE_DOC_SPEC ADD CONSTRAINT PK_MF_VARIANCE_DOC_SPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE MF_WC_RATES ADD CONSTRAINT PK_MF_WC_RATES PRIMARY KEY (ID);
ALTER TABLE MF_WEEK_CAL ADD CONSTRAINT PKEY_MF_WEEK_CAL PRIMARY KEY (ID);
ALTER TABLE MF_WEEK_CAL_CHANGE ADD CONSTRAINT PKEY_MF_WEEK_CAL_CHANGE PRIMARY KEY (ID);
ALTER TABLE MF_WORK_CENTER ADD CONSTRAINT PK_MF_WC PRIMARY KEY (ID);
ALTER TABLE OKDP ADD CONSTRAINT PKEY_OKDP PRIMARY KEY (UPCODE);
ALTER TABLE OKOF ADD CONSTRAINT PK_OKOF PRIMARY KEY (ID);
ALTER TABLE OLAP_DATAPUMP ADD CONSTRAINT PK_OLAP_DATAPUMP PRIMARY KEY (ID);
ALTER TABLE ORDERHEAD ADD CONSTRAINT PKEY_ORDERHEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE ORDERHEADMODEL ADD CONSTRAINT PKEY_ORDERHEADMODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE ORDERSPEC ADD CONSTRAINT PKEY_ORDERSPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE ORDERSPECMODEL ADD CONSTRAINT PKEY_ORDERSPECMODEL PRIMARY KEY (DOCSPECMODEL_ID);
ALTER TABLE ORGUNIT ADD CONSTRAINT PKEY_ORGUNIT PRIMARY KEY (CONTRACTOR_ID);
ALTER TABLE OVR_CANCELLATION ADD CONSTRAINT PKEY_OVR_CANCELLATION PRIMARY KEY (ID);
ALTER TABLE OVR_CARD ADD CONSTRAINT PKEY_OVR_CARD PRIMARY KEY (ID);
ALTER TABLE OVR_CARD_DOCUMENT_LINK ADD CONSTRAINT PK_OVR_CARD_DOCUMENT_LINK PRIMARY KEY (ID);
ALTER TABLE OVR_CARD_HIST ADD CONSTRAINT PKEY_OVR_CARD_HIST PRIMARY KEY (ID);
ALTER TABLE OVR_CARD_HIST_DOC_SPEC_LINK ADD CONSTRAINT PKEY_OCHIST_DOCSPEC_LINK PRIMARY KEY (ID);
ALTER TABLE OVR_HIST_STATUS ADD CONSTRAINT PKEY_OVR_HIST_STATUS PRIMARY KEY (ID);
ALTER TABLE OVR_NORM_HEAD ADD CONSTRAINT PKEY_OVR_NORM_HEAD PRIMARY KEY (ID);
ALTER TABLE OVR_NORM_SPEC ADD CONSTRAINT PKEY_OVR_NORM_SPEC PRIMARY KEY (ID);
ALTER TABLE OVR_NORM_SPEC_DOC_SPEC_LINK ADD CONSTRAINT PK_OVR_NORM_SPEC_DOC_SPEC_LINK PRIMARY KEY (ID);
ALTER TABLE OVR_NORM_SPEC_LINK ADD CONSTRAINT PKEY_OVR_NORM_SPEC_LINK PRIMARY KEY (ID);
ALTER TABLE OVR_SIZE ADD CONSTRAINT PKEY_OVR_SIZE PRIMARY KEY (ID);
ALTER TABLE PACKING ADD CONSTRAINT PKEY_PACKING PRIMARY KEY (ID);
ALTER TABLE PARTNEMPL ADD CONSTRAINT PKEY_PARTNEMPL PRIMARY KEY (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FKEY_PARTNER PRIMARY KEY (CONTRACTOR_ID);
ALTER TABLE PERIOD ADD CONSTRAINT PKEY_PERIOD PRIMARY KEY (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT PKEY_PERMISSIBLEACCOUNTS PRIMARY KEY (ID);
ALTER TABLE PHASEITEMFACT ADD CONSTRAINT PKEY_PHASEITEMFACT PRIMARY KEY (ID);
ALTER TABLE PHASEITEMPLAN ADD CONSTRAINT PKEY_PHASEITEMPLAN PRIMARY KEY (ID);
ALTER TABLE PHASEITEM_LINK ADD CONSTRAINT PKEY_PHASEITEM_LINK PRIMARY KEY (ID);
ALTER TABLE PMA_DOCGROUP ADD CONSTRAINT PK_PMA_DOCGROUP PRIMARY KEY (ID);
ALTER TABLE PMA_DOCGROUPLINK ADD CONSTRAINT PK_PMA_DOCGROUPLINK PRIMARY KEY (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT PK_PMA_PAYMENT PRIMARY KEY (ID);
ALTER TABLE PMA_TRHEAD ADD CONSTRAINT PK_PMA_TRHEAD PRIMARY KEY (ID);
ALTER TABLE PMA_TRSPEC ADD CONSTRAINT PK_PMA_TRSPEC PRIMARY KEY (ID);
ALTER TABLE PMA_TRTAX ADD CONSTRAINT PK_PMA_TRTAX PRIMARY KEY (ID);
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT PK_PMC_EXECUTION PRIMARY KEY (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT PK_PMC_LIABILITY PRIMARY KEY (ID);
ALTER TABLE PMC_PERIOD ADD CONSTRAINT PK_PMC_PERIOD PRIMARY KEY (ID);
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT PK_PMC_RESOURCE PRIMARY KEY (ID);
ALTER TABLE PMC_VERSION ADD CONSTRAINT PK_PMC_VERSION PRIMARY KEY (ID);
ALTER TABLE PMC_VERSTATUS ADD CONSTRAINT PK_PMC_VERSTATUS PRIMARY KEY (ID);
ALTER TABLE PP_CATALOG_WAREHOUSE ADD CONSTRAINT PK_CATALOG_WAREHOUSE PRIMARY KEY (ID);
ALTER TABLE PP_FIRM_PLANNED_ORDER ADD CONSTRAINT PK_PP_FIRM_PLANNED_ORDER PRIMARY KEY (ID);
ALTER TABLE PP_FORECAST_VERSION ADD CONSTRAINT PK_PP_FORECAST_VERSION PRIMARY KEY (ID);
ALTER TABLE PP_GENERIC_ITEM ADD CONSTRAINT PK_PP_GENERIC_ITEM PRIMARY KEY (ID);
ALTER TABLE PP_INVENTORY_FORECAST ADD CONSTRAINT PK_PP_INVENTORY_FORECAST PRIMARY KEY (ID);
ALTER TABLE PP_INVENTORY_FORECAST_LINE ADD CONSTRAINT PK_PP_INVENTORY_FORECAST_LINE PRIMARY KEY (ID);
ALTER TABLE PP_ITEM_FAMILY ADD CONSTRAINT PK_PP_ITEM_FAMILY PRIMARY KEY (ID);
ALTER TABLE PP_MPS ADD CONSTRAINT PK_PP_MPS PRIMARY KEY (ID);
ALTER TABLE PP_MPS_LINE ADD CONSTRAINT PK_PP_MPS_LINE PRIMARY KEY (ID);
ALTER TABLE PP_MRP_INPUTS ADD CONSTRAINT PK_PP_MRP_INPUTS PRIMARY KEY (ID);
ALTER TABLE PP_MRP_OUTPUTS ADD CONSTRAINT PK_PP_MRP_OUTPUTS PRIMARY KEY (ID);
ALTER TABLE PP_MRP_RECOMMENDATION ADD CONSTRAINT PK_PP_MRP_RECOMMENDATION PRIMARY KEY (ID);
ALTER TABLE PP_MRP_REPORT ADD CONSTRAINT PK_PP_MRP_REPORT PRIMARY KEY (ID);
ALTER TABLE PP_MRP_SHORTAGE ADD CONSTRAINT PK_PP_MRP_SHORTAGE PRIMARY KEY (ID);
ALTER TABLE PP_MRP_TOTALS_BY_DATE ADD CONSTRAINT PK_PP_MRP_TOTALS_BY_DATE PRIMARY KEY (ID);
ALTER TABLE PP_MRP_VERSION_CONTROL ADD CONSTRAINT PK_PP_MRP_VERSION_CONTROL PRIMARY KEY (ID);
ALTER TABLE PP_MRP_VERSION_FORECAST ADD CONSTRAINT PK_PP_MRP_VERSION_FORECAST PRIMARY KEY (ID);
ALTER TABLE PP_MRP_VERSION_MPS ADD CONSTRAINT PK_PP_MRP_VERSION_MPS PRIMARY KEY (ID);
ALTER TABLE PP_PLANNING_FORECAST ADD CONSTRAINT PK_PP_PLANNING_FORECAST PRIMARY KEY (ID);
ALTER TABLE PP_PLANNING_LEVEL ADD CONSTRAINT PK_PP_PLANNING_LEVEL PRIMARY KEY (ID);
ALTER TABLE PP_PLANNING_LEVEL_BUCKET ADD CONSTRAINT PK_PP_PLANNING_LEVEL_BUCKET PRIMARY KEY (ID);
ALTER TABLE PP_PRODUCTION_PROFILE ADD CONSTRAINT PK_PP_PRODUCTION_PROFILE PRIMARY KEY (ID);
ALTER TABLE PP_RCCP_DETAIL ADD CONSTRAINT PK_PP_RCCP_DETAIL PRIMARY KEY (ID);
ALTER TABLE PP_RCCP_HEADER ADD CONSTRAINT PK_PP_RCCP_HEADER PRIMARY KEY (ID);
ALTER TABLE PP_RCCP_RESOURCE_LOAD ADD CONSTRAINT PK_PP_RCCP_RESOURCE_LOAD PRIMARY KEY (ID);
ALTER TABLE PREF_ABBREVIATION ADD CONSTRAINT PKEY_PREF_ABBREVIATION PRIMARY KEY (ID);
ALTER TABLE PREF_ADDITIONAL_EDUCATION_KIND ADD CONSTRAINT PK_PREF_ADD_EDUCATION_KIND PRIMARY KEY (ID);
ALTER TABLE PREF_ADDRESS ADD CONSTRAINT PKEY_PREF_ADDRESS PRIMARY KEY (ID);
ALTER TABLE PREF_CALC_PERIOD ADD CONSTRAINT PKEY_PREF_CALC_PERIOD PRIMARY KEY (ID);
ALTER TABLE PREF_CONFIG ADD CONSTRAINT PKEY_PREF_CONFIG PRIMARY KEY (ID);
ALTER TABLE PREF_COSTS_ANL ADD CONSTRAINT PKEY_PREF_COSTS_ANL PRIMARY KEY (ID);
ALTER TABLE PREF_COUNTRY ADD CONSTRAINT PKEY_PREF_COUNTRY PRIMARY KEY (ID);
ALTER TABLE PREF_DEDUCTION_KIND ADD CONSTRAINT PKEY_PREF_DEDUCTION_KIND PRIMARY KEY (ID);
ALTER TABLE PREF_EDUCATION_DEGREE ADD CONSTRAINT PK_PREF_EDUCATION_DEGREE PRIMARY KEY (ID);
ALTER TABLE PREF_FAMILYDEDUCTIONS ADD CONSTRAINT PKEY_PREF_FAMILYDEDUCTIONS PRIMARY KEY (ID);
ALTER TABLE PREF_FAMILYMEMBERS ADD CONSTRAINT PKEY_PREF_FAMILYMEMBERS PRIMARY KEY (ID);
ALTER TABLE PREF_FAMILYRELATION ADD CONSTRAINT PKEY_PREF_FAMILYRELATION PRIMARY KEY (ID);
ALTER TABLE PREF_FAMILYSTATUS ADD CONSTRAINT PKEY_PREF_FAMILYSTATUS PRIMARY KEY (ID);
ALTER TABLE PREF_FAMILYSTATUS_KIND ADD CONSTRAINT PKEY_PREF_FAMILYSTATUS_KIND PRIMARY KEY (ID);
ALTER TABLE PREF_FOREIGN_LANGUAGE ADD CONSTRAINT PK_PREF_FOREIGN_LANGUAGE PRIMARY KEY (ID);
ALTER TABLE PREF_IDENTDOC ADD CONSTRAINT PKEY_PREF_IDENTDOC PRIMARY KEY (ID);
ALTER TABLE PREF_IDENTDOC_KIND ADD CONSTRAINT PKEY_PREF_IDENTDOC_KIND PRIMARY KEY (ID);
ALTER TABLE PREF_INSUREDCLASS ADD CONSTRAINT PKEY_PREF_INSUREDCLASS PRIMARY KEY (ID);
ALTER TABLE PREF_JOB ADD CONSTRAINT PKEY_PREF_JOB PRIMARY KEY (ID);
ALTER TABLE PREF_KLADR ADD CONSTRAINT PKEY_PREF_KLADR PRIMARY KEY (ID);
ALTER TABLE PREF_LANGUAGE_KNOWLEDGE ADD CONSTRAINT PK_PREF_LANGUAGE_KNOWLEDGE PRIMARY KEY (ID);
ALTER TABLE PREF_LEAVE_KIND ADD CONSTRAINT PK_PREF_LEAVE_KIND PRIMARY KEY (ID);
ALTER TABLE PREF_MILITARY_RANK ADD CONSTRAINT PK_PREF_MILITARY_RANK PRIMARY KEY (ID);
ALTER TABLE PREF_MILITARY_RANK_KIND ADD CONSTRAINT PK_PREF_MILITARY_RANK_KIND PRIMARY KEY (ID);
ALTER TABLE PREF_MILITARY_VALIDITY ADD CONSTRAINT PK_PREF_MILITARY_VALIDITY PRIMARY KEY (ID);
ALTER TABLE PREF_NATIONALITY ADD CONSTRAINT PKEY_PREF_NATIONALITY PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT PKEY_PREF_PERSONNEL PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_ATTESTATION ADD CONSTRAINT PK_PREF_PERS_ATTESTATION PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_EDUCATION ADD CONSTRAINT PK_PREF_PERSONNEL_EDUCATION PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_GROUP ADD CONSTRAINT PKEY_PREF_PERSONNEL_GROUP PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_GROUP_TYPE ADD CONSTRAINT PKEY_PREF_PERSONNEL_GROUP_TYPE PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_HIST ADD CONSTRAINT PKEY_PREF_PERSONNEL_HIST PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_LABOUR_CONTRACT ADD CONSTRAINT PK_PREF_PERS_LABOUR_CONTRCT PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_LANGUAGE ADD CONSTRAINT PK_PREF_PERSONNEL_LANGUAGE PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_LEAVE ADD CONSTRAINT PK_PREF_PERSONNEL_LEAVE PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_PHONE ADD CONSTRAINT PK_PREF_PERSONNEL_PHONE PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_PROFESSION ADD CONSTRAINT PK_PREF_PERS_PROFESSION PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_RECORD ADD CONSTRAINT PK_PREF_PERSONNEL_RECORD PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_REWARD ADD CONSTRAINT PK_PREF_PERSONNEL_REWARD PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_SERVICE ADD CONSTRAINT PKEY_PREF_PERSONNEL_SERVICE PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_SKILL_RAISING ADD CONSTRAINT PK_PREF_PERSONNEL_SKILL_RAI PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_SOCIAL_BENEFIT ADD CONSTRAINT PK_PREF_PERSONNEL_SOCIAL_BE PRIMARY KEY (ID);
ALTER TABLE PREF_PERSONNEL_TRANSFER ADD CONSTRAINT PK_PREF_PERSONNEL_TRANSFER PRIMARY KEY (ID);
ALTER TABLE PREF_PERS_VOCATIONAL_TRAINING ADD CONSTRAINT PK_PREF_PERS_VOCATNL_TRAIN PRIMARY KEY (ID);
ALTER TABLE PREF_PFCODEKIND_IN_SERVICEKIND ADD CONSTRAINT PKEY_PREF_PCK_IN_SK PRIMARY KEY (ID);
ALTER TABLE PREF_PFCODE_IN_SERVICE ADD CONSTRAINT PKEY_PREF_PFCODE_IN_SERVICE PRIMARY KEY (ID);
ALTER TABLE PREF_POSITION ADD CONSTRAINT PKEY_PREF_POSITION PRIMARY KEY (ID);
ALTER TABLE PREF_POSITION_FILL_KIND ADD CONSTRAINT PKEY_PREF_POS_FILL_KIND PRIMARY KEY (ID);
ALTER TABLE PREF_RESERVE_CATEGORY ADD CONSTRAINT PK_PREF_RESERVE_CATEGORY PRIMARY KEY (ID);
ALTER TABLE PREF_RISE ADD CONSTRAINT PKEY_PREF_RISE PRIMARY KEY (ID);
ALTER TABLE PREF_RISE_PERCENT ADD CONSTRAINT PKEY_PREF_RISE_PERCENT PRIMARY KEY (ID);
ALTER TABLE PREF_RISE_SCALE ADD CONSTRAINT PKEY_PREF_RISE_SCALE PRIMARY KEY (ID);
ALTER TABLE PREF_SERVICE_KIND ADD CONSTRAINT PKEY_PREF_SERVICE_KIND PRIMARY KEY (ID);
ALTER TABLE PREF_SERVICE_PFCODE ADD CONSTRAINT PKEY_PREF_SERVICE_PFCODE PRIMARY KEY (ID);
ALTER TABLE PREF_SKILL_RAISING_KIND ADD CONSTRAINT PK_PREF_SKILL_RAISING_KIND PRIMARY KEY (ID);
ALTER TABLE PREF_SPECIALITY ADD CONSTRAINT PK_PREF_SPECIALITY PRIMARY KEY (ID);
ALTER TABLE PREF_STAFF_CATEGORY ADD CONSTRAINT PKEY_PREF_STAFF_CATEGORY PRIMARY KEY (ID);
ALTER TABLE PREF_STAFF_LIST ADD CONSTRAINT PKEY_PREF_STAFF_LIST PRIMARY KEY (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT PKEY_PREF_SLIST_POSITION PRIMARY KEY (ID);
ALTER TABLE PREF_STAFF_LIST_UNIT ADD CONSTRAINT PKEY_PREF_STAFF_LIST_UNIT PRIMARY KEY (ID);
ALTER TABLE PREF_STREET ADD CONSTRAINT PKEY_PREF_STREET PRIMARY KEY (ID);
ALTER TABLE PREF_TARIFFING ADD CONSTRAINT PKEY_PREF_TARIFFING PRIMARY KEY (ID);
ALTER TABLE PREF_TARIFFING_CATEGORY ADD CONSTRAINT PKEY_PREF_TARIFF_CATEG PRIMARY KEY (ID);
ALTER TABLE PREF_TARIFF_SCALE ADD CONSTRAINT PKEY_PREF_TARIFF_SCALE PRIMARY KEY (ID);
ALTER TABLE PREF_TARIFF_SCALE_CLASS ADD CONSTRAINT PKEY_PREF_TSCALE_CLASS PRIMARY KEY (ID);
ALTER TABLE PREF_TAX_CALC_KIND ADD CONSTRAINT PK_PREF_TAX_CALC_KIND PRIMARY KEY (ID);
ALTER TABLE PREF_WORKTIME_NORM ADD CONSTRAINT PKEY_PREF_WORKTIME_NORM PRIMARY KEY (ID);
ALTER TABLE PREF_WORK_CONDITION ADD CONSTRAINT PKEY_PREF_WORK_CONDITION PRIMARY KEY (ID);
ALTER TABLE PREF_WORK_SCHEDULE ADD CONSTRAINT PKEY_PREF_WORK_SCHEDULE PRIMARY KEY (ID);
ALTER TABLE PRICELISTFOLDER ADD CONSTRAINT PKEY_PRICELISTFOLDER PRIMARY KEY (ID);
ALTER TABLE PRICELISTHEAD ADD CONSTRAINT PKEY_PRICELISTHEAD PRIMARY KEY (ID);
ALTER TABLE PRICELISTHEAD_RIGHTS ADD CONSTRAINT PK_PRICELISTHEAD_RIGHTS PRIMARY KEY (ID);
ALTER TABLE PRICELISTSPEC ADD CONSTRAINT PKEY_PRICELISTSPEC PRIMARY KEY (ID);
ALTER TABLE PRICELIST_PRICETYPE_LINK ADD CONSTRAINT PK_PRICELIST_PRICETYPE_LINK PRIMARY KEY (ID);
ALTER TABLE PRICETYPE ADD CONSTRAINT PKEY_PRICETYPE PRIMARY KEY (ID);
ALTER TABLE PR_CONTACT_HIST ADD CONSTRAINT PKEY_PR_CONTACT_HIST PRIMARY KEY (ID);
ALTER TABLE PR_CONTACT_HIST_FILES ADD CONSTRAINT PKEY_PR_CONTACT_HIST_FILES PRIMARY KEY (ID);
ALTER TABLE PR_CONTACT_KIND ADD CONSTRAINT PKEY_PR_CONTACT_KIND PRIMARY KEY (ID);
ALTER TABLE PR_POSSIBLE_RESULT ADD CONSTRAINT PKEY_PR_POSSIBLE_RESULT PRIMARY KEY (ID);
ALTER TABLE QC_SCRAP_REASON ADD CONSTRAINT PK_QC_SCRAP_REASON PRIMARY KEY (ID);
ALTER TABLE QC_SCRAP_TYPE ADD CONSTRAINT PK_QC_SCRAP_TYPE PRIMARY KEY (ID);
ALTER TABLE REF_BANK ADD CONSTRAINT PK_REF_BANK PRIMARY KEY (ID);
ALTER TABLE REF_BANK_ACCOUNT ADD CONSTRAINT PK_REF_BANK_ACCOUNT PRIMARY KEY (ID);
ALTER TABLE REF_BANK_ACCOUNT_TYPE ADD CONSTRAINT PK_REF_BANK_ACCOUNT_TYPE PRIMARY KEY (ID);
ALTER TABLE REF_CONFIDENTIAL_DATA ADD CONSTRAINT PKEY_REF_CONFIDENTIAL_DATA PRIMARY KEY (ID);
ALTER TABLE REF_CONTRACTOR_EADDRESS ADD CONSTRAINT PK_REF_CONTRACTOR_EADDRESS PRIMARY KEY (ID);
ALTER TABLE REF_CONTRACTOR_PHONE ADD CONSTRAINT PK_REF_CONTRACTOR_PHONE PRIMARY KEY (ID);
ALTER TABLE REF_COUNTRY ADD CONSTRAINT PKEY_REF_COUNTRY PRIMARY KEY (ID);
ALTER TABLE REF_CURRENCY_RATE ADD CONSTRAINT PK_REF_CURRENCY_RATE PRIMARY KEY (ID);
ALTER TABLE REF_CURRENCY_RATE_AUTHORITY ADD CONSTRAINT PK_REF_CURRENCY_RATE_AUTHOR PRIMARY KEY (ID);
ALTER TABLE REF_CURRENCY_RATE_TYPE ADD CONSTRAINT PK_REF_CURRENCY_RATE_TYPE PRIMARY KEY (ID);
ALTER TABLE REF_CUSTOMS_DECLARATION ADD CONSTRAINT PK_REF_CUSTOMS_DECLARATION PRIMARY KEY (ID);
ALTER TABLE REF_DISTRICT ADD CONSTRAINT PK_REF_DISTRICT PRIMARY KEY (ID);
ALTER TABLE REF_EADDRESS_KIND ADD CONSTRAINT PK_REF_EADDRESS_KIND PRIMARY KEY (ID);
ALTER TABLE REF_FAMILY_MEMBER ADD CONSTRAINT PK_REF_FAMILY_MEMBER PRIMARY KEY (ID);
ALTER TABLE REF_FAMILY_RELATION ADD CONSTRAINT PK_REF_FAMILY_RELATION PRIMARY KEY (ID);
ALTER TABLE REF_FAMILY_STATUS ADD CONSTRAINT PK_REF_FAM_STATUS PRIMARY KEY (ID);
ALTER TABLE REF_FAMILY_STATUS_KIND ADD CONSTRAINT PK_REF_FAMILY_STATUS_KIND PRIMARY KEY (ID);
ALTER TABLE REF_HOLIDAYS ADD CONSTRAINT PKEY_REF_HOLIDAYS PRIMARY KEY (ID);
ALTER TABLE REF_IDENT_DOC ADD CONSTRAINT PK_REF_IDENT_DOC PRIMARY KEY (ID);
ALTER TABLE REF_IDENT_DOC_KIND ADD CONSTRAINT PK_REF_IDENT_DOC_KIND PRIMARY KEY (ID);
ALTER TABLE REF_KBK ADD CONSTRAINT PK_REF_KBK PRIMARY KEY (ID);
ALTER TABLE REF_MEASURE_CONV ADD CONSTRAINT PKEY_REF_MEASURE_CONV PRIMARY KEY (ID);
ALTER TABLE REF_NATIONALITY ADD CONSTRAINT PK_REF_NATIONALITY PRIMARY KEY (ID);
ALTER TABLE REF_NATURAL_PERSON ADD CONSTRAINT PK_REF_NATURAL_PERSON PRIMARY KEY (ID);
ALTER TABLE REF_NATURAL_PERSON_HIST ADD CONSTRAINT PK_NATURAL_PERSON_HIST PRIMARY KEY (ID);
ALTER TABLE REF_OKATO ADD CONSTRAINT PK_REF_OKATO PRIMARY KEY (ID);
ALTER TABLE REF_OKP ADD CONSTRAINT PK_REF_OKP PRIMARY KEY (ID);
ALTER TABLE REF_ORIGINAL_DOCUMENT ADD CONSTRAINT PK_REF_ORIGINAL_DOCUMENT PRIMARY KEY (ID);
ALTER TABLE REF_PARTN_EMPL_EMAIL ADD CONSTRAINT PKEY_REF_PARTN_EMPL_EMAIL PRIMARY KEY (ID);
ALTER TABLE REF_PARTN_EMPL_LINK ADD CONSTRAINT PKEY_REF_PARTN_EMPL_LINK PRIMARY KEY (ID);
ALTER TABLE REF_PARTN_EMPL_PHONE ADD CONSTRAINT PKEY_REF_PARTN_EMPL_PHONE PRIMARY KEY (ID);
ALTER TABLE REF_PERSON_ADDRESS ADD CONSTRAINT PK_REF_PERSON_ADDRESS PRIMARY KEY (ID);
ALTER TABLE REF_PERSON_EADDRESS ADD CONSTRAINT PK_REF_PERSON_EADDRESS PRIMARY KEY (ID);
ALTER TABLE REF_PERSON_PHONE ADD CONSTRAINT PK_REF_PERSON_PHONE PRIMARY KEY (ID);
ALTER TABLE REF_PHONE_KIND ADD CONSTRAINT PKEY_REF_PHONE_KIND PRIMARY KEY (ID);
ALTER TABLE REF_PLACE ADD CONSTRAINT PK_REF_PLACE PRIMARY KEY (ID);
ALTER TABLE REF_REGION ADD CONSTRAINT PK_REF_REGION PRIMARY KEY (ID);
ALTER TABLE REF_ZIPCODE ADD CONSTRAINT PK_REF_ZIPCODE PRIMARY KEY (ID);
ALTER TABLE REMNACC ADD CONSTRAINT PKEY_REMNACC PRIMARY KEY (ID);
ALTER TABLE REMNANL ADD CONSTRAINT PKEY_REMNANL PRIMARY KEY (ID);
ALTER TABLE REMNDBKT ADD CONSTRAINT PKEY_REMNDBKT PRIMARY KEY (ID);
ALTER TABLE REMNVAL ADD CONSTRAINT PKEY_REMNVAL PRIMARY KEY (ID);
ALTER TABLE RPT_CLASS_LINK ADD CONSTRAINT PK_RPT_CLASS_LINK PRIMARY KEY (ID);
ALTER TABLE RPT_MAIN ADD CONSTRAINT PKEY_RPT_MAIN PRIMARY KEY (ID);
ALTER TABLE RPT_RIGHTS ADD CONSTRAINT PK_RPT_RIGHTS PRIMARY KEY (ID);
ALTER TABLE RTL_INVOICEHEAD ADD CONSTRAINT PK_RTL_INVOICEHEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE RTL_INVOICEHEADMODEL ADD CONSTRAINT PK_RTL_INVOICEHEADMODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE RTL_INVOICESPEC ADD CONSTRAINT PK_RTL_INVOICESPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE SALEBOOK ADD CONSTRAINT PKEY_SALEBOOK PRIMARY KEY (ID);
ALTER TABLE SAL_CALC_LIST ADD CONSTRAINT PKEY_SAL_CALC_LIST PRIMARY KEY (ID);
ALTER TABLE SAL_CALC_LIST_FEE ADD CONSTRAINT PKEY_SAL_CALC_LIST_FEE PRIMARY KEY (ID);
ALTER TABLE SAL_CALC_LIST_FEE_PARAM ADD CONSTRAINT PKEY_SAL_CL_FEE_PARAM PRIMARY KEY (ID);
ALTER TABLE SAL_CALC_LIST_SECTION ADD CONSTRAINT PKEY_SAL_CALC_LIST_SECTION PRIMARY KEY (ID);
ALTER TABLE SAL_CALC_LIST_SECTION_REF ADD CONSTRAINT PKEY_SAL_CLIST_SECTION_REF PRIMARY KEY (ID);
ALTER TABLE SAL_DISCOUNTKIND ADD CONSTRAINT PKEY_SAL_DISCOUNTKIND PRIMARY KEY (ID);
ALTER TABLE SAL_FEE_MODEL ADD CONSTRAINT PKEY_SAL_FEE_MODEL PRIMARY KEY (ID);
ALTER TABLE SAL_FEE_MODEL_PARAM ADD CONSTRAINT PKEY_SAL_FEE_MODEL_PARAM PRIMARY KEY (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT PKEY_SAL_FEE_REF PRIMARY KEY (ID);
ALTER TABLE SAL_FEE_REF_PARAM ADD CONSTRAINT PKEY_SAL_FEE_REF_PARAM PRIMARY KEY (ID);
ALTER TABLE SAL_FEE_SUMMARY_HEAD ADD CONSTRAINT PKEY_SAL_FEE_SUMMARY_HEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE SAL_FEE_SUMMARY_SPEC ADD CONSTRAINT PKEY_SAL_FEE_SUMMARY_SPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE SAL_GNS_CODE ADD CONSTRAINT PKEY_SAL_GNS_CODE PRIMARY KEY (ID);
ALTER TABLE SAL_INCLUDED_FEE ADD CONSTRAINT PKEY_SAL_INCLUDED_FEE PRIMARY KEY (ID);
ALTER TABLE SAL_INCOMEKIND ADD CONSTRAINT PKEY_SAL_INCOMEKIND PRIMARY KEY (ID);
ALTER TABLE SAL_MINSALARY ADD CONSTRAINT PKEY_SAL_MINSALARY PRIMARY KEY (ID);
ALTER TABLE SAL_PAY_ROLL ADD CONSTRAINT PKEY_SAL_PAY_ROLL PRIMARY KEY (ID);
ALTER TABLE SAL_PAY_SHEET ADD CONSTRAINT PKEY_SAL_PAY_SHEET PRIMARY KEY (ID);
ALTER TABLE SAL_PAY_SHEET_SPEC ADD CONSTRAINT PKEY_SAL_PAY_SHEET_SPEC PRIMARY KEY (ID);
ALTER TABLE SAL_PERSONAL_ACCOUNT ADD CONSTRAINT PKEY_SAL_PERSONAL_ACCOUNT PRIMARY KEY (ID);
ALTER TABLE SAL_POSITION_FILL ADD CONSTRAINT PKEY_SAL_POSITION_FILL PRIMARY KEY (ID);
ALTER TABLE SAL_REPLACED_FEE ADD CONSTRAINT PKEY_SAL_REPLACED_FEE PRIMARY KEY (ID);
ALTER TABLE SAL_ROLL_KIND ADD CONSTRAINT PKEY_SAL_ROLL_KIND PRIMARY KEY (ID);
ALTER TABLE SAL_TARIFFING_IN_FEE ADD CONSTRAINT PKEY_SAL_TARIFFING_IN_FEE PRIMARY KEY (ID);
ALTER TABLE SAL_TAXHEAD ADD CONSTRAINT PKEY_SAL_TAXHEAD PRIMARY KEY (ID);
ALTER TABLE SAL_TAXRATE ADD CONSTRAINT PKEY_SAL_TAXRATE PRIMARY KEY (ID);
ALTER TABLE SAL_TAXSCALE ADD CONSTRAINT PKEY_SAL_TAXSCALE PRIMARY KEY (ID);
ALTER TABLE SCH_TASK ADD CONSTRAINT PK_SCH_TASK PRIMARY KEY (ID);
ALTER TABLE SEC_GROUPS ADD CONSTRAINT PKEY_SEC_GROUPS PRIMARY KEY (ID);
ALTER TABLE SEC_LINK_USERS_GROUPS ADD CONSTRAINT PKEY_SEC_LINK_USERS_GROUPS PRIMARY KEY (ID);
ALTER TABLE SEC_METHOD_ACCESS ADD CONSTRAINT PK_SEC_METHOD_ACCESS PRIMARY KEY (ID);
ALTER TABLE SEC_MODULE_ACCESS ADD CONSTRAINT PKEY_SEC_MODULE_ACCESS PRIMARY KEY (ID);
ALTER TABLE SEC_USERS ADD CONSTRAINT PKEY_SEC_USERS PRIMARY KEY (ID);
ALTER TABLE SEC_USER_PROFILE ADD CONSTRAINT FK_SEC_USER_PROFILE PRIMARY KEY (ID);
ALTER TABLE SEC_USER_PROFILE_ITEM ADD CONSTRAINT FK_SEC_USER_PROFILE_ITEM PRIMARY KEY (ID);
ALTER TABLE SETOFGOOD ADD CONSTRAINT PKEY_SETOFGOOD PRIMARY KEY (ID);
ALTER TABLE SPECMARK ADD CONSTRAINT PK_SPECMARK PRIMARY KEY (ID);
ALTER TABLE STOCKBATCH ADD CONSTRAINT PKEY_STOCKBATCH PRIMARY KEY (ID);
ALTER TABLE STOCKBATCHHISTORY ADD CONSTRAINT PKEY_STOCKBATCHHISTORY PRIMARY KEY (ID);
ALTER TABLE STOCKCARD ADD CONSTRAINT PKEY_STOCKCARD PRIMARY KEY (ID);
ALTER TABLE STOCKDOCUMENTHEAD ADD CONSTRAINT PKEY_STOCKDOCUMENTHEAD PRIMARY KEY (DOCHEAD_ID);
ALTER TABLE STOCKDOCUMENTHEADMODEL ADD CONSTRAINT PKEY_STOCKDOCUMENTHEADMODEL PRIMARY KEY (DOCHEADMODEL_ID);
ALTER TABLE STOCKDOCUMENTSPEC ADD CONSTRAINT PKEY_STOCKDOCUMENTSPEC PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE STOCKDOCUMENTSPECMODEL ADD CONSTRAINT PKEY_STOCKDOCUMENTSPECMODEL PRIMARY KEY (DOCSPEC_ID);
ALTER TABLE STOCKPLANHISTORY ADD CONSTRAINT PKEY_STOCKPLANHISTORY PRIMARY KEY (ID);
ALTER TABLE STRINGS ADD CONSTRAINT PKEY_STRINGS PRIMARY KEY (SECTION, VAL);
ALTER TABLE SYS_AUDIT ADD CONSTRAINT PK_SYS_AUDIT PRIMARY KEY (ID);
ALTER TABLE SYS_CLASS ADD CONSTRAINT PK_SYS_CLASS PRIMARY KEY (ID);
ALTER TABLE SYS_CLASS_IMPL ADD CONSTRAINT FK_SYS_CLASS_IMPL PRIMARY KEY (ID);
ALTER TABLE SYS_CLIENT ADD CONSTRAINT FK_SYS_CLIENT PRIMARY KEY (ID);
ALTER TABLE SYS_COMPANY ADD CONSTRAINT PK_SYS_COMPANY PRIMARY KEY (ID);
ALTER TABLE SYS_DATAITEM ADD CONSTRAINT FK_SYS_DATAITEM PRIMARY KEY (ID);
ALTER TABLE SYS_DB_AUDIT ADD CONSTRAINT PK_SYS_DB_AUDIT PRIMARY KEY (ID);
ALTER TABLE SYS_DB_AUDIT_DETAIL ADD CONSTRAINT PK_SYS_DB_AUDIT_DETAIL PRIMARY KEY (ID);
ALTER TABLE SYS_DB_AUDIT_SETUP ADD CONSTRAINT PK_SYS_DB_AUDIT_SETUP PRIMARY KEY (ID);
ALTER TABLE SYS_DOMAIN ADD CONSTRAINT FK_SYS_DOMAIN PRIMARY KEY (ID);
ALTER TABLE SYS_FORM ADD CONSTRAINT FK_SYS_FORM PRIMARY KEY (ID);
ALTER TABLE SYS_METHOD ADD CONSTRAINT PK_SYS_METHOD PRIMARY KEY (ID);
ALTER TABLE SYS_MODULE ADD CONSTRAINT PKEY_SYS_MODULE PRIMARY KEY (ID);
ALTER TABLE SYS_SECURITY_AUDIT ADD CONSTRAINT PK_SYS_SECURITY_AUDIT PRIMARY KEY (ID);
ALTER TABLE SYS_WINDOW ADD CONSTRAINT PK_SYS_WINDOW PRIMARY KEY (ID);
ALTER TABLE TAB_PATTERN_HEAD ADD CONSTRAINT PKEY_TAB_PATTERN_HEAD PRIMARY KEY (ID);
ALTER TABLE TAB_PATTERN_SPEC ADD CONSTRAINT PKEY_TAB_PATTERN_SPEC PRIMARY KEY (ID);
ALTER TABLE TAB_SCHEDULE_HEAD ADD CONSTRAINT PKEY_TAB_SCHEDULE_HEAD PRIMARY KEY (ID);
ALTER TABLE TAB_SCHEDULE_SPEC ADD CONSTRAINT PKEY_TAB_SCHEDULE_SPEC PRIMARY KEY (ID);
ALTER TABLE TAB_TIME_BOARD_HEAD ADD CONSTRAINT PKEY_TAB_TIME_BOARD_HEAD PRIMARY KEY (ID);
ALTER TABLE TAB_TIME_BOARD_POSITION ADD CONSTRAINT PKEY_TAB_TIME_BOARD_POSITION PRIMARY KEY (ID);
ALTER TABLE TAB_TIME_BOARD_SPEC ADD CONSTRAINT PKEY_TAB_TIME_BOARD_SPEC PRIMARY KEY (ID);
ALTER TABLE TAB_TIME_KIND ADD CONSTRAINT PKEY_TAB_TIME_KIND PRIMARY KEY (ID);
ALTER TABLE TAX ADD CONSTRAINT PKEY_TAX PRIMARY KEY (ID);
ALTER TABLE TAXGROUP ADD CONSTRAINT PKEY_TAXGROUP PRIMARY KEY (ID);
ALTER TABLE TAXLINK ADD CONSTRAINT PKEY_TAXLINK PRIMARY KEY (ID);
ALTER TABLE TAXSUMM ADD CONSTRAINT PK_TAXSUMM PRIMARY KEY (ID);
ALTER TABLE TURNONESFEATURES ADD CONSTRAINT PK_TURNONESFEATURES PRIMARY KEY (ID);
ALTER TABLE TYPEDOC ADD CONSTRAINT PKEY_TYPEDOC PRIMARY KEY (ID);
ALTER TABLE WH_BIN_LOCATION ADD CONSTRAINT PKEY_WH_BIN_LOCATION PRIMARY KEY (ID);
ALTER TABLE WH_BIN_LOCATION_DETAIL ADD CONSTRAINT PKEY_WH_BIN_LOCATION_DETAIL PRIMARY KEY (ID);
ALTER TABLE WH_BIN_LOCATION_TYPE ADD CONSTRAINT PKEY_WH_BIN_LOCATION_TYPE PRIMARY KEY (ID);
ALTER TABLE WH_BIN_TYPE_CAP_BY_PROD ADD CONSTRAINT PKEY_WH_BIN_TYPE_CAP_BY_PROD PRIMARY KEY (ID);
ALTER TABLE WH_INVACT_COMMISSION ADD CONSTRAINT PK_WH_INVACT_COMMISSION PRIMARY KEY (ID);
ALTER TABLE WH_SECURITY ADD CONSTRAINT PK_WH_SECURITY PRIMARY KEY (ID);
ALTER TABLE WH_SERIAL_NUM ADD CONSTRAINT PKEY_WH_SERIAL_NUM PRIMARY KEY (ID);
ALTER TABLE WH_STOCK_KIND ADD CONSTRAINT PK_WH_STOCK_KIND PRIMARY KEY (ID);
ALTER TABLE WH_WAREHOUSE ADD CONSTRAINT PKEY_WAREHOUSE PRIMARY KEY (ID);
ALTER TABLE WH_WAREHOUSE_TRANSACTION_DAY ADD CONSTRAINT PK_WH_WAREHOUSE_TRANSACTION_DAY PRIMARY KEY (ID);
ALTER TABLE WH_WAREHOUSE_TYPE ADD CONSTRAINT PK_WH_WAREHOUSE_TYPE PRIMARY KEY (ID);
ALTER TABLE WH_ZONE ADD CONSTRAINT PKEY_WH_ZONE PRIMARY KEY (ID);


/******************************************************************************/
/****                             Foreign Keys                             ****/
/******************************************************************************/

ALTER TABLE ACCBATCH ADD CONSTRAINT FK_ACCBATCH_ACCPLAN FOREIGN KEY (ACC_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE ACCBATCH ADD CONSTRAINT FK_ACCBATCH_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ACCBATCH ADD CONSTRAINT FK_ACCBATCH_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ACCBATCHHISTORY ADD CONSTRAINT FKEY_ACCBATCHHISTORY_ACCBATCH FOREIGN KEY (ACCBATCH_ID) REFERENCES ACCBATCH (ID) ON DELETE CASCADE;
ALTER TABLE ACCBATCHHISTORY ADD CONSTRAINT FK_ACCBATCHHISTORY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ACCPLAN ADD CONSTRAINT FKEY_ACCPLAN_TO_CURRENCY FOREIGN KEY (CURRENCY_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE ACCPLAN ADD CONSTRAINT FKEY_ACCPLAN_TO_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE ACCPLAN ADD CONSTRAINT FK_ACCPLAN_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ACC_ACCGROUP ADD CONSTRAINT FKEY_ACC_ACCGROUP_ACCKIND FOREIGN KEY (ACCKIND_ID) REFERENCES ACC_ACCKIND (ID) ON DELETE CASCADE;
ALTER TABLE ACC_ACCGROUP ADD CONSTRAINT FK_ACC_ACCGROUP_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ACC_ACCKIND ADD CONSTRAINT FK_ACC_ACCKIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ACC_ADVANCEREPHEAD ADD CONSTRAINT FK_ACC_ARH_ACC FOREIGN KEY (ACC_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE ACC_ADVANCEREPHEAD ADD CONSTRAINT FK_ACC_ARH_ACCOUNTANT FOREIGN KEY (ACCOUNTANT_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ACC_ADVANCEREPHEAD ADD CONSTRAINT FK_ACC_ARH_CHIEF FOREIGN KEY (CHIEF_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ACC_ADVANCEREPHEAD ADD CONSTRAINT FK_ACC_ARH_CHIEFACCOUNTANT FOREIGN KEY (CHIEFACCOUNTANT_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ACC_ADVANCEREPHEAD ADD CONSTRAINT FK_ACC_ARH_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ACC_ADVANCEREPHEAD ADD CONSTRAINT FK_ACC_ARH_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE ACC_ADVANCEREPHEAD ADD CONSTRAINT FK_ACC_ARH_RESTDOC FOREIGN KEY (RESTDOC_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE ACC_ADVANCEREPHEADMODEL ADD CONSTRAINT FK_ACC_ARHM_ACC FOREIGN KEY (ACC_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE ACC_ADVANCEREPHEADMODEL ADD CONSTRAINT FK_ACC_ARHM_ACCOUNTANT FOREIGN KEY (ACCOUNTANT_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ACC_ADVANCEREPHEADMODEL ADD CONSTRAINT FK_ACC_ARHM_CHIEF FOREIGN KEY (CHIEF_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ACC_ADVANCEREPHEADMODEL ADD CONSTRAINT FK_ACC_ARHM_CHIEFACCOUNTANT FOREIGN KEY (CHIEFACCOUNTANT_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ACC_ADVANCEREPHEADMODEL ADD CONSTRAINT FK_ACC_ARHM_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ACC_ADVANCEREPHEADMODEL ADD CONSTRAINT FK_ACC_ARHM_DOCHEADMODEL FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE ACC_ADVANCEREPHEADMODEL ADD CONSTRAINT FK_ACC_ARHM_RESTDOC FOREIGN KEY (RESTDOC_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE ACC_ADVANCEREPSPEC ADD CONSTRAINT FK_ACC_ARS_ACC FOREIGN KEY (ACC_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE ACC_ADVANCEREPSPEC ADD CONSTRAINT FK_ACC_ARS_ANL1 FOREIGN KEY (ANL1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ACC_ADVANCEREPSPEC ADD CONSTRAINT FK_ACC_ARS_ANL2 FOREIGN KEY (ANL2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ACC_ADVANCEREPSPEC ADD CONSTRAINT FK_ACC_ARS_ANL3 FOREIGN KEY (ANL3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ACC_ADVANCEREPSPEC ADD CONSTRAINT FK_ACC_ARS_ANL4 FOREIGN KEY (ANL4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ACC_ADVANCEREPSPEC ADD CONSTRAINT FK_ACC_ARS_ANL5 FOREIGN KEY (ANL5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ACC_ADVANCEREPSPEC ADD CONSTRAINT FK_ACC_ARS_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE ACC_AMCODE ADD CONSTRAINT FK_ACC_AMCODE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ACC_AMORTIZATION ADD CONSTRAINT FK_ACC_AMORTIZATION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ACC_AMORTIZATION ADD CONSTRAINT FK_ACC_AMORTIZATION_INVENTORY FOREIGN KEY (INVENTORY_ID) REFERENCES INVENTORY (ID);
ALTER TABLE ACC_AMRATE ADD CONSTRAINT FK_ACC_AMRATE_AMCODE FOREIGN KEY (AMCODE_ID) REFERENCES ACC_AMCODE (ID) ON DELETE CASCADE;
ALTER TABLE ACC_AMRATE ADD CONSTRAINT FK_ACC_AMRATE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ACC_CONFIG ADD CONSTRAINT FK_ACC_CONFIG_BB_DELIV_DG FOREIGN KEY (BUYBOOK_DELIV_DOCGROUP_ID) REFERENCES PMA_DOCGROUP (ID);
ALTER TABLE ACC_CONFIG ADD CONSTRAINT FK_ACC_CONFIG_BB_INVOICE_DG FOREIGN KEY (BUYBOOK_INVOICE_DOCGROUP_ID) REFERENCES PMA_DOCGROUP (ID);
ALTER TABLE ACC_CONFIG ADD CONSTRAINT FK_ACC_CONFIG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ACC_CONFIG ADD CONSTRAINT FK_ACC_CONFIG_CURRENCY1 FOREIGN KEY (BASE_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE ACC_CONFIG ADD CONSTRAINT FK_ACC_CONFIG_CURRENCY2 FOREIGN KEY (NAT_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE ACC_CONFIG ADD CONSTRAINT FK_ACC_CONFIG_CUR_RATE_AUTH FOREIGN KEY (CUR_RATE_AUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE ACC_CONFIG ADD CONSTRAINT FK_ACC_CONFIG_CUR_RATE_TYPE FOREIGN KEY (CUR_RATE_TYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE ACC_CONFIG ADD CONSTRAINT FK_ACC_CONFIG_SB_AVANINV_DG FOREIGN KEY (SALEBOOK_AVANINV_DOCGROUP_ID) REFERENCES PMA_DOCGROUP (ID);
ALTER TABLE ACC_CONFIG ADD CONSTRAINT FK_ACC_CONFIG_SB_DELIV_DG FOREIGN KEY (SALEBOOK_DELIV_DOCGROUP_ID) REFERENCES PMA_DOCGROUP (ID);
ALTER TABLE ACC_CONFIG ADD CONSTRAINT FK_ACC_CONFIG_SB_INVOICE_DG FOREIGN KEY (SALEBOOK_INVOICE_DOCGROUP_ID) REFERENCES PMA_DOCGROUP (ID);
ALTER TABLE ACC_INVHEAD ADD CONSTRAINT FKEY_INVHEAD_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ACC_INVHEAD ADD CONSTRAINT FKEY_INVHEAD_TO_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE ACC_INVHEAD ADD CONSTRAINT FKEY_INVHEAD_TO_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE ACC_INVHEAD ADD CONSTRAINT FKEY_INVHEAD_TO_INVENTORY FOREIGN KEY (PARENT_ID) REFERENCES INVENTORY (ID);
ALTER TABLE ACC_INVHEAD ADD CONSTRAINT FK_ACC_INVHEAD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ACC_INVHEAD ADD CONSTRAINT FK_ACC_INVHEAD_INVLOCATION FOREIGN KEY (INVLOCATION_ID) REFERENCES INVLOCATION (ID);
ALTER TABLE ACC_INVHEAD ADD CONSTRAINT FK_ACC_INVHEAD_OKOF FOREIGN KEY (OKOF_ID) REFERENCES OKOF (ID);
ALTER TABLE ACC_INVPRODUCTION ADD CONSTRAINT FK_ACC_INVPRODUCTION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ACC_INVPRODUCTION ADD CONSTRAINT FK_ACC_INVPRODUCTION_INVHEAD FOREIGN KEY (INVHEAD_ID) REFERENCES ACC_INVHEAD (ID) ON DELETE CASCADE;
ALTER TABLE ALG_CONST ADD CONSTRAINT FK_ALG_CONST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ALG_CONST ADD CONSTRAINT FK_ALG_CONST_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE ALG_CONST_VAL ADD CONSTRAINT FK_ALG_CONST_VAL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ALG_CONST_VAL ADD CONSTRAINT FK_ALG_CONST_VAL_CONST FOREIGN KEY (CONST_ID) REFERENCES ALG_CONST (ID) ON DELETE CASCADE;
ALTER TABLE ALG_CUSTOM_USER_ACTION ADD CONSTRAINT FK_CSTUSER_ACTION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ALG_CUSTOM_USER_ACTION ADD CONSTRAINT FK_CUSTOM_USER_ACTION_ALG FOREIGN KEY (ALGORITHM_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE ALG_CUSTOM_USER_ACTION ADD CONSTRAINT FK_CUSTOM_USER_ACTION_CLS FOREIGN KEY (CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE ALG_CUSTOM_USER_ACTION_PERMISS ADD CONSTRAINT FK_CSTUSER_ACT_PER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ALG_CUSTOM_USER_ACTION_PERMISS ADD CONSTRAINT FK_CUSTOM_USER_ACT_PERM_ACT FOREIGN KEY (ACTION_ID) REFERENCES ALG_CUSTOM_USER_ACTION (ID) ON DELETE CASCADE;
ALTER TABLE ALG_CUSTOM_USER_ACTION_PERMISS ADD CONSTRAINT FK_CUSTOM_USER_ACT_PERM_ROL FOREIGN KEY (ROLE_ID) REFERENCES SEC_GROUPS (ID);
ALTER TABLE ALG_REPOSITORY ADD CONSTRAINT FK_ALG_REPOSITORY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ALG_REPOSITORY ADD CONSTRAINT FK_ALG_REPOSITORY_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE ANLPLAN ADD CONSTRAINT FKEY_ANLPLAN_TO_ACCPLAN FOREIGN KEY (ACCPLAN_ID) REFERENCES ACCPLAN (ID) ON DELETE CASCADE;
ALTER TABLE ANLPLAN ADD CONSTRAINT FKEY_ANLPLAN_TO_ANLPLAN FOREIGN KEY (PARENT_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ANLPLAN ADD CONSTRAINT FK_ANLPLAN_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE BANKDOCUMENT ADD CONSTRAINT FKEY_BANKDOCUMENT_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE BANKDOCUMENT ADD CONSTRAINT FK_BANKDOCUMENT_PAYERBANK FOREIGN KEY (PAYERBANKREQ_ID) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE BANKDOCUMENT ADD CONSTRAINT FK_BANKDOCUMENT_PAYMENTFOR FOREIGN KEY (PAYMENTFOR) REFERENCES CONTRACTOR (ID);
ALTER TABLE BANKDOCUMENT ADD CONSTRAINT FK_BANKDOCUMENT_RECIPBANK FOREIGN KEY (RECIPIENTBANKREQ_ID) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE BANKDOCUMENT ADD CONSTRAINT FK_BANKDOCUMENT_RESPONSIBLE FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE BANKDOCUMENTMODEL ADD CONSTRAINT FKEY_BANKDOCMODEL_DOCHEADM FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE BANKDOCUMENTMODEL ADD CONSTRAINT FK_BANKDOCUMENTM_PAYERBANK FOREIGN KEY (PAYERBANKREQ_ID) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE BANKDOCUMENTMODEL ADD CONSTRAINT FK_BANKDOCUMENTM_PAYMENTFOR FOREIGN KEY (PAYMENTFOR) REFERENCES CONTRACTOR (ID);
ALTER TABLE BANKDOCUMENTMODEL ADD CONSTRAINT FK_BANKDOCUMENTM_RECIPBANK FOREIGN KEY (RECIPIENTBANKREQ_ID) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE BANKDOCUMENTMODEL ADD CONSTRAINT FK_BANKDOCUMENTM_RESPONSIBLE FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE BILLHEAD ADD CONSTRAINT FK_BILLHEAD_BANKREQ1 FOREIGN KEY (PARTNERFROM_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE BILLHEAD ADD CONSTRAINT FK_BILLHEAD_BANKREQ2 FOREIGN KEY (PARTNERTO_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE BILLHEAD ADD CONSTRAINT FK_BILLHEAD_CONSIGNEE FOREIGN KEY (CONSIGNEE) REFERENCES CONTRACTOR (ID);
ALTER TABLE BILLHEAD ADD CONSTRAINT FK_BILLHEAD_CONSUMER FOREIGN KEY (CONSUMER) REFERENCES CONTRACTOR (ID);
ALTER TABLE BILLHEAD ADD CONSTRAINT FK_BILLHEAD_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE BILLHEAD ADD CONSTRAINT FK_BILLHEAD_RESPONSIBLE FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE BILLHEAD ADD CONSTRAINT FK_BILLHEAD_SHIPPER FOREIGN KEY (SHIPPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE BILLHEADMODEL ADD CONSTRAINT FKEY_BILLHEADM_DOCHEAD FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE BILLHEADMODEL ADD CONSTRAINT FK_BILLHEADM_BANKREQ1 FOREIGN KEY (PARTNERFROM_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE BILLHEADMODEL ADD CONSTRAINT FK_BILLHEADM_BANKREQ2 FOREIGN KEY (PARTNERTO_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE BILLHEADMODEL ADD CONSTRAINT FK_BILLHEADM_CONSIGNEE FOREIGN KEY (CONSIGNEE) REFERENCES CONTRACTOR (ID);
ALTER TABLE BILLHEADMODEL ADD CONSTRAINT FK_BILLHEADM_CONSUMER FOREIGN KEY (CONSUMER) REFERENCES CONTRACTOR (ID);
ALTER TABLE BILLHEADMODEL ADD CONSTRAINT FK_BILLHEADM_RESPONSIBLE FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE BILLHEADMODEL ADD CONSTRAINT FK_BILLHEADM_SHIPPER FOREIGN KEY (SHIPPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE BILLSPEC ADD CONSTRAINT FKEY_BILLSPEC_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE BILLSPECMODEL ADD CONSTRAINT FKEY_BILLSPECM_DOCSPEC FOREIGN KEY (DOCSPECMODEL_ID) REFERENCES DOCSPECMODEL (ID) ON DELETE CASCADE;
ALTER TABLE BUYBOOK ADD CONSTRAINT FKEY_BUYBOOK_FACTURA FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE BUYBOOK ADD CONSTRAINT FKEY_BUYBOOK_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE BUYBOOK ADD CONSTRAINT FKEY_BUYBOOK_TYPEDOC FOREIGN KEY (DOCTYPE) REFERENCES TYPEDOC (UPCODE);
ALTER TABLE BUYBOOK ADD CONSTRAINT FK_BUYBOOK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE BUYBOOK ADD CONSTRAINT FK_BUYBOOK_ORGUNIT FOREIGN KEY (ORGUNIT_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE BUYBOOK ADD CONSTRAINT FK_BUYBOOK_PROVIDER FOREIGN KEY (PROVIDER_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE CALCTAXESKIND ADD CONSTRAINT FK_CALCTAXESKIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CALCTAXESLINK ADD CONSTRAINT FKEY_CALCTAXESLINK_CALCKIND FOREIGN KEY (KIND_ID) REFERENCES CALCTAXESKIND (ID) ON DELETE CASCADE;
ALTER TABLE CALCTAXESLINK ADD CONSTRAINT FKEY_CALCTAXESLINK_TAX FOREIGN KEY (TAX_ID) REFERENCES TAX (ID);
ALTER TABLE CALCTAXESLINK ADD CONSTRAINT FK_CALCTAXESLINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CASHDOCUMENT ADD CONSTRAINT FKEY_CASHDOCUMENT_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE CASHDOCUMENT ADD CONSTRAINT FK_CASHDOCUMENT_ACCPLAN FOREIGN KEY (ACC_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE CASHDOCUMENT ADD CONSTRAINT FK_CASHDOCUMENT_BOOKKEEPER FOREIGN KEY (BOOKKEEPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE CASHDOCUMENT ADD CONSTRAINT FK_CASHDOCUMENT_CASHIER FOREIGN KEY (CASHIER) REFERENCES CONTRACTOR (ID);
ALTER TABLE CASHDOCUMENT ADD CONSTRAINT FK_CASHDOCUMENT_CHIEF FOREIGN KEY (CHIEF) REFERENCES CONTRACTOR (ID);
ALTER TABLE CASHDOCUMENT ADD CONSTRAINT FK_CASHDOCUMENT_COMPANY FOREIGN KEY (COMPANY) REFERENCES CONTRACTOR (ID);
ALTER TABLE CASHDOCUMENTMODEL ADD CONSTRAINT FKEY_CASHDOCMODEL_DOCHEADM FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE CASHDOCUMENTMODEL ADD CONSTRAINT FK_CASHDOCUMENTMODEL_ACCPLAN FOREIGN KEY (ACC_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE CASHDOCUMENTMODEL ADD CONSTRAINT FK_CASHDOCUMENTM_BOOKKEEPER FOREIGN KEY (BOOKKEEPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE CASHDOCUMENTMODEL ADD CONSTRAINT FK_CASHDOCUMENTM_CASHIER FOREIGN KEY (CASHIER) REFERENCES CONTRACTOR (ID);
ALTER TABLE CASHDOCUMENTMODEL ADD CONSTRAINT FK_CASHDOCUMENTM_CHIEF FOREIGN KEY (CHIEF) REFERENCES CONTRACTOR (ID);
ALTER TABLE CASHDOCUMENTMODEL ADD CONSTRAINT FK_CASHDOCUMENTM_COMPANY FOREIGN KEY (COMPANY) REFERENCES CONTRACTOR (ID);
ALTER TABLE CATALOG ADD CONSTRAINT FKEY_CATALOG_MEASURE1 FOREIGN KEY (MEASURE1_ID) REFERENCES MEASURE (ID);
ALTER TABLE CATALOG ADD CONSTRAINT FKEY_CATALOG_MEASURE2 FOREIGN KEY (MEASURE2_ID) REFERENCES MEASURE (ID);
ALTER TABLE CATALOG ADD CONSTRAINT FKEY_CATALOG_MEASURE3 FOREIGN KEY (WEIGHTMEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE CATALOG ADD CONSTRAINT FKEY_CATALOG_MEASURE4 FOREIGN KEY (VOLUMEMEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE CATALOG ADD CONSTRAINT FKEY_CATALOG_TAXGROUP FOREIGN KEY (TAXGROUP_ID) REFERENCES TAXGROUP (ID);
ALTER TABLE CATALOG ADD CONSTRAINT FKEY_CATALOG_TO_CUST_DECLAR FOREIGN KEY (CUSTOMS_DECLARATION_ID) REFERENCES REF_CUSTOMS_DECLARATION (ID);
ALTER TABLE CATALOG ADD CONSTRAINT FKEY_CATALOG_TO_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES CATALOGFOLDER (ID);
ALTER TABLE CATALOG ADD CONSTRAINT FKEY_CATALOG_TO_OKDP FOREIGN KEY (OKDP_CODE) REFERENCES OKDP (UPCODE);
ALTER TABLE CATALOG ADD CONSTRAINT FK_CATALOG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CATALOG ADD CONSTRAINT FK_CATALOG_OKP FOREIGN KEY (OKP_ID) REFERENCES REF_OKP (ID);
ALTER TABLE CATALOG ADD CONSTRAINT FK_CATALOG_TO_COUNTRY FOREIGN KEY (COUNTRY_OF_ORIGIN_ID) REFERENCES REF_COUNTRY (ID);
ALTER TABLE CATALOGFOLDER ADD CONSTRAINT FKEY_CATFOLD_CATFOLD FOREIGN KEY (PARENT_ID) REFERENCES CATALOGFOLDER (ID);
ALTER TABLE CATALOGFOLDER ADD CONSTRAINT FK_CATALOGFOLDER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CATALOGFOLDER ADD CONSTRAINT FK_CATFOLD_ALG_REP FOREIGN KEY (NUMBERING_ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE CATALOGPRICE ADD CONSTRAINT FKEY_CATALOGPRICE_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID) ON DELETE CASCADE;
ALTER TABLE CATALOGPRICE ADD CONSTRAINT FKEY_CATALOGPRICE_CURRENCY FOREIGN KEY (CURRENCY_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE CATALOGPRICE ADD CONSTRAINT FKEY_CATALOGPRICE_RATE_AUTH FOREIGN KEY (CUR_RATE_AUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE CATALOGPRICE ADD CONSTRAINT FKEY_CATALOGPRICE_RATE_TYPE FOREIGN KEY (CUR_RATE_TYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE CATALOGPRICE ADD CONSTRAINT FK_CATALOGPRICE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CODEAMOR ADD CONSTRAINT FK_CODEAMOR_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CONTRACT ADD CONSTRAINT FKEY_CONTRACT_CONTR1 FOREIGN KEY (SHIPPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE CONTRACT ADD CONSTRAINT FKEY_CONTRACT_CONTR2 FOREIGN KEY (CONSIGNEE) REFERENCES CONTRACTOR (ID);
ALTER TABLE CONTRACT ADD CONSTRAINT FKEY_CONTRACT_CONTR3 FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE CONTRACT ADD CONSTRAINT FKEY_CONTRACT_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE CONTRACT ADD CONSTRAINT FKEY_CONTRACT_PARTNEMPL FOREIGN KEY (CONTRACTOR_RESPONSIBLE) REFERENCES PARTNEMPL (ID);
ALTER TABLE CONTRACT ADD CONSTRAINT FK_CONTRACT_BANKREQ1 FOREIGN KEY (CONTRACTORBANKREQ_ID) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE CONTRACT ADD CONSTRAINT FK_CONTRACT_BANKREQ2 FOREIGN KEY (BANKREQ_ID) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE CONTRACT ADD CONSTRAINT FK_CONTRACT_CATEGORY_ID FOREIGN KEY (CONTRACT_CATEGORY_ID) REFERENCES CONTRACT_CATEGORY (ID);
ALTER TABLE CONTRACT ADD CONSTRAINT FK_CONTRACT_CONTRACT_KIND_ID FOREIGN KEY (CONTRACT_KIND_ID) REFERENCES CONTRACT_KIND (ID);
ALTER TABLE CONTRACTMODIFYDOC ADD CONSTRAINT FKEY_CONTMODIFYDOC_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE CONTRACTMODIFYDOC ADD CONSTRAINT FK_CONTRACTMODIFYDOC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CONTRACTOR ADD CONSTRAINT FK_CONTRACTOR_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CONTRACTORCARD ADD CONSTRAINT FK_CONTRACTORCARD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CONTRACTORCARD ADD CONSTRAINT FK_CONTRACTORCARD_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE CONTRACTORCARD ADD CONSTRAINT FK_CONTRACTORCARD_ORGUNIT FOREIGN KEY (ORGUNIT_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE CONTRACTORCARDHIST ADD CONSTRAINT FKEY_CONTRACTORCARDHIST_CARD FOREIGN KEY (CONTRACTORCARD_ID) REFERENCES CONTRACTORCARD (ID);
ALTER TABLE CONTRACTORCARDHIST ADD CONSTRAINT FKEY_CONTRACTORCARDHIST_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE CONTRACTORCARDHIST ADD CONSTRAINT FK_CONTRACTORCARDHIST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CONTRACTORCARDPLAN ADD CONSTRAINT FKEY_CONTRACTORCARDPLAN_CARD FOREIGN KEY (CONTRACTORCARD_ID) REFERENCES CONTRACTORCARD (ID);
ALTER TABLE CONTRACTORCARDPLAN ADD CONSTRAINT FKEY_CONTRACTORCARDPLAN_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE CONTRACTORCARDPLAN ADD CONSTRAINT FK_CONTRACTORCARDPLAN_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CONTRACTPHASE ADD CONSTRAINT FKEY_CONTPHASE_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE CONTRACTPHASE ADD CONSTRAINT FKEY_CPHASE_CONTR1 FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE CONTRACTPHASE ADD CONSTRAINT FKEY_CPHASE_CONTR2 FOREIGN KEY (COMPANY) REFERENCES CONTRACTOR (ID);
ALTER TABLE CONTRACTPHASE ADD CONSTRAINT FKEY_CPHASE_CONTR3 FOREIGN KEY (CONSIGNEE) REFERENCES CONTRACTOR (ID);
ALTER TABLE CONTRACTPHASE ADD CONSTRAINT FKEY_CPHASE_CONTR4 FOREIGN KEY (SHIPPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE CONTRACTPHASE ADD CONSTRAINT FKEY_CPHASE_CONTR5 FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE CONTRACTPHASE ADD CONSTRAINT FKEY_CPHASE_PARTNEMPL FOREIGN KEY (CONTRACTOR_RESPONSIBLE) REFERENCES PARTNEMPL (ID);
ALTER TABLE CONTRACTPHASE ADD CONSTRAINT FK_CONTRACTPHASE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CONTRACTSPEC ADD CONSTRAINT FKEY_CONTRACTSPEC_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE CONTRACTSPEC ADD CONSTRAINT FKEY_CONTRACTSPEC_FACTITEM FOREIGN KEY (PHASEITEMFACT_ID) REFERENCES PHASEITEMFACT (ID) ON DELETE CASCADE;
ALTER TABLE CONTRACTSPEC ADD CONSTRAINT FKEY_CONTRACTSPEC_PLANITEM FOREIGN KEY (PHASEITEMPLAN_ID) REFERENCES PHASEITEMPLAN (ID) ON DELETE CASCADE;
ALTER TABLE CONTRACTSPEC ADD CONSTRAINT FKEY_CONTRACTSPEC_PRICELIST FOREIGN KEY (PRICELIST_ID) REFERENCES PRICELISTHEAD (ID);
ALTER TABLE CONTRACTSPEC ADD CONSTRAINT FKEY_CONTRACTSPEC_PRICETYPE FOREIGN KEY (PRICETYPE_ID) REFERENCES PRICETYPE (ID);
ALTER TABLE CONTRACTSPEC ADD CONSTRAINT FK_CONTRACTSPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CONTRACT_CATEGORY ADD CONSTRAINT FK_CONTRACT_CATEGORY_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CONTRACT_KIND ADD CONSTRAINT FK_CONTRACT_KIND_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_ACTIVITY_KIND ADD CONSTRAINT FK_CRM_ACTIVITY_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_ACTIVITY_SPHERE ADD CONSTRAINT FK_CRM_ACTIVITY_SPHERE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_BRANCH ADD CONSTRAINT FK_CRM_BRANCH_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_CLIENT_RANK ADD CONSTRAINT FK_CRM_CLIENT_RANK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_CLIENT_TYPE ADD CONSTRAINT FK_CRM_CLIENT_TYPE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_CONTACT ADD CONSTRAINT FK_CRM_CONTACT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_CONTACT ADD CONSTRAINT FK_CRM_CONTACT_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE CRM_CONTACT ADD CONSTRAINT FK_CRM_CONTACT_CURATOR FOREIGN KEY (CURATOR_ID) REFERENCES CRM_USER (ID);
ALTER TABLE CRM_CONTACT ADD CONSTRAINT FK_CRM_CONTACT_PERSON FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID);
ALTER TABLE CRM_CONTACT ADD CONSTRAINT FK_CRM_CONTACT_PERSON_TITLE FOREIGN KEY (PERSON_TITLE_ID) REFERENCES CRM_PERSON_TITLE (ID);
ALTER TABLE CRM_CONTACT ADD CONSTRAINT FK_CRM_CONTACT_RESPONSIBLE FOREIGN KEY (RESPONSIBLE_ID) REFERENCES CRM_USER (ID);
ALTER TABLE CRM_CONTACT_LINK ADD CONSTRAINT FK_CRM_CONTACT_LINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_CONTACT_LINK ADD CONSTRAINT FK_CRM_CONTACT_LINK_CONTACT FOREIGN KEY (CONTACT_ID) REFERENCES CRM_CONTACT (ID);
ALTER TABLE CRM_CONTACT_LINK ADD CONSTRAINT FK_CRM_CONTACT_LINK_REL FOREIGN KEY (RELATION_ID) REFERENCES CRM_RELATION (ID) ON DELETE CASCADE;
ALTER TABLE CRM_DELIVERY_KIND ADD CONSTRAINT FK_CRM_DELIVERY_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_LINKED_DOC ADD CONSTRAINT FK_CRM_LINKED_DOC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_LINKED_DOC ADD CONSTRAINT FK_CRM_LINKED_DOC_CONTACT FOREIGN KEY (CONTACT_ID) REFERENCES CRM_CONTACT (ID) ON DELETE CASCADE;
ALTER TABLE CRM_LINKED_DOC ADD CONSTRAINT FK_CRM_LINKED_DOC_OFFER FOREIGN KEY (OFFER_ID) REFERENCES CRM_OFFER (ID) ON DELETE CASCADE;
ALTER TABLE CRM_LINKED_DOC ADD CONSTRAINT FK_CRM_LINKED_DOC_OPERATION FOREIGN KEY (OPERATION_ID) REFERENCES CRM_OPERATION (ID) ON DELETE CASCADE;
ALTER TABLE CRM_LINKED_DOC ADD CONSTRAINT FK_CRM_LINKED_DOC_ORIGINAL FOREIGN KEY (ORIGINAL_ID) REFERENCES REF_ORIGINAL_DOCUMENT (ID);
ALTER TABLE CRM_LINKED_DOC ADD CONSTRAINT FK_CRM_LINKED_DOC_PROBLEM FOREIGN KEY (PROBLEM_ID) REFERENCES CRM_PROBLEM (ID) ON DELETE CASCADE;
ALTER TABLE CRM_LINKED_DOC ADD CONSTRAINT FK_CRM_LINKED_DOC_RELATION FOREIGN KEY (RELATION_ID) REFERENCES CRM_RELATION (ID) ON DELETE CASCADE;
ALTER TABLE CRM_LINKED_DOC ADD CONSTRAINT FK_CRM_LINKED_DOC_SOLUTION FOREIGN KEY (SOLUTION_ID) REFERENCES CRM_SOLUTION (ID) ON DELETE CASCADE;
ALTER TABLE CRM_LINK_PROBLEM_SOLUTION ADD CONSTRAINT FK_CRMLNKPROBSOLUT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_LINK_PROBLEM_SOLUTION ADD CONSTRAINT FK_CRM_LINK_PS_PROBLEM FOREIGN KEY (PROBLEM_ID) REFERENCES CRM_PROBLEM (ID) ON DELETE CASCADE;
ALTER TABLE CRM_LINK_PROBLEM_SOLUTION ADD CONSTRAINT FK_CRM_LINK_PS_SOLUTION FOREIGN KEY (SOLUTION_ID) REFERENCES CRM_SOLUTION (ID) ON DELETE CASCADE;
ALTER TABLE CRM_LINK_SYMPTOM_PROBLEM ADD CONSTRAINT FK_CRMLNKSYMPTPROB_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_LINK_SYMPTOM_PROBLEM ADD CONSTRAINT FK_CRM_LINK_SP_PROBLEM FOREIGN KEY (PROBLEM_ID) REFERENCES CRM_PROBLEM (ID) ON DELETE CASCADE;
ALTER TABLE CRM_LINK_SYMPTOM_PROBLEM ADD CONSTRAINT FK_CRM_LINK_SP_SYMPTOM FOREIGN KEY (SYMPTOM_ID) REFERENCES CRM_SYMPTOM (ID) ON DELETE CASCADE;
ALTER TABLE CRM_MARKET ADD CONSTRAINT FK_CRM_MARKET_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_OFFER ADD CONSTRAINT FK_CRM_OFFER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_OFFER ADD CONSTRAINT FK_CRM_OFFER_CONTACT FOREIGN KEY (CONTACT_ID) REFERENCES CRM_CONTACT (ID);
ALTER TABLE CRM_OFFER ADD CONSTRAINT FK_CRM_OFFER_FAIL_REASON FOREIGN KEY (FAIL_REASON_ID) REFERENCES CRM_OFFER_REASON (ID);
ALTER TABLE CRM_OFFER ADD CONSTRAINT FK_CRM_OFFER_FORECAST FOREIGN KEY (FORECAST_ID) REFERENCES CRM_OFFER_FORECAST (ID);
ALTER TABLE CRM_OFFER ADD CONSTRAINT FK_CRM_OFFER_KIND FOREIGN KEY (KIND_ID) REFERENCES CRM_OFFER_KIND (ID);
ALTER TABLE CRM_OFFER ADD CONSTRAINT FK_CRM_OFFER_OPERATION FOREIGN KEY (OPERATION_ID) REFERENCES CRM_OPERATION (ID);
ALTER TABLE CRM_OFFER ADD CONSTRAINT FK_CRM_OFFER_RELATION FOREIGN KEY (RELATION_ID) REFERENCES CRM_RELATION (ID) ON DELETE CASCADE;
ALTER TABLE CRM_OFFER ADD CONSTRAINT FK_CRM_OFFER_RESPONSIBLE FOREIGN KEY (RESPONSIBLE_ID) REFERENCES CRM_USER (ID);
ALTER TABLE CRM_OFFER ADD CONSTRAINT FK_CRM_OFFER_STATUS FOREIGN KEY (STATUS_ID) REFERENCES CRM_OFFER_STATUS (ID);
ALTER TABLE CRM_OFFER ADD CONSTRAINT FK_CRM_OFFER_SUCCESS_REASON FOREIGN KEY (SUCCESS_REASON_ID) REFERENCES CRM_OFFER_REASON (ID);
ALTER TABLE CRM_OFFER_FORECAST ADD CONSTRAINT FK_CRM_OFFER_FORECAST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_OFFER_KIND ADD CONSTRAINT FK_CRM_OFFER_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_OFFER_REASON ADD CONSTRAINT FK_CRM_OFFER_REASON_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_OFFER_STATUS ADD CONSTRAINT FK_CRM_OFFER_STATUS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_OPERATION ADD CONSTRAINT FK_CRM_OPERATION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_OPERATION ADD CONSTRAINT FK_CRM_OPERATION_CONTACT FOREIGN KEY (CONTACT_ID) REFERENCES CRM_CONTACT (ID);
ALTER TABLE CRM_OPERATION ADD CONSTRAINT FK_CRM_OPERATION_CURATOR FOREIGN KEY (CURATOR_ID) REFERENCES CRM_USER (ID);
ALTER TABLE CRM_OPERATION ADD CONSTRAINT FK_CRM_OPERATION_KIND FOREIGN KEY (KIND_ID) REFERENCES CRM_OPERATION_KIND (ID);
ALTER TABLE CRM_OPERATION ADD CONSTRAINT FK_CRM_OPERATION_PARENT FOREIGN KEY (PARENT_ID) REFERENCES CRM_OPERATION (ID);
ALTER TABLE CRM_OPERATION ADD CONSTRAINT FK_CRM_OPERATION_PRIORITY FOREIGN KEY (PRIORITY_ID) REFERENCES CRM_OPERATION_PRIORITY (ID);
ALTER TABLE CRM_OPERATION ADD CONSTRAINT FK_CRM_OPERATION_PURPOSE FOREIGN KEY (PURPOSE_ID) REFERENCES CRM_OPERATION_PURPOSE (ID);
ALTER TABLE CRM_OPERATION ADD CONSTRAINT FK_CRM_OPERATION_RELATION FOREIGN KEY (RELATION_ID) REFERENCES CRM_RELATION (ID) ON DELETE CASCADE;
ALTER TABLE CRM_OPERATION ADD CONSTRAINT FK_CRM_OPERATION_RESPONSIBL FOREIGN KEY (RESPONSIBLE_ID) REFERENCES CRM_USER (ID);
ALTER TABLE CRM_OPERATION_KIND ADD CONSTRAINT FK_CRM_OPERATION_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_OPERATION_PRIORITY ADD CONSTRAINT FK_CRMOPERPRIOR_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_OPERATION_PURPOSE ADD CONSTRAINT FK_CRMOPERPURP_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_OPERATION_STATUS ADD CONSTRAINT FK_CRM_OPERATION_STATUS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_OWNERSHIP_FORM ADD CONSTRAINT FK_CRM_OWNERSHIP_FORM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_PAYMENT_COND ADD CONSTRAINT FK_CRM_PAYMENT_COND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_PERSON_TITLE ADD CONSTRAINT FK_CRM_PERSON_TITLE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_POSITION ADD CONSTRAINT FK_CRM_POSITION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_PROBLEM ADD CONSTRAINT FK_CRM_PROBLEM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_PROBLEM ADD CONSTRAINT FK_CRM_PROBLEM_CREATOR FOREIGN KEY (CREATOR_ID) REFERENCES CRM_USER (ID);
ALTER TABLE CRM_PROBLEM ADD CONSTRAINT FK_CRM_PROBLEM_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE CRM_PROBLEM ADD CONSTRAINT FK_CRM_PROBLEM_PROBLEM_TYPE FOREIGN KEY (PROBLEM_TYPE_ID) REFERENCES CRM_PROBLEM_TYPE (ID);
ALTER TABLE CRM_PROBLEM_TYPE ADD CONSTRAINT FK_CRM_PROBLEM_TYPE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_AKIND FOREIGN KEY (ACTIVITY_KIND_ID) REFERENCES CRM_ACTIVITY_KIND (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_BRANCH FOREIGN KEY (BRANCH_ID) REFERENCES CRM_BRANCH (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_CLIENT_RANK FOREIGN KEY (CLIENT_RANK_ID) REFERENCES CRM_CLIENT_RANK (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_CLIENT_TYPE FOREIGN KEY (CLIENT_TYPE_ID) REFERENCES CRM_CLIENT_TYPE (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_CURATOR FOREIGN KEY (CURATOR_ID) REFERENCES CRM_USER (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_DELIV_KIND FOREIGN KEY (DELIVERY_KIND_ID) REFERENCES CRM_DELIVERY_KIND (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_MARKET FOREIGN KEY (MARKET_ID) REFERENCES CRM_MARKET (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_OWNFORM FOREIGN KEY (OWNERSHIP_FORM_ID) REFERENCES CRM_OWNERSHIP_FORM (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_PARENT FOREIGN KEY (PARENT_ID) REFERENCES CRM_RELATION (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_PARTN FOREIGN KEY (LEGAL_PERSON_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_PAYM_COND FOREIGN KEY (PAYMENT_COND_ID) REFERENCES CRM_PAYMENT_COND (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_PERSON FOREIGN KEY (NATURAL_PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_RESPONSIBLE FOREIGN KEY (RESPONSIBLE_ID) REFERENCES CRM_USER (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_SPHERE FOREIGN KEY (ACTIVITY_SPHERE_ID) REFERENCES CRM_ACTIVITY_SPHERE (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_STATUS FOREIGN KEY (STATUS_ID) REFERENCES CRM_RELATION_STATUS (ID);
ALTER TABLE CRM_RELATION ADD CONSTRAINT FK_CRM_RELATION_TITLE FOREIGN KEY (PERSON_TITLE_ID) REFERENCES CRM_PERSON_TITLE (ID);
ALTER TABLE CRM_RELATION_STATUS ADD CONSTRAINT FK_CRM_RELATION_STATUS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_SOLUTION ADD CONSTRAINT FK_CRM_SOLUTION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_SOLUTION ADD CONSTRAINT FK_CRM_SOLUTION_CREATOR FOREIGN KEY (CREATOR_ID) REFERENCES CRM_USER (ID);
ALTER TABLE CRM_SOLUTION ADD CONSTRAINT FK_CRM_SOLUTION_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE CRM_SOLUTION ADD CONSTRAINT FK_CRM_SOLUTION_SOLUTION_TYPE FOREIGN KEY (SOLUTION_TYPE_ID) REFERENCES CRM_SOLUTION_TYPE (ID);
ALTER TABLE CRM_SOLUTION_TYPE ADD CONSTRAINT FK_CRM_SOLUTION_TYPE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_SYMPTOM ADD CONSTRAINT FK_CRM_SYMPTOM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_SYMPTOM ADD CONSTRAINT FK_CRM_SYMPTOM_CREATOR FOREIGN KEY (CREATOR_ID) REFERENCES CRM_USER (ID);
ALTER TABLE CRM_SYMPTOM ADD CONSTRAINT FK_CRM_SYMPTOM_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE CRM_USER ADD CONSTRAINT FK_CRM_USER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CRM_USER ADD CONSTRAINT FK_CRM_USER_PERSON FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID);
ALTER TABLE CT_CONFIG ADD CONSTRAINT FK_CT_CONFIG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE CT_CONFIG ADD CONSTRAINT FK_CT_CONFIG_CURRENCY1 FOREIGN KEY (BASE_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE CT_CONFIG ADD CONSTRAINT FK_CT_CONFIG_CURRENCY2 FOREIGN KEY (NAT_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE CT_CONFIG ADD CONSTRAINT FK_CT_CONFIG_CUR_RATE_AUTH FOREIGN KEY (CUR_RATE_AUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE CT_CONFIG ADD CONSTRAINT FK_CT_CONFIG_CUR_RATE_TYPE FOREIGN KEY (CUR_RATE_TYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE CURRENCY ADD CONSTRAINT FK_CURRENCY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DISCOUNT ADD CONSTRAINT FKEY_DISCOUNT_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE DISCOUNT ADD CONSTRAINT FK_DISCOUNT_ALGORITHM FOREIGN KEY (ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE DISCOUNT ADD CONSTRAINT FK_DISCOUNT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DIS_CARD ADD CONSTRAINT FK_DIS_CARD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DIS_CARD ADD CONSTRAINT FK_DIS_CARD_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE DIS_CARD ADD CONSTRAINT FK_DIS_CARD_OWNER FOREIGN KEY (OWNER_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE DIS_CARD_HIST ADD CONSTRAINT FK_DIS_CARD_HIST_CARD FOREIGN KEY (CARD_ID) REFERENCES DIS_CARD (ID) ON DELETE CASCADE;
ALTER TABLE DIS_CARD_HIST ADD CONSTRAINT FK_DIS_CARD_HIST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DIS_CARD_HIST ADD CONSTRAINT FK_DIS_CARD_HIST_USER FOREIGN KEY (USER_ID) REFERENCES SEC_USERS (ID);
ALTER TABLE DIS_CARD_USER ADD CONSTRAINT FK_DIS_CARD_USER_CARD FOREIGN KEY (CARD_ID) REFERENCES DIS_CARD (ID) ON DELETE CASCADE;
ALTER TABLE DIS_CARD_USER ADD CONSTRAINT FK_DIS_CARD_USER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DIS_CARD_USER ADD CONSTRAINT FK_DIS_CARD_USER_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE DIS_COEF ADD CONSTRAINT FK_DIS_COEF_CARD FOREIGN KEY (CARD_ID) REFERENCES DIS_CARD (ID) ON DELETE CASCADE;
ALTER TABLE DIS_COEF ADD CONSTRAINT FK_DIS_COEF_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE DIS_COEF ADD CONSTRAINT FK_DIS_COEF_CATALOGFOLDER FOREIGN KEY (CATALOGFOLDER_ID) REFERENCES CATALOGFOLDER (ID);
ALTER TABLE DIS_COEF ADD CONSTRAINT FK_DIS_COEF_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DIS_EXTRA_DISCOUNT ADD CONSTRAINT FK_DIS_EXTRA_DISCOUNT_CARD FOREIGN KEY (CARD_ID) REFERENCES DIS_CARD (ID) ON DELETE CASCADE;
ALTER TABLE DIS_EXTRA_DISCOUNT ADD CONSTRAINT FK_DIS_EXTRA_DISCOUNT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DIS_EXTRA_DISCOUNT ADD CONSTRAINT FK_DIS_EXTRA_DISCOUNT_SEC_USER FOREIGN KEY (USER_ID) REFERENCES SEC_USERS (ID);
ALTER TABLE DIS_PROMOTION ADD CONSTRAINT FK_DIS_PROMOTION_PROMOTION_TYPE FOREIGN KEY (TYPE_ID) REFERENCES DIS_PROMOTION_TYPE (ID);
ALTER TABLE DIS_PROMOTION ADD CONSTRAINT FK_DIS_PROMOTION_SYS_CLIENT FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DIS_PROMOTION_LINE ADD CONSTRAINT FK_DIS_PROMO_LINE_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE DIS_PROMOTION_LINE ADD CONSTRAINT FK_DIS_PROMO_LINE_CAT_FOLDER FOREIGN KEY (CATALOG_FOLDER_ID) REFERENCES CATALOGFOLDER (ID);
ALTER TABLE DIS_PROMOTION_LINE ADD CONSTRAINT FK_DIS_PROMO_LINE_CURRENCY FOREIGN KEY (CURRENCY_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE DIS_PROMOTION_LINE ADD CONSTRAINT FK_DIS_PROMO_LINE_PROMOTION FOREIGN KEY (PROMOTION_ID) REFERENCES DIS_PROMOTION (ID) ON DELETE CASCADE;
ALTER TABLE DIS_PROMOTION_LINE ADD CONSTRAINT FK_DIS_PROMO_LINE_PROMO_TYPE FOREIGN KEY (TYPE_ID) REFERENCES DIS_PROMOTION_TYPE (ID);
ALTER TABLE DIS_PROMOTION_TYPE ADD CONSTRAINT FK_DIS_PROM_TYPE_ALG_REPOSITORY FOREIGN KEY (BAI_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE DIS_PROMOTION_TYPE ADD CONSTRAINT FK_DIS_PROM_TYPE_SYS_CLIENT FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOCACTION ADD CONSTRAINT FKEY_DOCACTION_DOCHEAD FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE DOCACTION ADD CONSTRAINT FK_DOCACTION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FKEY_DOCHEAD_CALCTAXESKIND FOREIGN KEY (CALCTAXESKIND_ID) REFERENCES CALCTAXESKIND (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FKEY_DOCHEAD_CURRENCY FOREIGN KEY (CURRENCY_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE DOCHEAD ADD CONSTRAINT FKEY_DOCHEAD_DISCOUNT_FOLD FOREIGN KEY (DISCOUNT_FOLDER_ID) REFERENCES FOLDER (ID) ON DELETE SET NULL;
ALTER TABLE DOCHEAD ADD CONSTRAINT FKEY_DOCHEAD_DOCHEAD1 FOREIGN KEY (BASEDOC_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FKEY_DOCHEAD_DOCHEAD2 FOREIGN KEY (CONTRACT_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FKEY_DOCHEAD_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FKEY_DOCHEAD_PRICELIST FOREIGN KEY (PRICELIST_ID) REFERENCES PRICELISTHEAD (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FKEY_DOCHEAD_PRICETYPE FOREIGN KEY (PRICETYPE_ID) REFERENCES PRICETYPE (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FKEY_DOCHEAD_TYPEDOC1 FOREIGN KEY (DOCTYPE) REFERENCES TYPEDOC (UPCODE);
ALTER TABLE DOCHEAD ADD CONSTRAINT FKEY_DOCHEAD_TYPEDOC2 FOREIGN KEY (BASEDOCTYPE) REFERENCES TYPEDOC (UPCODE);
ALTER TABLE DOCHEAD ADD CONSTRAINT FKEY_DOCHEAD_TYPEDOC3 FOREIGN KEY (CONTRACTTYPE) REFERENCES TYPEDOC (UPCODE);
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_CONTRACTOR_FROM FOREIGN KEY (FROM_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_CONTRACTOR_MOLDEST FOREIGN KEY (MOLDEST) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_CONTRACTOR_MOLSRC FOREIGN KEY (MOLSRC) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_CONTRACTOR_STOCKDEST FOREIGN KEY (STOCKDEST) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_CONTRACTOR_STOCKSRC FOREIGN KEY (STOCKSRC) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_CONTRACTOR_THROUGH FOREIGN KEY (THROUGH_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_CONTRACTOR_TO FOREIGN KEY (TO_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_CURRATEAUTHORITY FOREIGN KEY (CURRATEAUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_CURRATETYPE FOREIGN KEY (CURRATETYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_SCHEDULE FOREIGN KEY (SCHEDULE_ID) REFERENCES LS_SCHEDULE (ID) ON DELETE SET NULL;
ALTER TABLE DOCHEAD ADD CONSTRAINT FK_DOCHEAD_SYS_COMPANY FOREIGN KEY (SYS_COMPANY_ID) REFERENCES SYS_COMPANY (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FKEY_DOCHEADMODEL_DESTFOLDER FOREIGN KEY (MODELDESTFOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FKEY_DOCHEADSPEC_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FK_DOCHEADMODEL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FK_DOCHEADMODEL_SYS_COMPANY FOREIGN KEY (SYS_COMPANY_ID) REFERENCES SYS_COMPANY (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FK_DOCHEADM_CONTRACTOR_FROM FOREIGN KEY (FROM_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FK_DOCHEADM_CONTRACTOR_THROUGH FOREIGN KEY (THROUGH_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FK_DOCHEADM_CONTRACTOR_TO FOREIGN KEY (TO_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FK_DOCHEADM_CONTR_MOLDEST FOREIGN KEY (MOLDEST) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FK_DOCHEADM_CONTR_MOLSRC FOREIGN KEY (MOLSRC) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FK_DOCHEADM_CONTR_STOCKDEST FOREIGN KEY (STOCKDEST) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FK_DOCHEADM_CONTR_STOCKSRC FOREIGN KEY (STOCKSRC) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FK_DOCHEADM_CURRATEAUTHORITY FOREIGN KEY (CURRATEAUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE DOCHEADMODEL ADD CONSTRAINT FK_DOCHEADM_CURRATETYPE FOREIGN KEY (CURRATETYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE DOCHEADSTATE ADD CONSTRAINT FKEY_DOCHEADSTATE_DOCACTION FOREIGN KEY (DOCACTION_ID) REFERENCES DOCACTION (ID) ON DELETE CASCADE;
ALTER TABLE DOCHEADSTATE ADD CONSTRAINT FKEY_DOCHEADSTATE_USER FOREIGN KEY (USER_ID) REFERENCES SEC_USERS (ID);
ALTER TABLE DOCPROCESSSTAGE ADD CONSTRAINT FKEY_DOCPROCESSSTAGE_STACTION FOREIGN KEY (STAGE) REFERENCES DP_STAGE_ACTION (ID);
ALTER TABLE DOCPROCESSSTAGE ADD CONSTRAINT FKEY_DOCPROCESSSTAGE_TYPEDOC FOREIGN KEY (DOCTYPE_ID) REFERENCES TYPEDOC (ID) ON DELETE CASCADE;
ALTER TABLE DOCPROCESSSTAGE ADD CONSTRAINT FK_DOCPROCESSSTAGE_ALG FOREIGN KEY (ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE DOCPROCESSSTAGE ADD CONSTRAINT FK_DOCPROCESSSTAGE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOCPROCESSSTAGE ADD CONSTRAINT FK_DOCPROCESSSTAGE_PRE_PERFORM FOREIGN KEY (PRE_PERFORM_BAI_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE DOCPROCESSSTAGE ADD CONSTRAINT FK_DOCPROCESSSTAGE_PRE_ROLLBACK FOREIGN KEY (PRE_ROLLBACK_BAI_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE DOCPROCESSSTAGE ADD CONSTRAINT FK_DOCPROCESSSTAGE_RBALG FOREIGN KEY (RBALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE DOCPROCESSSTAGE_RIGHTS ADD CONSTRAINT FKEY_DOCPROCSTAGERIGHTS_GROUP FOREIGN KEY (GROUP_ID) REFERENCES SEC_GROUPS (ID) ON DELETE CASCADE;
ALTER TABLE DOCPROCESSSTAGE_RIGHTS ADD CONSTRAINT FKEY_DOCPROCSTAGERIGHTS_STAGE FOREIGN KEY (STAGE_ID) REFERENCES DOCPROCESSSTAGE (ID) ON DELETE CASCADE;
ALTER TABLE DOCPROCESSSTAGE_RIGHTS ADD CONSTRAINT FK_DOCPROCSTG_RIGHTS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOCSECTION ADD CONSTRAINT FK_DOCSECTION_CLASS FOREIGN KEY (CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE DOCSECTION ADD CONSTRAINT FK_DOCSECTION_CLASS_MODEL FOREIGN KEY (MODEL_CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE DOCSECTION ADD CONSTRAINT FK_DOCSECTION_CLASS_MODEL_SPEC FOREIGN KEY (MODEL_SPEC_CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE DOCSECTION ADD CONSTRAINT FK_DOCSECTION_CLASS_SPEC FOREIGN KEY (SPEC_CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FKEY_DOCSPEC_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FKEY_DOCSPEC_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE DOCSPEC ADD CONSTRAINT FKEY_DOCSPEC_MEASURE1 FOREIGN KEY (MEASURE1_ID) REFERENCES MEASURE (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FKEY_DOCSPEC_MEASURE2 FOREIGN KEY (MEASURE2_ID) REFERENCES MEASURE (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FKEY_DOCSPEC_PRSPEC FOREIGN KEY (PRICELISTSPEC_ID) REFERENCES PRICELISTSPEC (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FKEY_DOCSPEC_TAXGROUP FOREIGN KEY (TAXGROUP_ID) REFERENCES TAXGROUP (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FK_DOCSPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FK_DOCSPEC_CONTR_MOLDEST FOREIGN KEY (MOLDEST) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FK_DOCSPEC_CONTR_MOLSRC FOREIGN KEY (MOLSRC) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FK_DOCSPEC_CONTR_STOCKDEST FOREIGN KEY (STOCKDEST) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FK_DOCSPEC_CONTR_STOCKSRC FOREIGN KEY (STOCKSRC) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FK_DOCSPEC_COUNTRY FOREIGN KEY (COUNTRY_OF_ORIGIN_ID) REFERENCES REF_COUNTRY (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FK_DOCSPEC_CUST_DECLAR FOREIGN KEY (CUSTOMS_DECLARATION_ID) REFERENCES REF_CUSTOMS_DECLARATION (ID);
ALTER TABLE DOCSPEC ADD CONSTRAINT FK_DOCSPEC_ORDER_DOCSPEC FOREIGN KEY (ORDER_SPEC_ID) REFERENCES DOCSPEC (ID);
ALTER TABLE DOCSPECMODEL ADD CONSTRAINT FKEY_DOCSPECMODEL_DOCHEADMODEL FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE DOCSPECMODEL ADD CONSTRAINT FKEY_DOCSPECMODEL_MEASURE1 FOREIGN KEY (MEASURE1_ID) REFERENCES MEASURE (ID);
ALTER TABLE DOCSPECMODEL ADD CONSTRAINT FKEY_DOCSPECMODEL_MEASURE2 FOREIGN KEY (MEASURE2_ID) REFERENCES MEASURE (ID);
ALTER TABLE DOCSPECMODEL ADD CONSTRAINT FK_DOCSPECMODEL_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE DOCSPECMODEL ADD CONSTRAINT FK_DOCSPECMODEL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOCSPECMODEL ADD CONSTRAINT FK_DOCSPECMODEL_CONTR_MOLDEST FOREIGN KEY (MOLDEST) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCSPECMODEL ADD CONSTRAINT FK_DOCSPECMODEL_CONTR_MOLSRC FOREIGN KEY (MOLSRC) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCSPECMODEL ADD CONSTRAINT FK_DOCSPECMODEL_CONTR_STOCKDEST FOREIGN KEY (STOCKDEST) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCSPECMODEL ADD CONSTRAINT FK_DOCSPECMODEL_CONTR_STOCKSRC FOREIGN KEY (STOCKSRC) REFERENCES CONTRACTOR (ID);
ALTER TABLE DOCSPECSTATE ADD CONSTRAINT FKEY_DOCSPECSTATE_DOCHEADSTATE FOREIGN KEY (DOCHEADSTATE_ID) REFERENCES DOCHEADSTATE (ID) ON DELETE CASCADE;
ALTER TABLE DOCTYPE_DOCSECTION_LINK ADD CONSTRAINT FKEY_DT_DS_LINK_DOCSECTION FOREIGN KEY (DOCSECTION_ID) REFERENCES DOCSECTION (ID) ON DELETE CASCADE;
ALTER TABLE DOCTYPE_DOCSECTION_LINK ADD CONSTRAINT FKEY_DT_DS_LINK_DOCTYPE FOREIGN KEY (DOCTYPE_ID) REFERENCES TYPEDOC (ID) ON DELETE CASCADE;
ALTER TABLE DOCTYPE_DOCSECTION_LINK ADD CONSTRAINT FK_DT_DOCSEC_LINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOCTYPE_RIGHTS ADD CONSTRAINT FK_DOCTYPE_RIGHTS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOCTYPE_RIGHTS ADD CONSTRAINT FK_DOCTYPE_RIGHTS_GROUP FOREIGN KEY (GROUP_ID) REFERENCES SEC_GROUPS (ID) ON DELETE CASCADE;
ALTER TABLE DOCTYPE_RIGHTS ADD CONSTRAINT FK_DOCTYPE_RIGHTS_TYPEDOC FOREIGN KEY (REC_ID) REFERENCES TYPEDOC (ID) ON DELETE CASCADE;
ALTER TABLE DOCUMENT_LINK ADD CONSTRAINT FKEY_DOCUMENT_LINK_DOCHEAD1 FOREIGN KEY (DOC_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE DOCUMENT_LINK ADD CONSTRAINT FKEY_DOCUMENT_LINK_DOCHEAD2 FOREIGN KEY (BASEDOC_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE DOCUMENT_LINK ADD CONSTRAINT FK_DOCUMENT_LINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOC_SPEC_PACKAGE ADD CONSTRAINT FKEY_DSPEC_PACKAGE_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE DOC_SPEC_PACKAGE ADD CONSTRAINT FKEY_D_SPEC_PACKAGE_PACKING FOREIGN KEY (PACKAGE_ID) REFERENCES PACKING (ID);
ALTER TABLE DOC_SPEC_PACKAGE ADD CONSTRAINT FK_DOC_SPEC_PACKAGE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE DOC_SPEC_SERIAL_NUM ADD CONSTRAINT FKEY_DS_SERIAL_NUM_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE DOC_SPEC_SERIAL_NUM ADD CONSTRAINT FK_DOC_SPEC_SERIAL_NUM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ECONOMICOPER ADD CONSTRAINT FKEY_ECONOMICOPER_TO_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE ECONOMICOPER ADD CONSTRAINT FK_ECONOMICOPER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ECONOMICOPER ADD CONSTRAINT FK_ECONOMICOPER_DOC FOREIGN KEY (DOC_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE ECONOMICOPER ADD CONSTRAINT FK_ECONOMICOPER_FROM FOREIGN KEY (FROM_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ECONOMICOPER ADD CONSTRAINT FK_ECONOMICOPER_TO FOREIGN KEY (TO_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ECONOMICOPER ADD CONSTRAINT FK_ECONOMICOPER_TO_SPECMARK FOREIGN KEY (SPECMARK) REFERENCES SPECMARK (UPCODE);
ALTER TABLE ECONOMICOPERMODEL ADD CONSTRAINT FKEY_EOMODEL_TO_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE ECONOMICOPERMODEL ADD CONSTRAINT FK_ECONOMICOPERMODEL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ECONOMICOPERMODEL ADD CONSTRAINT FK_ECONOMICOPERMODEL_FROM FOREIGN KEY (FROM_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ECONOMICOPERMODEL ADD CONSTRAINT FK_ECONOMICOPERMODEL_SPECMARK FOREIGN KEY (SPECMARK) REFERENCES SPECMARK (UPCODE);
ALTER TABLE ECONOMICOPERMODEL ADD CONSTRAINT FK_ECONOMICOPERMODEL_TO FOREIGN KEY (TO_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ECONOMICOPERMODEL ADD CONSTRAINT FK_EOMODEL_DESTFOLDER FOREIGN KEY (MODELDESTFOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ACCBATCH FOREIGN KEY (ACCBATCHDB_ID) REFERENCES ACCBATCH (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ANL1 FOREIGN KEY (ANLDB1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ANL10 FOREIGN KEY (ANLKT5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ANL2 FOREIGN KEY (ANLDB2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ANL3 FOREIGN KEY (ANLDB3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ANL4 FOREIGN KEY (ANLDB4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ANL5 FOREIGN KEY (ANLDB5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ANL6 FOREIGN KEY (ANLKT1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ANL7 FOREIGN KEY (ANLKT2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ANL8 FOREIGN KEY (ANLKT3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ANL9 FOREIGN KEY (ANLKT4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_BATCHHIST1 FOREIGN KEY (ACCBATCHHISTORYDB_ID) REFERENCES ACCBATCHHISTORY (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_BATCHHIST2 FOREIGN KEY (ACCBATCHHISTORYKT_ID) REFERENCES ACCBATCHHISTORY (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ECONOPER FOREIGN KEY (ECONOMICOPER_ID) REFERENCES ECONOMICOPER (ID) ON DELETE CASCADE;
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ESFEATURE1 FOREIGN KEY (FEATURE1_ID) REFERENCES ECONSPEC_FEATURE (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ESFEATURE2 FOREIGN KEY (FEATURE2_ID) REFERENCES ECONSPEC_FEATURE (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ESFEATURE3 FOREIGN KEY (FEATURE3_ID) REFERENCES ECONSPEC_FEATURE (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ESFEATURE4 FOREIGN KEY (FEATURE4_ID) REFERENCES ECONSPEC_FEATURE (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_ESFEATURE5 FOREIGN KEY (FEATURE5_ID) REFERENCES ECONSPEC_FEATURE (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_REMNACCDB FOREIGN KEY (REMNACCDB_ID) REFERENCES REMNACC (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_REMNACCKT FOREIGN KEY (REMNACCKT_ID) REFERENCES REMNACC (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_REMNANLDB FOREIGN KEY (REMNANLDB_ID) REFERENCES REMNANL (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_REMNANLKT FOREIGN KEY (REMNANLKT_ID) REFERENCES REMNANL (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_REMNDB FOREIGN KEY (REMNDB_ID) REFERENCES REMNDBKT (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_REMNKT FOREIGN KEY (REMNKT_ID) REFERENCES REMNDBKT (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_REMNVALDB FOREIGN KEY (REMNVALDB_ID) REFERENCES REMNVAL (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FKEY_ECONOMICSPEC_TO_REMNVALKT FOREIGN KEY (REMNVALKT_ID) REFERENCES REMNVAL (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FK_ECONOMICSPEC_ACCDB FOREIGN KEY (ACCDB_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FK_ECONOMICSPEC_ACCKT FOREIGN KEY (ACCKT_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE ECONOMICSPEC ADD CONSTRAINT FK_ECONOMICSPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TAXGROUP FOREIGN KEY (ENTRYTAXGROUP) REFERENCES TAXGROUP (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ANL1 FOREIGN KEY (ANLDB1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ANL10 FOREIGN KEY (ANLKT5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ANL2 FOREIGN KEY (ANLDB2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ANL3 FOREIGN KEY (ANLDB3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ANL4 FOREIGN KEY (ANLDB4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ANL5 FOREIGN KEY (ANLDB5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ANL6 FOREIGN KEY (ANLKT1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ANL7 FOREIGN KEY (ANLKT2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ANL8 FOREIGN KEY (ANLKT3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ANL9 FOREIGN KEY (ANLKT4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_EOMODEL FOREIGN KEY (ECONOMICOPER_ID) REFERENCES ECONOMICOPERMODEL (ID) ON DELETE CASCADE;
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ESFEATURE1 FOREIGN KEY (FEATURE1_ID) REFERENCES ECONSPEC_FEATURE (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ESFEATURE2 FOREIGN KEY (FEATURE2_ID) REFERENCES ECONSPEC_FEATURE (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ESFEATURE3 FOREIGN KEY (FEATURE3_ID) REFERENCES ECONSPEC_FEATURE (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ESFEATURE4 FOREIGN KEY (FEATURE4_ID) REFERENCES ECONSPEC_FEATURE (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FKEY_ESMODEL_TO_ESFEATURE5 FOREIGN KEY (FEATURE5_ID) REFERENCES ECONSPEC_FEATURE (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FK_ECONOMICSPECMODEL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FK_ECONOMICSPECMODEL_QTYALG FOREIGN KEY (QTYALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FK_ECONOMICSPECMODEL_SUMALG FOREIGN KEY (SUMALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FK_ECONOMICSPECM_ACCDB FOREIGN KEY (ACCDB_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE ECONOMICSPECMODEL ADD CONSTRAINT FK_ECONOMICSPECM_ACCKT FOREIGN KEY (ACCKT_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE ECONSPEC_FEATURE ADD CONSTRAINT FK_ECONSPEC_FEATURE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE EMPLOYEES ADD CONSTRAINT FKEY_EMPLOYEES_TO_PERSON FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID);
ALTER TABLE EMPLOYEES ADD CONSTRAINT FKEY_EMPLOYEES_TO_PERSONNEL FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID);
ALTER TABLE EMPLOYEES ADD CONSTRAINT FK_EMPLOYEES_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID) ON DELETE CASCADE;
ALTER TABLE ENTITY_TRANSFORMER_MAPPING ADD CONSTRAINT FK_ENTITY_TRANSF_MAP_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE EXCH_CONFIG ADD CONSTRAINT FK_EXCH_CONFIG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE EXCH_EXPORT ADD CONSTRAINT FK_EXCH_EXPORT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE EXCH_EXPORT ADD CONSTRAINT FK_EXCH_EXPORT_SITE FOREIGN KEY (SITE_ID) REFERENCES EXCH_SITE (ID) ON DELETE CASCADE;
ALTER TABLE EXCH_IMPORT ADD CONSTRAINT FK_EXCH_IMPORT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE EXCH_IMPORT ADD CONSTRAINT FK_EXCH_IMPORT_SITE FOREIGN KEY (SITE_ID) REFERENCES EXCH_SITE (ID) ON DELETE CASCADE;
ALTER TABLE EXCH_SITE ADD CONSTRAINT FK_EXCH_SITE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE EXCH_TABLE ADD CONSTRAINT FK_EXCH_TABLE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FACTURAHEAD ADD CONSTRAINT FKEY_FACTURAHEAD_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE FACTURAHEAD ADD CONSTRAINT FK_FACTURAHEAD_BANKREQ1 FOREIGN KEY (PARTNERFROM_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE FACTURAHEAD ADD CONSTRAINT FK_FACTURAHEAD_BANKREQ2 FOREIGN KEY (PARTNERTO_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE FACTURAHEAD ADD CONSTRAINT FK_FACTURAHEAD_CONSIGNEE FOREIGN KEY (CONSIGNEE) REFERENCES CONTRACTOR (ID);
ALTER TABLE FACTURAHEAD ADD CONSTRAINT FK_FACTURAHEAD_SHIPPER FOREIGN KEY (SHIPPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE FACTURAHEADMODEL ADD CONSTRAINT FKEY_FACTHEADMODEL_BANKREQ1 FOREIGN KEY (PARTNERFROM_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE FACTURAHEADMODEL ADD CONSTRAINT FKEY_FACTHEADMODEL_BANKREQ2 FOREIGN KEY (PARTNERTO_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE FACTURAHEADMODEL ADD CONSTRAINT FKEY_FACTHEADMODEL_DOCHEADM FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE FACTURAHEADMODEL ADD CONSTRAINT FK_FACTURAHEADM_CONSIGNEE FOREIGN KEY (CONSIGNEE) REFERENCES CONTRACTOR (ID);
ALTER TABLE FACTURAHEADMODEL ADD CONSTRAINT FK_FACTURAHEADM_SHIPPER FOREIGN KEY (SHIPPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE FEATURE ADD CONSTRAINT FK_FEATURE_CLASS FOREIGN KEY (ENTITY_CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE FEATURE ADD CONSTRAINT FK_FEATURE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FEATURELINK ADD CONSTRAINT FKEY_FEATURELINK_TO_FEATURE FOREIGN KEY (FEATURE_ID) REFERENCES FEATURE (ID);
ALTER TABLE FEATURELINK ADD CONSTRAINT FK_FEATURELINK_CLASS FOREIGN KEY (CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE FEATURELINK ADD CONSTRAINT FK_FEATURELINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FEATUREVAL ADD CONSTRAINT FKEY_FEATUREVAL_TO_FEATURE FOREIGN KEY (FEATURE_ID) REFERENCES FEATURE (ID) ON DELETE CASCADE;
ALTER TABLE FEATUREVAL ADD CONSTRAINT FK_FEATUREVAL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FINACCOUNT ADD CONSTRAINT FKEY_FINACCOUNT_CURRENCY FOREIGN KEY (CURRENCY_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE FINACCOUNT ADD CONSTRAINT FKEY_FINACCOUNT_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE FINACCOUNT ADD CONSTRAINT FK_FINACCOUNT_ANL1_CLASS FOREIGN KEY (ANL1_CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE FINACCOUNT ADD CONSTRAINT FK_FINACCOUNT_ANL2_CLASS FOREIGN KEY (ANL2_CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE FINACCOUNT ADD CONSTRAINT FK_FINACCOUNT_ANL3_CLASS FOREIGN KEY (ANL3_CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE FINACCOUNT ADD CONSTRAINT FK_FINACCOUNT_ANL4_CLASS FOREIGN KEY (ANL4_CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE FINACCOUNT ADD CONSTRAINT FK_FINACCOUNT_ANL5_CLASS FOREIGN KEY (ANL5_CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE FINACCOUNT ADD CONSTRAINT FK_FINACCOUNT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FINANL ADD CONSTRAINT FKEY_FINANL_FINACCOUNT FOREIGN KEY (FINACC_ID) REFERENCES FINACCOUNT (ID) ON DELETE CASCADE;
ALTER TABLE FINANL ADD CONSTRAINT FKEY_FINANL_FINANL FOREIGN KEY (PARENT_ID) REFERENCES FINANL (ID);
ALTER TABLE FINANL ADD CONSTRAINT FK_FINANL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FINOPER ADD CONSTRAINT FKEY_FINOPER_CURRENCY FOREIGN KEY (CURCODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE FINOPER ADD CONSTRAINT FKEY_FINOPER_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE FINOPER ADD CONSTRAINT FK_FINOPER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FINOPER ADD CONSTRAINT FK_FINOPER_CURRATEAUTHORITY FOREIGN KEY (CURRATEAUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE FINOPER ADD CONSTRAINT FK_FINOPER_CURRATETYPE FOREIGN KEY (CURRATETYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE FINOPER ADD CONSTRAINT FK_FINOPER_FROM FOREIGN KEY (FROM_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE FINOPER ADD CONSTRAINT FK_FINOPER_RESPONSIBLE FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE FINOPER ADD CONSTRAINT FK_FINOPER_TO FOREIGN KEY (TO_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE FINOPERMODEL ADD CONSTRAINT FKEY_FINOPERMODEL_CURRENCY FOREIGN KEY (CURCODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE FINOPERMODEL ADD CONSTRAINT FKEY_FINOPERMODEL_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE FINOPERMODEL ADD CONSTRAINT FK_FINOPERMODEL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FINOPERMODEL ADD CONSTRAINT FK_FINOPERMODEL_DESTFOLDER FOREIGN KEY (MODELDESTFOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE FINOPERMODEL ADD CONSTRAINT FK_FINOPERMODEL_FROM FOREIGN KEY (FROM_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE FINOPERMODEL ADD CONSTRAINT FK_FINOPERMODEL_RESPONSIBLE FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE FINOPERMODEL ADD CONSTRAINT FK_FINOPERMODEL_TO FOREIGN KEY (TO_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE FINOPERMODEL ADD CONSTRAINT FK_FINOPERM_CURRATEAUTHORITY FOREIGN KEY (CURRATEAUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE FINOPERMODEL ADD CONSTRAINT FK_FINOPERM_CURRATETYPE FOREIGN KEY (CURRATETYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE FINPERIOD ADD CONSTRAINT FK_FINPERIOD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FINSPEC ADD CONSTRAINT FKEY_FINSPEC_FINACC1 FOREIGN KEY (SRCACC_ID) REFERENCES FINACCOUNT (ID);
ALTER TABLE FINSPEC ADD CONSTRAINT FKEY_FINSPEC_FINACC2 FOREIGN KEY (DSTACC_ID) REFERENCES FINACCOUNT (ID);
ALTER TABLE FINSPEC ADD CONSTRAINT FKEY_FINSPEC_FINOPER FOREIGN KEY (FINOPER_ID) REFERENCES FINOPER (ID) ON DELETE CASCADE;
ALTER TABLE FINSPEC ADD CONSTRAINT FKEY_FINSPEC_FINSPEC FOREIGN KEY (PARENT_ID) REFERENCES FINSPEC (ID) ON DELETE CASCADE;
ALTER TABLE FINSPEC ADD CONSTRAINT FKEY_FINSPEC_FINTURNACC1 FOREIGN KEY (SRCTURNACC_ID) REFERENCES FINTURNACC (ID);
ALTER TABLE FINSPEC ADD CONSTRAINT FKEY_FINSPEC_FINTURNACC2 FOREIGN KEY (DSTTURNACC_ID) REFERENCES FINTURNACC (ID);
ALTER TABLE FINSPEC ADD CONSTRAINT FKEY_FINSPEC_FINTURNFEAT1 FOREIGN KEY (SRCTURNFEAT_ID) REFERENCES FINTURNFEAT (ID);
ALTER TABLE FINSPEC ADD CONSTRAINT FKEY_FINSPEC_FINTURNFEAT2 FOREIGN KEY (DSTTURNFEAT_ID) REFERENCES FINTURNFEAT (ID);
ALTER TABLE FINSPEC ADD CONSTRAINT FK_FINSPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FINSPECMODEL ADD CONSTRAINT FKEY_FINSPECMODEL_FINACC1 FOREIGN KEY (SRCACC_ID) REFERENCES FINACCOUNT (ID);
ALTER TABLE FINSPECMODEL ADD CONSTRAINT FKEY_FINSPECMODEL_FINACC2 FOREIGN KEY (DSTACC_ID) REFERENCES FINACCOUNT (ID);
ALTER TABLE FINSPECMODEL ADD CONSTRAINT FKEY_FINSPECMODEL_FINOPER FOREIGN KEY (FINOPER_ID) REFERENCES FINOPERMODEL (ID) ON DELETE CASCADE;
ALTER TABLE FINSPECMODEL ADD CONSTRAINT FKEY_FINSPECMODEL_FINSPEC FOREIGN KEY (PARENT_ID) REFERENCES FINSPECMODEL (ID) ON DELETE CASCADE;
ALTER TABLE FINSPECMODEL ADD CONSTRAINT FK_FINSPECMODEL_ALG FOREIGN KEY (ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE FINSPECMODEL ADD CONSTRAINT FK_FINSPECMODEL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FINSTRUCTURE ADD CONSTRAINT FK_FINSTRUCTURE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FINTURNACC ADD CONSTRAINT FKEY_FINTURNACC_FINACC1 FOREIGN KEY (ACC_ID) REFERENCES FINACCOUNT (ID);
ALTER TABLE FINTURNACC ADD CONSTRAINT FKEY_FINTURNACC_FINPERIOD FOREIGN KEY (PERIOD_ID) REFERENCES FINPERIOD (ID);
ALTER TABLE FINTURNACC ADD CONSTRAINT FK_FINTURNACC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FINTURNACC ADD CONSTRAINT FK_FINTURNACC_CURRENCY FOREIGN KEY (CURCODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE FINTURNFEAT ADD CONSTRAINT FKEY_FINTURNFEAT_FINACC2 FOREIGN KEY (FEAT_ID) REFERENCES FINACCOUNT (ID);
ALTER TABLE FINTURNFEAT ADD CONSTRAINT FKEY_FINTURNFEAT_FINPERIOD FOREIGN KEY (PERIOD_ID) REFERENCES FINPERIOD (ID);
ALTER TABLE FINTURNFEAT ADD CONSTRAINT FKEY_FINTURNFEAT_FINTURNACC FOREIGN KEY (FINTURNACC_ID) REFERENCES FINTURNACC (ID);
ALTER TABLE FINTURNFEAT ADD CONSTRAINT FK_FINTURNFEAT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FINTURNFEAT ADD CONSTRAINT FK_FINTURNFEAT_CURRENCY FOREIGN KEY (CURCODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE FIN_CONFIG ADD CONSTRAINT FK_FIN_CONFIG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FIN_CONFIG ADD CONSTRAINT FK_FIN_CONFIG_CURRENCY1 FOREIGN KEY (BASE_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE FIN_CONFIG ADD CONSTRAINT FK_FIN_CONFIG_CURRENCY2 FOREIGN KEY (NAT_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE FIN_CONFIG ADD CONSTRAINT FK_FIN_CONFIG_CUR_RATE_AUTH FOREIGN KEY (CUR_RATE_AUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE FIN_CONFIG ADD CONSTRAINT FK_FIN_CONFIG_CUR_RATE_TYPE FOREIGN KEY (CUR_RATE_TYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE FOLDER ADD CONSTRAINT FKEY_FOLDER_TO_FOLDER FOREIGN KEY (PARENT_ID) REFERENCES FOLDER (ID);
ALTER TABLE FOLDER ADD CONSTRAINT FK_FOLDER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FOLDER_RIGHTS ADD CONSTRAINT FKEY_FOLDER_RIGHTS_SEC_GROUPS FOREIGN KEY (GROUP_ID) REFERENCES SEC_GROUPS (ID) ON DELETE CASCADE;
ALTER TABLE FOLDER_RIGHTS ADD CONSTRAINT FK_FOLDER_RIGHTS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FORMULA ADD CONSTRAINT FK_FORMULA_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FUEL_DENSITY_HEAD ADD CONSTRAINT FK_FUEL_DENSITY_HEAD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FUEL_DENSITY_HEAD ADD CONSTRAINT FK_FUEL_DENSITY_HEAD_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE FUEL_DENSITY_HEAD ADD CONSTRAINT FK_FUEL_DENSITY_HEAD_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE FUEL_DENSITY_SPEC ADD CONSTRAINT FK_FUEL_DENSITY_SPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE FUEL_DENSITY_SPEC ADD CONSTRAINT FK_FUEL_DENSITY_SPEC_FUEL FOREIGN KEY (FUEL_ID) REFERENCES CATALOG (ID);
ALTER TABLE FUEL_DENSITY_SPEC ADD CONSTRAINT FK_FUEL_DENSITY_SPEC_HEAD FOREIGN KEY (HEAD_ID) REFERENCES FUEL_DENSITY_HEAD (ID) ON DELETE CASCADE;
ALTER TABLE FUEL_DENSITY_SPEC ADD CONSTRAINT FK_FUEL_DENSITY_SPEC_OPERATOR FOREIGN KEY (OPERATOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE FUEL_DENSITY_SPEC ADD CONSTRAINT FK_FUEL_DENSITY_SPEC_TANK FOREIGN KEY (TANK_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE HR_ORDER ADD CONSTRAINT FK_HR_ORDER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE HR_ORDER ADD CONSTRAINT FK_HR_ORDER_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE HR_ORDER_ITEM ADD CONSTRAINT FK_HR_ORDER_ITEM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE HR_ORDER_ITEM ADD CONSTRAINT FK_HR_ORDER_ITEM_ITEM_KIND FOREIGN KEY (ITEM_KIND_ID) REFERENCES HR_ORDER_ITEM_KIND (ID);
ALTER TABLE HR_ORDER_ITEM ADD CONSTRAINT FK_HR_ORDER_ITEM_ORDER FOREIGN KEY (ORDER_ID) REFERENCES HR_ORDER (ID) ON DELETE CASCADE;
ALTER TABLE HR_ORDER_ITEM_KIND ADD CONSTRAINT FK_HR_ORDER_ITEM_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE HR_ORDER_ITEM_KIND_PARAM ADD CONSTRAINT FK_HRORDERITEM_KINDPRM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE HR_ORDER_ITEM_KIND_PARAM ADD CONSTRAINT FK_HR_ORDER_IKIND_PRM_ITEM FOREIGN KEY (ITEM_KIND_ID) REFERENCES HR_ORDER_ITEM_KIND (ID) ON DELETE CASCADE;
ALTER TABLE HR_ORDER_ITEM_PARAM ADD CONSTRAINT FK_HR_ORDER_ITEM_PARAM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE HR_ORDER_ITEM_PARAM ADD CONSTRAINT FK_HR_ORDER_ITEM_PARAM_ITEM FOREIGN KEY (ORDER_ITEM_ID) REFERENCES HR_ORDER_ITEM (ID) ON DELETE CASCADE;
ALTER TABLE HR_ORDER_ITEM_PARAM ADD CONSTRAINT FK_HR_ORDER_ITEM_PARAM_KIND FOREIGN KEY (ITEM_KIND_PARAM_ID) REFERENCES HR_ORDER_ITEM_KIND_PARAM (ID);
ALTER TABLE HR_ORDER_ITEM_ROLLBACK ADD CONSTRAINT FK_HRORDERITEM_RLB_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE HR_ORDER_ITEM_ROLLBACK ADD CONSTRAINT FK_HR_ORDER_ITEM_RBACK_ITEM FOREIGN KEY (ORDER_ITEM_ID) REFERENCES HR_ORDER_ITEM (ID) ON DELETE CASCADE;
ALTER TABLE HR_ORDER_MODEL ADD CONSTRAINT FK_HR_ORDER_MODEL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE HR_ORDER_MODEL ADD CONSTRAINT FK_HR_ORDER_MODEL_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE HR_ORDER_MODEL_ITEM ADD CONSTRAINT FK_HR_ORDER_MODEL_ITEM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE HR_ORDER_MODEL_ITEM ADD CONSTRAINT FK_HR_ORD_MODEL_ITEM_IKIND FOREIGN KEY (ITEM_KIND_ID) REFERENCES HR_ORDER_ITEM_KIND (ID);
ALTER TABLE HR_ORDER_MODEL_ITEM ADD CONSTRAINT FK_HR_ORD_MODEL_ITEM_MODEL FOREIGN KEY (ORDER_MODEL_ID) REFERENCES HR_ORDER_MODEL (ID) ON DELETE CASCADE;
ALTER TABLE HR_ORDER_MODEL_ITEM_PARAM ADD CONSTRAINT FK_HRORDERMITEM_PRM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE HR_ORDER_MODEL_ITEM_PARAM ADD CONSTRAINT FK_HR_ORD_MDL_IPARAM_ITEM FOREIGN KEY (MODEL_ITEM_ID) REFERENCES HR_ORDER_MODEL_ITEM (ID) ON DELETE CASCADE;
ALTER TABLE HR_ORDER_MODEL_ITEM_PARAM ADD CONSTRAINT FK_HR_ORD_MDL_IPARAM_PARAM FOREIGN KEY (ITEM_KIND_PARAM_ID) REFERENCES HR_ORDER_ITEM_KIND_PARAM (ID);
ALTER TABLE INTERNALINVOICESPEC ADD CONSTRAINT FKEY_INTINVOICESPEC_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE INTERNALINVOICESPECMODEL ADD CONSTRAINT FKEY_INTINVSPECMODEL_DOCSPECM FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPECMODEL (ID) ON DELETE CASCADE;
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_ACCGROUP FOREIGN KEY (ACCGROUP_ID) REFERENCES ACC_ACCGROUP (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_ACCKIND FOREIGN KEY (ACCKIND_ID) REFERENCES ACC_ACCKIND (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_INVHEAD FOREIGN KEY (INVHEAD_ID) REFERENCES ACC_INVHEAD (ID) ON DELETE CASCADE;
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL1 FOREIGN KEY (ANLDB1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL10 FOREIGN KEY (ANLKT5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL11 FOREIGN KEY (ANL1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL12 FOREIGN KEY (ANL2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL13 FOREIGN KEY (ANL3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL14 FOREIGN KEY (ANL4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL15 FOREIGN KEY (ANL5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL2 FOREIGN KEY (ANLDB2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL3 FOREIGN KEY (ANLDB3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL4 FOREIGN KEY (ANLDB4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL5 FOREIGN KEY (ANLDB5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL6 FOREIGN KEY (ANLKT1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL7 FOREIGN KEY (ANLKT2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL8 FOREIGN KEY (ANLKT3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_ANL9 FOREIGN KEY (ANLKT4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FKEY_INVENTORY_TO_INVENTORY FOREIGN KEY (PARENT_ID) REFERENCES INVENTORY (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FK_INVENTORY_ACC FOREIGN KEY (ACC_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FK_INVENTORY_ACCDB FOREIGN KEY (ACCDB_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FK_INVENTORY_ACCKT FOREIGN KEY (ACCKT_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FK_INVENTORY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FK_INVENTORY_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FK_INVENTORY_INVLOCATION FOREIGN KEY (INVLOCATION_ID) REFERENCES INVLOCATION (ID);
ALTER TABLE INVENTORY ADD CONSTRAINT FK_INVENTORY_OKOF FOREIGN KEY (OKOF_ID) REFERENCES OKOF (ID);
ALTER TABLE INVENTORYACTHEAD ADD CONSTRAINT FKEY_INVENTORYACTHEAD_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE INVENTORYACTHEAD ADD CONSTRAINT FK_INVENTORYACTHEAD_CHAIRMAN FOREIGN KEY (CHAIRMAN) REFERENCES CONTRACTOR (ID);
ALTER TABLE INVENTORYACTSPEC ADD CONSTRAINT FKEY_INVENTORYACTSPEC_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE INVHISTORY ADD CONSTRAINT FKEY_INVHISTORY_TO_ECONOMICOPER FOREIGN KEY (EO_ID) REFERENCES ECONOMICOPER (ID);
ALTER TABLE INVHISTORY ADD CONSTRAINT FKEY_INVHISTORY_TO_ECONOMICSPEC FOREIGN KEY (ES_ID) REFERENCES ECONOMICSPEC (ID);
ALTER TABLE INVHISTORY ADD CONSTRAINT FKEY_INVHISTORY_TO_INVENTORY FOREIGN KEY (INVENTORY_ID) REFERENCES INVENTORY (ID);
ALTER TABLE INVHISTORY ADD CONSTRAINT FK_INVHISTORY_ACC_AMORTIZATION FOREIGN KEY (AMORTIZATION_ID) REFERENCES ACC_AMORTIZATION (ID);
ALTER TABLE INVHISTORY ADD CONSTRAINT FK_INVHISTORY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE INVLOCATION ADD CONSTRAINT FK_INVLOCATION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE INVMETAL ADD CONSTRAINT FKEY_INVMETAL_INVHEAD FOREIGN KEY (INVHEAD_ID) REFERENCES ACC_INVHEAD (ID) ON DELETE CASCADE;
ALTER TABLE INVMETAL ADD CONSTRAINT FKEY_INVMETAL_TO_METAL FOREIGN KEY (METAL_CODE) REFERENCES METAL (UPCODE);
ALTER TABLE INVMETAL ADD CONSTRAINT FK_INVMETAL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE INVOICEHEAD ADD CONSTRAINT FKEY_INVOICEHEAD_BANKREQ1 FOREIGN KEY (PARTNERFROM_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE INVOICEHEAD ADD CONSTRAINT FKEY_INVOICEHEAD_BANKREQ2 FOREIGN KEY (PARTNERTO_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE INVOICEHEAD ADD CONSTRAINT FKEY_INVOICEHEAD_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE INVOICEHEAD ADD CONSTRAINT FK_INVOICEHEAD_CONSIGNEE FOREIGN KEY (CONSIGNEE) REFERENCES CONTRACTOR (ID);
ALTER TABLE INVOICEHEAD ADD CONSTRAINT FK_INVOICEHEAD_CONSUMER FOREIGN KEY (CONSUMER) REFERENCES CONTRACTOR (ID);
ALTER TABLE INVOICEHEAD ADD CONSTRAINT FK_INVOICEHEAD_RESPONSIBLE FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE INVOICEHEAD ADD CONSTRAINT FK_INVOICEHEAD_SHIPPER FOREIGN KEY (SHIPPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE INVOICEHEADMODEL ADD CONSTRAINT FKEY_INVOICEHEADM_BANKREQ1 FOREIGN KEY (PARTNERFROM_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE INVOICEHEADMODEL ADD CONSTRAINT FKEY_INVOICEHEADM_BANKREQ2 FOREIGN KEY (PARTNERTO_BANKREQ) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE INVOICEHEADMODEL ADD CONSTRAINT FKEY_INVOICEHEADM_DOCHEAD FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE INVOICEHEADMODEL ADD CONSTRAINT FK_INVOICEHEADM_CONSIGNEE FOREIGN KEY (CONSIGNEE) REFERENCES CONTRACTOR (ID);
ALTER TABLE INVOICEHEADMODEL ADD CONSTRAINT FK_INVOICEHEADM_CONSUMER FOREIGN KEY (CONSUMER) REFERENCES CONTRACTOR (ID);
ALTER TABLE INVOICEHEADMODEL ADD CONSTRAINT FK_INVOICEHEADM_RESPONSIBLE FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE INVOICEHEADMODEL ADD CONSTRAINT FK_INVOICEHEADM_SHIPPER FOREIGN KEY (SHIPPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE INVOICESPEC ADD CONSTRAINT FKEY_INVOICESPEC_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE INVOICESPECMODEL ADD CONSTRAINT FKEY_INVOICESPECM_DOCSPECM FOREIGN KEY (DOCSPECMODEL_ID) REFERENCES DOCSPECMODEL (ID) ON DELETE CASCADE;
ALTER TABLE JBPM_ACTION ADD CONSTRAINT FK_ACTION_ACTNDEL FOREIGN KEY (ACTIONDELEGATION_) REFERENCES JBPM_DELEGATION (ID_);
ALTER TABLE JBPM_ACTION ADD CONSTRAINT FK_ACTION_EVENT FOREIGN KEY (EVENT_) REFERENCES JBPM_EVENT (ID_);
ALTER TABLE JBPM_ACTION ADD CONSTRAINT FK_ACTION_EXPTHDL FOREIGN KEY (EXCEPTIONHANDLER_) REFERENCES JBPM_EXCEPTIONHANDLER (ID_);
ALTER TABLE JBPM_ACTION ADD CONSTRAINT FK_ACTION_PROCDEF FOREIGN KEY (PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_ACTION ADD CONSTRAINT FK_ACTION_REFACT FOREIGN KEY (REFERENCEDACTION_) REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_ACTION ADD CONSTRAINT FK_CRTETIMERACT_TA FOREIGN KEY (TIMERACTION_) REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_BYTEARRAY ADD CONSTRAINT FK_BYTEARR_FILDEF FOREIGN KEY (FILEDEFINITION_) REFERENCES JBPM_MODULEDEFINITION (ID_);
ALTER TABLE JBPM_BYTEBLOCK ADD CONSTRAINT FK_BYTEBLOCK_FILE FOREIGN KEY (PROCESSFILE_) REFERENCES JBPM_BYTEARRAY (ID_);
ALTER TABLE JBPM_COMMENT ADD CONSTRAINT FK_COMMENT_TOKEN FOREIGN KEY (TOKEN_) REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_COMMENT ADD CONSTRAINT FK_COMMENT_TSK FOREIGN KEY (TASKINSTANCE_) REFERENCES JBPM_TASKINSTANCE (ID_);
ALTER TABLE JBPM_DECISIONCONDITIONS ADD CONSTRAINT FK_DECCOND_DEC FOREIGN KEY (DECISION_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_DELEGATION ADD CONSTRAINT FK_DELEGATION_PRCD FOREIGN KEY (PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_EVENT ADD CONSTRAINT FK_EVENT_NODE FOREIGN KEY (NODE_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_EVENT ADD CONSTRAINT FK_EVENT_PROCDEF FOREIGN KEY (PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_EVENT ADD CONSTRAINT FK_EVENT_TASK FOREIGN KEY (TASK_) REFERENCES JBPM_TASK (ID_);
ALTER TABLE JBPM_EVENT ADD CONSTRAINT FK_EVENT_TRANS FOREIGN KEY (TRANSITION_) REFERENCES JBPM_TRANSITION (ID_);
ALTER TABLE JBPM_JOB ADD CONSTRAINT FK_JOB_ACTION FOREIGN KEY (ACTION_) REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_JOB ADD CONSTRAINT FK_JOB_NODE FOREIGN KEY (NODE_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_JOB ADD CONSTRAINT FK_JOB_PRINST FOREIGN KEY (PROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_JOB ADD CONSTRAINT FK_JOB_TOKEN FOREIGN KEY (TOKEN_) REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_JOB ADD CONSTRAINT FK_JOB_TSKINST FOREIGN KEY (TASKINSTANCE_) REFERENCES JBPM_TASKINSTANCE (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_ACTION FOREIGN KEY (ACTION_) REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_CHILDTOKEN FOREIGN KEY (CHILD_) REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_DESTNODE FOREIGN KEY (DESTINATIONNODE_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_NEWBYTES FOREIGN KEY (NEWBYTEARRAY_) REFERENCES JBPM_BYTEARRAY (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_NODE FOREIGN KEY (NODE_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_OLDBYTES FOREIGN KEY (OLDBYTEARRAY_) REFERENCES JBPM_BYTEARRAY (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_PARENT FOREIGN KEY (PARENT_) REFERENCES JBPM_LOG (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_SOURCENODE FOREIGN KEY (SOURCENODE_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_SWIMINST FOREIGN KEY (SWIMLANEINSTANCE_) REFERENCES JBPM_SWIMLANEINSTANCE (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_TASKINST FOREIGN KEY (TASKINSTANCE_) REFERENCES JBPM_TASKINSTANCE (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_TOKEN FOREIGN KEY (TOKEN_) REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_TRANSITION FOREIGN KEY (TRANSITION_) REFERENCES JBPM_TRANSITION (ID_);
ALTER TABLE JBPM_LOG ADD CONSTRAINT FK_LOG_VARINST FOREIGN KEY (VARIABLEINSTANCE_) REFERENCES JBPM_VARIABLEINSTANCE (ID_);
ALTER TABLE JBPM_MODULEDEFINITION ADD CONSTRAINT FK_MODDEF_PROCDEF FOREIGN KEY (PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_MODULEDEFINITION ADD CONSTRAINT FK_TSKDEF_START FOREIGN KEY (STARTTASK_) REFERENCES JBPM_TASK (ID_);
ALTER TABLE JBPM_MODULEINSTANCE ADD CONSTRAINT FK_MODINST_PRCINST FOREIGN KEY (PROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_MODULEINSTANCE ADD CONSTRAINT FK_TASKMGTINST_TMD FOREIGN KEY (TASKMGMTDEFINITION_) REFERENCES JBPM_MODULEDEFINITION (ID_);
ALTER TABLE JBPM_NODE ADD CONSTRAINT FK_DECISION_DELEG FOREIGN KEY (DECISIONDELEGATION) REFERENCES JBPM_DELEGATION (ID_);
ALTER TABLE JBPM_NODE ADD CONSTRAINT FK_NODE_ACTION FOREIGN KEY (ACTION_) REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_NODE ADD CONSTRAINT FK_NODE_PROCDEF FOREIGN KEY (PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_NODE ADD CONSTRAINT FK_NODE_SCRIPT FOREIGN KEY (SCRIPT_) REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_NODE ADD CONSTRAINT FK_NODE_SUPERSTATE FOREIGN KEY (SUPERSTATE_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_NODE ADD CONSTRAINT FK_PROCST_SBPRCDEF FOREIGN KEY (SUBPROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_POOLEDACTOR ADD CONSTRAINT FK_POOLEDACTOR_SLI FOREIGN KEY (SWIMLANEINSTANCE_) REFERENCES JBPM_SWIMLANEINSTANCE (ID_);
ALTER TABLE JBPM_PROCESSDEFINITION ADD CONSTRAINT FK_PROCDEF_STRTSTA FOREIGN KEY (STARTSTATE_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_PROCESSINSTANCE ADD CONSTRAINT FK_PROCIN_PROCDEF FOREIGN KEY (PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_PROCESSINSTANCE ADD CONSTRAINT FK_PROCIN_ROOTTKN FOREIGN KEY (ROOTTOKEN_) REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_PROCESSINSTANCE ADD CONSTRAINT FK_PROCIN_SPROCTKN FOREIGN KEY (SUPERPROCESSTOKEN_) REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_RUNTIMEACTION ADD CONSTRAINT FK_RTACTN_ACTION FOREIGN KEY (ACTION_) REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_RUNTIMEACTION ADD CONSTRAINT FK_RTACTN_PROCINST FOREIGN KEY (PROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_SWIMLANE ADD CONSTRAINT FK_SWL_ASSDEL FOREIGN KEY (ASSIGNMENTDELEGATION_) REFERENCES JBPM_DELEGATION (ID_);
ALTER TABLE JBPM_SWIMLANE ADD CONSTRAINT FK_SWL_TSKMGMTDEF FOREIGN KEY (TASKMGMTDEFINITION_) REFERENCES JBPM_MODULEDEFINITION (ID_);
ALTER TABLE JBPM_SWIMLANEINSTANCE ADD CONSTRAINT FK_SWIMLANEINST_SL FOREIGN KEY (SWIMLANE_) REFERENCES JBPM_SWIMLANE (ID_);
ALTER TABLE JBPM_SWIMLANEINSTANCE ADD CONSTRAINT FK_SWIMLANEINST_TM FOREIGN KEY (TASKMGMTINSTANCE_) REFERENCES JBPM_MODULEINSTANCE (ID_);
ALTER TABLE JBPM_TASK ADD CONSTRAINT FK_TASK_ASSDEL FOREIGN KEY (ASSIGNMENTDELEGATION_) REFERENCES JBPM_DELEGATION (ID_);
ALTER TABLE JBPM_TASK ADD CONSTRAINT FK_TASK_PROCDEF FOREIGN KEY (PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_TASK ADD CONSTRAINT FK_TASK_STARTST FOREIGN KEY (STARTSTATE_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_TASK ADD CONSTRAINT FK_TASK_SWIMLANE FOREIGN KEY (SWIMLANE_) REFERENCES JBPM_SWIMLANE (ID_);
ALTER TABLE JBPM_TASK ADD CONSTRAINT FK_TASK_TASKMGTDEF FOREIGN KEY (TASKMGMTDEFINITION_) REFERENCES JBPM_MODULEDEFINITION (ID_);
ALTER TABLE JBPM_TASK ADD CONSTRAINT FK_TASK_TASKNODE FOREIGN KEY (TASKNODE_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_TASK ADD CONSTRAINT FK_TSK_TSKCTRL FOREIGN KEY (TASKCONTROLLER_) REFERENCES JBPM_TASKCONTROLLER (ID_);
ALTER TABLE JBPM_TASKACTORPOOL ADD CONSTRAINT FK_TASKACTPL_TSKI FOREIGN KEY (TASKINSTANCE_) REFERENCES JBPM_TASKINSTANCE (ID_);
ALTER TABLE JBPM_TASKACTORPOOL ADD CONSTRAINT FK_TSKACTPOL_PLACT FOREIGN KEY (POOLEDACTOR_) REFERENCES JBPM_POOLEDACTOR (ID_);
ALTER TABLE JBPM_TASKCONTROLLER ADD CONSTRAINT FK_TSKCTRL_DELEG FOREIGN KEY (TASKCONTROLLERDELEGATION_) REFERENCES JBPM_DELEGATION (ID_);
ALTER TABLE JBPM_TASKINSTANCE ADD CONSTRAINT FK_TASKINST_SLINST FOREIGN KEY (SWIMLANINSTANCE_) REFERENCES JBPM_SWIMLANEINSTANCE (ID_);
ALTER TABLE JBPM_TASKINSTANCE ADD CONSTRAINT FK_TASKINST_TASK FOREIGN KEY (TASK_) REFERENCES JBPM_TASK (ID_);
ALTER TABLE JBPM_TASKINSTANCE ADD CONSTRAINT FK_TASKINST_TMINST FOREIGN KEY (TASKMGMTINSTANCE_) REFERENCES JBPM_MODULEINSTANCE (ID_);
ALTER TABLE JBPM_TASKINSTANCE ADD CONSTRAINT FK_TASKINST_TOKEN FOREIGN KEY (TOKEN_) REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_TASKINSTANCE ADD CONSTRAINT FK_TSKINS_PRCINS FOREIGN KEY (PROCINST_) REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_TOKEN ADD CONSTRAINT FK_TOKEN_NODE FOREIGN KEY (NODE_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_TOKEN ADD CONSTRAINT FK_TOKEN_PARENT FOREIGN KEY (PARENT_) REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_TOKEN ADD CONSTRAINT FK_TOKEN_PROCINST FOREIGN KEY (PROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_TOKEN ADD CONSTRAINT FK_TOKEN_SUBPI FOREIGN KEY (SUBPROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_TOKENVARIABLEMAP ADD CONSTRAINT FK_TKVARMAP_CTXT FOREIGN KEY (CONTEXTINSTANCE_) REFERENCES JBPM_MODULEINSTANCE (ID_);
ALTER TABLE JBPM_TOKENVARIABLEMAP ADD CONSTRAINT FK_TKVARMAP_TOKEN FOREIGN KEY (TOKEN_) REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_TRANSITION ADD CONSTRAINT FK_TRANSITION_FROM FOREIGN KEY (FROM_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_TRANSITION ADD CONSTRAINT FK_TRANSITION_TO FOREIGN KEY (TO_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_TRANSITION ADD CONSTRAINT FK_TRANS_PROCDEF FOREIGN KEY (PROCESSDEFINITION_) REFERENCES JBPM_PROCESSDEFINITION (ID_);
ALTER TABLE JBPM_VARIABLEACCESS ADD CONSTRAINT FK_VARACC_PROCST FOREIGN KEY (PROCESSSTATE_) REFERENCES JBPM_NODE (ID_);
ALTER TABLE JBPM_VARIABLEACCESS ADD CONSTRAINT FK_VARACC_SCRIPT FOREIGN KEY (SCRIPT_) REFERENCES JBPM_ACTION (ID_);
ALTER TABLE JBPM_VARIABLEACCESS ADD CONSTRAINT FK_VARACC_TSKCTRL FOREIGN KEY (TASKCONTROLLER_) REFERENCES JBPM_TASKCONTROLLER (ID_);
ALTER TABLE JBPM_VARIABLEINSTANCE ADD CONSTRAINT FK_BYTEINST_ARRAY FOREIGN KEY (BYTEARRAYVALUE_) REFERENCES JBPM_BYTEARRAY (ID_);
ALTER TABLE JBPM_VARIABLEINSTANCE ADD CONSTRAINT FK_VARINST_PRCINST FOREIGN KEY (PROCESSINSTANCE_) REFERENCES JBPM_PROCESSINSTANCE (ID_);
ALTER TABLE JBPM_VARIABLEINSTANCE ADD CONSTRAINT FK_VARINST_TK FOREIGN KEY (TOKEN_) REFERENCES JBPM_TOKEN (ID_);
ALTER TABLE JBPM_VARIABLEINSTANCE ADD CONSTRAINT FK_VARINST_TKVARMP FOREIGN KEY (TOKENVARIABLEMAP_) REFERENCES JBPM_TOKENVARIABLEMAP (ID_);
ALTER TABLE JBPM_VARIABLEINSTANCE ADD CONSTRAINT FK_VAR_TSKINST FOREIGN KEY (TASKINSTANCE_) REFERENCES JBPM_TASKINSTANCE (ID_);
ALTER TABLE JG_CREDENTIAL ADD CONSTRAINT FK_CREDENTIAL_USER_ID FOREIGN KEY (USER_ID) REFERENCES JG_USER (ID);
ALTER TABLE JG_PERMISSION ADD CONSTRAINT FK_PERMISSION_DOMAIN FOREIGN KEY (DOMAIN_ID) REFERENCES JG_DOMAIN (ID);
ALTER TABLE JG_PRINCIPAL_DOMAIN ADD CONSTRAINT FK_DOMAIN_PRINCIPAL FOREIGN KEY (PRINCIPAL_ID) REFERENCES JG_APP_PRINCIPAL (ID);
ALTER TABLE JG_PRINCIPAL_DOMAIN ADD CONSTRAINT FK_PRINCIPAL_DOMAIN FOREIGN KEY (DOMAIN_ID) REFERENCES JG_DOMAIN (ID);
ALTER TABLE JG_PRINCIPAL_HIERARCHY ADD CONSTRAINT FK_PRINCIPAL_HIERARCHY FOREIGN KEY (PRINCIPAL_ASC_ID) REFERENCES JG_APP_PRINCIPAL (ID);
ALTER TABLE JG_PRINCIPAL_HIERARCHY ADD CONSTRAINT FK_PRINCIPAL_HIERARCHY2 FOREIGN KEY (PRINCIPAL_DESC_ID) REFERENCES JG_APP_PRINCIPAL (ID);
ALTER TABLE JG_PRINCIPAL_PERMISSION ADD CONSTRAINT FK_PERMISSION_PRINCIPAL FOREIGN KEY (PRINCIPAL_ID) REFERENCES JG_APP_PRINCIPAL (ID);
ALTER TABLE JG_PRINCIPAL_PERMISSION ADD CONSTRAINT FK_PRINCIPAL_PERMISSION FOREIGN KEY (PERMISSION_ID) REFERENCES JG_PERMISSION (ID);
ALTER TABLE JG_ST_CREDENTIAL ADD CONSTRAINT FK_ST_USER_CREDENTIAL FOREIGN KEY (ST_USER_ID) REFERENCES JG_ST_USER (ID);
ALTER TABLE JG_ST_PRINCIPAL ADD CONSTRAINT FK_ST_USER_PRINCIPAL FOREIGN KEY (ST_USER_ID) REFERENCES JG_ST_USER (ID);
ALTER TABLE JG_USER_PRINCIPAL ADD CONSTRAINT FK_PRINCIPAL_USER_PRINCIPAL FOREIGN KEY (USER_ID) REFERENCES JG_USER (ID);
ALTER TABLE JG_USER_PRINCIPAL ADD CONSTRAINT FK_USER_USER_PRINCIPAL FOREIGN KEY (PRINCIPAL_ID) REFERENCES JG_PRINCIPAL (ID);
ALTER TABLE LINKSTAGE ADD CONSTRAINT FKEY_LINKSTAGE_DPSSTAGE1 FOREIGN KEY (PREVSTAGE_ID) REFERENCES DOCPROCESSSTAGE (ID) ON DELETE CASCADE;
ALTER TABLE LINKSTAGE ADD CONSTRAINT FKEY_LINKSTAGE_DPSSTAGE2 FOREIGN KEY (NEXTSTAGE_ID) REFERENCES DOCPROCESSSTAGE (ID) ON DELETE CASCADE;
ALTER TABLE LINKSTAGE ADD CONSTRAINT FK_LINKSTAGE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE LS_CONFIG ADD CONSTRAINT FK_LS_CONFIG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE LS_CONFIG ADD CONSTRAINT FK_LS_CONFIG_DEFAULT_FOLDER FOREIGN KEY (DEFAULT_FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_CRA FOREIGN KEY (CURRATEAUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_CRT FOREIGN KEY (CURRATETYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_CURCODE FOREIGN KEY (CURCODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_DATERELITEM FOREIGN KEY (DATERELITEM_ID) REFERENCES LS_ITEM (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_FROM FOREIGN KEY (FROM_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_ITEMKIND FOREIGN KEY (ITEMKIND_ID) REFERENCES LS_ITEMKIND (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_PRICELISTHEAD FOREIGN KEY (PRICELISTHEAD_ID) REFERENCES PRICELISTHEAD (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_PRICETYPE FOREIGN KEY (PRICETYPE_ID) REFERENCES PRICETYPE (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_RESOURCEFROM FOREIGN KEY (RESOURCEFROM_ID) REFERENCES PMC_RESOURCE (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_RESOURCETO FOREIGN KEY (RESOURCETO_ID) REFERENCES PMC_RESOURCE (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_SCHEDULE FOREIGN KEY (SCHEDULE_ID) REFERENCES LS_SCHEDULE (ID) ON DELETE CASCADE;
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_SUMRELITEM FOREIGN KEY (SUMRELITEM_ID) REFERENCES LS_ITEM (ID);
ALTER TABLE LS_ITEM ADD CONSTRAINT FK_LS_ITEM_TO FOREIGN KEY (TO_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE LS_ITEMKIND ADD CONSTRAINT FK_LS_ITEMKIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE LS_ITEMSPEC ADD CONSTRAINT FK_LS_ITEMSPEC_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE LS_ITEMSPEC ADD CONSTRAINT FK_LS_ITEMSPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE LS_ITEMSPEC ADD CONSTRAINT FK_LS_ITEMSPEC_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID);
ALTER TABLE LS_ITEMSPEC ADD CONSTRAINT FK_LS_ITEMSPEC_ITEM FOREIGN KEY (ITEM_ID) REFERENCES LS_ITEM (ID) ON DELETE CASCADE;
ALTER TABLE LS_ITEMSPEC ADD CONSTRAINT FK_LS_ITEMSPEC_MEASURE1 FOREIGN KEY (MEASURE1_ID) REFERENCES MEASURE (ID);
ALTER TABLE LS_ITEMSPEC ADD CONSTRAINT FK_LS_ITEMSPEC_MEASURE2 FOREIGN KEY (MEASURE2_ID) REFERENCES MEASURE (ID);
ALTER TABLE LS_ITEMSPECALT ADD CONSTRAINT FK_LS_ITEMSPECALT_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE LS_ITEMSPECALT ADD CONSTRAINT FK_LS_ITEMSPECALT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE LS_ITEMSPECALT ADD CONSTRAINT FK_LS_ITEMSPECALT_ITEMSPEC FOREIGN KEY (ITEMSPEC_ID) REFERENCES LS_ITEMSPEC (ID) ON DELETE CASCADE;
ALTER TABLE LS_ITEMSPECTAX ADD CONSTRAINT FK_LS_ITEMSPECTAX_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE LS_ITEMSPECTAX ADD CONSTRAINT FK_LS_ITEMSPECTAX_ITEMSPEC FOREIGN KEY (ITEMSPEC_ID) REFERENCES LS_ITEMSPEC (ID) ON DELETE CASCADE;
ALTER TABLE LS_ITEMSPECTAX ADD CONSTRAINT FK_LS_ITEMSPECTAX_TAX FOREIGN KEY (TAX_ID) REFERENCES TAX (ID);
ALTER TABLE LS_SCHEDULE ADD CONSTRAINT FK_LS_SCHEDULE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE LS_SCHEDULE ADD CONSTRAINT FK_LS_SCHEDULE_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE LS_SCHEDULE_DOCHEAD ADD CONSTRAINT FK_LS_SCHEDULE_DOCHEAD_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE LS_SCHEDULE_DOCHEAD ADD CONSTRAINT FK_LS_SCHEDULE_DOCHEAD_SCHEDULE FOREIGN KEY (LS_SCHEDULE_ID) REFERENCES LS_SCHEDULE (ID) ON DELETE CASCADE;
ALTER TABLE LS_SCHEDULE_DOCHEAD ADD CONSTRAINT FK_LS_SCHEDULE_DOCHEAD_SYSCLT FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MBPM_RESOURCE ADD CONSTRAINT FK_MBPM_RESOURCE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MBPM_RESOURCE ADD CONSTRAINT FK_MBPM_RESOURCE_USER_ID FOREIGN KEY (USER_ID) REFERENCES SEC_USERS (ID);
ALTER TABLE MBPM_RESOURCE_GROUP_LINK ADD CONSTRAINT FK_MBPM_RESOURCE_LINK_GROUP FOREIGN KEY (GROUP_ID) REFERENCES SEC_GROUPS (ID) ON DELETE CASCADE;
ALTER TABLE MBPM_RESOURCE_GROUP_LINK ADD CONSTRAINT FK_MBPM_RESOURCE_LINK_RESOURCE FOREIGN KEY (RESOURCE_ID) REFERENCES MBPM_RESOURCE (ID) ON DELETE CASCADE;
ALTER TABLE MEASURE ADD CONSTRAINT FK_MEASURE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE METAL ADD CONSTRAINT FK_METAL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_BOM ADD CONSTRAINT FK_FOLDER_MF_BOM FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE MF_BOM ADD CONSTRAINT FK_MF_BOM_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE MF_BOM ADD CONSTRAINT FK_MF_BOM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_BOM ADD CONSTRAINT FK_MF_CELL_MF_BOM FOREIGN KEY (CELL_ID) REFERENCES MF_CELL (ID);
ALTER TABLE MF_BOM ADD CONSTRAINT FK_STD_COST_DTL_ID_MF_BOM FOREIGN KEY (STD_COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID);
ALTER TABLE MF_BOM ADD CONSTRAINT FK_UM_MF_JOB_RUN_TIME_UM FOREIGN KEY (RUN_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_BOM ADD CONSTRAINT FK_UM_MF_JOB_SETUP_TIME_UM FOREIGN KEY (SETUP_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_BOM_LABOR ADD CONSTRAINT FK_MF_BOM_LBR_BOM_RES FOREIGN KEY (BOM_ROUTE_RESOURCE_ID) REFERENCES MF_BOM_ROUTE_RESOURCE (ID) ON DELETE CASCADE;
ALTER TABLE MF_BOM_LABOR ADD CONSTRAINT FK_MF_LBR_CLASS_MF_BOM_LBR FOREIGN KEY (LABOR_CLASS_ID) REFERENCES MF_LABOR_CLASS (ID);
ALTER TABLE MF_BOM_LABOR ADD CONSTRAINT FK_UM_MF_BOM_LBR_R_T_LBR_UM FOREIGN KEY (RUN_TIME_LBR_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_BOM_MACHINE ADD CONSTRAINT FK_CURRENCY_MF_BOM_MCH_OH_RATE FOREIGN KEY (MCH_OH_RATE_CUR_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_BOM_MACHINE ADD CONSTRAINT FK_CURRENCY_MF_BOM_MCH_RATE FOREIGN KEY (MCH_RATE_CUR_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_BOM_MACHINE ADD CONSTRAINT FK_MCH_COST_CAT_ID_MF_BOM_MCH FOREIGN KEY (MCH_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_BOM_MACHINE ADD CONSTRAINT FK_MCH_OH_C_C_ID_MF_BOM_MCH FOREIGN KEY (MCH_OH_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_BOM_MACHINE ADD CONSTRAINT FK_MF_BOM_RT_RES_MF_BOM_MCH FOREIGN KEY (BOM_ROUTE_RESOURCE_ID) REFERENCES MF_BOM_ROUTE_RESOURCE (ID) ON DELETE CASCADE;
ALTER TABLE MF_BOM_MACHINE ADD CONSTRAINT FK_UM_MF_BOM_MCH_R_T_MCH_UM FOREIGN KEY (RUN_TIME_MCH_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_BOM_MATERIAL ADD CONSTRAINT FK_CATALOG_MF_BOM_MTL FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE MF_BOM_MATERIAL ADD CONSTRAINT FK_CURRENCY_MF_BOM_MTL_OH_RATE FOREIGN KEY (CURRENCY_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_BOM_MATERIAL ADD CONSTRAINT FK_MF_BOM_RT_RES_MF_BOM_MTL FOREIGN KEY (BOM_ROUTE_RESOURCE_ID) REFERENCES MF_BOM_ROUTE_RESOURCE (ID) ON DELETE CASCADE;
ALTER TABLE MF_BOM_MATERIAL ADD CONSTRAINT FK_MTL_COST_CAT_ID_MF_BOM_MTL FOREIGN KEY (MTL_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_BOM_MATERIAL ADD CONSTRAINT FK_MTL_OH_C_C_ID_MF_BOM_MTL FOREIGN KEY (MTL_OH_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_BOM_MATERIAL ADD CONSTRAINT FK_UM_MF_BOM_MTL_MTL_QTY FOREIGN KEY (MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE MF_BOM_MATERIAL ADD CONSTRAINT FK_WH_ZONE_MF_BOM_MTL FOREIGN KEY (BACKFLUSH_ZONE_ID) REFERENCES WH_ZONE (ID);
ALTER TABLE MF_BOM_ROUTE ADD CONSTRAINT FK_MF_BOM_MF_BOM_RT FOREIGN KEY (BOM_ID) REFERENCES MF_BOM (ID) ON DELETE CASCADE;
ALTER TABLE MF_BOM_ROUTE ADD CONSTRAINT FK_MF_BOM_ROUTE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_BOM_ROUTE ADD CONSTRAINT FK_MF_BOM_ROUTE_WC FOREIGN KEY (WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_BOM_ROUTE ADD CONSTRAINT FK_STD_COST_DTL_ID_MF_BOM_RT FOREIGN KEY (STD_COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID);
ALTER TABLE MF_BOM_ROUTE ADD CONSTRAINT FK_UM_MF_BOM_RT_MOVE_TIME_UM FOREIGN KEY (MOVE_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_BOM_ROUTE ADD CONSTRAINT FK_UM_MF_BOM_RT_QUEUE_TIME_UM FOREIGN KEY (QUEUE_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_BOM_ROUTE ADD CONSTRAINT FK_UM_MF_BOM_RT_RUN_TIME_UM FOREIGN KEY (RUN_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_BOM_ROUTE ADD CONSTRAINT FK_UM_MF_BOM_RT_SCHED_TIME_UM FOREIGN KEY (SCHED_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_BOM_ROUTE ADD CONSTRAINT FK_UM_MF_BOM_RT_SCH_OFF_TIME FOREIGN KEY (SCHED_OFFSET_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_BOM_ROUTE ADD CONSTRAINT FK_UM_MF_BOM_RT_SETUP_TIME_UM FOREIGN KEY (SETUP_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_BOM_ROUTE_RESOURCE ADD CONSTRAINT FK_MFBOMROUTE_RSC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_BOM_ROUTE_RESOURCE ADD CONSTRAINT FK_MF_BOM_RT_MF_BOM_RT_RES FOREIGN KEY (BOM_OPER_ID) REFERENCES MF_BOM_ROUTE (ID) ON DELETE CASCADE;
ALTER TABLE MF_BOM_ROUTE_RESOURCE ADD CONSTRAINT FK_MF_RES_GRP_MF_BOM_RT_RES FOREIGN KEY (RESOURCE_GROUP_ID) REFERENCES MF_RESOURCE_GROUP (ID);
ALTER TABLE MF_BOM_ROUTE_RESOURCE ADD CONSTRAINT FK_STD_COST_DTL_MF_BOM_RT_RES FOREIGN KEY (STD_COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID);
ALTER TABLE MF_CELL ADD CONSTRAINT FK_MF_CELL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_CELL ADD CONSTRAINT FK_MF_WC_MF_CELL FOREIGN KEY (BOTTLE_NECK_WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_CELL ADD CONSTRAINT FK_MF_WEEK_CAL_MF_CELL FOREIGN KEY (WEEK_CAL_ID) REFERENCES MF_WEEK_CAL (ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_BASE_CURRENCY FOREIGN KEY (BASE_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_CUR_RATE_AUTH FOREIGN KEY (CURRENCY_RATE_AUTHORITY) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_CUR_RATE_TYPE FOREIGN KEY (CURRENCY_RATE_TYPE) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_INP_LABOR_MODEL FOREIGN KEY (INPUT_LABOR_MODEL_BF) REFERENCES MF_INPUT_DOC_HEAD_MODEL (DOCHEADMODEL_ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_INP_MACHINE_MODEL FOREIGN KEY (INPUT_MACHINE_MODEL_BF) REFERENCES MF_INPUT_DOC_HEAD_MODEL (DOCHEADMODEL_ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_INP_MATERIAL_MODEL FOREIGN KEY (INPUT_MATERIAL_MODEL_BF) REFERENCES MF_INPUT_DOC_HEAD_MODEL (DOCHEADMODEL_ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_MEASURE1 FOREIGN KEY (MAIN_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_MEASURE2 FOREIGN KEY (TICK_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_NAT_CURRENCY FOREIGN KEY (NAT_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_ORDER_MODEL FOREIGN KEY (PURCHASE_ORDER_MODEL_MRP_REC) REFERENCES ORDERHEADMODEL (DOCHEADMODEL_ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_SCRAP_LABOR_MOD FOREIGN KEY (SCRAP_LABOR_MODEL) REFERENCES MF_SCRAP_DOC_HEAD_MODEL (DOCHEADMODEL_ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_SCRAP_MACHINE_MOD FOREIGN KEY (SCRAP_MACHINE_MODEL) REFERENCES MF_SCRAP_DOC_HEAD_MODEL (DOCHEADMODEL_ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_SCRAP_MATERIAL_MOD FOREIGN KEY (SCRAP_MATERIAL_MODEL) REFERENCES MF_SCRAP_DOC_HEAD_MODEL (DOCHEADMODEL_ID);
ALTER TABLE MF_CONFIG ADD CONSTRAINT FK_MF_CONFIG_VARIANCE_DOC FOREIGN KEY (VARIANCE_DOCUMENT_MODEL) REFERENCES MF_VARIANCE_DOC_HEAD_MODEL (DOCHEADMODEL_ID);
ALTER TABLE MF_COST_CATEGORIES ADD CONSTRAINT FK_MF_COST_CATEGORIES_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_COST_CATEGORIES ADD CONSTRAINT FK_MF_COST_CAT_FORMULA FOREIGN KEY (FORMULA_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE MF_COST_DETAIL ADD CONSTRAINT FK_MF_COST_DETAIL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_COST_DETAIL_LINE ADD CONSTRAINT FK_CUR_MF_COST_DTL_LINE FOREIGN KEY (CURRENCY_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_COST_DETAIL_LINE ADD CONSTRAINT FK_MF_CD_LINE_COST_CAT FOREIGN KEY (COST_CATEGORIES_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_COST_DETAIL_LINE ADD CONSTRAINT FK_MF_CD_LINE_COST_DETAIL FOREIGN KEY (COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID) ON DELETE CASCADE;
ALTER TABLE MF_COST_DETAIL_LINE ADD CONSTRAINT FK_MF_COST_DETAIL_LINE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_CREW ADD CONSTRAINT FK_MF_CREW_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_DAY_CAL ADD CONSTRAINT FK_MF_DAY_CAL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_DAY_TIME ADD CONSTRAINT FKEY_MF_DAY_CAL_MF_DAY_TIME FOREIGN KEY (DAY_CAL_ID) REFERENCES MF_DAY_CAL (ID) ON DELETE CASCADE;
ALTER TABLE MF_DAY_TIME ADD CONSTRAINT FK_MF_DAY_TIME_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_INPUT_DOC_HEAD ADD CONSTRAINT FK_CONTRACTOR_MF_INPUT_DH FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_INPUT_DOC_HEAD ADD CONSTRAINT FK_DOCHEAD_MF_INTPUT_DH FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE MF_INPUT_DOC_HEAD ADD CONSTRAINT FK_EMPLOYEE_MF_INPUT_DH FOREIGN KEY (EMPLOYEE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_INPUT_DOC_HEAD ADD CONSTRAINT FK_MF_CREW_MF_INPUT_DH FOREIGN KEY (CREW_ID) REFERENCES MF_CREW (ID);
ALTER TABLE MF_INPUT_DOC_HEAD ADD CONSTRAINT FK_MF_JOB_MF_INPUT_DH FOREIGN KEY (JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_INPUT_DOC_HEAD ADD CONSTRAINT FK_MF_JR_MF_INPUT_DH FOREIGN KEY (OPER_ID) REFERENCES MF_JOB_ROUTE (ID);
ALTER TABLE MF_INPUT_DOC_HEAD ADD CONSTRAINT FK_MF_WC_MF_INPUT_DH FOREIGN KEY (WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_INPUT_DOC_HEAD ADD CONSTRAINT FK_OUTPUT_DOC_MF_INPUT_DH FOREIGN KEY (OUTPUT_DOC_HEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE MF_INPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_CONTRACTOR_MF_INPUT_DHM FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_INPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_DOCHEAD_MF_INTPUT_DHM FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE MF_INPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_EMPLOYEE_MF_INPUT_DHM FOREIGN KEY (EMPLOYEE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_INPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_MF_CREW_MF_INPUT_DHM FOREIGN KEY (CREW_ID) REFERENCES MF_CREW (ID);
ALTER TABLE MF_INPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_MF_JOB_MF_INPUT_DHM FOREIGN KEY (JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_INPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_MF_JR_MF_INPUT_DHM FOREIGN KEY (OPER_ID) REFERENCES MF_JOB_ROUTE (ID);
ALTER TABLE MF_INPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_MF_WC_MF_INPUT_DHM FOREIGN KEY (WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_INPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_OUTPUT_DOC_MF_INPUT_DHM FOREIGN KEY (OUTPUT_DOC_HEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE MF_INPUT_DOC_SPEC ADD CONSTRAINT FK_DOCSPEC_MF_INPUT_DS FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE MF_INPUT_DOC_SPEC ADD CONSTRAINT FK_MF_COST_CAT_MF_INPUT_DS FOREIGN KEY (COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_INPUT_DOC_SPEC ADD CONSTRAINT FK_MF_JOB_RT_RES_MF_INPUT_DS FOREIGN KEY (JOB_ROUTE_RESOURCE_ID) REFERENCES MF_JOB_ROUTE_RESOURCE (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_ACT_WIP_COST_DTL_ID_MF_JOB FOREIGN KEY (ACT_WIP_COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_CATALOG_MF_JOB FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_CONTR_MF_JOB_DEF_DST_STOCK FOREIGN KEY (DEF_SRC_STOCK_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_CONTR_MF_JOB_DEF_SRC_STOCK FOREIGN KEY (DEF_DST_STOCK_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_FOLDER_MF_JOB FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_MF_CELL_MF_JOB FOREIGN KEY (CELL_ID) REFERENCES MF_CELL (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_MF_JOB_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_MF_JOB_DST_MOL FOREIGN KEY (DEF_DST_MOL_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_MF_JOB_MF_JOB_PARENT_JOB_ID FOREIGN KEY (PARENT_JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_MF_JOB_MF_JOB_ROOT_JOB_ID FOREIGN KEY (ROOT_JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_MF_JOB_SRC_MOL FOREIGN KEY (DEF_SRC_MOL_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_JOB ADD CONSTRAINT FK_STD_COST_DTL_ID_MF_JOB FOREIGN KEY (STD_COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID);
ALTER TABLE MF_JOB_LABOR ADD CONSTRAINT FK_CUR_MF_JOB_LBR_OH_RATE FOREIGN KEY (LBR_OH_RATE_CUR_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_JOB_LABOR ADD CONSTRAINT FK_CUR_MF_JOB_LBR_RATE FOREIGN KEY (LBR_RATE_CUR_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_JOB_LABOR ADD CONSTRAINT FK_L_COST_CAT_ID_MF_JOB_LBR FOREIGN KEY (LBR_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_JOB_LABOR ADD CONSTRAINT FK_L_O_COST_CAT_ID_MF_JOB_LBR FOREIGN KEY (LBR_OH_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_JOB_LABOR ADD CONSTRAINT FK_MF_JOB_LBR_MEASURE FOREIGN KEY (RUN_TIME_LBR_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_JOB_LABOR ADD CONSTRAINT FK_MF_JOB_RT_RES_MF_JOB_LBR FOREIGN KEY (JOB_ROUTE_RESOURCE_ID) REFERENCES MF_JOB_ROUTE_RESOURCE (ID) ON DELETE CASCADE;
ALTER TABLE MF_JOB_MACHINE ADD CONSTRAINT FK_CUR_MF_JOB_MCH_OH_RATE FOREIGN KEY (MCH_OH_RATE_CUR_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_JOB_MACHINE ADD CONSTRAINT FK_CUR_MF_JOB_MCH_RATE FOREIGN KEY (MCH_RATE_CUR_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_JOB_MACHINE ADD CONSTRAINT FK_MF_JOB_MCH_MEASURE FOREIGN KEY (RUN_TIME_MCH_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_JOB_MACHINE ADD CONSTRAINT FK_MF_JOB_RT_RES_MF_JOB_MCH FOREIGN KEY (JOB_ROUTE_RESOURCE_ID) REFERENCES MF_JOB_ROUTE_RESOURCE (ID) ON DELETE CASCADE;
ALTER TABLE MF_JOB_MACHINE ADD CONSTRAINT FK_M_COST_CAT_ID_MF_JOB_MCH FOREIGN KEY (MCH_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_JOB_MACHINE ADD CONSTRAINT FK_M_O_COST_CAT_ID_MF_JOB_MCH FOREIGN KEY (MCH_OH_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_JOB_MATERIAL ADD CONSTRAINT FK_CUR_MF_JOB_MTL_OH_RATE FOREIGN KEY (CURRENCY_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_JOB_MATERIAL ADD CONSTRAINT FK_JOB_MAT_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE MF_JOB_MATERIAL ADD CONSTRAINT FK_MEASURE_MF_JOB_MTL FOREIGN KEY (MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE MF_JOB_MATERIAL ADD CONSTRAINT FK_MF_JOB_RT_RES_MF_JOB_MTL FOREIGN KEY (JOB_ROUTE_RESOURCE_ID) REFERENCES MF_JOB_ROUTE_RESOURCE (ID) ON DELETE CASCADE;
ALTER TABLE MF_JOB_MATERIAL ADD CONSTRAINT FK_M_COST_CAT_ID_MF_JOB_MTL FOREIGN KEY (MTL_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_JOB_MATERIAL ADD CONSTRAINT FK_M_O_COST_CAT_ID_MF_JOB_MTL FOREIGN KEY (MTL_OH_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_JOB_MATERIAL ADD CONSTRAINT FK_WH_ZONE_MF_JOB_MTL FOREIGN KEY (BACKFLUSH_ZONE_ID) REFERENCES WH_ZONE (ID);
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT FK_ACT_COST_DTL_ID_MF_JOB_RT FOREIGN KEY (ACT_COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID);
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT FK_MF_JOB_MF_JOB_RT FOREIGN KEY (JOB_ID) REFERENCES MF_JOB (ID) ON DELETE CASCADE;
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT FK_MF_JOB_ROUTE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT FK_MF_JOB_ROUTE_MEASURE1 FOREIGN KEY (QUEUE_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT FK_MF_JOB_ROUTE_MEASURE2 FOREIGN KEY (SCHED_OFFSET_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT FK_MF_JOB_ROUTE_MEASURE3 FOREIGN KEY (SCHED_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT FK_MF_JOB_ROUTE_MEASURE4 FOREIGN KEY (RUN_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT FK_MF_JOB_ROUTE_MEASURE5 FOREIGN KEY (SETUP_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT FK_MF_JOB_ROUTE_MEASURE6 FOREIGN KEY (MOVE_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT FK_MF_WC_MF_JOB_RT FOREIGN KEY (WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_JOB_ROUTE ADD CONSTRAINT FK_STD_COST_DTL_ID_MF_JOB_RT FOREIGN KEY (STD_COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID);
ALTER TABLE MF_JOB_ROUTE_RESOURCE ADD CONSTRAINT FK_ACT_COST_DTL_MF_JOB_RT_RES FOREIGN KEY (ACT_COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID);
ALTER TABLE MF_JOB_ROUTE_RESOURCE ADD CONSTRAINT FK_MFJOBROUTE_RSC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_JOB_ROUTE_RESOURCE ADD CONSTRAINT FK_MF_JOB_RT_MF_JOB_RT_RES FOREIGN KEY (OPER_ID) REFERENCES MF_JOB_ROUTE (ID) ON DELETE CASCADE;
ALTER TABLE MF_JOB_ROUTE_RESOURCE ADD CONSTRAINT FK_MF_RES_GRP_MF_JOB_RT_RES FOREIGN KEY (RESOURCE_GROUP_ID) REFERENCES MF_RESOURCE_GROUP (ID);
ALTER TABLE MF_JOB_ROUTE_RESOURCE ADD CONSTRAINT FK_STD_COST_DTL_MF_JOB_RT_RES FOREIGN KEY (STD_COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID);
ALTER TABLE MF_LABOR_CLASS ADD CONSTRAINT FK_MF_LABOR_CLASS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_LABOR_CLASS ADD CONSTRAINT FK_MF_LABOR_CLASS_COST_CAT1 FOREIGN KEY (LBR_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_LABOR_CLASS ADD CONSTRAINT FK_MF_LABOR_CLASS_COST_CAT2 FOREIGN KEY (LBR_OH_COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_LABOR_CLASS ADD CONSTRAINT FK_MF_LABOR_CLASS_CUR1 FOREIGN KEY (LBR_RATE_CUR_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_LABOR_CLASS ADD CONSTRAINT FK_MF_LABOR_CLASS_CUR2 FOREIGN KEY (LBR_OH_RATE_CUR_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE MF_LABOR_CLASS ADD CONSTRAINT FK_MF_LABOR_CLASS_MEAS1 FOREIGN KEY (LBR_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_LABOR_CLASS ADD CONSTRAINT FK_MF_LABOR_CLASS_MEAS2 FOREIGN KEY (LBR_OH_TIME_UM) REFERENCES MEASURE (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD ADD CONSTRAINT FK_CONTRACTOR_MF_OUTPUT_DH FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD ADD CONSTRAINT FK_DOCHEAD_MF_OUTPUT_DH FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE MF_OUTPUT_DOC_HEAD ADD CONSTRAINT FK_EMPLOYEE_MF_OUTPUT_DH FOREIGN KEY (EMPLOYEE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD ADD CONSTRAINT FK_MF_CREW_MF_OUTPUT_DH FOREIGN KEY (CREW_ID) REFERENCES MF_CREW (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD ADD CONSTRAINT FK_MF_JOB_MF_OUTPUT_DH FOREIGN KEY (JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD ADD CONSTRAINT FK_MF_JR_MF_OUTPUT_DH FOREIGN KEY (OPER_ID) REFERENCES MF_JOB_ROUTE (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD ADD CONSTRAINT FK_MF_WC_MF_OUTPUT_DH FOREIGN KEY (WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_CONTRACTOR_MF_OUTPUT_DHM FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_DOCHEAD_MF_OUTPUT_DHM FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE MF_OUTPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_EMPLOYEE_MF_OUTPUT_DHM FOREIGN KEY (EMPLOYEE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_MF_CREW_MF_OUTPUT_DHM FOREIGN KEY (CREW_ID) REFERENCES MF_CREW (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_MF_JOB_MF_OUTPUT_DHM FOREIGN KEY (JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_MF_JR_MF_OUTPUT_DHM FOREIGN KEY (OPER_ID) REFERENCES MF_JOB_ROUTE (ID);
ALTER TABLE MF_OUTPUT_DOC_HEAD_MODEL ADD CONSTRAINT FK_MF_WC_MF_OUTPUT_DHM FOREIGN KEY (WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_RESOURCE_FAMILY ADD CONSTRAINT FK_MF_PLN_LVL_MF_RES_FAMILY FOREIGN KEY (PLANNING_LEVEL_ID) REFERENCES PP_PLANNING_LEVEL (ID);
ALTER TABLE MF_RESOURCE_FAMILY ADD CONSTRAINT FK_MF_RESOURCE_FAMILY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_RESOURCE_FAMILY ADD CONSTRAINT FK_MF_RES_GRP_MF_RES_FAMILY1 FOREIGN KEY (PARENT_RESOURCE_GROUP_ID) REFERENCES MF_RESOURCE_GROUP (ID);
ALTER TABLE MF_RESOURCE_FAMILY ADD CONSTRAINT FK_MF_RES_GRP_MF_RES_FAMILY2 FOREIGN KEY (CHILD_RESOURCE_GROUP_ID) REFERENCES MF_RESOURCE_GROUP (ID);
ALTER TABLE MF_RESOURCE_GROUP ADD CONSTRAINT FKEY_MFRESOURCEGROUP_MEASURE FOREIGN KEY (MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE MF_RESOURCE_GROUP ADD CONSTRAINT FK_MF_RESOURCE_GROUP_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_RESOURCE_GROUP ADD CONSTRAINT FK_PP_PLN_LVL__MF_RES_GRP FOREIGN KEY (CRITICAL_LEVEL_ID) REFERENCES PP_PLANNING_LEVEL (ID);
ALTER TABLE MF_RESOURCE_GROUP_CAPACITY ADD CONSTRAINT FK_MFRSCGROUP_CAPACITY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_RESOURCE_GROUP_CAPACITY ADD CONSTRAINT FK_MF_RES_GRP_PP_RES_GRP_CAP FOREIGN KEY (RESOURCE_GROUP_ID) REFERENCES MF_RESOURCE_GROUP (ID);
ALTER TABLE MF_ROUTE ADD CONSTRAINT FK_MF_ROUTE_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE MF_ROUTE ADD CONSTRAINT FK_MF_ROUTE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_ROUTE ADD CONSTRAINT FK_MF_ROUTE_CONTRACTOR1 FOREIGN KEY (CUSTOMER_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_ROUTE ADD CONSTRAINT FK_MF_ROUTE_CONTRACTOR2 FOREIGN KEY (VENDOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_ROUTE ADD CONSTRAINT FK_MF_ROUTE_WAREHOUSE1 FOREIGN KEY (DEST_WAREHOUSE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_ROUTE ADD CONSTRAINT FK_MF_ROUTE_WAREHOUSE2 FOREIGN KEY (SRC_WAREHOUSE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_CAUSE_CA_MF_SCRAP_DH FOREIGN KEY (CAUSE_CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_CAUSE_CREW_MF_SCRAP_DH FOREIGN KEY (CAUSE_CREW_ID) REFERENCES MF_CREW (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_CAUSE_EMPLOYEE_MF_SCRAP_DH FOREIGN KEY (CAUSE_EMPLOYEE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_CAUSE_JOB_MF_SCRAP_DH FOREIGN KEY (CAUSE_JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_CAUSE_OPER_MF_SCRAP_DH FOREIGN KEY (CAUSE_OPER_ID) REFERENCES MF_JOB_ROUTE (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_CAUSE_WC_MF_SCRAP_DH FOREIGN KEY (CAUSE_WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_DETECT_CA_MF_SCRAP_DH FOREIGN KEY (DETECT_CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_DETECT_CREW_MF_SCRAP_DH FOREIGN KEY (DETECT_CREW_ID) REFERENCES MF_CREW (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_DETECT_EMPLOYEE_MF_SCRAP_DH FOREIGN KEY (DETECT_EMPLOYEE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_DETECT_JOB_MF_SCRAP_DH FOREIGN KEY (DETECT_JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_DETECT_OPER_MF_SCRAP_DH FOREIGN KEY (DETECT_OPER_ID) REFERENCES MF_JOB_ROUTE (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_DETECT_WC_MF_SCRAP_DH FOREIGN KEY (DETECT_WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_DOCHEAD_MF_SCRAP_DH FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_QC_SCRAP_REASON_MF_SCRAP_DH FOREIGN KEY (SCRAP_REASON_ID) REFERENCES QC_SCRAP_REASON (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD ADD CONSTRAINT FK_QC_SCRAP_TYPE_MF_SCRAP_DH FOREIGN KEY (SCRAP_TYPE_ID) REFERENCES QC_SCRAP_TYPE (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_CAUSE_CA_MF_SCRAP_DHM FOREIGN KEY (CAUSE_CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_CAUSE_CREW_MF_SCRAP_DHM FOREIGN KEY (CAUSE_CREW_ID) REFERENCES MF_CREW (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_CAUSE_EMPLOYEE_MF_SCRAP_DHM FOREIGN KEY (CAUSE_EMPLOYEE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_CAUSE_JOB_MF_SCRAP_DHM FOREIGN KEY (CAUSE_JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_CAUSE_OPER_MF_SCRAP_DHM FOREIGN KEY (CAUSE_OPER_ID) REFERENCES MF_JOB_ROUTE (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_CAUSE_WC_MF_SCRAP_DHM FOREIGN KEY (CAUSE_WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_DETECT_CA_MF_SCRAP_DHM FOREIGN KEY (DETECT_CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_DETECT_CREW_MF_SCRAP_DHM FOREIGN KEY (DETECT_CREW_ID) REFERENCES MF_CREW (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_DETECT_EMPLOYEE_MF_SCRAP_DHM FOREIGN KEY (DETECT_EMPLOYEE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_DETECT_JOB_MF_SCRAP_DHM FOREIGN KEY (DETECT_JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_DETECT_OPER_MF_SCRAP_DHM FOREIGN KEY (DETECT_OPER_ID) REFERENCES MF_JOB_ROUTE (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_DETECT_WC_MF_SCRAP_DHM FOREIGN KEY (DETECT_WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_DOCHEAD_MF_SCRAP_DHM FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_QC_SCRAP_REASON_MF_SCRAP_DHM FOREIGN KEY (SCRAP_REASON_ID) REFERENCES QC_SCRAP_REASON (ID);
ALTER TABLE MF_SCRAP_DOC_HEAD_MODEL ADD CONSTRAINT FK_QC_SCRAP_TYPE_MF_SCRAP_DHM FOREIGN KEY (SCRAP_TYPE_ID) REFERENCES QC_SCRAP_TYPE (ID);
ALTER TABLE MF_SCRAP_DOC_SPEC ADD CONSTRAINT FK_DOCSPEC_MF_SCRAP_DS FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE MF_SCRAP_DOC_SPEC ADD CONSTRAINT FK_MF_COST_CAT_MF_SCRAP_DS FOREIGN KEY (COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_SCRAP_DOC_SPEC ADD CONSTRAINT FK_MF_JOB_RT_RES_MF_SCRAP_DS FOREIGN KEY (JOB_ROUTE_RESOURCE_ID) REFERENCES MF_JOB_ROUTE_RESOURCE (ID);
ALTER TABLE MF_TRANSACTION ADD CONSTRAINT FK_CONTRACTOR_MF_TRANSACTION FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_TRANSACTION ADD CONSTRAINT FK_DOCSPEC_MF_TRANSACTON FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID);
ALTER TABLE MF_TRANSACTION ADD CONSTRAINT FK_EMPLOYEE_CONT_MF_TRANSACT FOREIGN KEY (EMPLOYEE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_TRANSACTION ADD CONSTRAINT FK_MF_COST_CTGR_MF_TRANSACT FOREIGN KEY (COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_TRANSACTION ADD CONSTRAINT FK_MF_CREW_MF_TRANSACTION FOREIGN KEY (CREW_ID) REFERENCES MF_CREW (ID);
ALTER TABLE MF_TRANSACTION ADD CONSTRAINT FK_MF_JOB_MF_TRANSACTION FOREIGN KEY (JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_TRANSACTION ADD CONSTRAINT FK_MF_JOB_RT_MF_TRANSACTION FOREIGN KEY (OPER_ID) REFERENCES MF_JOB_ROUTE (ID);
ALTER TABLE MF_TRANSACTION ADD CONSTRAINT FK_MF_JOB_RT_RES_MF_TRANSACTION FOREIGN KEY (JOB_ROUTE_RESOURCE_ID) REFERENCES MF_JOB_ROUTE_RESOURCE (ID);
ALTER TABLE MF_TRANSACTION ADD CONSTRAINT FK_MF_TRANSACTION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_TRANSACTION ADD CONSTRAINT FK_MF_WC_MF_TRANSACTION FOREIGN KEY (WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_VARIANCE_DOC_HEAD ADD CONSTRAINT FK_MF_VAR_DOC_HEAD_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE MF_VARIANCE_DOC_HEAD ADD CONSTRAINT FK_MF_VAR_DOC_HEAD_JOB FOREIGN KEY (JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_VARIANCE_DOC_HEAD ADD CONSTRAINT FK_MF_VAR_DOC_HEAD_WC FOREIGN KEY (WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_VARIANCE_DOC_HEAD_MODEL ADD CONSTRAINT FK_MF_VAR_DOC_HEAD_MOD_DHM FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE MF_VARIANCE_DOC_HEAD_MODEL ADD CONSTRAINT FK_MF_VAR_DOC_HEAD_MOD_JOB FOREIGN KEY (JOB_ID) REFERENCES MF_JOB (ID);
ALTER TABLE MF_VARIANCE_DOC_HEAD_MODEL ADD CONSTRAINT FK_MF_VAR_DOC_HEAD_MOD_WC FOREIGN KEY (WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_VARIANCE_DOC_SPEC ADD CONSTRAINT FK_MF_VAR_DOC_SPEC_CC FOREIGN KEY (COST_CATEGORY_ID) REFERENCES MF_COST_CATEGORIES (ID);
ALTER TABLE MF_VARIANCE_DOC_SPEC ADD CONSTRAINT FK_MF_VAR_DOC_SPEC_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE MF_WC_RATES ADD CONSTRAINT FK_MF_WC_MF_WC_RATES FOREIGN KEY (WC_ID) REFERENCES MF_WORK_CENTER (ID);
ALTER TABLE MF_WC_RATES ADD CONSTRAINT FK_MF_WC_RATES_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_WEEK_CAL ADD CONSTRAINT FK_MF_WEEK_CAL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_WEEK_CAL_CHANGE ADD CONSTRAINT FKEY_MF_WEEK_CC1_MF_DAY_CAL FOREIGN KEY (DAY_CAL_FRI) REFERENCES MF_DAY_CAL (ID);
ALTER TABLE MF_WEEK_CAL_CHANGE ADD CONSTRAINT FKEY_MF_WEEK_CC2_MF_DAY_CAL FOREIGN KEY (DAY_CAL_WED) REFERENCES MF_DAY_CAL (ID);
ALTER TABLE MF_WEEK_CAL_CHANGE ADD CONSTRAINT FKEY_MF_WEEK_CC3_MF_DAY_CAL FOREIGN KEY (DAY_CAL_SAT) REFERENCES MF_DAY_CAL (ID);
ALTER TABLE MF_WEEK_CAL_CHANGE ADD CONSTRAINT FKEY_MF_WEEK_CC4_MF_DAY_CAL FOREIGN KEY (DAY_CAL_TUE) REFERENCES MF_DAY_CAL (ID);
ALTER TABLE MF_WEEK_CAL_CHANGE ADD CONSTRAINT FKEY_MF_WEEK_CC5_MF_DAY_CAL FOREIGN KEY (DAY_CAL_SUN) REFERENCES MF_DAY_CAL (ID);
ALTER TABLE MF_WEEK_CAL_CHANGE ADD CONSTRAINT FKEY_MF_WEEK_CC6_MF_DAY_CAL FOREIGN KEY (DAY_CAL_MON) REFERENCES MF_DAY_CAL (ID);
ALTER TABLE MF_WEEK_CAL_CHANGE ADD CONSTRAINT FKEY_MF_WEEK_CC7_MF_DAY_CAL FOREIGN KEY (DAY_CAL_THU) REFERENCES MF_DAY_CAL (ID);
ALTER TABLE MF_WEEK_CAL_CHANGE ADD CONSTRAINT FKEY_MF_WEEK_CC_MF_WEEK_CAL FOREIGN KEY (WEEK_CAL_ID) REFERENCES MF_WEEK_CAL (ID);
ALTER TABLE MF_WEEK_CAL_CHANGE ADD CONSTRAINT FK_MF_WEEK_CAL_CHANGE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_WORK_CENTER ADD CONSTRAINT FK_ACT_COST_DTL_ID_MF_WC FOREIGN KEY (ACT_COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID);
ALTER TABLE MF_WORK_CENTER ADD CONSTRAINT FK_CONTRACTOR_MF_WC FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE MF_WORK_CENTER ADD CONSTRAINT FK_MF_CELL_MF_WC FOREIGN KEY (CELL_ID) REFERENCES MF_CELL (ID);
ALTER TABLE MF_WORK_CENTER ADD CONSTRAINT FK_MF_WEEK_CAL_MF_WC FOREIGN KEY (WEEK_CAL_ID) REFERENCES MF_WEEK_CAL (ID);
ALTER TABLE MF_WORK_CENTER ADD CONSTRAINT FK_MF_WORK_CENTER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE MF_WORK_CENTER ADD CONSTRAINT FK_STD_COST_DTL_ID_MF_WC FOREIGN KEY (STD_COST_DETAIL_ID) REFERENCES MF_COST_DETAIL (ID);
ALTER TABLE OKDP ADD CONSTRAINT FK_OKDP_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OKOF ADD CONSTRAINT FK_OKOF_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OLAP_DATAPUMP ADD CONSTRAINT FK_OLAP_DATAPUMP_ALG_CLEAR FOREIGN KEY (CLEAR_ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE OLAP_DATAPUMP ADD CONSTRAINT FK_OLAP_DATAPUMP_ALG_CREATE FOREIGN KEY (CREATE_ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE OLAP_DATAPUMP ADD CONSTRAINT FK_OLAP_DATAPUMP_ALG_DELETE FOREIGN KEY (DELETE_ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE OLAP_DATAPUMP ADD CONSTRAINT FK_OLAP_DATAPUMP_ALG_PUMP FOREIGN KEY (PUMP_ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE OLAP_DATAPUMP ADD CONSTRAINT FK_OLAP_DATAPUMP_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE ORDERHEAD ADD CONSTRAINT FKEY_ORDERHEAD_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE ORDERHEAD ADD CONSTRAINT FK_ORDERHEAD_CONSUMER FOREIGN KEY (CONSUMER) REFERENCES CONTRACTOR (ID);
ALTER TABLE ORDERHEAD ADD CONSTRAINT FK_ORDERHEAD_RESPONSIBLE FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE ORDERHEADMODEL ADD CONSTRAINT FKEY_ORDERHEADM_DOCHEADM FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE ORDERHEADMODEL ADD CONSTRAINT FK_ORDERHEADM_CONSUMER FOREIGN KEY (CONSUMER) REFERENCES CONTRACTOR (ID);
ALTER TABLE ORDERHEADMODEL ADD CONSTRAINT FK_ORDERHEADM_RESPONSIBLE FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE ORDERSPEC ADD CONSTRAINT FKEY_ORDERSPEC_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE ORDERSPEC ADD CONSTRAINT FK_ORDERSPEC_WAREHOUSE FOREIGN KEY (WAREHOUSE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE ORDERSPECMODEL ADD CONSTRAINT FKEY_ORDERSPECM_DOCSPECM FOREIGN KEY (DOCSPECMODEL_ID) REFERENCES DOCSPECMODEL (ID) ON DELETE CASCADE;
ALTER TABLE ORGUNIT ADD CONSTRAINT FKEY_ORGUNIT_MFRESGROUP FOREIGN KEY (RESOURCE_GROUP_ID) REFERENCES MF_RESOURCE_GROUP (ID);
ALTER TABLE ORGUNIT ADD CONSTRAINT FK_ORGUNIT_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID) ON DELETE CASCADE;
ALTER TABLE ORGUNIT ADD CONSTRAINT FK_ORGUNIT_PARTNER FOREIGN KEY (PARTNER_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE OVR_CANCELLATION ADD CONSTRAINT FKEY_OVR_CANCELLATION_TO_CARD_H FOREIGN KEY (OVR_CARD_HIST_ID) REFERENCES OVR_CARD_HIST (ID);
ALTER TABLE OVR_CANCELLATION ADD CONSTRAINT FK_OVR_CANCELLATION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OVR_CARD ADD CONSTRAINT FKEY_OVR_CARDTO_PERSONNEL FOREIGN KEY (REF_PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID);
ALTER TABLE OVR_CARD ADD CONSTRAINT FKEY_OVR_CARD_TO_JOB FOREIGN KEY (STF_JOB_ID) REFERENCES PREF_JOB (ID);
ALTER TABLE OVR_CARD ADD CONSTRAINT FKEY_OVR_CARD_TO_POSITION FOREIGN KEY (STF_POSITION_ID) REFERENCES PREF_POSITION (ID);
ALTER TABLE OVR_CARD ADD CONSTRAINT FK_OVR_CARD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OVR_CARD_DOCUMENT_LINK ADD CONSTRAINT FK_OCARD_DOC_LINK_TO_NORM_HEAD FOREIGN KEY (OVR_NORM_HEAD_ID) REFERENCES OVR_NORM_HEAD (ID);
ALTER TABLE OVR_CARD_DOCUMENT_LINK ADD CONSTRAINT FK_OVR_CARD_DOC_LINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OVR_CARD_DOCUMENT_LINK ADD CONSTRAINT FK_OVR_CARD_DOC_LINK_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE OVR_CARD_DOCUMENT_LINK ADD CONSTRAINT FK_OVR_CARD_DOC_LINK_TO_O_CARD FOREIGN KEY (OVR_CARD_ID) REFERENCES OVR_CARD (ID) ON DELETE CASCADE;
ALTER TABLE OVR_CARD_HIST ADD CONSTRAINT FKEY_OVR_CARD_HIST_TO_CARD FOREIGN KEY (OVR_CARD_ID) REFERENCES OVR_CARD (ID);
ALTER TABLE OVR_CARD_HIST ADD CONSTRAINT FK_OVR_CARD_HIST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OVR_CARD_HIST_DOC_SPEC_LINK ADD CONSTRAINT FKEY_OCHIST_DS_LINK_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE OVR_CARD_HIST_DOC_SPEC_LINK ADD CONSTRAINT FKEY_OCHIST_DS_LINK_OCHIST FOREIGN KEY (OVR_CARD_HIST_ID) REFERENCES OVR_CARD_HIST (ID) ON DELETE CASCADE;
ALTER TABLE OVR_CARD_HIST_DOC_SPEC_LINK ADD CONSTRAINT FK_OVR_CRDHST_DSPECLNK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OVR_HIST_STATUS ADD CONSTRAINT FKEY_OVR_HIST_STATUS_OVR_HIST FOREIGN KEY (OVR_CARD_HIST_ID) REFERENCES OVR_CARD_HIST (ID) ON DELETE CASCADE;
ALTER TABLE OVR_HIST_STATUS ADD CONSTRAINT FK_OVR_HIST_STATUS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OVR_NORM_HEAD ADD CONSTRAINT FKEY_OVR_NORM_HEAD_TO_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE OVR_NORM_HEAD ADD CONSTRAINT FKEY_OVR_NORM_HEAD_TO_JOB FOREIGN KEY (STF_JOB_ID) REFERENCES PREF_JOB (ID);
ALTER TABLE OVR_NORM_HEAD ADD CONSTRAINT FKEY_OVR_NORM_HEAD_TO_POSITION FOREIGN KEY (STF_POSITION_ID) REFERENCES PREF_POSITION (ID);
ALTER TABLE OVR_NORM_HEAD ADD CONSTRAINT FK_OVR_NORM_HEAD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OVR_NORM_SPEC ADD CONSTRAINT FKEY_OVR_NORM_SPEC_TO_NORM_HEAD FOREIGN KEY (OVR_NORM_HEAD_ID) REFERENCES OVR_NORM_HEAD (ID) ON DELETE CASCADE;
ALTER TABLE OVR_NORM_SPEC ADD CONSTRAINT FK_OVR_NORM_SPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OVR_NORM_SPEC_DOC_SPEC_LINK ADD CONSTRAINT FK_OVR_NORMS_DS_LINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OVR_NORM_SPEC_DOC_SPEC_LINK ADD CONSTRAINT FK_OVR_NORM_SPEC_DOC_LINK_DSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE OVR_NORM_SPEC_DOC_SPEC_LINK ADD CONSTRAINT FK_OVR_NORM_SPEC_DOC_LINK_NSPEC FOREIGN KEY (OVR_NORM_SPEC_ID) REFERENCES OVR_NORM_SPEC (ID) ON DELETE CASCADE;
ALTER TABLE OVR_NORM_SPEC_LINK ADD CONSTRAINT FKEY_OVR_NORM_SPEC_LINK_TO_CAT FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE OVR_NORM_SPEC_LINK ADD CONSTRAINT FKEY_OVR_NORM_SPEC_LINK_TO_SPEC FOREIGN KEY (OVR_NORM_SPEC_ID) REFERENCES OVR_NORM_SPEC (ID) ON DELETE CASCADE;
ALTER TABLE OVR_NORM_SPEC_LINK ADD CONSTRAINT FK_OVR_NORM_SPEC_LINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE OVR_SIZE ADD CONSTRAINT FKEY_OVR_SIZE_TO_OVR_CARD FOREIGN KEY (OVR_CARD_ID) REFERENCES OVR_CARD (ID) ON DELETE CASCADE;
ALTER TABLE OVR_SIZE ADD CONSTRAINT FK_OVR_SIZE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PACKING ADD CONSTRAINT FKEY_PACKING_MEASURE1 FOREIGN KEY (MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE PACKING ADD CONSTRAINT FKEY_PACKING_TO_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID) ON DELETE CASCADE;
ALTER TABLE PACKING ADD CONSTRAINT FK_PACKING_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PACKING ADD CONSTRAINT FK_PACKING_MEASURE_V FOREIGN KEY (VOLUMEMEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE PACKING ADD CONSTRAINT FK_PACKING_MEASURE_W FOREIGN KEY (WEIGHTMEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE PARTNEMPL ADD CONSTRAINT FKEY_PARTNEMPL_TO_PARTNER FOREIGN KEY (PARTNER_ID) REFERENCES PARTNER (CONTRACTOR_ID) ON DELETE CASCADE;
ALTER TABLE PARTNEMPL ADD CONSTRAINT FKEY_PARTNEMPL_TO_PERSON FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID) ON DELETE CASCADE;
ALTER TABLE PARTNEMPL ADD CONSTRAINT FK_PARTNEMPL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FKEY_PARTNER_TO_CURRENCY1 FOREIGN KEY (MAXSUPCREDITCUR) REFERENCES CURRENCY (UPCODE);
ALTER TABLE PARTNER ADD CONSTRAINT FKEY_PARTNER_TO_CURRENCY2 FOREIGN KEY (MAXCUSCREDITCUR) REFERENCES CURRENCY (UPCODE);
ALTER TABLE PARTNER ADD CONSTRAINT FKEY_PARTNER_TO_PERSON FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FK_PARTNER_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID) ON DELETE CASCADE;
ALTER TABLE PARTNER ADD CONSTRAINT FK_PARTNER_COUNTRY FOREIGN KEY (COUNTRY_ID) REFERENCES REF_COUNTRY (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FK_PARTNER_COUNTRY1 FOREIGN KEY (COUNTRY1_ID) REFERENCES REF_COUNTRY (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FK_PARTNER_DISTRICT FOREIGN KEY (DISTRICT_ID) REFERENCES REF_DISTRICT (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FK_PARTNER_DISTRICT1 FOREIGN KEY (DISTRICT1_ID) REFERENCES REF_DISTRICT (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FK_PARTNER_PLACE FOREIGN KEY (PLACE_ID) REFERENCES REF_PLACE (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FK_PARTNER_PLACE1 FOREIGN KEY (PLACE1_ID) REFERENCES REF_PLACE (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FK_PARTNER_REGION FOREIGN KEY (REGION_ID) REFERENCES REF_REGION (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FK_PARTNER_REGION1 FOREIGN KEY (REGION1_ID) REFERENCES REF_REGION (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FK_PARTNER_ZIPCODE FOREIGN KEY (ZIPCODE_ID) REFERENCES REF_ZIPCODE (ID);
ALTER TABLE PARTNER ADD CONSTRAINT FK_PARTNER_ZIPCODE1 FOREIGN KEY (ZIPCODE1_ID) REFERENCES REF_ZIPCODE (ID);
ALTER TABLE PERIOD ADD CONSTRAINT FK_PERIOD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FKEY_PERMISACC_ANLPLAN1 FOREIGN KEY (ANLDB1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FKEY_PERMISACC_ANLPLAN10 FOREIGN KEY (ANLKT5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FKEY_PERMISACC_ANLPLAN2 FOREIGN KEY (ANLKT2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FKEY_PERMISACC_ANLPLAN3 FOREIGN KEY (ANLDB3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FKEY_PERMISACC_ANLPLAN4 FOREIGN KEY (ANLDB4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FKEY_PERMISACC_ANLPLAN5 FOREIGN KEY (ANLDB5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FKEY_PERMISACC_ANLPLAN6 FOREIGN KEY (ANLKT1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FKEY_PERMISACC_ANLPLAN7 FOREIGN KEY (ANLDB2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FKEY_PERMISACC_ANLPLAN8 FOREIGN KEY (ANLKT3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FKEY_PERMISACC_ANLPLAN9 FOREIGN KEY (ANLKT4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FK_PERMISSIBLEACCOUNTS_ACCDB FOREIGN KEY (ACCDB_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FK_PERMISSIBLEACCOUNTS_ACCKT FOREIGN KEY (ACCKT_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE PERMISSIBLEACCOUNTS ADD CONSTRAINT FK_PERMISSIBLEACCOUNTS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PHASEITEMFACT ADD CONSTRAINT FKEY_PITEMFACT_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE PHASEITEMFACT ADD CONSTRAINT FKEY_PITEMFACT_PARTNER FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PHASEITEMFACT ADD CONSTRAINT FK_PHASEITEMFACT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PHASEITEMPLAN ADD CONSTRAINT FKEY_PITEMPLAN_CONTARCTPHASE FOREIGN KEY (PHASE_ID) REFERENCES CONTRACTPHASE (ID) ON DELETE CASCADE;
ALTER TABLE PHASEITEMPLAN ADD CONSTRAINT FKEY_PITEMPLAN_PARTNER1 FOREIGN KEY (CONTRACTORFROM) REFERENCES CONTRACTOR (ID);
ALTER TABLE PHASEITEMPLAN ADD CONSTRAINT FKEY_PITEMPLAN_PARTNER2 FOREIGN KEY (CONTRACTORTO) REFERENCES CONTRACTOR (ID);
ALTER TABLE PHASEITEMPLAN ADD CONSTRAINT FK_PHASEITEMPLAN_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PHASEITEM_LINK ADD CONSTRAINT FKEY_PHASEITEM_LINK_FACTITEM FOREIGN KEY (FACTITEM_ID) REFERENCES PHASEITEMFACT (ID) ON DELETE CASCADE;
ALTER TABLE PHASEITEM_LINK ADD CONSTRAINT FKEY_PHASEITEM_LINK_PLANITEM FOREIGN KEY (PLANITEM_ID) REFERENCES PHASEITEMPLAN (ID);
ALTER TABLE PHASEITEM_LINK ADD CONSTRAINT FK_PHASEITEM_LINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMA_DOCGROUP ADD CONSTRAINT FK_PMA_DOCGROUP_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMA_DOCGROUPLINK ADD CONSTRAINT FK_PMA_DOCGROUPLINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMA_DOCGROUPLINK ADD CONSTRAINT FK_PMA_DOCGROUPLINK_DOCTYPE FOREIGN KEY (DOCTYPE) REFERENCES TYPEDOC (UPCODE) ON DELETE CASCADE;
ALTER TABLE PMA_DOCGROUPLINK ADD CONSTRAINT FK_PMA_DOCGROUPLINK_GROUP FOREIGN KEY (DOCGROUP_ID) REFERENCES PMA_DOCGROUP (ID) ON DELETE CASCADE;
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_BASEDOC FOREIGN KEY (BASEDOC_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_CONTRACT FOREIGN KEY (CONTRACT_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_CURRATEAUTH FOREIGN KEY (CURRATEAUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_CURRATETYPE FOREIGN KEY (CURRATETYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_CURRENCY FOREIGN KEY (CURCODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_DOC FOREIGN KEY (DOC_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_DST_FOLDER FOREIGN KEY (DESTFOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_FROM FOREIGN KEY (FROM_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_FROMUNIT FOREIGN KEY (FROMUNIT_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_TO FOREIGN KEY (TO_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PMA_PAYMENT ADD CONSTRAINT FK_PMA_PAYMENT_TOUNIT FOREIGN KEY (TOUNIT_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PMA_TRHEAD ADD CONSTRAINT FK_PMA_TRHEAD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMA_TRHEAD ADD CONSTRAINT FK_PMA_TRHEAD_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE PMA_TRHEAD ADD CONSTRAINT FK_PMA_TRHEAD_PAYMENT FOREIGN KEY (PAYMENT_ID) REFERENCES PMA_PAYMENT (ID);
ALTER TABLE PMA_TRSPEC ADD CONSTRAINT FK_PMA_TRSPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMA_TRSPEC ADD CONSTRAINT FK_PMA_TRSPEC_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID);
ALTER TABLE PMA_TRSPEC ADD CONSTRAINT FK_PMA_TRSPEC_TRHEAD FOREIGN KEY (TRHEAD_ID) REFERENCES PMA_TRHEAD (ID) ON DELETE CASCADE;
ALTER TABLE PMA_TRTAX ADD CONSTRAINT FK_PMA_TRTAX_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMA_TRTAX ADD CONSTRAINT FK_PMA_TRTAX_TAX FOREIGN KEY (TAX_ID) REFERENCES TAX (ID);
ALTER TABLE PMA_TRTAX ADD CONSTRAINT FK_PMA_TRTAX_TAXSUMM FOREIGN KEY (TAXSUMM_ID) REFERENCES TAXSUMM (ID);
ALTER TABLE PMA_TRTAX ADD CONSTRAINT FK_PMA_TRTAX_TRSPEC FOREIGN KEY (TRSPEC_ID) REFERENCES PMA_TRSPEC (ID) ON DELETE CASCADE;
ALTER TABLE PMC_CONFIG ADD CONSTRAINT FK_PMC_CONFIG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMC_CONFIG ADD CONSTRAINT FK_PMC_CONFIG_CRA FOREIGN KEY (CUR_RATE_AUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE PMC_CONFIG ADD CONSTRAINT FK_PMC_CONFIG_CRT FOREIGN KEY (CUR_RATE_TYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE PMC_CONFIG ADD CONSTRAINT FK_PMC_CONFIG_CURRENCY FOREIGN KEY (NAT_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT FK_PMC_EXECUTION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT FK_PMC_EXECUTION_CRA FOREIGN KEY (CURRATEAUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT FK_PMC_EXECUTION_CRT FOREIGN KEY (CURRATETYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT FK_PMC_EXECUTION_CURRENCY FOREIGN KEY (CURCODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT FK_PMC_EXECUTION_DOC FOREIGN KEY (DOC_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT FK_PMC_EXECUTION_LIABILITY FOREIGN KEY (LIABILITY_ID) REFERENCES PMC_LIABILITY (ID);
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT FK_PMC_EXECUTION_PAYMENT FOREIGN KEY (PAYMENT_ID) REFERENCES PMA_PAYMENT (ID);
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT FK_PMC_EXECUTION_RESFOLDER FOREIGN KEY (RESOURCEFOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT FK_PMC_EXECUTION_RESOURCE FOREIGN KEY (RESOURCE_ID) REFERENCES PMC_RESOURCE (ID);
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT FK_PMC_EXECUTION_VERSION FOREIGN KEY (VERSION_ID) REFERENCES PMC_VERSION (ID) ON DELETE CASCADE;
ALTER TABLE PMC_EXECUTION ADD CONSTRAINT FK_PMC_EXECUTION_VERSTATUS FOREIGN KEY (VERSTATUS_ID) REFERENCES PMC_VERSTATUS (ID) ON DELETE CASCADE;
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_BASEDOC FOREIGN KEY (BASEDOC_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_BASEDOCTYP FOREIGN KEY (BASEDOCTYPE) REFERENCES TYPEDOC (UPCODE);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_CONTRACT FOREIGN KEY (CONTRACT_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_CONTRACTTY FOREIGN KEY (CONTRACTTYPE) REFERENCES TYPEDOC (UPCODE);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_CRA FOREIGN KEY (CURRATEAUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_CRT FOREIGN KEY (CURRATETYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_DESTFOLDER FOREIGN KEY (DESTFOLDER_ID) REFERENCES FOLDER (ID) ON DELETE SET NULL;
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_DOC FOREIGN KEY (DOC_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_DOCTYPE FOREIGN KEY (DOCTYPE) REFERENCES TYPEDOC (UPCODE);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_FROM FOREIGN KEY (FROM_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_FROMBANKAC FOREIGN KEY (FROMBANKACC_ID) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_RESFOLDER FOREIGN KEY (PREFRESOURCEFOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_RESOURCE FOREIGN KEY (PREFRESOURCE_ID) REFERENCES PMC_RESOURCE (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_TO FOREIGN KEY (TO_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_TOBANKACC FOREIGN KEY (TOBANKACC_ID) REFERENCES REF_BANK_ACCOUNT (ID);
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_VERSION FOREIGN KEY (VERSION_ID) REFERENCES PMC_VERSION (ID) ON DELETE CASCADE;
ALTER TABLE PMC_LIABILITY ADD CONSTRAINT FK_PMC_LIABILITY_VERSTATUS FOREIGN KEY (VERSTATUS_ID) REFERENCES PMC_VERSTATUS (ID) ON DELETE CASCADE;
ALTER TABLE PMC_PERIOD ADD CONSTRAINT FK_PMC_PERIOD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMC_PERIOD ADD CONSTRAINT FK_PMC_PERIOD_PERIOD FOREIGN KEY (PARENT_ID) REFERENCES PMC_PERIOD (ID) ON DELETE CASCADE;
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT FK_PMC_RESOURCE_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT FK_PMC_RESOURCE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT FK_PMC_RESOURCE_CRA FOREIGN KEY (CURRATEAUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT FK_PMC_RESOURCE_CRT FOREIGN KEY (CURRATETYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT FK_PMC_RESOURCE_CURRENCY FOREIGN KEY (CURCODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT FK_PMC_RESOURCE_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT FK_PMC_RESOURCE_INDOCMOD1 FOREIGN KEY (INDOCMODEL1_ID) REFERENCES DOCHEADMODEL (ID);
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT FK_PMC_RESOURCE_INDOCMOD2 FOREIGN KEY (INDOCMODEL2_ID) REFERENCES DOCHEADMODEL (ID);
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT FK_PMC_RESOURCE_ORGUNIT FOREIGN KEY (ORGUNIT_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT FK_PMC_RESOURCE_OUTDOCMOD1 FOREIGN KEY (OUTDOCMODEL1_ID) REFERENCES DOCHEADMODEL (ID);
ALTER TABLE PMC_RESOURCE ADD CONSTRAINT FK_PMC_RESOURCE_OUTDOCMOD2 FOREIGN KEY (OUTDOCMODEL2_ID) REFERENCES DOCHEADMODEL (ID);
ALTER TABLE PMC_VERSION ADD CONSTRAINT FK_PMC_VERSION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMC_VERSION ADD CONSTRAINT FK_PMC_VERSION_CREATOR FOREIGN KEY (CREATOR_ID) REFERENCES SEC_USERS (ID);
ALTER TABLE PMC_VERSTATUS ADD CONSTRAINT FK_PMC_VERSTATUS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PMC_VERSTATUS ADD CONSTRAINT FK_PMC_VERSTATUS_CREATOR FOREIGN KEY (CREATOR_ID) REFERENCES SEC_USERS (ID);
ALTER TABLE PMC_VERSTATUS ADD CONSTRAINT FK_PMC_VERSTATUS_VERSION FOREIGN KEY (VERSION_ID) REFERENCES PMC_VERSION (ID) ON DELETE CASCADE;
ALTER TABLE PP_CATALOG_WAREHOUSE ADD CONSTRAINT FK_CAT_WARE_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE PP_CATALOG_WAREHOUSE ADD CONSTRAINT FK_CAT_WARE_CONTRACTOR FOREIGN KEY (WAREHOUSE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PP_CATALOG_WAREHOUSE ADD CONSTRAINT FK_PP_CATALOG_WAREHOUSE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_FIRM_PLANNED_ORDER ADD CONSTRAINT FK_CATALOG_PP_FIRM_PLN_ORD FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE PP_FIRM_PLANNED_ORDER ADD CONSTRAINT FK_CONTRACTOR_PP_FIRM_PLN_ORD1 FOREIGN KEY (SOURCE_WAREHOUSE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PP_FIRM_PLANNED_ORDER ADD CONSTRAINT FK_CONTRACTOR_PP_FIRM_PLN_ORD2 FOREIGN KEY (VENDOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PP_FIRM_PLANNED_ORDER ADD CONSTRAINT FK_CONTRACTOR_PP_FIRM_PLN_ORD3 FOREIGN KEY (WAREHOUSE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PP_FIRM_PLANNED_ORDER ADD CONSTRAINT FK_MEASURE_PP_FIRM_PLN_ORD FOREIGN KEY (MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE PP_FIRM_PLANNED_ORDER ADD CONSTRAINT FK_PPFIRMPLN_ORDER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_FIRM_PLANNED_ORDER ADD CONSTRAINT FK_PP_FIRM_PLN_ORD_MRP_VER FOREIGN KEY (MRP_VERSION_CONTROL_ID) REFERENCES PP_MRP_VERSION_CONTROL (ID) ON DELETE CASCADE;
ALTER TABLE PP_FIRM_PLANNED_ORDER ADD CONSTRAINT FK_PP_MRP_RECOM_PP_FIRM_PLN_ORD FOREIGN KEY (MRP_RECOMENDATION_ID) REFERENCES PP_MRP_RECOMMENDATION (ID) ON DELETE SET NULL;
ALTER TABLE PP_FORECAST_VERSION ADD CONSTRAINT FK_PP_FORECAST_VERSION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_GENERIC_ITEM ADD CONSTRAINT FK_PP_GENERIC_ITEM_CATALOG_ID FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE PP_GENERIC_ITEM ADD CONSTRAINT FK_PP_GENERIC_ITEM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_GENERIC_ITEM ADD CONSTRAINT FK_PP_GENERIC_ITEM_MEASURE_ID FOREIGN KEY (MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE PP_INVENTORY_FORECAST ADD CONSTRAINT FK_PPINVFORECAST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_INVENTORY_FORECAST_LINE ADD CONSTRAINT FK_PPINVFORECAST_LINE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_INVENTORY_FORECAST_LINE ADD CONSTRAINT FK_PP_GEN_ITEM_PP_INV_FCST_LINE FOREIGN KEY (GENERIC_ITEM_ID) REFERENCES PP_GENERIC_ITEM (ID);
ALTER TABLE PP_INVENTORY_FORECAST_LINE ADD CONSTRAINT FK_PP_INV_FCST_PP_INV_FCST_LINE FOREIGN KEY (INVENTORY_FORECAST_ID) REFERENCES PP_INVENTORY_FORECAST (ID);
ALTER TABLE PP_ITEM_FAMILY ADD CONSTRAINT FK_PP_GEN_ITEM_PP_ITEM_FAMILY1 FOREIGN KEY (PARENT_GENERIC_ITEM) REFERENCES PP_GENERIC_ITEM (ID);
ALTER TABLE PP_ITEM_FAMILY ADD CONSTRAINT FK_PP_GEN_ITEM_PP_ITEM_FAMILY2 FOREIGN KEY (CHILD_GENERIC_ITEM) REFERENCES PP_GENERIC_ITEM (ID);
ALTER TABLE PP_ITEM_FAMILY ADD CONSTRAINT FK_PP_ITEM_FAMILY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_ITEM_FAMILY ADD CONSTRAINT FK_PP_PLN_LVL_PP_ITEM_FAMILY FOREIGN KEY (PLANNING_LEVEL_ID) REFERENCES PP_PLANNING_LEVEL (ID);
ALTER TABLE PP_MPS ADD CONSTRAINT FK_MF_WEEK_CAL_PP_MPS FOREIGN KEY (WEEK_CAL_ID) REFERENCES MF_WEEK_CAL (ID);
ALTER TABLE PP_MPS ADD CONSTRAINT FK_PP_FCST_VER_PP_MPS FOREIGN KEY (FORECAST_VERSION_ID) REFERENCES PP_FORECAST_VERSION (ID);
ALTER TABLE PP_MPS ADD CONSTRAINT FK_PP_INV_FCST_PP_MPS FOREIGN KEY (INVENTORY_FORECAST_ID) REFERENCES PP_INVENTORY_FORECAST (ID);
ALTER TABLE PP_MPS ADD CONSTRAINT FK_PP_MPS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_MPS ADD CONSTRAINT FK_PP_PLN_LVL_PP_MPS FOREIGN KEY (PLANNING_LEVEL_ID) REFERENCES PP_PLANNING_LEVEL (ID);
ALTER TABLE PP_MPS_LINE ADD CONSTRAINT FK_PP_FCST_VER_PP_MPS_LINE FOREIGN KEY (FORECAST_VERSION_ID) REFERENCES PP_FORECAST_VERSION (ID);
ALTER TABLE PP_MPS_LINE ADD CONSTRAINT FK_PP_GEN_ITEM_PP_MPS_LINE FOREIGN KEY (PLANNING_ITEM_ID) REFERENCES PP_GENERIC_ITEM (ID);
ALTER TABLE PP_MPS_LINE ADD CONSTRAINT FK_PP_INV_FCST_PP_MPS_LINE FOREIGN KEY (INVENTORY_FORECAST_ID) REFERENCES PP_INVENTORY_FORECAST (ID);
ALTER TABLE PP_MPS_LINE ADD CONSTRAINT FK_PP_MPS_LINE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_MPS_LINE ADD CONSTRAINT FK_PP_MPS_PP_MPS_LINE FOREIGN KEY (MPS_ID) REFERENCES PP_MPS (ID) ON DELETE CASCADE;
ALTER TABLE PP_MRP_INPUTS ADD CONSTRAINT FK_PP_MRP_INPUTS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_MRP_INPUTS ADD CONSTRAINT FK_PP_MRP_VER_PP_MRP_INPUTS FOREIGN KEY (MRP_VERSION_CONTROL_ID) REFERENCES PP_MRP_VERSION_CONTROL (ID) ON DELETE CASCADE;
ALTER TABLE PP_MRP_OUTPUTS ADD CONSTRAINT FK_PP_MRP_OUTPUTS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_MRP_OUTPUTS ADD CONSTRAINT FK_PP_MRP_VER_PP_MRP_OUTPUTS FOREIGN KEY (MRP_VERSION_CONTROL_ID) REFERENCES PP_MRP_VERSION_CONTROL (ID) ON DELETE CASCADE;
ALTER TABLE PP_MRP_RECOMMENDATION ADD CONSTRAINT FK_CATALOG__PP_MRP_RECOMMEND FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE PP_MRP_RECOMMENDATION ADD CONSTRAINT FK_CONTRACTOR_PP_MRP_RECOMMEND1 FOREIGN KEY (SOURCE_WAREHOUSE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PP_MRP_RECOMMENDATION ADD CONSTRAINT FK_CONTRACTOR_PP_MRP_RECOMMEND2 FOREIGN KEY (WAREHOUSE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PP_MRP_RECOMMENDATION ADD CONSTRAINT FK_CONTRACTOR_PP_MRP_RECOMMEND3 FOREIGN KEY (VENDOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PP_MRP_RECOMMENDATION ADD CONSTRAINT FK_MEASURE__PP_MRP_RECOMMEND FOREIGN KEY (MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE PP_MRP_RECOMMENDATION ADD CONSTRAINT FK_PPMRPRECOMMEND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_MRP_RECOMMENDATION ADD CONSTRAINT FK_PP_MRP_VER__PP_MRP_RECOMMEND FOREIGN KEY (MRP_VERSION_CONTROL_ID) REFERENCES PP_MRP_VERSION_CONTROL (ID) ON DELETE CASCADE;
ALTER TABLE PP_MRP_REPORT ADD CONSTRAINT FK_PP_MRP_REPORT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_MRP_REPORT ADD CONSTRAINT FK_PP_MRP_VER_PP_MRP_REPORT FOREIGN KEY (MRP_VERSION_CONTROL_ID) REFERENCES PP_MRP_VERSION_CONTROL (ID) ON DELETE CASCADE;
ALTER TABLE PP_MRP_SHORTAGE ADD CONSTRAINT FK_PP_MRP_SHORTAGE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_MRP_SHORTAGE ADD CONSTRAINT FK_PP_MRP_VER_PP_MRP_SHORTAGE FOREIGN KEY (MRP_VERSION_CONTROL_ID) REFERENCES PP_MRP_VERSION_CONTROL (ID) ON DELETE CASCADE;
ALTER TABLE PP_MRP_TOTALS_BY_DATE ADD CONSTRAINT FK_PPMRPTOT_BY_DATE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_MRP_TOTALS_BY_DATE ADD CONSTRAINT FK_PP_MRP_TOT_BY_DATE_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE PP_MRP_TOTALS_BY_DATE ADD CONSTRAINT FK_PP_MRP_TOT_BY_DATE_CONTR FOREIGN KEY (WAREHOUSE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PP_MRP_TOTALS_BY_DATE ADD CONSTRAINT FK_PP_MRP_TOT_BY_DATE_VER_CTRL FOREIGN KEY (MRP_VERSION_CONTROL_ID) REFERENCES PP_MRP_VERSION_CONTROL (ID) ON DELETE CASCADE;
ALTER TABLE PP_MRP_VERSION_CONTROL ADD CONSTRAINT FK_PPMRPVERCONTROL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_MRP_VERSION_FORECAST ADD CONSTRAINT FK_PPMRPVERFORECAST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_MRP_VERSION_FORECAST ADD CONSTRAINT FK_PP_FCST_VER_PP_MRP_VER_FCST FOREIGN KEY (FORECAST_VERSION_ID) REFERENCES PP_FORECAST_VERSION (ID);
ALTER TABLE PP_MRP_VERSION_FORECAST ADD CONSTRAINT FK_PP_MRP_VER_PP_MRP_VER_FCST FOREIGN KEY (MRP_VERSION_CONTROL_ID) REFERENCES PP_MRP_VERSION_CONTROL (ID) ON DELETE CASCADE;
ALTER TABLE PP_MRP_VERSION_MPS ADD CONSTRAINT FK_PP_MRP_VERSION_MPS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_MRP_VERSION_MPS ADD CONSTRAINT FK_PP_MRP_VER_PP_MRP_VER_MPS FOREIGN KEY (MRP_VERSION_CONTROL_ID) REFERENCES PP_MRP_VERSION_CONTROL (ID) ON DELETE CASCADE;
ALTER TABLE PP_PLANNING_FORECAST ADD CONSTRAINT FK_MEASURE_PP_PLN_FCST FOREIGN KEY (MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE PP_PLANNING_FORECAST ADD CONSTRAINT FK_PP_FCST_VER_PP_PLN_FCST FOREIGN KEY (FORECAST_VERSION_ID) REFERENCES PP_FORECAST_VERSION (ID);
ALTER TABLE PP_PLANNING_FORECAST ADD CONSTRAINT FK_PP_GEN_ITEM_PP_PLN_FCST FOREIGN KEY (PLANNING_ITEM_ID) REFERENCES PP_GENERIC_ITEM (ID);
ALTER TABLE PP_PLANNING_FORECAST ADD CONSTRAINT FK_PP_PLANNING_FORECAST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_PLANNING_FORECAST ADD CONSTRAINT FK_PP_PLN_FCST_CONTR1 FOREIGN KEY (WAREHOUSE_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PP_PLANNING_FORECAST ADD CONSTRAINT FK_PP_PLN_LVL_PP_PLN_FCST FOREIGN KEY (PLANNING_LEVEL_ID) REFERENCES PP_PLANNING_LEVEL (ID);
ALTER TABLE PP_PLANNING_LEVEL ADD CONSTRAINT FK_PP_PLANNING_LEVEL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_PLANNING_LEVEL_BUCKET ADD CONSTRAINT FK_PPPLANLEVEL_BUCKET_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_PLANNING_LEVEL_BUCKET ADD CONSTRAINT FK_PP_PLN_LVL_PP_PLN_LVL_BUCKET FOREIGN KEY (PLANNING_LEVEL_ID) REFERENCES PP_PLANNING_LEVEL (ID);
ALTER TABLE PP_PRODUCTION_PROFILE ADD CONSTRAINT FK_PPPRODUCTPROFILE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_PRODUCTION_PROFILE ADD CONSTRAINT FK_PP_GEN_ITEM_PP_PROD_PROFILE FOREIGN KEY (GENERIC_ITEM_ID) REFERENCES PP_GENERIC_ITEM (ID);
ALTER TABLE PP_PRODUCTION_PROFILE ADD CONSTRAINT FK_PP_PLN_LVL_PP_PROD_PROFILE FOREIGN KEY (PLANNING_LEVEL_ID) REFERENCES PP_PLANNING_LEVEL (ID);
ALTER TABLE PP_RCCP_DETAIL ADD CONSTRAINT FK_MEASURE_PP_RCCP_DETAIL FOREIGN KEY (LOAD_MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE PP_RCCP_DETAIL ADD CONSTRAINT FK_MF_RES_GRP_PP_RCCP_DETAIL FOREIGN KEY (RESOURCE_GROUP_ID) REFERENCES MF_RESOURCE_GROUP (ID);
ALTER TABLE PP_RCCP_DETAIL ADD CONSTRAINT FK_PP_GEN_ITEM_PP_RCCP_DETAIL FOREIGN KEY (PLANNING_ITEM_ID) REFERENCES PP_GENERIC_ITEM (ID);
ALTER TABLE PP_RCCP_DETAIL ADD CONSTRAINT FK_PP_RCCP_DETAIL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_RCCP_DETAIL ADD CONSTRAINT FK_PP_RCCP_HDR_PP_RCCP_DETAIL FOREIGN KEY (RCCP_HEADER_ID) REFERENCES PP_RCCP_HEADER (ID);
ALTER TABLE PP_RCCP_HEADER ADD CONSTRAINT FK_PP_MPS__PP_RCCP_HEADER FOREIGN KEY (MPS_ID) REFERENCES PP_MPS (ID);
ALTER TABLE PP_RCCP_HEADER ADD CONSTRAINT FK_PP_RCCP_HEADER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PP_RCCP_HEADER ADD CONSTRAINT FK_WEEK_CAL__PP_RCCP_HEADER FOREIGN KEY (WEEK_CAL_ID) REFERENCES MF_WEEK_CAL (ID);
ALTER TABLE PP_RCCP_RESOURCE_LOAD ADD CONSTRAINT FK_MEAS__PP_RCCP_RES_LD FOREIGN KEY (LOAD_MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE PP_RCCP_RESOURCE_LOAD ADD CONSTRAINT FK_MF_RES_GRP__PP_RCCP_RES_LD FOREIGN KEY (RESOURCE_GROUP_ID) REFERENCES MF_RESOURCE_GROUP (ID);
ALTER TABLE PP_RCCP_RESOURCE_LOAD ADD CONSTRAINT FK_PP_RCCP_HDR__PP_RCCP_RES_LD FOREIGN KEY (RCCP_HEADER_ID) REFERENCES PP_RCCP_HEADER (ID);
ALTER TABLE PP_RCCP_RESOURCE_LOAD ADD CONSTRAINT FK_RCCP_RESOURCE_LOAD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_ABBREVIATION ADD CONSTRAINT FK_PREF_ABBREVIATION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_ADDITIONAL_EDUCATION_KIND ADD CONSTRAINT FK_ADDEDUCATION_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_ADDRESS ADD CONSTRAINT FKEY_PREF_ADDRESS_PERSONNEL FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_ADDRESS ADD CONSTRAINT FK_PREF_ADDRESS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_CALC_PERIOD ADD CONSTRAINT FKEY_PREF_CPERIOD_STAFFLIST FOREIGN KEY (STAFFLIST_ID) REFERENCES PREF_STAFF_LIST (ID);
ALTER TABLE PREF_CALC_PERIOD ADD CONSTRAINT FK_PREF_CALC_PERIOD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_CONFIG ADD CONSTRAINT FKEY_PREF_CONFIG_COSTSANL FOREIGN KEY (COSTS_ANL_ID) REFERENCES CATALOG (ID);
ALTER TABLE PREF_CONFIG ADD CONSTRAINT FK_PREF_CONFIG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_CONFIG ADD CONSTRAINT FK_PREF_CONFIG_CURRENCY1 FOREIGN KEY (BASE_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE PREF_CONFIG ADD CONSTRAINT FK_PREF_CONFIG_CURRENCY2 FOREIGN KEY (NAT_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE PREF_CONFIG ADD CONSTRAINT FK_PREF_CONFIG_RATE_AUTH FOREIGN KEY (CUR_RATE_AUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE PREF_CONFIG ADD CONSTRAINT FK_PREF_CONFIG_RATE_TYPE FOREIGN KEY (CUR_RATE_TYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE PREF_COSTS_ANL ADD CONSTRAINT FKEY_PREF_COSTS_ANL_PARENT FOREIGN KEY (PARENT_ID) REFERENCES PREF_COSTS_ANL (ID) ON DELETE SET NULL;
ALTER TABLE PREF_COSTS_ANL ADD CONSTRAINT FK_PREF_COSTS_ANL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_COUNTRY ADD CONSTRAINT FK_PREF_COUNTRY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_DEDUCTION_KIND ADD CONSTRAINT FK_PREF_DEDUCTION_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_EDUCATION_DEGREE ADD CONSTRAINT FK_EDUCDEGREE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_FAMILYDEDUCTIONS ADD CONSTRAINT FKEY_PREF_FDEDUCT_DEDUCTIONKIND FOREIGN KEY (DEDUCTIONKIND_ID) REFERENCES PREF_DEDUCTION_KIND (ID);
ALTER TABLE PREF_FAMILYDEDUCTIONS ADD CONSTRAINT FK_FAMILYDEDUCTIONS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_FAMILYDEDUCTIONS ADD CONSTRAINT FK_PREF_FDEDUCT_FMEMBER FOREIGN KEY (FAMILY_MEMBER_ID) REFERENCES REF_FAMILY_MEMBER (ID);
ALTER TABLE PREF_FAMILYMEMBERS ADD CONSTRAINT FKEY_PREF_FMEMBERS_PERSONNEL FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_FAMILYMEMBERS ADD CONSTRAINT FKEY_PREF_FMEMBERS_RELATION FOREIGN KEY (RELATION_ID) REFERENCES PREF_FAMILYRELATION (ID);
ALTER TABLE PREF_FAMILYMEMBERS ADD CONSTRAINT FK_PREF_FAMILYMEMBERS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_FAMILYRELATION ADD CONSTRAINT FK_PREF_FAMILYRELATION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_FAMILYSTATUS ADD CONSTRAINT FKEY_PREF_FAMSTATUS_PERSONNEL FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_FAMILYSTATUS ADD CONSTRAINT FKEY_PREF_FAMSTATUS_STATUSKIND FOREIGN KEY (STATUSKIND_ID) REFERENCES PREF_FAMILYSTATUS_KIND (ID);
ALTER TABLE PREF_FAMILYSTATUS ADD CONSTRAINT FK_PREF_FAMILYSTATUS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_FAMILYSTATUS_KIND ADD CONSTRAINT FK_FAMILYSTATUS_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_FOREIGN_LANGUAGE ADD CONSTRAINT FK_FOREIGNLANG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_IDENTDOC ADD CONSTRAINT FKEY_PREF_IDENTDOC_ADDRESS FOREIGN KEY (ADDRESS_ID) REFERENCES PREF_ADDRESS (ID);
ALTER TABLE PREF_IDENTDOC ADD CONSTRAINT FKEY_PREF_IDENTDOC_IDENTDOCKIND FOREIGN KEY (IDENTDOCKIND_ID) REFERENCES PREF_IDENTDOC_KIND (ID);
ALTER TABLE PREF_IDENTDOC ADD CONSTRAINT FKEY_PREF_IDENTDOC_NATION FOREIGN KEY (NATIONALITY_ID) REFERENCES PREF_NATIONALITY (ID);
ALTER TABLE PREF_IDENTDOC ADD CONSTRAINT FKEY_PREF_IDENTDOC_PERSONNEL FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_IDENTDOC ADD CONSTRAINT FK_PREF_IDENTDOC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_IDENTDOC_KIND ADD CONSTRAINT FK_PREF_IDENTDOC_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_INSUREDCLASS ADD CONSTRAINT FK_PREF_INSUREDCLASS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_JOB ADD CONSTRAINT FK_PREF_JOB_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_KLADR ADD CONSTRAINT FK_PREF_KLADR_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_LANGUAGE_KNOWLEDGE ADD CONSTRAINT FK_LANGKNOWLEDGE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_LEAVE_KIND ADD CONSTRAINT FK_PREF_LEAVE_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_MILITARY_RANK ADD CONSTRAINT FK_PREF_MILITARY_RANK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_MILITARY_RANK_KIND ADD CONSTRAINT FK_MILITARY_RANK_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_MILITARY_VALIDITY ADD CONSTRAINT FK_MILITARY_VALIDITY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_NATIONALITY ADD CONSTRAINT FK_PREF_NATIONALITY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT FKEY_PREF_PERSONNEL_GROUP FOREIGN KEY (GROUP_ID) REFERENCES PREF_PERSONNEL_GROUP (ID);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT FKEY_PREF_PERSONNEL_INSCLASS FOREIGN KEY (INSUREDCLASS_ID) REFERENCES PREF_INSUREDCLASS (ID);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT FK_PREF_PERSONNEL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT FK_PREF_PERSONNEL_ED_DEGREE FOREIGN KEY (EDUCATION_DEGREE_ID) REFERENCES PREF_EDUCATION_DEGREE (ID);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT FK_PREF_PERSONNEL_NAT_PERS FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT FK_PREF_PERS_MIL_RANK FOREIGN KEY (MIL_RANK_ID) REFERENCES PREF_MILITARY_RANK (ID);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT FK_PREF_PERS_MIL_RANK_KIND FOREIGN KEY (MIL_RANK_KIND_ID) REFERENCES PREF_MILITARY_RANK_KIND (ID);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT FK_PREF_PERS_MIL_RESRV_CAT FOREIGN KEY (MIL_RESERVE_CATEGORY_ID) REFERENCES PREF_RESERVE_CATEGORY (ID);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT FK_PREF_PERS_MIL_VALIDITY FOREIGN KEY (MIL_VALIDITY_ID) REFERENCES PREF_MILITARY_VALIDITY (ID);
ALTER TABLE PREF_PERSONNEL ADD CONSTRAINT FK_PREF_PERS_RETIRE_ORDER FOREIGN KEY (RETIRE_ORDER_ID) REFERENCES HR_ORDER (ID);
ALTER TABLE PREF_PERSONNEL_ATTESTATION ADD CONSTRAINT FK_PERSONNEL_ATTEST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_ATTESTATION ADD CONSTRAINT FK_PREF_PERS_ATTESTTN_DOC FOREIGN KEY (RESOLUTION_DOCUMENT_ID) REFERENCES REF_ORIGINAL_DOCUMENT (ID);
ALTER TABLE PREF_PERSONNEL_ATTESTATION ADD CONSTRAINT FK_PREF_PERS_ATTESTTN_ORDER FOREIGN KEY (ORDER_ID) REFERENCES HR_ORDER (ID);
ALTER TABLE PREF_PERSONNEL_ATTESTATION ADD CONSTRAINT FK_PREF_PERS_ATTESTTN_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_EDUCATION ADD CONSTRAINT FK_PERSONNEL_EDUC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_EDUCATION ADD CONSTRAINT FK_PREF_PERS_EDUCATION_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_EDUCATION ADD CONSTRAINT FK_PREF_PERS_EDUCATION_SPEC FOREIGN KEY (SPECIALITY_ID) REFERENCES PREF_SPECIALITY (ID);
ALTER TABLE PREF_PERSONNEL_EDUCATION ADD CONSTRAINT FK_PREF_PERS_EDU_ADD_KIND FOREIGN KEY (ADDITIONAL_EDUCATION_KIND_ID) REFERENCES PREF_ADDITIONAL_EDUCATION_KIND (ID);
ALTER TABLE PREF_PERSONNEL_GROUP ADD CONSTRAINT FKEY_PERSONNEL_GROUP_TYPE FOREIGN KEY (GROUPTYPE_ID) REFERENCES PREF_PERSONNEL_GROUP_TYPE (ID);
ALTER TABLE PREF_PERSONNEL_GROUP ADD CONSTRAINT FK_PREF_PERSONNEL_GROUP_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_GROUP_TYPE ADD CONSTRAINT FK_PERSONNEL_GRP_TYPE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_HIST ADD CONSTRAINT FKEY_PREF_PERSONNEL_HIST_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_HIST ADD CONSTRAINT FKEY_PREF_PERS_HIST_INSCLASS FOREIGN KEY (INSUREDCLASS_ID) REFERENCES PREF_INSUREDCLASS (ID);
ALTER TABLE PREF_PERSONNEL_HIST ADD CONSTRAINT FK_PREF_PERSONNEL_HIST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_LABOUR_CONTRACT ADD CONSTRAINT FK_PERSONNEL_LABOURC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_LABOUR_CONTRACT ADD CONSTRAINT FK_PREF_PERS_LAB_CONTR_DOC FOREIGN KEY (ORIGINAL_DOCUMENT_ID) REFERENCES REF_ORIGINAL_DOCUMENT (ID);
ALTER TABLE PREF_PERSONNEL_LABOUR_CONTRACT ADD CONSTRAINT FK_PREF_PERS_LAB_CONTR_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_LANGUAGE ADD CONSTRAINT FK_PERSONNEL_LANG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_LANGUAGE ADD CONSTRAINT FK_PREF_PERS_LANGUAGE_KNOW FOREIGN KEY (LANGUAGE_KNOWLEDGE_ID) REFERENCES PREF_LANGUAGE_KNOWLEDGE (ID);
ALTER TABLE PREF_PERSONNEL_LANGUAGE ADD CONSTRAINT FK_PREF_PERS_LANGUAGE_LANG FOREIGN KEY (FOREIGN_LANGUAGE_ID) REFERENCES PREF_FOREIGN_LANGUAGE (ID);
ALTER TABLE PREF_PERSONNEL_LANGUAGE ADD CONSTRAINT FK_PREF_PERS_LANGUAGE_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_LEAVE ADD CONSTRAINT FK_PREF_PERSONNEL_LEAVE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_LEAVE ADD CONSTRAINT FK_PREF_PERS_LEAVE_L_KIND FOREIGN KEY (LEAVE_KIND_ID) REFERENCES PREF_LEAVE_KIND (ID);
ALTER TABLE PREF_PERSONNEL_LEAVE ADD CONSTRAINT FK_PREF_PERS_LEAVE_ORDER FOREIGN KEY (ORDER_ID) REFERENCES HR_ORDER (ID);
ALTER TABLE PREF_PERSONNEL_LEAVE ADD CONSTRAINT FK_PREF_PERS_LEAVE_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_PHONE ADD CONSTRAINT FK_PREF_PERSONNEL_PHONE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_PHONE ADD CONSTRAINT FK_PREF_PERS_PHONE_KIND FOREIGN KEY (PHONE_KIND_ID) REFERENCES REF_PHONE_KIND (ID);
ALTER TABLE PREF_PERSONNEL_PHONE ADD CONSTRAINT FK_PREF_PERS_PHONE_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_PROFESSION ADD CONSTRAINT FK_PERSONNEL_PROF_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_PROFESSION ADD CONSTRAINT FK_PREF_PERS_PROF_JOB FOREIGN KEY (JOB_ID) REFERENCES PREF_JOB (ID);
ALTER TABLE PREF_PERSONNEL_PROFESSION ADD CONSTRAINT FK_PREF_PERS_PROF_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_RECORD ADD CONSTRAINT FK_PERSONNEL_REC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_RECORD ADD CONSTRAINT FK_PREF_PERS_RECORD_DOC FOREIGN KEY (ORIGINAL_DOCUMENT_ID) REFERENCES REF_ORIGINAL_DOCUMENT (ID);
ALTER TABLE PREF_PERSONNEL_RECORD ADD CONSTRAINT FK_PREF_PERS_RECORD_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_REWARD ADD CONSTRAINT FK_PERSONNEL_REWARD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_REWARD ADD CONSTRAINT FK_PREF_PERS_REWARD_DOC FOREIGN KEY (ORIGINAL_DOCUMENT_ID) REFERENCES REF_ORIGINAL_DOCUMENT (ID);
ALTER TABLE PREF_PERSONNEL_REWARD ADD CONSTRAINT FK_PREF_PERS_REWARD_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_SERVICE ADD CONSTRAINT FKEY_PREF_PERSSERV_PERSONNEL FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_SERVICE ADD CONSTRAINT FKEY_PREF_PERSSERV_SERVICEKIND FOREIGN KEY (SERVICEKIND_ID) REFERENCES PREF_SERVICE_KIND (ID);
ALTER TABLE PREF_PERSONNEL_SERVICE ADD CONSTRAINT FK_PERSONNEL_SRV_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_SKILL_RAISING ADD CONSTRAINT FK_PERSONNEL_SKILLR_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_SKILL_RAISING ADD CONSTRAINT FK_PREF_PERS_SKL_RAISE_DOC FOREIGN KEY (CERTIFICATE_DOCUMENT_ID) REFERENCES REF_ORIGINAL_DOCUMENT (ID);
ALTER TABLE PREF_PERSONNEL_SKILL_RAISING ADD CONSTRAINT FK_PREF_PERS_SKL_RAISE_KIND FOREIGN KEY (SKILL_RAISING_KIND_ID) REFERENCES PREF_SKILL_RAISING_KIND (ID);
ALTER TABLE PREF_PERSONNEL_SKILL_RAISING ADD CONSTRAINT FK_PREF_PERS_SKL_RAISE_ORD FOREIGN KEY (ORDER_ID) REFERENCES HR_ORDER (ID);
ALTER TABLE PREF_PERSONNEL_SKILL_RAISING ADD CONSTRAINT FK_PREF_PERS_SKL_RAISE_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_SOCIAL_BENEFIT ADD CONSTRAINT FK_PERSONNEL_SOCIALB_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_SOCIAL_BENEFIT ADD CONSTRAINT FK_PREF_PERS_SOC_BNFT_DOC FOREIGN KEY (ORIGINAL_DOCUMENT_ID) REFERENCES REF_ORIGINAL_DOCUMENT (ID);
ALTER TABLE PREF_PERSONNEL_SOCIAL_BENEFIT ADD CONSTRAINT FK_PREF_PERS_SOC_BNFT_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_TRANSFER ADD CONSTRAINT FK_PERSONNEL_TRAN_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERSONNEL_TRANSFER ADD CONSTRAINT FK_PREF_PERS_TRANSFER_ORDER FOREIGN KEY (ORDER_ID) REFERENCES HR_ORDER (ID);
ALTER TABLE PREF_PERSONNEL_TRANSFER ADD CONSTRAINT FK_PREF_PERS_TRANSFER_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERSONNEL_TRANSFER ADD CONSTRAINT FK_PREF_PERS_TRANSFER_POS FOREIGN KEY (STAFF_LIST_POSITION_ID) REFERENCES PREF_STAFF_LIST_POSITION (ID);
ALTER TABLE PREF_PERSONNEL_TRANSFER ADD CONSTRAINT FK_PREF_PERS_TRANSFER_UNIT FOREIGN KEY (STAFF_LIST_UNIT_ID) REFERENCES PREF_STAFF_LIST_UNIT (ID);
ALTER TABLE PREF_PERS_VOCATIONAL_TRAINING ADD CONSTRAINT FK_PERS_VOC_TRAINING_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PERS_VOCATIONAL_TRAINING ADD CONSTRAINT FK_PREF_PERS_VOC_TRAIN_DOC FOREIGN KEY (CERTIFICATE_DOCUMENT_ID) REFERENCES REF_ORIGINAL_DOCUMENT (ID);
ALTER TABLE PREF_PERS_VOCATIONAL_TRAINING ADD CONSTRAINT FK_PREF_PERS_VOC_TRAIN_ORD FOREIGN KEY (ORDER_ID) REFERENCES HR_ORDER (ID);
ALTER TABLE PREF_PERS_VOCATIONAL_TRAINING ADD CONSTRAINT FK_PREF_PERS_VOC_TRAIN_PERS FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PERS_VOCATIONAL_TRAINING ADD CONSTRAINT FK_PREF_PERS_VOC_TRAIN_SPEC FOREIGN KEY (SPECIALITY_ID) REFERENCES PREF_SPECIALITY (ID);
ALTER TABLE PREF_PFCODEKIND_IN_SERVICEKIND ADD CONSTRAINT FKEY_PREF_PCK_IN_SK_PFCODEKIND FOREIGN KEY (PFCODEKIND_ID) REFERENCES FOLDER (ID);
ALTER TABLE PREF_PFCODEKIND_IN_SERVICEKIND ADD CONSTRAINT FKEY_PREF_PCK_IN_SK_SERVICEKIND FOREIGN KEY (SERVICEKIND_ID) REFERENCES PREF_SERVICE_KIND (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PFCODEKIND_IN_SERVICEKIND ADD CONSTRAINT FK_PFCODEKIND_SRVKIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_PFCODE_IN_SERVICE ADD CONSTRAINT FKEY_PREF_PFC_IN_S_PERSSERVICE FOREIGN KEY (PERSONNELSERVICE_ID) REFERENCES PREF_PERSONNEL_SERVICE (ID) ON DELETE CASCADE;
ALTER TABLE PREF_PFCODE_IN_SERVICE ADD CONSTRAINT FKEY_PREF_PFC_IN_S_PFCODE FOREIGN KEY (PFCODE_ID) REFERENCES PREF_SERVICE_PFCODE (ID);
ALTER TABLE PREF_PFCODE_IN_SERVICE ADD CONSTRAINT FK_PFCODE_SRV_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_POSITION ADD CONSTRAINT FK_PREF_POSITION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_POSITION_FILL_KIND ADD CONSTRAINT FK_POSITIONFILL_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_RESERVE_CATEGORY ADD CONSTRAINT FK_RESERVECATEGORY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_RISE ADD CONSTRAINT FK_PREF_RISE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_RISE_PERCENT ADD CONSTRAINT FKEY_PREF_RPERCENT_SCALE FOREIGN KEY (RISESCALE_ID) REFERENCES PREF_RISE_SCALE (ID) ON DELETE CASCADE;
ALTER TABLE PREF_RISE_PERCENT ADD CONSTRAINT FK_PREF_RISE_PERCENT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_RISE_SCALE ADD CONSTRAINT FKEY_PREF_RISE_SCALE_RISE FOREIGN KEY (RISE_ID) REFERENCES PREF_RISE (ID) ON DELETE CASCADE;
ALTER TABLE PREF_RISE_SCALE ADD CONSTRAINT FK_PREF_RISE_SCALE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_SERVICE_KIND ADD CONSTRAINT FK_PREF_SERVICE_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_SERVICE_PFCODE ADD CONSTRAINT FKEY_PREF_SERVICE_PFCODE_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE PREF_SERVICE_PFCODE ADD CONSTRAINT FK_PREF_SERVICE_PFCODE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_SKILL_RAISING_KIND ADD CONSTRAINT FK_SKILL_RAIS_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_SPECIALITY ADD CONSTRAINT FK_PREF_SPECIALITY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_STAFF_CATEGORY ADD CONSTRAINT FK_PREF_STAFF_CATEGORY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_STAFF_LIST ADD CONSTRAINT FK_PREF_STAFF_LIST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_STAFF_LIST ADD CONSTRAINT FK_PREF_STAFF_LIST_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FKEY_PREF_SLIST_POS_ANL1 FOREIGN KEY (COSTS_ANL1_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FKEY_PREF_SLIST_POS_ANL2 FOREIGN KEY (COSTS_ANL2_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FKEY_PREF_SLIST_POS_ANL3 FOREIGN KEY (COSTS_ANL3_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FKEY_PREF_SLIST_POS_ANL4 FOREIGN KEY (COSTS_ANL4_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FKEY_PREF_SLIST_POS_ANL5 FOREIGN KEY (COSTS_ANL5_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FKEY_PREF_SL_POS_CATEGORY FOREIGN KEY (STAFFCATEGORY_ID) REFERENCES PREF_STAFF_CATEGORY (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FKEY_PREF_SL_POS_POSITION FOREIGN KEY (POSITION_ID) REFERENCES PREF_POSITION (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FKEY_PREF_SL_POS_SCHED FOREIGN KEY (WORK_SCHEDULE_ID) REFERENCES PREF_WORK_SCHEDULE (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FKEY_PREF_SL_POS_SL_UNIT FOREIGN KEY (STAFFLISTUNIT_ID) REFERENCES PREF_STAFF_LIST_UNIT (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FKEY_PREF_SL_POS_WORKCOND FOREIGN KEY (WORKCONDITION_ID) REFERENCES PREF_WORK_CONDITION (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FK_PREF_SL_POS_TAX_CALC FOREIGN KEY (TAX_CALC_KIND_ID) REFERENCES PREF_TAX_CALC_KIND (ID);
ALTER TABLE PREF_STAFF_LIST_POSITION ADD CONSTRAINT FK_STAFFLIST_POSITION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_STAFF_LIST_UNIT ADD CONSTRAINT FKEY_PREF_SLIST_UNIT_ANL1 FOREIGN KEY (COSTS_ANL1_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_STAFF_LIST_UNIT ADD CONSTRAINT FKEY_PREF_SLIST_UNIT_ANL2 FOREIGN KEY (COSTS_ANL2_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_STAFF_LIST_UNIT ADD CONSTRAINT FKEY_PREF_SLIST_UNIT_ANL3 FOREIGN KEY (COSTS_ANL3_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_STAFF_LIST_UNIT ADD CONSTRAINT FKEY_PREF_SLIST_UNIT_ANL4 FOREIGN KEY (COSTS_ANL4_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_STAFF_LIST_UNIT ADD CONSTRAINT FKEY_PREF_SLIST_UNIT_ANL5 FOREIGN KEY (COSTS_ANL5_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_STAFF_LIST_UNIT ADD CONSTRAINT FKEY_PREF_SLIST_UNIT_PARENT FOREIGN KEY (PARENT_ID) REFERENCES PREF_STAFF_LIST_UNIT (ID);
ALTER TABLE PREF_STAFF_LIST_UNIT ADD CONSTRAINT FKEY_PREF_SLIST_UNIT_SCHED FOREIGN KEY (WORK_SCHEDULE_ID) REFERENCES PREF_WORK_SCHEDULE (ID);
ALTER TABLE PREF_STAFF_LIST_UNIT ADD CONSTRAINT FKEY_PREF_SLIST_UNIT_SLIST FOREIGN KEY (STAFFLIST_ID) REFERENCES PREF_STAFF_LIST (ID) ON DELETE CASCADE;
ALTER TABLE PREF_STAFF_LIST_UNIT ADD CONSTRAINT FK_PREF_SLIST_UNIT_TAX_CALC FOREIGN KEY (TAX_CALC_KIND_ID) REFERENCES PREF_TAX_CALC_KIND (ID);
ALTER TABLE PREF_STAFF_LIST_UNIT ADD CONSTRAINT FK_PREF_STAFF_LIST_UNIT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_STREET ADD CONSTRAINT FK_PREF_STREET_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_TARIFFING ADD CONSTRAINT FKEY_PREF_TARIFFING_ANL1 FOREIGN KEY (COSTS_ANL1_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_TARIFFING ADD CONSTRAINT FKEY_PREF_TARIFFING_ANL2 FOREIGN KEY (COSTS_ANL2_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_TARIFFING ADD CONSTRAINT FKEY_PREF_TARIFFING_ANL3 FOREIGN KEY (COSTS_ANL3_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_TARIFFING ADD CONSTRAINT FKEY_PREF_TARIFFING_ANL4 FOREIGN KEY (COSTS_ANL4_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_TARIFFING ADD CONSTRAINT FKEY_PREF_TARIFFING_ANL5 FOREIGN KEY (COSTS_ANL5_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE PREF_TARIFFING ADD CONSTRAINT FKEY_PREF_TARIFFING_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES PREF_TARIFFING_CATEGORY (ID);
ALTER TABLE PREF_TARIFFING ADD CONSTRAINT FKEY_PREF_TARIFFING_POS_FILL FOREIGN KEY (POSITIONFILL_ID) REFERENCES SAL_POSITION_FILL (ID) ON DELETE CASCADE;
ALTER TABLE PREF_TARIFFING ADD CONSTRAINT FKEY_PREF_TARIFFING_STAFFLIST FOREIGN KEY (STAFFLIST_ID) REFERENCES PREF_STAFF_LIST (ID) ON DELETE CASCADE;
ALTER TABLE PREF_TARIFFING ADD CONSTRAINT FK_PREF_TARIFFING_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_TARIFFING_CATEGORY ADD CONSTRAINT FK_TARIFFING_CATEGORY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_TARIFF_SCALE ADD CONSTRAINT FKEY_PREF_TARIFF_SCALE_ALG FOREIGN KEY (FIRST_CLASS_ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE PREF_TARIFF_SCALE ADD CONSTRAINT FK_PREF_TARIFF_SCALE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_TARIFF_SCALE_CLASS ADD CONSTRAINT FKEY_PREF_TSCALE_CLASS_TSCL FOREIGN KEY (TARIFFSCALE_ID) REFERENCES PREF_TARIFF_SCALE (ID) ON DELETE CASCADE;
ALTER TABLE PREF_TARIFF_SCALE_CLASS ADD CONSTRAINT FK_TARIFF_SCALE_CLASS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_TAX_CALC_KIND ADD CONSTRAINT FK_PREF_TAX_CALC_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_WORKTIME_NORM ADD CONSTRAINT FKEY_PREF_WTIME_NORM_SCHED FOREIGN KEY (WORK_SCHEDULE_ID) REFERENCES PREF_WORK_SCHEDULE (ID) ON DELETE CASCADE;
ALTER TABLE PREF_WORKTIME_NORM ADD CONSTRAINT FKEY_PREF_WTIME_NRM_PERIOD FOREIGN KEY (CALC_PERIOD_ID) REFERENCES PREF_CALC_PERIOD (ID);
ALTER TABLE PREF_WORKTIME_NORM ADD CONSTRAINT FK_PREF_WORKTIME_NORM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_WORK_CONDITION ADD CONSTRAINT FK_PREF_WORK_CONDITION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PREF_WORK_SCHEDULE ADD CONSTRAINT FKEY_PREF_WORK_SCHED_LEAVE FOREIGN KEY (LEAVE_SCHEDULE_ID) REFERENCES PREF_WORK_SCHEDULE (ID);
ALTER TABLE PREF_WORK_SCHEDULE ADD CONSTRAINT FK_PREF_WORK_SCHEDULE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PRICELISTFOLDER ADD CONSTRAINT FKEY_PRICELISTFOLDER_PRICELIST FOREIGN KEY (PRICELISTHEAD_ID) REFERENCES PRICELISTHEAD (ID) ON DELETE CASCADE;
ALTER TABLE PRICELISTFOLDER ADD CONSTRAINT FKEY_PRLISTFOLDER_PRLISTFOLDER FOREIGN KEY (PARENT_ID) REFERENCES PRICELISTFOLDER (ID);
ALTER TABLE PRICELISTFOLDER ADD CONSTRAINT FK_PRICELISTFOLDER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PRICELISTHEAD ADD CONSTRAINT FKEY_PRICELISTHEAD_CURRENCY FOREIGN KEY (CURRENCY_CODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE PRICELISTHEAD ADD CONSTRAINT FKEY_PRICELISTHEAD_PRICETYPE FOREIGN KEY (BASEPRICETYPE) REFERENCES PRICETYPE (ID);
ALTER TABLE PRICELISTHEAD ADD CONSTRAINT FK_PRICELISTHEAD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PRICELISTHEAD ADD CONSTRAINT FK_PRICELISTHEAD_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE PRICELISTHEAD ADD CONSTRAINT FK_PRICELISTHEAD_CURRATE_AU FOREIGN KEY (CURRATEAUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE PRICELISTHEAD ADD CONSTRAINT FK_PRICELISTHEAD_CURRATE_TY FOREIGN KEY (CURRATETYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE PRICELISTHEAD_RIGHTS ADD CONSTRAINT FK_PRICELISTHEAD_RIGHTS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PRICELISTHEAD_RIGHTS ADD CONSTRAINT FK_PRICELISTHEAD_RIGHTS_GROUP FOREIGN KEY (GROUP_ID) REFERENCES SEC_GROUPS (ID) ON DELETE CASCADE;
ALTER TABLE PRICELISTHEAD_RIGHTS ADD CONSTRAINT FK_PRICELISTHEAD_RIGHTS_PRLIST FOREIGN KEY (REC_ID) REFERENCES PRICELISTHEAD (ID) ON DELETE CASCADE;
ALTER TABLE PRICELISTSPEC ADD CONSTRAINT FKEY_PRICELISTSPEC_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE PRICELISTSPEC ADD CONSTRAINT FKEY_PRICELISTSPEC_PRLISTFOLDER FOREIGN KEY (FOLDER_ID) REFERENCES PRICELISTFOLDER (ID);
ALTER TABLE PRICELISTSPEC ADD CONSTRAINT FK_PRICELISTSPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PRICELISTSPEC_PRICE ADD CONSTRAINT FKEY_PLS_PRICE_PRICETYPE FOREIGN KEY (PRICETYPE_ID) REFERENCES PRICETYPE (ID);
ALTER TABLE PRICELISTSPEC_PRICE ADD CONSTRAINT FKEY_PLS_PRICE_PRSPEC FOREIGN KEY (PRICELISTSPEC_ID) REFERENCES PRICELISTSPEC (ID) ON DELETE CASCADE;
ALTER TABLE PRICELISTSPEC_PRICE ADD CONSTRAINT FK_PRICELISTSPEC_PRICE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PRICELIST_PRICETYPE_LINK ADD CONSTRAINT FKEY_PR_LINK_PRICELIST FOREIGN KEY (PRICELIST_ID) REFERENCES PRICELISTHEAD (ID) ON DELETE CASCADE;
ALTER TABLE PRICELIST_PRICETYPE_LINK ADD CONSTRAINT FKEY_PR_LINK_PRICETYPE FOREIGN KEY (PRICETYPE_ID) REFERENCES PRICETYPE (ID);
ALTER TABLE PRICELIST_PRICETYPE_LINK ADD CONSTRAINT FK_PL_PT_LINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PRICELIST_PRICETYPE_LINK ADD CONSTRAINT FK_PRICELIST_PT_LINK_ALG FOREIGN KEY (ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE PRICETYPE ADD CONSTRAINT FK_PRICETYPE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PR_CONTACT_HIST ADD CONSTRAINT FKEY_PR_CHIST_ACCEPT_EMPL FOREIGN KEY (ACCEPT_EMPL_ID) REFERENCES EMPLOYEES (CONTRACTOR_ID);
ALTER TABLE PR_CONTACT_HIST ADD CONSTRAINT FKEY_PR_CHIST_CONTACTKIND FOREIGN KEY (CONTACTKIND_ID) REFERENCES PR_CONTACT_KIND (ID);
ALTER TABLE PR_CONTACT_HIST ADD CONSTRAINT FKEY_PR_CHIST_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE PR_CONTACT_HIST ADD CONSTRAINT FKEY_PR_CHIST_PARTNEMPL FOREIGN KEY (PARTNEMPL_ID) REFERENCES PARTNEMPL (ID);
ALTER TABLE PR_CONTACT_HIST ADD CONSTRAINT FKEY_PR_CHIST_PARTNEMPLPHON FOREIGN KEY (PARTNEMPLPHONE_ID) REFERENCES REF_PERSON_PHONE (ID);
ALTER TABLE PR_CONTACT_HIST ADD CONSTRAINT FKEY_PR_CHIST_PARTNER FOREIGN KEY (PARTNER_ID) REFERENCES PARTNER (CONTRACTOR_ID);
ALTER TABLE PR_CONTACT_HIST ADD CONSTRAINT FKEY_PR_CHIST_POSSIBLERESULT FOREIGN KEY (POSSIBLERESULT_ID) REFERENCES PR_POSSIBLE_RESULT (ID);
ALTER TABLE PR_CONTACT_HIST ADD CONSTRAINT FKEY_PR_CHIST_TO_EMPL FOREIGN KEY (TO_EMPL_ID) REFERENCES EMPLOYEES (CONTRACTOR_ID);
ALTER TABLE PR_CONTACT_HIST ADD CONSTRAINT FK_PR_CONTACT_HIST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PR_CONTACT_HIST_FILES ADD CONSTRAINT FKEY_PRCHISTFILES_PRCHIST FOREIGN KEY (CONTACTHIST_ID) REFERENCES PR_CONTACT_HIST (ID) ON DELETE CASCADE;
ALTER TABLE PR_CONTACT_HIST_FILES ADD CONSTRAINT FK_PR_CNT_HIST_FILES_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PR_CONTACT_KIND ADD CONSTRAINT FK_PR_CONTACT_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE PR_POSSIBLE_RESULT ADD CONSTRAINT FK_PR_POSSIBLE_RESULT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE QC_SCRAP_REASON ADD CONSTRAINT FK_QC_SCRAP_REASON_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE QC_SCRAP_TYPE ADD CONSTRAINT FK_QC_SCRAP_TYPE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_BANK ADD CONSTRAINT FK_REF_BANK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_BANK ADD CONSTRAINT FK_REF_BANK_CORR_ACC_CURR FOREIGN KEY (CORR_ACC_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE REF_BANK ADD CONSTRAINT FK_REF_BANK_COUNTRY FOREIGN KEY (COUNTRY_ID) REFERENCES REF_COUNTRY (ID);
ALTER TABLE REF_BANK_ACCOUNT ADD CONSTRAINT FK_REF_BANK_ACCOUNT_BANK FOREIGN KEY (BANK_ID) REFERENCES REF_BANK (ID);
ALTER TABLE REF_BANK_ACCOUNT ADD CONSTRAINT FK_REF_BANK_ACCOUNT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_BANK_ACCOUNT ADD CONSTRAINT FK_REF_BANK_ACCOUNT_CONTR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID) ON DELETE CASCADE;
ALTER TABLE REF_BANK_ACCOUNT ADD CONSTRAINT FK_REF_BANK_ACCOUNT_CURCODE FOREIGN KEY (CURCODE) REFERENCES CURRENCY (UPCODE);
ALTER TABLE REF_BANK_ACCOUNT ADD CONSTRAINT FK_REF_BANK_ACCOUNT_TYPE FOREIGN KEY (ACCOUNT_TYPE_ID) REFERENCES REF_BANK_ACCOUNT_TYPE (ID);
ALTER TABLE REF_BANK_ACCOUNT_TYPE ADD CONSTRAINT FK_BANKACC_TYPE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_CONFIDENTIAL_DATA ADD CONSTRAINT FKEY_REF_CONFDATA_PARTNER FOREIGN KEY (PARTNER_ID) REFERENCES PARTNER (CONTRACTOR_ID) ON DELETE CASCADE;
ALTER TABLE REF_CONFIDENTIAL_DATA ADD CONSTRAINT FK_CONFIDENTIAL_DATA_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_CONTRACTOR_EADDRESS ADD CONSTRAINT FK_CONTRACTOR_EADR_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_CONTRACTOR_EADDRESS ADD CONSTRAINT FK_REF_CONTR_EADDRESS_CONTR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID) ON DELETE CASCADE;
ALTER TABLE REF_CONTRACTOR_EADDRESS ADD CONSTRAINT FK_REF_CONTR_EADDRESS_KIND FOREIGN KEY (KIND_ID) REFERENCES REF_EADDRESS_KIND (ID);
ALTER TABLE REF_CONTRACTOR_PHONE ADD CONSTRAINT FK_REF_CONTRACTOR_PHONE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_CONTRACTOR_PHONE ADD CONSTRAINT FK_REF_CONTR_PHONE_CONTR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID) ON DELETE CASCADE;
ALTER TABLE REF_CONTRACTOR_PHONE ADD CONSTRAINT FK_REF_CONTR_PHONE_KIND FOREIGN KEY (PHONE_KIND_ID) REFERENCES REF_PHONE_KIND (ID);
ALTER TABLE REF_COUNTRY ADD CONSTRAINT FK_REF_COUNTRY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_CURRENCY_RATE ADD CONSTRAINT FK_REF_CURRENCY_RATE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_CURRENCY_RATE ADD CONSTRAINT FK_REF_CUR_RATE_AUTHERITY FOREIGN KEY (RATE_AUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE REF_CURRENCY_RATE ADD CONSTRAINT FK_REF_CUR_RATE_CUR1 FOREIGN KEY (CURRENCY_CODE1) REFERENCES CURRENCY (UPCODE);
ALTER TABLE REF_CURRENCY_RATE ADD CONSTRAINT FK_REF_CUR_RATE_CUR2 FOREIGN KEY (CURRENCY_CODE2) REFERENCES CURRENCY (UPCODE);
ALTER TABLE REF_CURRENCY_RATE ADD CONSTRAINT FK_REF_CUR_RATE_TYPE FOREIGN KEY (RATE_TYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE REF_CURRENCY_RATE_AUTHORITY ADD CONSTRAINT FK_REF_CURRATE_AUTH_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_CURRENCY_RATE_TYPE ADD CONSTRAINT FK_CURRATE_TYPE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_CUSTOMS_DECLARATION ADD CONSTRAINT FK_REF_CUST_DEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_DISTRICT ADD CONSTRAINT FK_REF_DISTRICT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_DISTRICT ADD CONSTRAINT FK_REF_DISTRICT_REGION FOREIGN KEY (REGION_ID) REFERENCES REF_REGION (ID);
ALTER TABLE REF_EADDRESS_KIND ADD CONSTRAINT FK_REF_EADDRESS_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_FAMILY_MEMBER ADD CONSTRAINT FK_REF_FAMILY_MEMBER_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_FAMILY_MEMBER ADD CONSTRAINT FK_REF_FMEMBER_PERSON FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID) ON DELETE CASCADE;
ALTER TABLE REF_FAMILY_MEMBER ADD CONSTRAINT FK_REF_FMEMBER_RELATION FOREIGN KEY (RELATION_ID) REFERENCES REF_FAMILY_RELATION (ID);
ALTER TABLE REF_FAMILY_RELATION ADD CONSTRAINT FK_REF_FAMILY_RELATION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_FAMILY_STATUS ADD CONSTRAINT FK_REF_FAMILY_STATUS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_FAMILY_STATUS ADD CONSTRAINT FK_REF_FAM_STATUS_PERSON FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID) ON DELETE CASCADE;
ALTER TABLE REF_FAMILY_STATUS ADD CONSTRAINT FK_REF_FAM_STATUS_STATUSKIND FOREIGN KEY (STATUSKIND_ID) REFERENCES REF_FAMILY_STATUS_KIND (ID);
ALTER TABLE REF_FAMILY_STATUS_KIND ADD CONSTRAINT FK_RFAMSTATUS_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_HOLIDAYS ADD CONSTRAINT FK_REF_HOLIDAYS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_IDENT_DOC ADD CONSTRAINT FK_REF_IDENT_DOC_ADDRESS FOREIGN KEY (ADDRESS_ID) REFERENCES REF_PERSON_ADDRESS (ID);
ALTER TABLE REF_IDENT_DOC ADD CONSTRAINT FK_REF_IDENT_DOC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_IDENT_DOC ADD CONSTRAINT FK_REF_IDENT_DOC_IDENTDOCKIND FOREIGN KEY (IDENTDOCKIND_ID) REFERENCES REF_IDENT_DOC_KIND (ID);
ALTER TABLE REF_IDENT_DOC ADD CONSTRAINT FK_REF_IDENT_DOC_NATION FOREIGN KEY (NATIONALITY_ID) REFERENCES REF_NATIONALITY (ID);
ALTER TABLE REF_IDENT_DOC ADD CONSTRAINT FK_REF_IDENT_DOC_PERSON FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID) ON DELETE CASCADE;
ALTER TABLE REF_IDENT_DOC_KIND ADD CONSTRAINT FK_REF_IDENT_DOC_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_KBK ADD CONSTRAINT FK_REF_KBK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_MEASURE_CONV ADD CONSTRAINT FKEY_MEASURE_CONV_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID) ON DELETE CASCADE;
ALTER TABLE REF_MEASURE_CONV ADD CONSTRAINT FKEY_MEASURE_CONV_MEASURE1 FOREIGN KEY (MEASURE_FROM_ID) REFERENCES MEASURE (ID) ON DELETE CASCADE;
ALTER TABLE REF_MEASURE_CONV ADD CONSTRAINT FKEY_MEASURE_CONV_MEASURE2 FOREIGN KEY (MEASURE_TO_ID) REFERENCES MEASURE (ID) ON DELETE CASCADE;
ALTER TABLE REF_MEASURE_CONV ADD CONSTRAINT FK_REF_MEASURE_CONV_ALG FOREIGN KEY (CONV_ALGORITHM_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE REF_MEASURE_CONV ADD CONSTRAINT FK_REF_MEASURE_CONV_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_NATIONALITY ADD CONSTRAINT FK_REF_NATIONALITY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_NATURAL_PERSON ADD CONSTRAINT FK_REF_NATURAL_PERSON_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_NATURAL_PERSON ADD CONSTRAINT FK_REF_NATURAL_PERSON_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE REF_NATURAL_PERSON ADD CONSTRAINT FK_REF_NATURAL_PERSON_USER FOREIGN KEY (USER_ID) REFERENCES SEC_USERS (ID);
ALTER TABLE REF_NATURAL_PERSON_HIST ADD CONSTRAINT FK_NATPERSON_HIST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_NATURAL_PERSON_HIST ADD CONSTRAINT FK_NATURAL_PERSON_HIST_PERS FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID) ON DELETE CASCADE;
ALTER TABLE REF_OKATO ADD CONSTRAINT FK_REF_OKATO_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_OKP ADD CONSTRAINT FK_REF_OKP_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_ORIGINAL_DOCUMENT ADD CONSTRAINT FK_ORIGDOCUMENT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_ORIGINAL_DOCUMENT ADD CONSTRAINT FK_REF_ORIGINAL_DOC_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE REF_PARTN_EMPL_EMAIL ADD CONSTRAINT FKEY_RPEE_PARTNEMPL FOREIGN KEY (PARTNEMPL_ID) REFERENCES PARTNEMPL (ID) ON DELETE CASCADE;
ALTER TABLE REF_PARTN_EMPL_EMAIL ADD CONSTRAINT FK_REF_PARTN_EMPL_EMAIL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_PARTN_EMPL_LINK ADD CONSTRAINT FKEY_RPEL_EMPLOYEES FOREIGN KEY (EMPLOYEES_ID) REFERENCES EMPLOYEES (CONTRACTOR_ID) ON DELETE CASCADE;
ALTER TABLE REF_PARTN_EMPL_LINK ADD CONSTRAINT FKEY_RPEL_PARTNER FOREIGN KEY (PARTNER_ID) REFERENCES PARTNER (CONTRACTOR_ID) ON DELETE CASCADE;
ALTER TABLE REF_PARTN_EMPL_LINK ADD CONSTRAINT FK_REF_PARTN_EMPL_LINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_PARTN_EMPL_PHONE ADD CONSTRAINT FKEY_RPEP_PARTNEMPL FOREIGN KEY (PARTNEMPL_ID) REFERENCES PARTNEMPL (ID) ON DELETE CASCADE;
ALTER TABLE REF_PARTN_EMPL_PHONE ADD CONSTRAINT FKEY_RPEP_REFPHONEKIND FOREIGN KEY (PHONEKIND_ID) REFERENCES REF_PHONE_KIND (ID);
ALTER TABLE REF_PARTN_EMPL_PHONE ADD CONSTRAINT FK_REF_PARTN_EMPL_PHONE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_PERSON_ADDRESS ADD CONSTRAINT FK_REF_PERSON_ADDRESS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_PERSON_ADDRESS ADD CONSTRAINT FK_REF_PERSON_ADDRESS_COUNTRY FOREIGN KEY (COUNTRY_ID) REFERENCES REF_COUNTRY (ID);
ALTER TABLE REF_PERSON_ADDRESS ADD CONSTRAINT FK_REF_PERSON_ADDRESS_PERSON FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID) ON DELETE CASCADE;
ALTER TABLE REF_PERSON_ADDRESS ADD CONSTRAINT FK_REF_PERSON_ADDR_DISTRICT FOREIGN KEY (DISTRICT_ID) REFERENCES REF_DISTRICT (ID);
ALTER TABLE REF_PERSON_ADDRESS ADD CONSTRAINT FK_REF_PERSON_ADDR_PLACE FOREIGN KEY (PLACE_ID) REFERENCES REF_PLACE (ID);
ALTER TABLE REF_PERSON_ADDRESS ADD CONSTRAINT FK_REF_PERSON_ADDR_REGION FOREIGN KEY (REGION_ID) REFERENCES REF_REGION (ID);
ALTER TABLE REF_PERSON_ADDRESS ADD CONSTRAINT FK_REF_PERSON_ADDR_ZIPCODE FOREIGN KEY (ZIPCODE_ID) REFERENCES REF_ZIPCODE (ID);
ALTER TABLE REF_PERSON_EADDRESS ADD CONSTRAINT FK_REF_PERSON_EADDRESS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_PERSON_EADDRESS ADD CONSTRAINT FK_REF_PERSON_EADDRESS_KIND FOREIGN KEY (KIND_ID) REFERENCES REF_EADDRESS_KIND (ID);
ALTER TABLE REF_PERSON_EADDRESS ADD CONSTRAINT FK_REF_PERSON_EADDRESS_PERSON FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID) ON DELETE CASCADE;
ALTER TABLE REF_PERSON_PHONE ADD CONSTRAINT FK_REF_PERSON_PHONE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_PERSON_PHONE ADD CONSTRAINT FK_REF_PERS_PHONE_KIND FOREIGN KEY (PHONE_KIND_ID) REFERENCES REF_PHONE_KIND (ID);
ALTER TABLE REF_PERSON_PHONE ADD CONSTRAINT FK_REF_PERS_PHONE_PERSON FOREIGN KEY (PERSON_ID) REFERENCES REF_NATURAL_PERSON (ID) ON DELETE CASCADE;
ALTER TABLE REF_PHONE_KIND ADD CONSTRAINT FK_REF_PHONE_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_PLACE ADD CONSTRAINT FK_REF_PLACE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_PLACE ADD CONSTRAINT FK_REF_PLACE_DISTRICT FOREIGN KEY (DISTRICT_ID) REFERENCES REF_DISTRICT (ID);
ALTER TABLE REF_REGION ADD CONSTRAINT FK_REF_REGION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_REGION ADD CONSTRAINT FK_REF_REGION_COUNTRY FOREIGN KEY (COUNTRY_ID) REFERENCES REF_COUNTRY (ID);
ALTER TABLE REF_ZIPCODE ADD CONSTRAINT FK_REF_ZIPCODE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REF_ZIPCODE ADD CONSTRAINT FK_REF_ZIPCODE_COUNTRY FOREIGN KEY (COUNTRY_ID) REFERENCES REF_COUNTRY (ID);
ALTER TABLE REF_ZIPCODE ADD CONSTRAINT FK_REF_ZIPCODE_DISTRICT FOREIGN KEY (DISTRICT_ID) REFERENCES REF_DISTRICT (ID);
ALTER TABLE REF_ZIPCODE ADD CONSTRAINT FK_REF_ZIPCODE_PLACE FOREIGN KEY (PLACE_ID) REFERENCES REF_PLACE (ID);
ALTER TABLE REF_ZIPCODE ADD CONSTRAINT FK_REF_ZIPCODE_REGION FOREIGN KEY (REGION_ID) REFERENCES REF_REGION (ID);
ALTER TABLE REMNACC ADD CONSTRAINT FKEY_REMNACC_TO_PERIOD FOREIGN KEY (PERIOD_ID) REFERENCES PERIOD (ID);
ALTER TABLE REMNACC ADD CONSTRAINT FK_REMNACC_ACC FOREIGN KEY (ACC_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE REMNACC ADD CONSTRAINT FK_REMNACC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REMNANL ADD CONSTRAINT FKEY_REMNANL_TO_ANLPLAN1 FOREIGN KEY (ANLPLAN1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNANL ADD CONSTRAINT FKEY_REMNANL_TO_ANLPLAN2 FOREIGN KEY (ANLPLAN2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNANL ADD CONSTRAINT FKEY_REMNANL_TO_ANLPLAN3 FOREIGN KEY (ANLPLAN3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNANL ADD CONSTRAINT FKEY_REMNANL_TO_ANLPLAN4 FOREIGN KEY (ANLPLAN4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNANL ADD CONSTRAINT FKEY_REMNANL_TO_ANLPLAN5 FOREIGN KEY (ANLPLAN5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNANL ADD CONSTRAINT FKEY_REMNANL_TO_PERIOD FOREIGN KEY (PERIOD_ID) REFERENCES PERIOD (ID);
ALTER TABLE REMNANL ADD CONSTRAINT FK_REMNANL_ACC FOREIGN KEY (ACC_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE REMNANL ADD CONSTRAINT FK_REMNANL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REMNDBKT ADD CONSTRAINT FKEY_REMNDBKT_TO_ANLPLAN1 FOREIGN KEY (ANLPLAN1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNDBKT ADD CONSTRAINT FKEY_REMNDBKT_TO_ANLPLAN2 FOREIGN KEY (ANLPLAN2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNDBKT ADD CONSTRAINT FKEY_REMNDBKT_TO_ANLPLAN3 FOREIGN KEY (ANLPLAN3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNDBKT ADD CONSTRAINT FKEY_REMNDBKT_TO_ANLPLAN4 FOREIGN KEY (ANLPLAN4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNDBKT ADD CONSTRAINT FKEY_REMNDBKT_TO_ANLPLAN5 FOREIGN KEY (ANLPLAN5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNDBKT ADD CONSTRAINT FKEY_REMNDBKT_TO_PERIOD FOREIGN KEY (PERIOD_ID) REFERENCES PERIOD (ID);
ALTER TABLE REMNDBKT ADD CONSTRAINT FK_REMNDBKT_ACC FOREIGN KEY (ACC_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE REMNDBKT ADD CONSTRAINT FK_REMNDBKT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REMNDBKT ADD CONSTRAINT FK_REMNDBKT_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE REMNVAL ADD CONSTRAINT FKEY_REMNVAL_TO_ANLPLAN1 FOREIGN KEY (ANLPLAN1_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNVAL ADD CONSTRAINT FKEY_REMNVAL_TO_ANLPLAN2 FOREIGN KEY (ANLPLAN2_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNVAL ADD CONSTRAINT FKEY_REMNVAL_TO_ANLPLAN3 FOREIGN KEY (ANLPLAN3_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNVAL ADD CONSTRAINT FKEY_REMNVAL_TO_ANLPLAN4 FOREIGN KEY (ANLPLAN4_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNVAL ADD CONSTRAINT FKEY_REMNVAL_TO_ANLPLAN5 FOREIGN KEY (ANLPLAN5_ID) REFERENCES ANLPLAN (ID);
ALTER TABLE REMNVAL ADD CONSTRAINT FKEY_REMNVAL_TO_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE REMNVAL ADD CONSTRAINT FKEY_REMNVAL_TO_PERIOD FOREIGN KEY (PERIOD_ID) REFERENCES PERIOD (ID);
ALTER TABLE REMNVAL ADD CONSTRAINT FK_REMNVAL_ACC FOREIGN KEY (ACC_ID) REFERENCES ACCPLAN (ID);
ALTER TABLE REMNVAL ADD CONSTRAINT FK_REMNVAL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE REMNVAL ADD CONSTRAINT FK_REMNVAL_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE RPT_CLASS_LINK ADD CONSTRAINT FK_RPT_CLASS_LINK_CLASS FOREIGN KEY (CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE RPT_CLASS_LINK ADD CONSTRAINT FK_RPT_CLASS_LINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE RPT_CLASS_LINK ADD CONSTRAINT FK_RPT_CLASS_LINK_RPT_MAIN FOREIGN KEY (RPT_ID) REFERENCES RPT_MAIN (ID) ON DELETE CASCADE;
ALTER TABLE RPT_MAIN ADD CONSTRAINT FK_RPT_MAIN_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE RPT_RIGHTS ADD CONSTRAINT FK_RPT_RIGHTS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE RPT_RIGHTS ADD CONSTRAINT FK_RPT_RIGHTS_TO_GROUP FOREIGN KEY (GROUP_ID) REFERENCES SEC_GROUPS (ID) ON DELETE CASCADE;
ALTER TABLE RPT_RIGHTS ADD CONSTRAINT FK_RPT_RIGHTS_TO_RPT FOREIGN KEY (RPT_ID) REFERENCES RPT_MAIN (ID) ON DELETE CASCADE;
ALTER TABLE RTL_INVOICEHEAD ADD CONSTRAINT FK_RTL_INVOICEHEAD_CONSIGNE FOREIGN KEY (CONSIGNEE) REFERENCES CONTRACTOR (ID);
ALTER TABLE RTL_INVOICEHEAD ADD CONSTRAINT FK_RTL_INVOICEHEAD_CONSUMER FOREIGN KEY (CONSUMER) REFERENCES CONTRACTOR (ID);
ALTER TABLE RTL_INVOICEHEAD ADD CONSTRAINT FK_RTL_INVOICEHEAD_DIS_CARD FOREIGN KEY (DISCOUNTCARD_ID) REFERENCES DIS_CARD (ID);
ALTER TABLE RTL_INVOICEHEAD ADD CONSTRAINT FK_RTL_INVOICEHEAD_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE RTL_INVOICEHEAD ADD CONSTRAINT FK_RTL_INVOICEHEAD_EX_DIS FOREIGN KEY (EXTRADISCOUNT_ID) REFERENCES DIS_EXTRA_DISCOUNT (ID);
ALTER TABLE RTL_INVOICEHEAD ADD CONSTRAINT FK_RTL_INVOICEHEAD_RESPONS FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE RTL_INVOICEHEAD ADD CONSTRAINT FK_RTL_INVOICEHEAD_SHIPPER FOREIGN KEY (SHIPPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE RTL_INVOICEHEADMODEL ADD CONSTRAINT FK_RTL_INVOICEHEADM_CONSIGNE FOREIGN KEY (CONSIGNEE) REFERENCES CONTRACTOR (ID);
ALTER TABLE RTL_INVOICEHEADMODEL ADD CONSTRAINT FK_RTL_INVOICEHEADM_CONSUMER FOREIGN KEY (CONSUMER) REFERENCES CONTRACTOR (ID);
ALTER TABLE RTL_INVOICEHEADMODEL ADD CONSTRAINT FK_RTL_INVOICEHEADM_DIS_CARD FOREIGN KEY (DISCOUNTCARD_ID) REFERENCES DIS_CARD (ID);
ALTER TABLE RTL_INVOICEHEADMODEL ADD CONSTRAINT FK_RTL_INVOICEHEADM_DOCHEADM FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE RTL_INVOICEHEADMODEL ADD CONSTRAINT FK_RTL_INVOICEHEADM_EX_DIS FOREIGN KEY (EXTRADISCOUNT_ID) REFERENCES DIS_EXTRA_DISCOUNT (ID);
ALTER TABLE RTL_INVOICEHEADMODEL ADD CONSTRAINT FK_RTL_INVOICEHEADM_RESPONS FOREIGN KEY (RESPONSIBLE) REFERENCES CONTRACTOR (ID);
ALTER TABLE RTL_INVOICEHEADMODEL ADD CONSTRAINT FK_RTL_INVOICEHEADM_SHIPPER FOREIGN KEY (SHIPPER) REFERENCES CONTRACTOR (ID);
ALTER TABLE RTL_INVOICESPEC ADD CONSTRAINT FK_RTL_INVOICESPEC_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE SALEBOOK ADD CONSTRAINT FKEY_SALEBOOK_FACTURA FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE SALEBOOK ADD CONSTRAINT FKEY_SALEBOOK_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE SALEBOOK ADD CONSTRAINT FKEY_SALEBOOK_TYPEDOC FOREIGN KEY (DOCTYPE) REFERENCES TYPEDOC (UPCODE);
ALTER TABLE SALEBOOK ADD CONSTRAINT FK_SALEBOOK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SALEBOOK ADD CONSTRAINT FK_SALEBOOK_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE SALEBOOK ADD CONSTRAINT FK_SALEBOOK_ORGUNIT FOREIGN KEY (ORGUNIT_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE SAL_CALC_LIST ADD CONSTRAINT FKEY_SAL_CALC_LIST_PAYROLL FOREIGN KEY (PAY_ROLL_ID) REFERENCES SAL_PAY_ROLL (ID) ON DELETE CASCADE;
ALTER TABLE SAL_CALC_LIST ADD CONSTRAINT FKEY_SAL_CALC_LIST_POSFILL FOREIGN KEY (POSITION_FILL_ID) REFERENCES SAL_POSITION_FILL (ID);
ALTER TABLE SAL_CALC_LIST ADD CONSTRAINT FK_SAL_CALC_LIST_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_CALC_LIST_FEE ADD CONSTRAINT FKEY_SAL_CLIST_FEE_ANL1 FOREIGN KEY (COSTS_ANL1_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_CALC_LIST_FEE ADD CONSTRAINT FKEY_SAL_CLIST_FEE_ANL2 FOREIGN KEY (COSTS_ANL2_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_CALC_LIST_FEE ADD CONSTRAINT FKEY_SAL_CLIST_FEE_ANL3 FOREIGN KEY (COSTS_ANL3_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_CALC_LIST_FEE ADD CONSTRAINT FKEY_SAL_CLIST_FEE_ANL4 FOREIGN KEY (COSTS_ANL4_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_CALC_LIST_FEE ADD CONSTRAINT FKEY_SAL_CLIST_FEE_ANL5 FOREIGN KEY (COSTS_ANL5_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_CALC_LIST_FEE ADD CONSTRAINT FKEY_SAL_CLIST_FEE_CL_SECT FOREIGN KEY (CALC_LIST_SECTION_ID) REFERENCES SAL_CALC_LIST_SECTION (ID) ON DELETE CASCADE;
ALTER TABLE SAL_CALC_LIST_FEE ADD CONSTRAINT FKEY_SAL_CLIST_FEE_FEE_MODEL FOREIGN KEY (FEE_MODEL_ID) REFERENCES SAL_FEE_MODEL (ID);
ALTER TABLE SAL_CALC_LIST_FEE ADD CONSTRAINT FK_SAL_CALC_LIST_FEE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_CALC_LIST_FEE_PARAM ADD CONSTRAINT FKEY_SAL_CL_FEE_PARAM_LIST FOREIGN KEY (CALC_LIST_FEE_ID) REFERENCES SAL_CALC_LIST_FEE (ID) ON DELETE CASCADE;
ALTER TABLE SAL_CALC_LIST_FEE_PARAM ADD CONSTRAINT FKEY_SAL_CL_FEE_PARAM_REF FOREIGN KEY (FEE_REF_PARAM_ID) REFERENCES SAL_FEE_REF_PARAM (ID);
ALTER TABLE SAL_CALC_LIST_FEE_PARAM ADD CONSTRAINT FK_SCALCLIST_FEEPARAM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_CALC_LIST_SECTION ADD CONSTRAINT FK_SAL_CLIST_SECT_CLIST FOREIGN KEY (CALC_LIST_ID) REFERENCES SAL_CALC_LIST (ID) ON DELETE CASCADE;
ALTER TABLE SAL_CALC_LIST_SECTION ADD CONSTRAINT FK_SAL_CLIST_SECT_CL_SECT_REF FOREIGN KEY (CALC_LIST_SECTION_REF_ID) REFERENCES SAL_CALC_LIST_SECTION_REF (ID);
ALTER TABLE SAL_CALC_LIST_SECTION ADD CONSTRAINT FK_SCALCLIST_SCT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_CALC_LIST_SECTION_REF ADD CONSTRAINT FK_SCALCLIST_SCTREF_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_DISCOUNTKIND ADD CONSTRAINT FK_SAL_DISCOUNTKIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_FEE_MODEL ADD CONSTRAINT FKEY_SAL_FEE_MODEL_ANL1 FOREIGN KEY (COSTS_ANL1_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_MODEL ADD CONSTRAINT FKEY_SAL_FEE_MODEL_ANL2 FOREIGN KEY (COSTS_ANL2_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_MODEL ADD CONSTRAINT FKEY_SAL_FEE_MODEL_ANL3 FOREIGN KEY (COSTS_ANL3_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_MODEL ADD CONSTRAINT FKEY_SAL_FEE_MODEL_ANL4 FOREIGN KEY (COSTS_ANL4_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_MODEL ADD CONSTRAINT FKEY_SAL_FEE_MODEL_ANL5 FOREIGN KEY (COSTS_ANL5_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_MODEL ADD CONSTRAINT FKEY_SAL_FEE_MODEL_FEEREF FOREIGN KEY (FEE_REF_ID) REFERENCES SAL_FEE_REF (ID);
ALTER TABLE SAL_FEE_MODEL ADD CONSTRAINT FKEY_SAL_FEE_MODEL_PERS_ACC FOREIGN KEY (PERSONALACCOUNT_ID) REFERENCES SAL_PERSONAL_ACCOUNT (ID) ON DELETE CASCADE;
ALTER TABLE SAL_FEE_MODEL ADD CONSTRAINT FKEY_SAL_FEE_MODEL_POS_FILL FOREIGN KEY (POSITIONFILL_ID) REFERENCES SAL_POSITION_FILL (ID);
ALTER TABLE SAL_FEE_MODEL ADD CONSTRAINT FKEY_SAL_FEE_MODEL_ROLLKIND FOREIGN KEY (ROLL_KIND_ID) REFERENCES SAL_ROLL_KIND (ID);
ALTER TABLE SAL_FEE_MODEL ADD CONSTRAINT FK_SAL_FEE_MODEL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_FEE_MODEL_PARAM ADD CONSTRAINT FKEY_SAL_FMDL_PRM_FREF_PRM FOREIGN KEY (FEE_REF_PARAM_ID) REFERENCES SAL_FEE_REF_PARAM (ID);
ALTER TABLE SAL_FEE_MODEL_PARAM ADD CONSTRAINT FKEY_SAL_FMODEL_PARAM_MODEL FOREIGN KEY (FEE_MODEL_ID) REFERENCES SAL_FEE_MODEL (ID) ON DELETE CASCADE;
ALTER TABLE SAL_FEE_MODEL_PARAM ADD CONSTRAINT FK_SAL_FEE_MODEL_PARAM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT FKEY_SAL_FEE_REF_ALG FOREIGN KEY (CALC_ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT FKEY_SAL_FEE_REF_ANL1 FOREIGN KEY (COSTS_ANL1_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT FKEY_SAL_FEE_REF_ANL2 FOREIGN KEY (COSTS_ANL2_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT FKEY_SAL_FEE_REF_ANL3 FOREIGN KEY (COSTS_ANL3_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT FKEY_SAL_FEE_REF_ANL4 FOREIGN KEY (COSTS_ANL4_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT FKEY_SAL_FEE_REF_ANL5 FOREIGN KEY (COSTS_ANL5_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT FKEY_SAL_FEE_REF_CL_SECT_REF FOREIGN KEY (CALCLISTSECTIONREF_ID) REFERENCES SAL_CALC_LIST_SECTION_REF (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT FKEY_SAL_FEE_REF_GNSCODE FOREIGN KEY (GNSCODE_ID) REFERENCES SAL_GNS_CODE (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT FKEY_SAL_FEE_REF_ROLL_KIND FOREIGN KEY (ROLL_KIND_ID) REFERENCES SAL_ROLL_KIND (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT FK_SAL_FEE_REF_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_FEE_REF ADD CONSTRAINT FK_SAL_FEE_REF_INCOME_KIND FOREIGN KEY (INCOME_KIND_ID) REFERENCES SAL_INCOMEKIND (ID);
ALTER TABLE SAL_FEE_REF_PARAM ADD CONSTRAINT FKEY_SAL_FEE_REF_PARAM_ALG FOREIGN KEY (CALC_ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE SAL_FEE_REF_PARAM ADD CONSTRAINT FKEY_SAL_FREF_PARAM_FREF FOREIGN KEY (FEE_REF_ID) REFERENCES SAL_FEE_REF (ID) ON DELETE CASCADE;
ALTER TABLE SAL_FEE_REF_PARAM ADD CONSTRAINT FK_SAL_FEE_REF_PARAM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_FEE_SUMMARY_HEAD ADD CONSTRAINT FKEY_SAL_FEESUMM_HEAD_DHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE SAL_FEE_SUMMARY_HEAD ADD CONSTRAINT FKEY_SAL_FEESUMM_HEAD_PROLL FOREIGN KEY (PAY_ROLL_ID) REFERENCES SAL_PAY_ROLL (ID);
ALTER TABLE SAL_FEE_SUMMARY_SPEC ADD CONSTRAINT FKEY_SAL_FEESUMM_SPEC_ANL1 FOREIGN KEY (COSTS_ANL1_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_SUMMARY_SPEC ADD CONSTRAINT FKEY_SAL_FEESUMM_SPEC_ANL2 FOREIGN KEY (COSTS_ANL2_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_SUMMARY_SPEC ADD CONSTRAINT FKEY_SAL_FEESUMM_SPEC_ANL3 FOREIGN KEY (COSTS_ANL3_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_SUMMARY_SPEC ADD CONSTRAINT FKEY_SAL_FEESUMM_SPEC_ANL4 FOREIGN KEY (COSTS_ANL4_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_SUMMARY_SPEC ADD CONSTRAINT FKEY_SAL_FEESUMM_SPEC_ANL5 FOREIGN KEY (COSTS_ANL5_ID) REFERENCES PREF_COSTS_ANL (ID);
ALTER TABLE SAL_FEE_SUMMARY_SPEC ADD CONSTRAINT FKEY_SAL_FEESUMM_SPEC_SPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE SAL_GNS_CODE ADD CONSTRAINT FK_SAL_GNS_CODE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_INCLUDED_FEE ADD CONSTRAINT FKEY_SAL_INCL_FEE_INCLFEE FOREIGN KEY (INCLUDED_FEE_ID) REFERENCES SAL_FEE_REF (ID) ON DELETE CASCADE;
ALTER TABLE SAL_INCLUDED_FEE ADD CONSTRAINT FKEY_SAL_INCL_FEE_MAINFEE FOREIGN KEY (FEE_REF_ID) REFERENCES SAL_FEE_REF (ID) ON DELETE CASCADE;
ALTER TABLE SAL_INCLUDED_FEE ADD CONSTRAINT FK_SAL_INCLUDED_FEE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_INCOMEKIND ADD CONSTRAINT FK_SAL_INCOMEKIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_MINSALARY ADD CONSTRAINT FK_SAL_MINSALARY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_PAY_ROLL ADD CONSTRAINT FKEY_SAL_PAY_ROLL_CPERIOD FOREIGN KEY (CALC_PERIOD_ID) REFERENCES PREF_CALC_PERIOD (ID);
ALTER TABLE SAL_PAY_ROLL ADD CONSTRAINT FKEY_SAL_PAY_ROLL_ROLL_KIND FOREIGN KEY (ROLL_KIND_ID) REFERENCES SAL_ROLL_KIND (ID);
ALTER TABLE SAL_PAY_ROLL ADD CONSTRAINT FK_SAL_PAY_ROLL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_PAY_SHEET ADD CONSTRAINT FKEY_SAL_PAY_SHEET_BOOKKPR FOREIGN KEY (BOOKKEEPER_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE SAL_PAY_SHEET ADD CONSTRAINT FKEY_SAL_PAY_SHEET_CASHIER FOREIGN KEY (CASHIER_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE SAL_PAY_SHEET ADD CONSTRAINT FKEY_SAL_PAY_SHEET_CHIEF FOREIGN KEY (CHIEF_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE SAL_PAY_SHEET ADD CONSTRAINT FKEY_SAL_PAY_SHEET_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE SET NULL;
ALTER TABLE SAL_PAY_SHEET ADD CONSTRAINT FKEY_SAL_PAY_SHEET_PAY_ROLL FOREIGN KEY (PAY_ROLL_ID) REFERENCES SAL_PAY_ROLL (ID);
ALTER TABLE SAL_PAY_SHEET ADD CONSTRAINT FK_SAL_PAY_SHEET_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_PAY_SHEET ADD CONSTRAINT FK_SAL_PAY_SHEET_INDOCHEAD FOREIGN KEY (INDOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE SET NULL;
ALTER TABLE SAL_PAY_SHEET_SPEC ADD CONSTRAINT FKEY_SAL_PS_SPEC_POS_FILL FOREIGN KEY (POSITION_FILL_ID) REFERENCES SAL_POSITION_FILL (ID);
ALTER TABLE SAL_PAY_SHEET_SPEC ADD CONSTRAINT FKEY_SAL_PS_SPEC_PS_HEAD FOREIGN KEY (PAY_SHEET_ID) REFERENCES SAL_PAY_SHEET (ID) ON DELETE CASCADE;
ALTER TABLE SAL_PAY_SHEET_SPEC ADD CONSTRAINT FK_SAL_PAY_SHEET_SPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_PERSONAL_ACCOUNT ADD CONSTRAINT FKEY_SAL_PERS_ACC_PERSONNEL FOREIGN KEY (PERSONNEL_ID) REFERENCES PREF_PERSONNEL (ID);
ALTER TABLE SAL_PERSONAL_ACCOUNT ADD CONSTRAINT FK_SAL_PERSONAL_ACCOUNT_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_POSITION_FILL ADD CONSTRAINT FKEY_SAL_POS_FILL_FILL_KIND FOREIGN KEY (POSITIONFILLKIND_ID) REFERENCES PREF_POSITION_FILL_KIND (ID);
ALTER TABLE SAL_POSITION_FILL ADD CONSTRAINT FKEY_SAL_POS_FILL_PERS_ACC FOREIGN KEY (PERSONALACCOUNT_ID) REFERENCES SAL_PERSONAL_ACCOUNT (ID) ON DELETE CASCADE;
ALTER TABLE SAL_POSITION_FILL ADD CONSTRAINT FKEY_SAL_POS_FILL_POSITION FOREIGN KEY (POSITION_ID) REFERENCES PREF_POSITION (ID);
ALTER TABLE SAL_POSITION_FILL ADD CONSTRAINT FK_SAL_POSITION_FILL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_REPLACED_FEE ADD CONSTRAINT FKEY_SAL_REPL_FEE_MAINFEE FOREIGN KEY (FEE_REF_ID) REFERENCES SAL_FEE_REF (ID) ON DELETE CASCADE;
ALTER TABLE SAL_REPLACED_FEE ADD CONSTRAINT FKEY_SAL_REPL_FEE_REPLFEE FOREIGN KEY (REPLACED_FEE_ID) REFERENCES SAL_FEE_REF (ID) ON DELETE CASCADE;
ALTER TABLE SAL_REPLACED_FEE ADD CONSTRAINT FK_SAL_REPLACED_FEE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_ROLL_KIND ADD CONSTRAINT FK_SAL_ROLL_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_TARIFFING_IN_FEE ADD CONSTRAINT FKEY_SAL_TRFF_IN_FEE_FEE FOREIGN KEY (FEE_REF_ID) REFERENCES SAL_FEE_REF (ID) ON DELETE CASCADE;
ALTER TABLE SAL_TARIFFING_IN_FEE ADD CONSTRAINT FKEY_SAL_TRFF_IN_FEE_TRFF FOREIGN KEY (TARIFFING_CATEGORY_ID) REFERENCES PREF_TARIFFING_CATEGORY (ID);
ALTER TABLE SAL_TARIFFING_IN_FEE ADD CONSTRAINT FK_SAL_TARIFFING_IN_FEE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_TAXHEAD ADD CONSTRAINT FK_SAL_TAXHEAD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_TAXRATE ADD CONSTRAINT FKEY_SAL_TAXRATE_SAL_TAXSCALE FOREIGN KEY (TAXSCALE_ID) REFERENCES SAL_TAXSCALE (ID) ON DELETE CASCADE;
ALTER TABLE SAL_TAXRATE ADD CONSTRAINT FK_SAL_TAXRATE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SAL_TAXSCALE ADD CONSTRAINT FKEY_SAL_TAXSCALE_SAL_TAXHEAD FOREIGN KEY (TAXHEAD_ID) REFERENCES SAL_TAXHEAD (ID) ON DELETE CASCADE;
ALTER TABLE SAL_TAXSCALE ADD CONSTRAINT FK_SAL_TAXSCALE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SCH_TASK ADD CONSTRAINT FK_SCH_TASK_ALGORITHM FOREIGN KEY (ALGORITHM_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE SCH_TASK ADD CONSTRAINT FK_SCH_TASK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SCH_TASK ADD CONSTRAINT FK_SCH_TASK_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER (ID);
ALTER TABLE SEC_GROUPS ADD CONSTRAINT FK_SEC_GROUPS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SEC_LINK_USERS_GROUPS ADD CONSTRAINT FKEY_SEC_LINK_SEC_GROUPS FOREIGN KEY (GROUP_ID) REFERENCES SEC_GROUPS (ID) ON DELETE CASCADE;
ALTER TABLE SEC_LINK_USERS_GROUPS ADD CONSTRAINT FKEY_SEC_LINK_SEC_USERS FOREIGN KEY (USER_ID) REFERENCES SEC_USERS (ID) ON DELETE CASCADE;
ALTER TABLE SEC_LINK_USERS_GROUPS ADD CONSTRAINT FK_LINK_USR_GRP_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SEC_METHOD_ACCESS ADD CONSTRAINT FK_SEC_METHOD_ACCESS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SEC_METHOD_ACCESS ADD CONSTRAINT FK_SEC_METHOD_ACCESS_GROUP FOREIGN KEY (GROUP_ID) REFERENCES SEC_GROUPS (ID) ON DELETE CASCADE;
ALTER TABLE SEC_METHOD_ACCESS ADD CONSTRAINT FK_SEC_METHOD_ACCESS_METHOD FOREIGN KEY (METHOD_ID) REFERENCES SYS_METHOD (ID) ON DELETE CASCADE;
ALTER TABLE SEC_MODULE_ACCESS ADD CONSTRAINT FKEY_M_ACCESS_GROUP FOREIGN KEY (GROUP_ID) REFERENCES SEC_GROUPS (ID) ON DELETE CASCADE;
ALTER TABLE SEC_MODULE_ACCESS ADD CONSTRAINT FKEY_M_ACCESS_MODULE FOREIGN KEY (MODULE_ID) REFERENCES SYS_MODULE (ID) ON DELETE CASCADE;
ALTER TABLE SEC_MODULE_ACCESS ADD CONSTRAINT FK_SEC_MODULE_ACCESS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SEC_USERS ADD CONSTRAINT FK_SEC_USERS_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SEC_USER_PROFILE ADD CONSTRAINT FK_SEC_PROFILE_USER FOREIGN KEY (USER_ID) REFERENCES SEC_USERS (ID) ON DELETE CASCADE;
ALTER TABLE SEC_USER_PROFILE ADD CONSTRAINT FK_SEC_USER_PROFILE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SEC_USER_PROFILE_ITEM ADD CONSTRAINT FK_SEC_PROFILE_ITEM_PROFILE FOREIGN KEY (PROFILE_ID) REFERENCES SEC_USER_PROFILE (ID) ON DELETE CASCADE;
ALTER TABLE SEC_USER_PROFILE_ITEM ADD CONSTRAINT FK_USR_PROFILE_ITEM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SETOFGOOD ADD CONSTRAINT FKEY_SETOFGOOD_TO_CATALOG1 FOREIGN KEY (GOOD_ID) REFERENCES CATALOG (ID);
ALTER TABLE SETOFGOOD ADD CONSTRAINT FKEY_SETOFGOOD_TO_CATALOG2 FOREIGN KEY (COMPONENT_ID) REFERENCES CATALOG (ID);
ALTER TABLE SETOFGOOD ADD CONSTRAINT FK_SETOFGOOD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SPECMARK ADD CONSTRAINT FK_SPECMARK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE STL_CONFIG ADD CONSTRAINT FK_STL_CONFIG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE STL_CONFIG ADD CONSTRAINT FK_STL_CONFIG_CURRENCY1 FOREIGN KEY (BASE_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE STL_CONFIG ADD CONSTRAINT FK_STL_CONFIG_CURRENCY2 FOREIGN KEY (NAT_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE STL_CONFIG ADD CONSTRAINT FK_STL_CONFIG_CUR_RATE_AUTH FOREIGN KEY (CUR_RATE_AUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE STL_CONFIG ADD CONSTRAINT FK_STL_CONFIG_CUR_RATE_TYPE FOREIGN KEY (CUR_RATE_TYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE STOCKBATCH ADD CONSTRAINT FKEY_STOCKBATCH_STOCKCARD FOREIGN KEY (STOCKCARD_ID) REFERENCES STOCKCARD (ID);
ALTER TABLE STOCKBATCH ADD CONSTRAINT FK_STOCKBATCH_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE STOCKBATCH ADD CONSTRAINT FK_STOCKBATCH_CONTRACTOR FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE STOCKBATCH ADD CONSTRAINT FK_STOCKBATCH_COUNTRY FOREIGN KEY (COUNTRY_OF_ORIGIN_ID) REFERENCES REF_COUNTRY (ID);
ALTER TABLE STOCKBATCH ADD CONSTRAINT FK_STOCKBATCH_CUST_DECL FOREIGN KEY (CUSTOMS_DECLARATION_ID) REFERENCES REF_CUSTOMS_DECLARATION (ID);
ALTER TABLE STOCKBATCH ADD CONSTRAINT FK_STOCKBATCH_OWNER FOREIGN KEY (OWNER_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE STOCKBATCH ADD CONSTRAINT FK_STOCKBATCH_STOCK_KIND FOREIGN KEY (STOCK_KIND_ID) REFERENCES WH_STOCK_KIND (ID);
ALTER TABLE STOCKBATCHHISTORY ADD CONSTRAINT FKEY_STOCKBH_STOCKBATCH FOREIGN KEY (STOCKBATCH_ID) REFERENCES STOCKBATCH (ID);
ALTER TABLE STOCKBATCHHISTORY ADD CONSTRAINT FKEY_STOCKBH_STOCKBH FOREIGN KEY (PREV_STOCKBATCHHIST_ID) REFERENCES STOCKBATCHHISTORY (ID);
ALTER TABLE STOCKBATCHHISTORY ADD CONSTRAINT FK_STOCKBATCHHISTORY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE STOCKBATCHHISTORY ADD CONSTRAINT FK_STOCKBATCHHISTORY_DOC FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE STOCKBATCHHISTORY ADD CONSTRAINT FK_STOCKBATCHHISTORY_SPEC FOREIGN KEY (DOCUMENTSPEC_ID) REFERENCES DOCSPEC (ID);
ALTER TABLE STOCKCARD ADD CONSTRAINT FKEY_STOCKCARD_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE STOCKCARD ADD CONSTRAINT FK_STOCKCARD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE STOCKCARD ADD CONSTRAINT FK_STOCKCARD_MOL FOREIGN KEY (MOL_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE STOCKCARD ADD CONSTRAINT FK_STOCKCARD_STOCK FOREIGN KEY (STOCK_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE STOCKDOCUMENTHEAD ADD CONSTRAINT FKEY_STOCKDOCHEAD_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE STOCKDOCUMENTHEADMODEL ADD CONSTRAINT FKEY_STOCKDOCHEADM_DOCHEADM FOREIGN KEY (DOCHEADMODEL_ID) REFERENCES DOCHEADMODEL (ID) ON DELETE CASCADE;
ALTER TABLE STOCKDOCUMENTSPEC ADD CONSTRAINT FKEY_STOCKDOCSPEC_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE STOCKDOCUMENTSPECMODEL ADD CONSTRAINT FKEY_STOCKDOCSPECM_DOCSPECM FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPECMODEL (ID) ON DELETE CASCADE;
ALTER TABLE STOCKPLANHISTORY ADD CONSTRAINT FKEY_STOCKPLANHISTORY_DOCHEAD FOREIGN KEY (DOCHEAD_ID) REFERENCES DOCHEAD (ID);
ALTER TABLE STOCKPLANHISTORY ADD CONSTRAINT FKEY_STOCKPLANHISTORY_DOCSPEC FOREIGN KEY (DOCSPEC_ID) REFERENCES DOCSPEC (ID);
ALTER TABLE STOCKPLANHISTORY ADD CONSTRAINT FKEY_STOCKPLANHISTORY_STOCKCARD FOREIGN KEY (STOCKCARD_ID) REFERENCES STOCKCARD (ID);
ALTER TABLE STOCKPLANHISTORY ADD CONSTRAINT FK_STOCKPLANHISTORY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SYSTEMCONFIG ADD CONSTRAINT FKEY_SYSTEMCONFIG_CURRENCY1 FOREIGN KEY (BASE_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE SYSTEMCONFIG ADD CONSTRAINT FKEY_SYSTEMCONFIG_CURRENCY2 FOREIGN KEY (NATIONAL_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE SYS_AUDIT ADD CONSTRAINT FK_SYS_AUDIT_CLIENT FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SYS_CLASS ADD CONSTRAINT FK_SYS_CLASS_MODULE FOREIGN KEY (MODULE_ID) REFERENCES SYS_MODULE (ID);
ALTER TABLE SYS_CLASS ADD CONSTRAINT FK_SYS_CLASS_TRG_CREATE FOREIGN KEY (TRG_CREATE) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE SYS_CLASS ADD CONSTRAINT FK_SYS_CLASS_TRG_INIT FOREIGN KEY (TRG_INIT) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE SYS_CLASS ADD CONSTRAINT FK_SYS_CLASS_TRG_REMOVE FOREIGN KEY (TRG_REMOVE) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE SYS_CLASS ADD CONSTRAINT FK_SYS_CLASS_TRG_STORE FOREIGN KEY (TRG_STORE) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE SYS_CLASS_IMPL ADD CONSTRAINT FK_SYS_CLASS_IMPL_CLASS FOREIGN KEY (CLASS_ID) REFERENCES SYS_CLASS (ID) ON DELETE CASCADE;
ALTER TABLE SYS_CLASS_IMPL ADD CONSTRAINT FK_SYS_CLASS_IMPL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SYS_COMPANY ADD CONSTRAINT FK_SYS_COMPANY_CLIENT FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SYS_DATAITEM ADD CONSTRAINT FK_SYS_DATAITEM_DOMAIN FOREIGN KEY (DOMAIN_ID) REFERENCES SYS_DOMAIN (ID);
ALTER TABLE SYS_DB_AUDIT ADD CONSTRAINT FK_SYS_DB_AUDIT_CLIENT FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SYS_DB_AUDIT_DETAIL ADD CONSTRAINT FK_SYS_DB_AUDIT_DETAIL_DB_AUDIT FOREIGN KEY (DB_AUDIT_ID) REFERENCES SYS_DB_AUDIT (ID) ON DELETE CASCADE;
ALTER TABLE SYS_DB_AUDIT_SETUP ADD CONSTRAINT FK_SYS_DB_AUDIT_SETUP_CLIENT FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SYS_FORM ADD CONSTRAINT FK_SYS_FORM_SEC_ROLE FOREIGN KEY (ROLE_ID) REFERENCES SEC_GROUPS (ID);
ALTER TABLE SYS_FORM ADD CONSTRAINT FK_SYS_FORM_SEC_USER FOREIGN KEY (USER_ID) REFERENCES SEC_USERS (ID);
ALTER TABLE SYS_FORM ADD CONSTRAINT FK_SYS_FORM_SYS_CLASS FOREIGN KEY (CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE SYS_METHOD ADD CONSTRAINT FK_SYS_METHOD_CLASS FOREIGN KEY (CLASS_ID) REFERENCES SYS_CLASS (ID);
ALTER TABLE SYS_SECURITY_AUDIT ADD CONSTRAINT FK_SYS_SECURITY_AUDIT_CLIENT FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE SYS_WINDOW ADD CONSTRAINT FK_SYS_WINDOW_SEC_ROLE FOREIGN KEY (ROLE_ID) REFERENCES SEC_GROUPS (ID);
ALTER TABLE SYS_WINDOW ADD CONSTRAINT FK_SYS_WINDOW_SEC_USER FOREIGN KEY (USER_ID) REFERENCES SEC_USERS (ID);
ALTER TABLE TAB_CONFIG ADD CONSTRAINT FKEY_TAB_CONFIG_HOLIDAYTIME FOREIGN KEY (HOLIDAY_TIME_KIND_ID) REFERENCES TAB_TIME_KIND (ID);
ALTER TABLE TAB_CONFIG ADD CONSTRAINT FKEY_TAB_CONFIG_WORKTIME FOREIGN KEY (WORK_TIME_KIND_ID) REFERENCES TAB_TIME_KIND (ID);
ALTER TABLE TAB_CONFIG ADD CONSTRAINT FK_TAB_CONFIG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAB_PATTERN_HEAD ADD CONSTRAINT FK_TAB_PATTERN_HEAD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAB_PATTERN_SPEC ADD CONSTRAINT FKEY_TAB_PATTERN_SPEC_HEAD FOREIGN KEY (PATTERN_HEAD_ID) REFERENCES TAB_PATTERN_HEAD (ID) ON DELETE CASCADE;
ALTER TABLE TAB_PATTERN_SPEC ADD CONSTRAINT FKEY_TAB_PTRN_SPEC_TIMEKIND FOREIGN KEY (TIME_KIND_ID) REFERENCES TAB_TIME_KIND (ID);
ALTER TABLE TAB_PATTERN_SPEC ADD CONSTRAINT FK_TAB_PATTERN_SPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAB_SCHEDULE_HEAD ADD CONSTRAINT FKEY_TAB_SCHED_HEAD_HOLIDAY FOREIGN KEY (HOLIDAY_WORK_TIME_KIND_ID) REFERENCES TAB_TIME_KIND (ID);
ALTER TABLE TAB_SCHEDULE_HEAD ADD CONSTRAINT FKEY_TAB_SCHED_HEAD_PATTERN FOREIGN KEY (DEFAULT_PATTERN_HEAD_ID) REFERENCES TAB_PATTERN_HEAD (ID);
ALTER TABLE TAB_SCHEDULE_HEAD ADD CONSTRAINT FKEY_TAB_SCHED_HEAD_SCHED FOREIGN KEY (WORK_SCHEDULE_ID) REFERENCES PREF_WORK_SCHEDULE (ID);
ALTER TABLE TAB_SCHEDULE_HEAD ADD CONSTRAINT FK_TAB_SCHEDULE_HEAD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAB_SCHEDULE_SPEC ADD CONSTRAINT FKEY_TAB_SCHEDULE_SPEC_HEAD FOREIGN KEY (SCHEDULE_HEAD_ID) REFERENCES TAB_SCHEDULE_HEAD (ID) ON DELETE CASCADE;
ALTER TABLE TAB_SCHEDULE_SPEC ADD CONSTRAINT FKEY_TAB_SCHED_SPEC_TKIND FOREIGN KEY (TIME_KIND_ID) REFERENCES TAB_TIME_KIND (ID);
ALTER TABLE TAB_SCHEDULE_SPEC ADD CONSTRAINT FK_TAB_SCHEDULE_SPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAB_TIME_BOARD_HEAD ADD CONSTRAINT FKEY_TAB_TBOARD_HEAD_PERIOD FOREIGN KEY (CALC_PERIOD_ID) REFERENCES PREF_CALC_PERIOD (ID);
ALTER TABLE TAB_TIME_BOARD_HEAD ADD CONSTRAINT FK_TAB_TIME_BOARD_HEAD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAB_TIME_BOARD_POSITION ADD CONSTRAINT FKEY_TAB_TB_POS_HEAD FOREIGN KEY (TIME_BOARD_HEAD_ID) REFERENCES TAB_TIME_BOARD_HEAD (ID) ON DELETE CASCADE;
ALTER TABLE TAB_TIME_BOARD_POSITION ADD CONSTRAINT FKEY_TAB_TB_POS_POSITION FOREIGN KEY (POSITION_FILL_ID) REFERENCES SAL_POSITION_FILL (ID);
ALTER TABLE TAB_TIME_BOARD_POSITION ADD CONSTRAINT FKEY_TAB_TB_POS_SL_UNIT FOREIGN KEY (STAFF_LIST_UNIT_ID) REFERENCES PREF_STAFF_LIST_UNIT (ID);
ALTER TABLE TAB_TIME_BOARD_POSITION ADD CONSTRAINT FK_TIMEBOARD_POSITION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAB_TIME_BOARD_SPEC ADD CONSTRAINT FKEY_TAB_TB_SPEC_POSITION FOREIGN KEY (TIME_BOARD_POSITION_ID) REFERENCES TAB_TIME_BOARD_POSITION (ID) ON DELETE CASCADE;
ALTER TABLE TAB_TIME_BOARD_SPEC ADD CONSTRAINT FKEY_TAB_TB_SPEC_TKIND FOREIGN KEY (TIME_KIND_ID) REFERENCES TAB_TIME_KIND (ID);
ALTER TABLE TAB_TIME_BOARD_SPEC ADD CONSTRAINT FK_TAB_TIME_BOARD_SPEC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAB_TIME_KIND ADD CONSTRAINT FK_TAB_TIME_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAX ADD CONSTRAINT FK_TAX_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAXGROUP ADD CONSTRAINT FK_TAXGROUP_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAXLINK ADD CONSTRAINT FKEY_TAXLINK_TAX FOREIGN KEY (TAX_ID) REFERENCES TAX (ID);
ALTER TABLE TAXLINK ADD CONSTRAINT FKEY_TAXLINK_TAXGROUP FOREIGN KEY (TAXGROUP_ID) REFERENCES TAXGROUP (ID) ON DELETE CASCADE;
ALTER TABLE TAXLINK ADD CONSTRAINT FK_TAXLINK_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TAXSUMM ADD CONSTRAINT FKEY_TAXSUMM_DOCSPEC FOREIGN KEY (SPECIFICATION_ID) REFERENCES DOCSPEC (ID) ON DELETE CASCADE;
ALTER TABLE TAXSUMM ADD CONSTRAINT FKEY_TAXSUMM_TAX FOREIGN KEY (TAX_ID) REFERENCES TAX (ID);
ALTER TABLE TAXSUM_BUF ADD CONSTRAINT FK_TAXSUM_BUF_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TURNONESFEATURES ADD CONSTRAINT FK_TURNONESFEATURES_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TYPEDOC ADD CONSTRAINT FK_TYPEDOC_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE TYPEDOC ADD CONSTRAINT FK_TYPEDOC_NUM_ALGORITHM FOREIGN KEY (NUMBERING_ALG_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE TYPEDOC ADD CONSTRAINT FK_TYPEDOC_RPTMAIN FOREIGN KEY (RPT_ID) REFERENCES RPT_MAIN (ID) ON DELETE SET NULL;
ALTER TABLE WH_BIN_LOCATION ADD CONSTRAINT FKEY_WH_BIN_MEASURE1 FOREIGN KEY (VOLUME_MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE WH_BIN_LOCATION ADD CONSTRAINT FKEY_WH_BIN_MEASURE2 FOREIGN KEY (WEIGHT_MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE WH_BIN_LOCATION ADD CONSTRAINT FKEY_WH_BIN_MEASURE3 FOREIGN KEY (QUAN_MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE WH_BIN_LOCATION ADD CONSTRAINT FKEY_WH_BIN_TYPE FOREIGN KEY (TYPE_ID) REFERENCES WH_BIN_LOCATION_TYPE (ID);
ALTER TABLE WH_BIN_LOCATION ADD CONSTRAINT FKEY_WH_BIN_WAREHOUSE FOREIGN KEY (WAREHOUSE_ID) REFERENCES WH_WAREHOUSE (ID) ON DELETE CASCADE;
ALTER TABLE WH_BIN_LOCATION ADD CONSTRAINT FKEY_WH_BIN_ZONE FOREIGN KEY (ZONE_ID) REFERENCES WH_ZONE (ID);
ALTER TABLE WH_BIN_LOCATION ADD CONSTRAINT FK_WH_BIN_LOCATION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE WH_BIN_LOCATION_DETAIL ADD CONSTRAINT FKEY_WH_BL_DETAIL_BIN_LOCATION FOREIGN KEY (BIN_LOCATION_ID) REFERENCES WH_BIN_LOCATION (ID) ON DELETE CASCADE;
ALTER TABLE WH_BIN_LOCATION_DETAIL ADD CONSTRAINT FKEY_WH_BL_DETAIL_STBATCH FOREIGN KEY (STOCKBATCH_ID) REFERENCES STOCKBATCH (ID) ON DELETE CASCADE;
ALTER TABLE WH_BIN_LOCATION_DETAIL ADD CONSTRAINT FK_WH_BIN_LOC_DETAIL_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE WH_BIN_LOCATION_TYPE ADD CONSTRAINT FK_WH_BIN_LOCATION_TYPE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE WH_BIN_TYPE_CAP_BY_PROD ADD CONSTRAINT FKEY_WH_BT_CAP_BY_PR_BIN_TYPE FOREIGN KEY (TYPE_ID) REFERENCES WH_BIN_LOCATION_TYPE (ID) ON DELETE CASCADE;
ALTER TABLE WH_BIN_TYPE_CAP_BY_PROD ADD CONSTRAINT FKEY_WH_BT_CAP_BY_PR_CATALOG FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG (ID);
ALTER TABLE WH_BIN_TYPE_CAP_BY_PROD ADD CONSTRAINT FKEY_WH_BT_CAP_BY_PR_MEAS1 FOREIGN KEY (MEASURE_ID) REFERENCES MEASURE (ID);
ALTER TABLE WH_BIN_TYPE_CAP_BY_PROD ADD CONSTRAINT FK_WH_BINT_CAPBYPROD_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE WH_CONFIG ADD CONSTRAINT FK_WH_CONFIG_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE WH_CONFIG ADD CONSTRAINT FK_WH_CONFIG_CURRENCY1 FOREIGN KEY (BASE_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE WH_CONFIG ADD CONSTRAINT FK_WH_CONFIG_CURRENCY2 FOREIGN KEY (NAT_CURRENCY) REFERENCES CURRENCY (UPCODE);
ALTER TABLE WH_CONFIG ADD CONSTRAINT FK_WH_CONFIG_CUR_RATE_AUTH FOREIGN KEY (CUR_RATE_AUTHORITY_ID) REFERENCES REF_CURRENCY_RATE_AUTHORITY (ID);
ALTER TABLE WH_CONFIG ADD CONSTRAINT FK_WH_CONFIG_CUR_RATE_TYPE FOREIGN KEY (CUR_RATE_TYPE_ID) REFERENCES REF_CURRENCY_RATE_TYPE (ID);
ALTER TABLE WH_INVACT_COMMISSION ADD CONSTRAINT FK_WH_INVACT_COMMISSION_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE WH_INVACT_COMMISSION ADD CONSTRAINT FK_WH_INVACT_COMMISSION_CN FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID);
ALTER TABLE WH_INVACT_COMMISSION ADD CONSTRAINT FK_WH_INVACT_COMMISSION_DOC FOREIGN KEY (INVENTORYACT_ID) REFERENCES DOCHEAD (ID) ON DELETE CASCADE;
ALTER TABLE WH_SECURITY ADD CONSTRAINT FK_WH_SECURITY_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE WH_SECURITY ADD CONSTRAINT FK_WH_SECURITY_GROUPS FOREIGN KEY (GROUP_ID) REFERENCES SEC_GROUPS (ID) ON DELETE CASCADE;
ALTER TABLE WH_SERIAL_NUM ADD CONSTRAINT FKEY_WH_SERIAL_NUM_STOCKBATCH FOREIGN KEY (BATCH_ID) REFERENCES STOCKBATCH (ID) ON DELETE CASCADE;
ALTER TABLE WH_SERIAL_NUM ADD CONSTRAINT FK_WH_SERIAL_NUM_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE WH_STOCK_KIND ADD CONSTRAINT FK_WH_STOCK_KIND_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE WH_WAREHOUSE ADD CONSTRAINT FKEY_WAREHOUSE_CONTARCTOR1 FOREIGN KEY (CONTRACTOR_ID) REFERENCES CONTRACTOR (ID) ON DELETE CASCADE;
ALTER TABLE WH_WAREHOUSE ADD CONSTRAINT FK_WH_WAREHOUSE_ALG_REP FOREIGN KEY (ALGORITHM_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE WH_WAREHOUSE ADD CONSTRAINT FK_WH_WAREHOUSE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE WH_WAREHOUSE ADD CONSTRAINT FK_WH_WAREHOUSE_DISP_STR FOREIGN KEY (DISPOSAL_STRAT_ID) REFERENCES ALG_REPOSITORY (ID);
ALTER TABLE WH_WAREHOUSE ADD CONSTRAINT FK_WH_WAREHOUSE_TYPE FOREIGN KEY (WAREHOUSE_TYPE_ID) REFERENCES WH_WAREHOUSE_TYPE (ID);
ALTER TABLE WH_WAREHOUSE_TRANSACTION_DAY ADD CONSTRAINT FK_WH_WTD_STOCK FOREIGN KEY (STOCK) REFERENCES WH_WAREHOUSE (ID);
ALTER TABLE WH_WAREHOUSE_TYPE ADD CONSTRAINT FK_WH_WAREHOUSE_TYPE_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);
ALTER TABLE WH_ZONE ADD CONSTRAINT FKEY_WH_ZONE_WAREHOUSE FOREIGN KEY (WAREHOUSE_ID) REFERENCES WH_WAREHOUSE (ID) ON DELETE CASCADE;
ALTER TABLE WH_ZONE ADD CONSTRAINT FK_WH_ZONE_CLT_ID FOREIGN KEY (CLIENT_ID) REFERENCES SYS_CLIENT (ID);


/******************************************************************************/
/****                               Indices                                ****/
/******************************************************************************/

CREATE INDEX IDX_ACCBATCH_INCOMEDATE_ASC ON ACCBATCH (INCOMEDATE);
CREATE INDEX IDX_ACCBATCH_INCOMEDATE_DESC ON ACCBATCH (INCOMEDATE DESC);
CREATE UNIQUE INDEX ALG_CONST_VAL_U_DATE_IDX ON ALG_CONST_VAL (CONST_ID, STARTDATE);
CREATE INDEX CATALOG_IDX_BARCODE ON CATALOG (BARCODE);
CREATE UNIQUE INDEX IDX_CATALOGPRICE_INACTION_CUR ON CATALOGPRICE (CATALOG_ID, IN_ACTION, CURRENCY_CODE);
CREATE INDEX CONTRACTOR_IDX_FOLDER ON CONTRACTOR (FOLDER_ID);
CREATE INDEX CCARDHIST_IDX_PROCESSDATE ON CONTRACTORCARDHIST (PROCESSDATE);
CREATE UNIQUE INDEX DIS_CARD_HIST_IDX_UN ON DIS_CARD_HIST (CARD_ID, TIME_STAMP);
CREATE INDEX DOCACTION_IDX_STAGE ON DOCACTION (STAGE_ID);
CREATE INDEX DOCHEAD_IDX_BNUM_BDATE_BTYPE ON DOCHEAD (BASEDOCNUMBER, BASEDOCDATE, BASEDOCTYPE);
CREATE UNIQUE INDEX DOCHEAD_IDX_UID ON DOCHEAD (UNID);
CREATE INDEX IDX_DOCHEAD_DATE_TYPE_NUM ON DOCHEAD (DOCDATE, DOCTYPE, DOCNUMBER);
CREATE INDEX IDX_DOCHEAD_DOCSECTION_A ON DOCHEAD (DOCSECTION);
CREATE INDEX IDX_DOCHEADMODEL_DOCSECTION_A ON DOCHEADMODEL (DOCSECTION);
CREATE INDEX DOCPROCESSSTAGE_IDX1 ON DOCPROCESSSTAGE (STAGE);
CREATE UNIQUE INDEX DOCSPEC_IDX_UID ON DOCSPEC (UNID);
CREATE INDEX IDX_DOCSPECSTATE_DOCSP_ASC ON DOCSPECSTATE (DOCSPEC_ID);
CREATE UNIQUE INDEX DOCTYPE_RIGHTS_IDX1 ON DOCTYPE_RIGHTS (REC_ID, GROUP_ID);
CREATE INDEX IDX_ECONOMICOPER_ID_KEEPDATE ON ECONOMICOPER (ID, KEEPDATE);
CREATE INDEX IDX_ECONOPER_KEEPDATE_ASC ON ECONOMICOPER (KEEPDATE);
CREATE INDEX IDX_ECONOPER_KEEPDATE_DESC ON ECONOMICOPER (KEEPDATE DESC);
CREATE INDEX IDX_ECONSPEC_VALDB_ID ON ECONOMICSPEC (REMNVALDB_ID);
CREATE INDEX IDX_ECONSPEC_VALKT_ID ON ECONOMICSPEC (REMNVALKT_ID);
CREATE INDEX EXCH_EXPORT_IDX_PACKET ON EXCH_EXPORT (PACKET);
CREATE INDEX EXCH_EXPORT_IDX_STATUS ON EXCH_EXPORT (STATUS);
CREATE INDEX EXCH_IMPORT_IDX_BEAN_KEY ON EXCH_IMPORT (BEAN_NAME, OLD_KEY);
CREATE INDEX FEATURELINK_IDX_REC_ID ON FEATURELINK (REC_ID);
CREATE INDEX IDX_FINPERIOD_DATEFROM ON FINPERIOD (DATEFROM);
CREATE INDEX IDX_FINPERIOD_DATETO ON FINPERIOD (DATETO);
CREATE INDEX IDX_FOLDER_FOLDERTYPE ON FOLDER (FOLDERTYPE);
CREATE INDEX FOLDER_RIGHTS_IDX1 ON FOLDER_RIGHTS (FOLDER_ID);
CREATE INDEX FOLDER_RIGHTS_IDX2 ON FOLDER_RIGHTS (FOLDERPART, RIGHTS);
CREATE UNIQUE INDEX FOLDER_RIGHTS_IDX3 ON FOLDER_RIGHTS (GROUP_ID, FOLDERPART, FOLDER_ID);
CREATE UNIQUE INDEX U_MF_WC_CODE ON MF_WORK_CENTER (WC_CODE);
CREATE UNIQUE INDEX OVR_SIZE_IDX_U ON OVR_SIZE (OVR_CARD_ID, CATALOG_GROUPS_TYPE_ID);
CREATE INDEX IDX_PERIOD_DATEFROM ON PERIOD (DATEFROM);
CREATE INDEX IDX_PERIOD_DATETO ON PERIOD (DATETO);
CREATE UNIQUE INDEX IDX_PMC_PERIOD_UN_DATE ON PMC_PERIOD (DATEFROM, DATETILL);
CREATE INDEX PREF_CALC_PERIOD_IDX_BEGINDATE ON PREF_CALC_PERIOD (BEGINDATE);
CREATE INDEX PREF_CALC_PERIOD_IDX_ENDDATE ON PREF_CALC_PERIOD (ENDDATE);
CREATE INDEX PREF_KLADR_IDX_CODE ON PREF_KLADR (KCODE);
CREATE INDEX PREF_SL_POS_IDX_UNIQUE_ID ON PREF_STAFF_LIST_POSITION (SL_POSITION_UNIQUE_ID);
CREATE INDEX PREF_STREET_IDX_CODE ON PREF_STREET (KCODE);
CREATE UNIQUE INDEX PRICELISTHEAD_RIGHTS_IDX1 ON PRICELISTHEAD_RIGHTS (REC_ID, GROUP_ID);
CREATE UNIQUE INDEX PRICELISTSPEC_IDX_UID ON PRICELISTSPEC (UNID);
CREATE INDEX IDX_PR_LINK_PRIORITY ON PRICELIST_PRICETYPE_LINK (PRIORITY);
CREATE UNIQUE INDEX PR_CONTACT_HIST_IDX_UID ON PR_CONTACT_HIST (UNID);
CREATE UNIQUE INDEX REF_BANK_ACCOUNT_IDX_UID ON REF_BANK_ACCOUNT (UNID);
CREATE UNIQUE INDEX RPT_CLASS_LINK_IDX1 ON RPT_CLASS_LINK (RPT_ID, CLASS_ID);
CREATE INDEX SBH_IDX_PROCESSDATE ON STOCKBATCHHISTORY (PROCESSDATE);
CREATE INDEX STOCKBATCHHISTORY_IDX_DOC ON STOCKBATCHHISTORY (DOCUMENT_ID, DOCUMENTSPEC_ID);
CREATE UNIQUE INDEX IDX_SYS_CLASS_BEAN_NAME ON SYS_CLASS (BEAN_NAME);
CREATE INDEX IDX_SYS_CLASS_IMPL_NAME ON SYS_CLASS_IMPL (NAME, APP_LAYER);
CREATE INDEX SYS_DB_AUDIT_SETUP_ENTITY_IDX ON SYS_DB_AUDIT_SETUP (ENTITY_NAME);
CREATE INDEX IDX_SYS_FORM_CLASS_NAME_LAYER ON SYS_FORM (CLASS_ID, NAME, APP_LAYER);
CREATE INDEX IDX_SYS_WINDOW_NAME_LAYER ON SYS_WINDOW (NAME, APP_LAYER);
CREATE INDEX IDX_TAX_INCLUDED ON TAX (INCLUDED);
CREATE INDEX IDX_TAXLINK_FEEORDER_ASC ON TAXLINK (FEEORDER);
CREATE INDEX IDX_TAXLINK_FEEORDER_DESC ON TAXLINK (FEEORDER DESC);


/******************************************************************************/
/****                             Descriptions                             ****/
/******************************************************************************/

COMMENT ON TABLE ACCBATCH IS 
'Бухгалтерия: партии ТМЦ.';

COMMENT ON TABLE ACCBATCHHISTORY IS 
'Бухгалтерия: история партий ТМЦ.';

COMMENT ON TABLE ACCPLAN IS 
'Бухгалтерия: план счетов.';

COMMENT ON TABLE ACC_ACCGROUP IS 
'Бухгалтерия: группы учета основных средств и нематериальных активов
';

COMMENT ON TABLE ACC_ACCKIND IS 
'Бухгалтерия: виды учета основных средств и нематериальных активов
';

COMMENT ON TABLE ACC_ADVANCEREPHEAD IS 
'Бухгалтерия: авансовые отчеты';

COMMENT ON TABLE ACC_ADVANCEREPHEADMODEL IS 
'Бухгалтерия: образцы авансовых отчетов';

COMMENT ON TABLE ACC_ADVANCEREPSPEC IS 
'Бухгалтерия: спецификации авансовых отчетов';

COMMENT ON TABLE ACC_AMCODE IS 
'Бухгалтерия: шифры норм амортизации.';

COMMENT ON TABLE ACC_AMORTIZATION IS 
'Бухгалтерия: история начисления амопртизации.';

COMMENT ON TABLE ACC_AMRATE IS 
'Бухгалтерия: нормы амортизации.';

COMMENT ON TABLE ACC_CONFIG IS 
'Бухгалтерия: конфигурация модуля.';

COMMENT ON TABLE ACC_INVHEAD IS 
'Бухгалтерия: заголовки инвентарных карточек';

COMMENT ON TABLE ACC_INVPRODUCTION IS 
'Бухгалтерия: продукция в заголовке инвентарной карточки.';

COMMENT ON TABLE ALG_CONST IS 
'Алгоритмы: константы.';

COMMENT ON TABLE ALG_CONST_VAL IS 
'Алгоритмы: значения констант.';

COMMENT ON TABLE ALG_CUSTOM_USER_ACTION IS 
'Пользовательские алгоритмы: Настраиваемые действия пользователей';

COMMENT ON TABLE ALG_CUSTOM_USER_ACTION_PERMISS IS 
'Управление правами пользователей: прана на настраиваемые действия пользователей';

COMMENT ON TABLE ALG_REPOSITORY IS 
'Алгоритмы: репозиторий алгоритмов.';

COMMENT ON TABLE ANLPLAN IS 
'Бухгалтерия: план аналитических счетов.';

COMMENT ON TABLE BANKDOCUMENT IS 
'Бухгалтерия: банковские документы.';

COMMENT ON TABLE BANKDOCUMENTMODEL IS 
'Бухгалтерия: образцы банковских документов.';

COMMENT ON TABLE BILLHEAD IS 
'Склады: заголовки счетов.';

COMMENT ON TABLE BILLHEADMODEL IS 
'Склады: образцы заголовков счетов.';

COMMENT ON TABLE BILLSPEC IS 
'Склады: спецификации счетов.';

COMMENT ON TABLE BILLSPECMODEL IS 
'Склады: образцы спецификаций счетов.';

COMMENT ON TABLE BUYBOOK IS 
'Бухгалтерия: книга покупок.';

COMMENT ON TABLE CALCTAXESKIND IS 
'Справочники: виды начисления налогов.';

COMMENT ON TABLE CALCTAXESLINK IS 
'Справочники: спецификации видов начисления налогов (связи с налогами).';

COMMENT ON TABLE CASHDOCUMENT IS 
'Бухгалтерия: кассовые документы.';

COMMENT ON TABLE CASHDOCUMENTMODEL IS 
'Бухгалтерия: образцы кассовых документов.';

COMMENT ON TABLE CATALOG IS 
'Справочники: каталог товаров и услуг (КТУ).';

COMMENT ON TABLE CATALOGFOLDER IS 
'Справочники: папки каталога товаров и услуг.';

COMMENT ON TABLE CATALOGPRICE IS 
'Справочники: учетные цены для каталога товаров и услуг.';

COMMENT ON TABLE CODEAMOR IS 
'Раздел - Бухгалтерия.
Справочник - Заголовки норм амортизации.
Тип - доступный пользователю.';

COMMENT ON TABLE CONTRACT IS 
'Договоры: заголовки договоров.';

COMMENT ON TABLE CONTRACTMODIFYDOC IS 
'Договоры: изменения договора.';

COMMENT ON TABLE CONTRACTOR IS 
'Справочники: контрагенты.';

COMMENT ON TABLE CONTRACTORCARD IS 
'Расчеты с партнерами: картотека.';

COMMENT ON TABLE CONTRACTORCARDHIST IS 
'Расчеты с партнерами: история фактического движения по картотеке.';

COMMENT ON TABLE CONTRACTORCARDPLAN IS 
'Расчеты с партнерами: история планируемого движения по картотеке.';

COMMENT ON TABLE CONTRACTPHASE IS 
'Договоры: этапы договора.';

COMMENT ON TABLE CONTRACTSPEC IS 
'Договоры: спецификации пунктов договора.';

COMMENT ON TABLE CONTRACT_CATEGORY IS 
'Контракты: категория договора';

COMMENT ON TABLE CONTRACT_KIND IS 
'Контракты: вид договора';

COMMENT ON TABLE CRM_ACTIVITY_KIND IS 
'CRM: виды деятельности';

COMMENT ON TABLE CRM_ACTIVITY_SPHERE IS 
'CRM: сферы деятельности';

COMMENT ON TABLE CRM_BRANCH IS 
'CRM: отрасли';

COMMENT ON TABLE CRM_CLIENT_RANK IS 
'CRM: ранги клиента';

COMMENT ON TABLE CRM_CLIENT_TYPE IS 
'CRM: типы клиентов';

COMMENT ON TABLE CRM_CONTACT IS 
'CRM: контактные лица';

COMMENT ON TABLE CRM_CONTACT_LINK IS 
'CRM: связь контактных лиц и отношений';

COMMENT ON TABLE CRM_DELIVERY_KIND IS 
'CRM: виды доставки';

COMMENT ON TABLE CRM_LINKED_DOC IS 
'CRM: связи с оригиналами документов';

COMMENT ON TABLE CRM_LINK_PROBLEM_SOLUTION IS 
'CRM: связь проблемы и решения';

COMMENT ON TABLE CRM_LINK_SYMPTOM_PROBLEM IS 
'CRM: связь симптома и проблемы';

COMMENT ON TABLE CRM_MARKET IS 
'CRM: рынки';

COMMENT ON TABLE CRM_OFFER IS 
'CRM: предложения';

COMMENT ON TABLE CRM_OFFER_FORECAST IS 
'CRM: прогнозы предложений';

COMMENT ON TABLE CRM_OFFER_KIND IS 
'CRM: виды предложений';

COMMENT ON TABLE CRM_OFFER_REASON IS 
'CRM: причины заключения и потери предложений';

COMMENT ON TABLE CRM_OFFER_STATUS IS 
'CRM: статусы предложений';

COMMENT ON TABLE CRM_OPERATION IS 
'CRM: действия';

COMMENT ON TABLE CRM_OPERATION_KIND IS 
'CRM: виды действий';

COMMENT ON TABLE CRM_OPERATION_PRIORITY IS 
'CRM: приоритеты действий';

COMMENT ON TABLE CRM_OPERATION_PURPOSE IS 
'CRM: цели действий';

COMMENT ON TABLE CRM_OPERATION_STATUS IS 
'CRM: статусы действий';

COMMENT ON TABLE CRM_OWNERSHIP_FORM IS 
'CRM: формы собственности';

COMMENT ON TABLE CRM_PAYMENT_COND IS 
'CRM: условия оплаты';

COMMENT ON TABLE CRM_PERSON_TITLE IS 
'CRM: обращения к человеку';

COMMENT ON TABLE CRM_POSITION IS 
'CRM: должности';

COMMENT ON TABLE CRM_PROBLEM IS 
'CRM: проблемы';

COMMENT ON TABLE CRM_PROBLEM_TYPE IS 
'CRM: типы проблем';

COMMENT ON TABLE CRM_RELATION IS 
'CRM: отношения';

COMMENT ON TABLE CRM_RELATION_STATUS IS 
'CRM: статус отношений';

COMMENT ON TABLE CRM_SOLUTION IS 
'CRM: решения';

COMMENT ON TABLE CRM_SOLUTION_TYPE IS 
'CRM: типы решений';

COMMENT ON TABLE CRM_SYMPTOM IS 
'CRM: симптомы';

COMMENT ON TABLE CRM_USER IS 
'CRM: пользователи CRM';

COMMENT ON TABLE CT_CONFIG IS 
'Договоры: конфигурация модуля.';

COMMENT ON TABLE CURRENCY IS 
'Справочники: валюты.';

COMMENT ON TABLE DISCOUNT IS 
'Склады: скидки/наценки.';

COMMENT ON TABLE DIS_CARD IS 
'Дисконтные карты: дисконтные карты.';

COMMENT ON TABLE DIS_CARD_HIST IS 
'Дисконтные карты: история изменения базовой скидки карты.';

COMMENT ON TABLE DIS_CARD_USER IS 
'Дисконтные карты: пользователи карты.';

COMMENT ON TABLE DIS_COEF IS 
'Дисконтные карты: коэффициенты скидок на товары и группы товаров.';

COMMENT ON TABLE DIS_EXTRA_DISCOUNT IS 
'Дисконтные карты: дополнительные скидки.';

COMMENT ON TABLE DIS_PROMOTION IS 
'Скидки/наценки: рекламное мероприятие';

COMMENT ON TABLE DIS_PROMOTION_LINE IS 
'Скидки/наценки: позиция рекламного мероприятия';

COMMENT ON TABLE DIS_PROMOTION_TYPE IS 
'Скидки/наценки: тип рекламнго мероприятия';

COMMENT ON TABLE DOCACTION IS 
'Документооборот: выполненные этапы.';

COMMENT ON TABLE DOCHEAD IS 
'Документы: заголовки.';

COMMENT ON TABLE DOCHEADMODEL IS 
'Документы: образцы заголовки.';

COMMENT ON TABLE DOCHEADSTATE IS 
'Документооборот: история выполненного этапа.';

COMMENT ON TABLE DOCPROCESSSTAGE IS 
'Документооборот: этапы конкретного типа документов.';

COMMENT ON TABLE DOCPROCESSSTAGE_RIGHTS IS 
'Документооборот: права на конкретные этапы документооборота';

COMMENT ON TABLE DOCSECTION IS 
'Документы: классы документов.';

COMMENT ON TABLE DOCSPEC IS 
'Документы: спецификации.';

COMMENT ON TABLE DOCSPECMODEL IS 
'Документы: образцы спецификаций.';

COMMENT ON TABLE DOCSPECSTATE IS 
'Документооборот: история выполненного этапа по спецификациям документа.';

COMMENT ON TABLE DOCTYPE_DOCSECTION_LINK IS 
'Документы: связь типов документов с классами документов.';

COMMENT ON TABLE DOCTYPE_RIGHTS IS 
'Документы: права на тип документа.';

COMMENT ON TABLE DOCUMENT_LINK IS 
'Документы: связи документов с основаниями при создании одного на основании нескольких.';

COMMENT ON TABLE DOC_SPEC_PACKAGE IS 
'Документы: упаковки в спецификации документа.';

COMMENT ON TABLE DOC_SPEC_SERIAL_NUM IS 
'Документы: серийные номера в спецификации документов.';

COMMENT ON TABLE DP_STAGE_ACTION IS 
'Документооборот: зарегистрированные этапы документооборота.';

COMMENT ON TABLE ECONOMICOPER IS 
'Бухгалтерия: заголовки хозяйственных операций.';

COMMENT ON TABLE ECONOMICOPERMODEL IS 
'Бухгалтерия: заголовки образцов хозяйственных операций.';

COMMENT ON TABLE ECONOMICSPEC IS 
'Бухгалтерия: спецификации хозяйственных операций.
';

COMMENT ON TABLE ECONOMICSPECMODEL IS 
'Бухгалтерия: спецификации образцов хозяйственных операций.';

COMMENT ON TABLE ECONSPEC_FEATURE IS 
'Бухгалтерия: дополнительные характеристики на спецификации ХО.';

COMMENT ON TABLE EMPLOYEES IS 
'Справочники: сотрудники.';

COMMENT ON TABLE EXCH_CONFIG IS 
'Обмен данными: конфигурация.';

COMMENT ON TABLE EXCH_EXPORT IS 
'Обмен данными: экспортируемые записи.';

COMMENT ON TABLE EXCH_IMPORT IS 
'Обмен данными: импортированные записи.';

COMMENT ON TABLE EXCH_SITE IS 
'Обмен данными: внешние базы данных.';

COMMENT ON TABLE EXCH_TABLE IS 
'Обмен данными: соответствие таблиц БД и классов бизнес-компонентов.';

COMMENT ON TABLE FACTURAHEAD IS 
'Счета-фактуры: заголовки.';

COMMENT ON TABLE FACTURAHEADMODEL IS 
'Счета-фактуры: образцы заголовков.';

COMMENT ON TABLE FEATURE IS 
'Справочники: дополнительные признаки.';

COMMENT ON TABLE FEATURELINK IS 
'Справочники: связи доп.признаков с записями разделов системы.';

COMMENT ON TABLE FEATUREVAL IS 
'Справочники: значения перечислимых доп.признаков.';

COMMENT ON TABLE FINACCOUNT IS 
'Финансы: счета и признаки финансового учета.';

COMMENT ON TABLE FINANL IS 
'Финансы: аналитика счетов и признаков.';

COMMENT ON TABLE FINOPER IS 
'Финансы: заголовки операций.';

COMMENT ON TABLE FINOPERMODEL IS 
'Финансы: заголовки образцов операций.';

COMMENT ON TABLE FINPERIOD IS 
'Финансы: периоды учеты.';

COMMENT ON TABLE FINSPEC IS 
'Финансы: спецификации операций (проводки).';

COMMENT ON TABLE FINSPECMODEL IS 
'Финансы: спецификации образцов операций (проводки).';

COMMENT ON TABLE FINSTRUCTURE IS 
'Финансы: структура предприятия.';

COMMENT ON TABLE FINTURNACC IS 
'Финансы: остатки и обороты по счетам.';

COMMENT ON TABLE FINTURNFEAT IS 
'Финансы: остатки и обороты по признакам.';

COMMENT ON TABLE FIN_CONFIG IS 
'Финансы: конфигурация модуля.';

COMMENT ON TABLE FOLDER IS 
'Справочники: папки.
';

COMMENT ON TABLE FOLDER_RIGHTS IS 
'Справочники: права на папки.';

COMMENT ON TABLE FORMULA IS 
'Алгоритмы: функции.
';

COMMENT ON TABLE FUEL_DENSITY_HEAD IS 
'Топливо: заголовки журналов плотностей.';

COMMENT ON TABLE FUEL_DENSITY_SPEC IS 
'Топливо: спецификации журналов плотностей.';

COMMENT ON TABLE INTERNALINVOICESPEC IS 
'Бухгалтерия: спецификации внутренних накладных.';

COMMENT ON TABLE INTERNALINVOICESPECMODEL IS 
'Бухгалтерия: спецификации образцов внутренних накладных.';

COMMENT ON TABLE INVENTORY IS 
'Бухгалтерия: данные по различным видам учета в инвентарной картотеке';

COMMENT ON TABLE INVENTORYACTHEAD IS 
'Склады: заголовки актов инвентаризации.';

COMMENT ON TABLE INVENTORYACTSPEC IS 
'Склады: спецификации актов инвентаризации.';

COMMENT ON TABLE INVHISTORY IS 
'Бухгалтерия: история действий, произведенных над инвентарной карточкой';

COMMENT ON TABLE INVLOCATION IS 
'Бухгалтерия: местонахождение инвентарных объектов.';

COMMENT ON TABLE INVMETAL IS 
'Бухгалтерия: содержание драг.металлов в инвентарных объектах.';

COMMENT ON TABLE INVOICEHEAD IS 
'Склады: заголовки накладных.';

COMMENT ON TABLE INVOICEHEADMODEL IS 
'Склады: заголовки образцов накладных.';

COMMENT ON TABLE INVOICESPEC IS 
'Склады: спецификации накладных.';

COMMENT ON TABLE INVOICESPECMODEL IS 
'Склады: спецификации образцов накладных.';

COMMENT ON TABLE LINKSTAGE IS 
'Документооборот: связи между этапами.';

COMMENT ON TABLE LS_CONFIG IS 
'Графики исполнения обязательств: конфигурация';

COMMENT ON TABLE LS_ITEM IS 
'Графики исполнения обязательств: пункты графика';

COMMENT ON TABLE LS_ITEMKIND IS 
'Графики исполнения обязательств: типы пункта';

COMMENT ON TABLE LS_ITEMSPEC IS 
'Графики исполнения обязательств: спецификации пунктов графиктов';

COMMENT ON TABLE LS_ITEMSPECALT IS 
'Графики исполнения обязательств: возможные замены в спецификацмм графиков';

COMMENT ON TABLE LS_ITEMSPECTAX IS 
'Графики исполнения обязательств: налоги в спецификациях';

COMMENT ON TABLE LS_SCHEDULE IS 
'Графики исполнения обязательств: заголовки графиков';

COMMENT ON TABLE LS_SCHEDULE_DOCHEAD IS 
'График исполнения обязательств: связи графика исполнения обязательств с документом';

COMMENT ON TABLE MEASURE IS 
'Справочники: единицы измерения.';

COMMENT ON TABLE METAL IS 
'Бухгалтерия: драгоценные металлы.';

COMMENT ON TABLE MF_BOM IS 
'Справочники производства: составы изделий';

COMMENT ON TABLE MF_BOM_LABOR IS 
'Справочники производства: рабочая сила для операции СИ';

COMMENT ON TABLE MF_BOM_MACHINE IS 
'Справочники производства: оборудование для операции СИ';

COMMENT ON TABLE MF_BOM_MATERIAL IS 
'Справочники производства: материалы для операции СИ                                             Справочники производства: материалы для операции СИ';

COMMENT ON TABLE MF_BOM_ROUTE IS 
'Справочники производства: операции СИ';

COMMENT ON TABLE MF_BOM_ROUTE_RESOURCE IS 
'Справочники производства: связь СИ, операций и ресурсов';

COMMENT ON TABLE MF_CELL IS 
'Справочники производства: производственные линиии';

COMMENT ON TABLE MF_CONFIG IS 
'Производство: конфигурация модуля';

COMMENT ON TABLE MF_COST_CATEGORIES IS 
'Справочники производства: категории затрат';

COMMENT ON TABLE MF_COST_DETAIL IS 
'Справочники производства: идентификаторы расшифровок строимости';

COMMENT ON TABLE MF_COST_DETAIL_LINE IS 
'Справочники произвосдства: расшифровка строимости';

COMMENT ON TABLE MF_CREW IS 
'Справочники производства: бригады';

COMMENT ON TABLE MF_DAY_CAL IS 
'Справочники производства: днейвной календарь';

COMMENT ON TABLE MF_DAY_TIME IS 
'Справочники производства: сменный календарь';

COMMENT ON TABLE MF_INPUT_DOC_HEAD IS 
'Производство: акты на списание';

COMMENT ON TABLE MF_INPUT_DOC_HEAD_MODEL IS 
'Производство: образцы актов на списание';

COMMENT ON TABLE MF_INPUT_DOC_SPEC IS 
'Производство: спецификации актов на списание';

COMMENT ON TABLE MF_JOB IS 
'Производство: заказ-наряды на производство';

COMMENT ON TABLE MF_JOB_LABOR IS 
'Производство: рабочая силы операция ЗНП';

COMMENT ON TABLE MF_JOB_MACHINE IS 
'Справочники производства: оборудование для операции ЗНП';

COMMENT ON TABLE MF_JOB_MATERIAL IS 
'Справочники производства: материалы для операции ЗНП';

COMMENT ON TABLE MF_JOB_ROUTE IS 
'Справочники производства: операции ЗНП';

COMMENT ON TABLE MF_JOB_ROUTE_RESOURCE IS 
'Справочники проивзодства: связь ЗНП, операций и ресурсов';

COMMENT ON TABLE MF_LABOR_CLASS IS 
'Справочники производства: классы рабочей силы';

COMMENT ON TABLE MF_OUTPUT_DOC_HEAD IS 
'Производство: акты выпуска готовой продукции';

COMMENT ON TABLE MF_OUTPUT_DOC_HEAD_MODEL IS 
'Производство: образцов актов выпуска готовой продукции';

COMMENT ON TABLE MF_RESOURCE_FAMILY IS 
'Справочники производства: семейства ресурсов';

COMMENT ON TABLE MF_RESOURCE_GROUP IS 
'Справочники производства: группы ресурсов';

COMMENT ON TABLE MF_RESOURCE_GROUP_CAPACITY IS 
'Справочники проиводства: емкость группы ресурсов';

COMMENT ON TABLE MF_ROUTE IS 
'Справочники производства: логистические маршруты';

COMMENT ON TABLE MF_SCRAP_DOC_HEAD IS 
'Производство: акты на списание потерь';

COMMENT ON TABLE MF_SCRAP_DOC_HEAD_MODEL IS 
'Производство: образцы актов на списание потерь';

COMMENT ON TABLE MF_SCRAP_DOC_SPEC IS 
'Производство: спецификации актов на списание потерь';

COMMENT ON TABLE MF_TRANSACTION IS 
'Производство: регистр фактической себестоимости';

COMMENT ON TABLE MF_VARIANCE_DOC_HEAD IS 
'Производство: документы по отклонениям';

COMMENT ON TABLE MF_VARIANCE_DOC_HEAD_MODEL IS 
'Производство: образцы документов по отклонениям';

COMMENT ON TABLE MF_VARIANCE_DOC_SPEC IS 
'Производство: спецификации документов по отклонениям';

COMMENT ON TABLE MF_WC_RATES IS 
'Справочники производства: нормы стоимости для рабочиых центров';

COMMENT ON TABLE MF_WEEK_CAL IS 
'Спрвавочника производства: недельный календарь';

COMMENT ON TABLE MF_WEEK_CAL_CHANGE IS 
'Справочники производства: расшифровка недельного календаря';

COMMENT ON TABLE MF_WORK_CENTER IS 
'Справочники производства: рабочий центр';

COMMENT ON TABLE OKDP IS 
'Справочники: коды ОКДП.
';

COMMENT ON TABLE OKOF IS 
'Бухгалтерия: коды ОКОФ.
';

COMMENT ON TABLE OLAP_DATAPUMP IS 
'OLAP: перекачка данных.';

COMMENT ON TABLE ORDERHEAD IS 
'Склады: заголовки заказов.';

COMMENT ON TABLE ORDERHEADMODEL IS 
'Склады: заголовки образцов заказов.';

COMMENT ON TABLE ORDERSPEC IS 
'Склады: спецификации заказов.';

COMMENT ON TABLE ORDERSPECMODEL IS 
'Склады: спецификации образцов заказов.';

COMMENT ON TABLE ORGUNIT IS 
'Справочники: подразделения.
';

COMMENT ON TABLE OVR_CANCELLATION IS 
'Спецодежда: история погашения';

COMMENT ON TABLE OVR_CARD IS 
'Спецодежда: лицевые карточки сотрудников (ЛКС)';

COMMENT ON TABLE OVR_CARD_DOCUMENT_LINK IS 
'Спецификация: документы, отработанные в лицевых карточках сотрудников';

COMMENT ON TABLE OVR_CARD_HIST IS 
'Спецодежда: история выдачи спецодежды';

COMMENT ON TABLE OVR_CARD_HIST_DOC_SPEC_LINK IS 
'Спецодежда: связь спецификаций документов и лицевых карточек сотрудников';

COMMENT ON TABLE OVR_NORM_HEAD IS 
'Спецодежда: норма выдачи спецодежды';

COMMENT ON TABLE OVR_NORM_SPEC IS 
'Спецодежда: спецификация норм выдачи';

COMMENT ON TABLE OVR_NORM_SPEC_DOC_SPEC_LINK IS 
'Спецодежда: связь документов и норм выдачи';

COMMENT ON TABLE OVR_NORM_SPEC_LINK IS 
'Спецодежда: спецификации норм выдачи';

COMMENT ON TABLE OVR_SIZE IS 
'Спецодежда: размеры в лицевых карточках сотруников';

COMMENT ON TABLE PACKING IS 
'Справочники: упаковки.';

COMMENT ON TABLE PARTNEMPL IS 
'Справочники: сотрудники партнера.
';

COMMENT ON TABLE PARTNER IS 
'Справочники: партнеры.
';

COMMENT ON TABLE PERIOD IS 
'Бухгалтерия: учетные периоды.
';

COMMENT ON TABLE PERMISSIBLEACCOUNTS IS 
'Бухгалтерия: допустимая корреспонденция счетов.
';

COMMENT ON TABLE PHASEITEMFACT IS 
'Договоры: фактические пункты договора.';

COMMENT ON TABLE PHASEITEMPLAN IS 
'Договоры: планируемые пункты договора.';

COMMENT ON TABLE PHASEITEM_LINK IS 
'Договоры: распределение сумм фактических этапов по плановым этапам.';

COMMENT ON TABLE PMA_DOCGROUP IS 
'Журнал платежей: группы документов';

COMMENT ON TABLE PMA_DOCGROUPLINK IS 
'Журнал платежей: документы в группе';

COMMENT ON TABLE PMA_PAYMENT IS 
'Журнал платежей: заголовки журнала платежей';

COMMENT ON TABLE PMA_TRHEAD IS 
'Журнал платежей: связанные документы';

COMMENT ON TABLE PMA_TRSPEC IS 
'Журнал платежей: спецификации связанных документов';

COMMENT ON TABLE PMA_TRTAX IS 
'Журнал платежей: налоги связанных документов';

COMMENT ON TABLE PMC_CONFIG IS 
'Платежный календарь: конфигурация';

COMMENT ON TABLE PMC_EXECUTION IS 
' Платежный календарь: исполнения';

COMMENT ON TABLE PMC_LIABILITY IS 
'Платежный календарь: обязательства';

COMMENT ON TABLE PMC_PERIOD IS 
'Планирование платежей: периоды планирования';

COMMENT ON TABLE PMC_RESOURCE IS 
'Планирование платежей: средства платежа';

COMMENT ON TABLE PMC_VERSION IS 
'Планирование платежей: заголовки версий планирования платежей';

COMMENT ON TABLE PMC_VERSTATUS IS 
'Планирование платежей: статусы версий планирования';

COMMENT ON TABLE PP_CATALOG_WAREHOUSE IS 
'Планирование производства: склады зранения товара';

COMMENT ON TABLE PP_FIRM_PLANNED_ORDER IS 
'Планирование производства: подтвержденные заказы';

COMMENT ON TABLE PP_FORECAST_VERSION IS 
'Справочники производства: версии прогнозов';

COMMENT ON TABLE PP_GENERIC_ITEM IS 
'Планирование производства: обобщенные товары';

COMMENT ON TABLE PP_INVENTORY_FORECAST IS 
'Справочники производства: прогнозы складских запасов';

COMMENT ON TABLE PP_INVENTORY_FORECAST_LINE IS 
'Планирование производства: прогнозы складских запасов';

COMMENT ON TABLE PP_ITEM_FAMILY IS 
'Планирование производства: семейства обобщенных товаров';

COMMENT ON TABLE PP_MPS IS 
'Производство: основные производственные планы';

COMMENT ON TABLE PP_MPS_LINE IS 
'Производство: итоги формирования производственного плана';

COMMENT ON TABLE PP_MRP_INPUTS IS 
'Планирование производства: поступление товаров для расчета MRP';

COMMENT ON TABLE PP_MRP_OUTPUTS IS 
'Планирование производства: потребности товаров для расчета MRP';

COMMENT ON TABLE PP_MRP_RECOMMENDATION IS 
'Планирование производства: рекомендации ППМ';

COMMENT ON TABLE PP_MRP_REPORT IS 
'Планирование производства: итоги расчета MRP расчета';

COMMENT ON TABLE PP_MRP_SHORTAGE IS 
'Планирование производства: дефицит товаров по результатом MRP расчета';

COMMENT ON TABLE PP_MRP_TOTALS_BY_DATE IS 
'Планирование производства: итоги MRP по дням';

COMMENT ON TABLE PP_MRP_VERSION_CONTROL IS 
'Планирование производства: версии ППМ';

COMMENT ON TABLE PP_MRP_VERSION_FORECAST IS 
'Планирование производства: прогнозы в версиях ППМ';

COMMENT ON TABLE PP_MRP_VERSION_MPS IS 
'Планирование производства: производственные планы в версиях ППМ';

COMMENT ON TABLE PP_PLANNING_FORECAST IS 
'Справочники производства: строки версий прогнозов';

COMMENT ON TABLE PP_PLANNING_LEVEL IS 
'Справочники производства: уровни планирования';

COMMENT ON TABLE PP_PLANNING_LEVEL_BUCKET IS 
'Справочники производства: периоды уровня планирования';

COMMENT ON TABLE PP_PRODUCTION_PROFILE IS 
'Планирование проивзодства: планирование производства';

COMMENT ON TABLE PP_RCCP_DETAIL IS 
'Планирование производства: детализация УППМ';

COMMENT ON TABLE PP_RCCP_HEADER IS 
'Планирование производства: укрупненные планы загрузки производственных мощностей';

COMMENT ON TABLE PP_RCCP_RESOURCE_LOAD IS 
'Планирование производства: детализация УППМ для графических экранов';

COMMENT ON TABLE PREF_ABBREVIATION IS 
'Управление персоналом: сокращенные наименования элементов адреса
';

COMMENT ON TABLE PREF_ADDITIONAL_EDUCATION_KIND IS 
'Справочники учета персонала: степени образования';

COMMENT ON TABLE PREF_ADDRESS IS 
'Управление персоналом: адреса сотрудников
';

COMMENT ON TABLE PREF_CALC_PERIOD IS 
'Управление персоналом: расчетные периоды
';

COMMENT ON TABLE PREF_CONFIG IS 
'Управление персоналом: настройка модуля
';

COMMENT ON TABLE PREF_COSTS_ANL IS 
'Управление персоналом: аналитика состава затрат
';

COMMENT ON TABLE PREF_COUNTRY IS 
'Управление персоналом: объединенный классификатор стран мира
';

COMMENT ON TABLE PREF_DEDUCTION_KIND IS 
'Управление персоналом: виды вычетов, предоставляемых налогоплательщикам
';

COMMENT ON TABLE PREF_EDUCATION_DEGREE IS 
'Справочники учете персонала: степени образования';

COMMENT ON TABLE PREF_FAMILYDEDUCTIONS IS 
'Управление персоналом: вычеты, предоставляемые налогоплательщикам на членов семьи сотрудника
';

COMMENT ON TABLE PREF_FAMILYMEMBERS IS 
'Управление персоналом: члены семей сотрудников
Таблица не используется. Заменена на ref_family_member';

COMMENT ON TABLE PREF_FAMILYRELATION IS 
'Управление персоналом: степени родства
';

COMMENT ON TABLE PREF_FAMILYSTATUS IS 
'Управление персоналом: семейное положение сотрудников
Таблица не используется, заменена на ref_family_status_kind';

COMMENT ON TABLE PREF_FAMILYSTATUS_KIND IS 
'Управление персоналом: типы семейного положения
Таблица не используется. Заменены на ref_family_status_kind';

COMMENT ON TABLE PREF_FOREIGN_LANGUAGE IS 
'Справочники учете персонала: иностранные языки';

COMMENT ON TABLE PREF_IDENTDOC IS 
'Управление персоналом: документы, удостоверяющие личность
';

COMMENT ON TABLE PREF_IDENTDOC_KIND IS 
'Управление персоналом: виды документов, удостоверяющих личность
';

COMMENT ON TABLE PREF_INSUREDCLASS IS 
'Управление персоналом: категории плательщиков страховых взносов
';

COMMENT ON TABLE PREF_JOB IS 
'Управление персоналом: профессии
';

COMMENT ON TABLE PREF_KLADR IS 
'Управление персоналом: классификатор адресов (КЛАДР)
';

COMMENT ON TABLE PREF_LANGUAGE_KNOWLEDGE IS 
'Справочники учете персонала: степени знания иностранных языков';

COMMENT ON TABLE PREF_LEAVE_KIND IS 
'Справочники учете персонала: виды отпусков';

COMMENT ON TABLE PREF_MILITARY_RANK IS 
'Справочники учета персонала: воинские звания';

COMMENT ON TABLE PREF_MILITARY_RANK_KIND IS 
'Справочники учете персонала: составы воинских званий';

COMMENT ON TABLE PREF_MILITARY_VALIDITY IS 
'Справочники учете персонала: категории годности с воинской службе';

COMMENT ON TABLE PREF_NATIONALITY IS 
'Управление персоналом: национальности
';

COMMENT ON TABLE PREF_PERSONNEL IS 
'Управление персоналом: основные сведения о сотрудниках
';

COMMENT ON TABLE PREF_PERSONNEL_ATTESTATION IS 
'Справочники учете персонала: аттестация сотрудников';

COMMENT ON TABLE PREF_PERSONNEL_EDUCATION IS 
'Справочники учете персонала: образование сотрудников';

COMMENT ON TABLE PREF_PERSONNEL_GROUP IS 
'Управление персоналом: группы основных сведений о сотрудниках
';

COMMENT ON TABLE PREF_PERSONNEL_GROUP_TYPE IS 
'Управление персоналом: типы групп основных сведений о сотрудниках
';

COMMENT ON TABLE PREF_PERSONNEL_HIST IS 
'Управление персоналом: история изменения основных сведений о сотрудниках
';

COMMENT ON TABLE PREF_PERSONNEL_LABOUR_CONTRACT IS 
'Справочники учете персонала: трудовые договора сотрудников';

COMMENT ON TABLE PREF_PERSONNEL_LANGUAGE IS 
'Справочники учете персонала: значния иностранных языков сотрудников';

COMMENT ON TABLE PREF_PERSONNEL_LEAVE IS 
'Справочники учете персонала: отпуска сотрудников';

COMMENT ON TABLE PREF_PERSONNEL_PHONE IS 
'Справочники учете персонала: телефоны сотрудников
Таблица не используется';

COMMENT ON TABLE PREF_PERSONNEL_PROFESSION IS 
'Справочники учете персонала: профессии сотрудников';

COMMENT ON TABLE PREF_PERSONNEL_RECORD IS 
'Справочники учете персонала: записи личного дела сотрудников';

COMMENT ON TABLE PREF_PERSONNEL_REWARD IS 
'Справочники учете персонала: поощрения и награды сотрудников';

COMMENT ON TABLE PREF_PERSONNEL_SERVICE IS 
'Управление персоналом: стаж сотрудника
';

COMMENT ON TABLE PREF_PERSONNEL_SKILL_RAISING IS 
'Справочники учете персонала: повышение квалификации сотрудников';

COMMENT ON TABLE PREF_PERSONNEL_SOCIAL_BENEFIT IS 
'Справочники учете персонала: социальные льготы сотрудников';

COMMENT ON TABLE PREF_PERSONNEL_TRANSFER IS 
'Справочники учете персонала: прием и переводы на работу сотрудника';

COMMENT ON TABLE PREF_PERS_VOCATIONAL_TRAINING IS 
'Справочники учета персонала: профессиональная переподготовка';

COMMENT ON TABLE PREF_PFCODEKIND_IN_SERVICEKIND IS 
'Управление персоналом: входимость видов кодов стажа
для пенсионного фонда в виды стажа
';

COMMENT ON TABLE PREF_PFCODE_IN_SERVICE IS 
'Управление персоналом: входимость кодов стажа для
пенсионного фонда в стаж сотрудника
';

COMMENT ON TABLE PREF_POSITION IS 
'Управление персоналом: должности
';

COMMENT ON TABLE PREF_POSITION_FILL_KIND IS 
'Управление персоналом: виды исполнения должности
';

COMMENT ON TABLE PREF_RESERVE_CATEGORY IS 
'Справочники учете персонала: категории запаса';

COMMENT ON TABLE PREF_RISE IS 
'Управление персоналом: надбавки
';

COMMENT ON TABLE PREF_RISE_PERCENT IS 
'Управление персоналом: проценты надбавок
';

COMMENT ON TABLE PREF_RISE_SCALE IS 
'Управление персоналом: шкалы надбавок
';

COMMENT ON TABLE PREF_SERVICE_KIND IS 
'Управление персоналом: виды стажа
';

COMMENT ON TABLE PREF_SERVICE_PFCODE IS 
'Управление персоналом: коды стажа для пенсионного фонда
';

COMMENT ON TABLE PREF_SKILL_RAISING_KIND IS 
'Справочники учета персонала: виды повышения квалификации';

COMMENT ON TABLE PREF_SPECIALITY IS 
'Справочники учете персонала: специальности по образованию';

COMMENT ON TABLE PREF_STAFF_CATEGORY IS 
'Управление персоналом: категории персонала
';

COMMENT ON TABLE PREF_STAFF_LIST IS 
'Управление персоналом: варианты штатного расписания
';

COMMENT ON TABLE PREF_STAFF_LIST_POSITION IS 
'Управление персоналом: должности в штатном расписании
';

COMMENT ON TABLE PREF_STAFF_LIST_UNIT IS 
'Управление персоналом: подразделения штатного расписания
';

COMMENT ON TABLE PREF_STREET IS 
'Управление персоналом: справочник улиц
';

COMMENT ON TABLE PREF_TARIFFING IS 
'Управление персоналом: тарификация должности
';

COMMENT ON TABLE PREF_TARIFFING_CATEGORY IS 
'Управление персоналом: категории тарификации должности
';

COMMENT ON TABLE PREF_TARIFF_SCALE IS 
'Управление персоналом: тарифные сетки
';

COMMENT ON TABLE PREF_TARIFF_SCALE_CLASS IS 
'Управление персоналом: разряды тарифных сеток
';

COMMENT ON TABLE PREF_TAX_CALC_KIND IS 
'Справочники учете персонала: схемы расчета налогов';

COMMENT ON TABLE PREF_WORKTIME_NORM IS 
'Управление персоналом: нормы рабочего времени
';

COMMENT ON TABLE PREF_WORK_CONDITION IS 
'Управление персоналом: условия труда
';

COMMENT ON TABLE PREF_WORK_SCHEDULE IS 
'Управление персоналом: графики работы
';

COMMENT ON TABLE PRICELISTFOLDER IS 
'Справочники: папки прайс-листов.
';

COMMENT ON TABLE PRICELISTHEAD IS 
'Справочники: заголовки прайс-листов.
';

COMMENT ON TABLE PRICELISTHEAD_RIGHTS IS 
'Справочники: права на заголовки прайс-листов.';

COMMENT ON TABLE PRICELISTSPEC IS 
'Справочники: спецификации прайс-листов.
';

COMMENT ON TABLE PRICELISTSPEC_PRICE IS 
'Справочники: цены позиций спецификаций прайс-листов.
';

COMMENT ON TABLE PRICELIST_PRICETYPE_LINK IS 
'Справочники: связи типов цен с заголовками прайс-листов.
';

COMMENT ON TABLE PRICETYPE IS 
'Справочники: типы цен.';

COMMENT ON TABLE PR_CONTACT_HIST IS 
'CRM: История контактов с партнерами';

COMMENT ON TABLE PR_CONTACT_HIST_FILES IS 
'CRM: Файлы, приложенные к контактам';

COMMENT ON TABLE PR_CONTACT_KIND IS 
'CRM: Справочник видов контакта';

COMMENT ON TABLE PR_POSSIBLE_RESULT IS 
'CRM: Справочник возможных результатов контакта';

COMMENT ON TABLE QC_SCRAP_REASON IS 
'Управление качеством: причины потерь';

COMMENT ON TABLE QC_SCRAP_TYPE IS 
'Управление качеством: виды потерь';

COMMENT ON TABLE REF_BANK IS 
'Справочники: банки';

COMMENT ON TABLE REF_BANK_ACCOUNT IS 
'Справочники: банковские счета';

COMMENT ON TABLE REF_BANK_ACCOUNT_TYPE IS 
'Справочники: типы банковских счетов';

COMMENT ON TABLE REF_CONFIDENTIAL_DATA IS 
'Справочники: конфиценциальная информация о партнерах';

COMMENT ON TABLE REF_CONTRACTOR_EADDRESS IS 
'Справочники: электронные адреса контрагентов';

COMMENT ON TABLE REF_CONTRACTOR_PHONE IS 
'Справочники: телефоны контрагентов';

COMMENT ON TABLE REF_COUNTRY IS 
'Справочники: страны';

COMMENT ON TABLE REF_CURRENCY_RATE IS 
'Справочники:курсы валют.';

COMMENT ON TABLE REF_CURRENCY_RATE_AUTHORITY IS 
'Справочники: источники курсов валют.';

COMMENT ON TABLE REF_CURRENCY_RATE_TYPE IS 
'Справочники: типы курсов валют.';

COMMENT ON TABLE REF_DISTRICT IS 
'Справочники: районы';

COMMENT ON TABLE REF_EADDRESS_KIND IS 
'Справочники: типы электронных адресов';

COMMENT ON TABLE REF_FAMILY_MEMBER IS 
'Справочники учета персонала: члены семей сотрудников';

COMMENT ON TABLE REF_FAMILY_RELATION IS 
'Справочники: степени родства';

COMMENT ON TABLE REF_FAMILY_STATUS IS 
'Справочники учета персонала: семейное положение сотрудников';

COMMENT ON TABLE REF_FAMILY_STATUS_KIND IS 
'Справочники учета персонала: семейное положение сотрудников';

COMMENT ON TABLE REF_HOLIDAYS IS 
'Справочники: праздничные дни';

COMMENT ON TABLE REF_IDENT_DOC IS 
'Справочники: документы физических лиц';

COMMENT ON TABLE REF_IDENT_DOC_KIND IS 
'Справочники: типы документов';

COMMENT ON TABLE REF_KBK IS 
'Справочники: КБК';

COMMENT ON TABLE REF_MEASURE_CONV IS 
'Справочники: преобразования единиц измерения.';

COMMENT ON TABLE REF_NATIONALITY IS 
'Справочники: национальности';

COMMENT ON TABLE REF_NATURAL_PERSON IS 
'Справочники: физические лица';

COMMENT ON TABLE REF_NATURAL_PERSON_HIST IS 
'Справочники учета персонала: история изменения физического лица';

COMMENT ON TABLE REF_OKATO IS 
'Справочники: ОКАТО';

COMMENT ON TABLE REF_OKP IS 
'Справочники: ОКР';

COMMENT ON TABLE REF_ORIGINAL_DOCUMENT IS 
'Справочники: оригиналы документов';

COMMENT ON TABLE REF_PARTN_EMPL_EMAIL IS 
'Справочники: электронные адреса сотрудников партнеров.
Таблица не используется';

COMMENT ON TABLE REF_PARTN_EMPL_LINK IS 
'Справочники: связь сотрудников с контрагентами';

COMMENT ON TABLE REF_PARTN_EMPL_PHONE IS 
'Справрчники: телефоны сонтрудников партнера.
Таблица не используется';

COMMENT ON TABLE REF_PERSON_ADDRESS IS 
'Адреса проживания физического лица';

COMMENT ON TABLE REF_PERSON_EADDRESS IS 
'Справочники: электронные адреса физических лиц';

COMMENT ON TABLE REF_PERSON_PHONE IS 
'Справочники учета персонала: телефоны сотрудников';

COMMENT ON TABLE REF_PHONE_KIND IS 
'Справочники: виды телефонов';

COMMENT ON TABLE REF_PLACE IS 
'Справочники: населенные пункты';

COMMENT ON TABLE REF_REGION IS 
'Справочники: регионы';

COMMENT ON TABLE REF_ZIPCODE IS 
'Справочники: индексы';

COMMENT ON TABLE REMNACC IS 
'Бухгалтерия: остатки и обороты средств по счетам.
';

COMMENT ON TABLE REMNANL IS 
'Бухгалтерия: остатки и обороты средств по аналитическим счетам.
';

COMMENT ON TABLE REMNDBKT IS 
'Бухгалтерия: ведомости расчетов с контрагентами.
';

COMMENT ON TABLE REMNVAL IS 
'Бухгалтерия: остатки и обороты по товарно-материальным ценностям.
';

COMMENT ON TABLE RPT_CLASS_LINK IS 
'Генератор отчетов: принадлежность отчетов бизнес-компонентам.';

COMMENT ON TABLE RPT_MAIN IS 
'Генератор отчетов: заголовки отчетов.';

COMMENT ON TABLE RPT_RIGHTS IS 
'Генератор отчетов: права доступа к отчету.
';

COMMENT ON TABLE RTL_INVOICEHEAD IS 
'Розничная торговля: документы на отпуск.';

COMMENT ON TABLE RTL_INVOICEHEADMODEL IS 
'Розничная торговля: образцы документов на отпуск.';

COMMENT ON TABLE RTL_INVOICESPEC IS 
'Розничная торговля: спецификации документов на отпуск.';

COMMENT ON TABLE SALEBOOK IS 
'Бухгалтерия: книга продаж.
';

COMMENT ON TABLE SAL_CALC_LIST IS 
'Зарплата: расчетные листки
';

COMMENT ON TABLE SAL_CALC_LIST_FEE IS 
'Зарплата: начисления/удержания в расчетных листках
';

COMMENT ON TABLE SAL_CALC_LIST_FEE_PARAM IS 
'Зарплата: параметры начислений/удержаний в расчетных листках
';

COMMENT ON TABLE SAL_CALC_LIST_SECTION IS 
'Зарплата: разделы в расчетных листках
';

COMMENT ON TABLE SAL_CALC_LIST_SECTION_REF IS 
'Зарплата: справочник разделов расчетных листков
';

COMMENT ON TABLE SAL_DISCOUNTKIND IS 
'Зарплата: виды скидок и расходов
';

COMMENT ON TABLE SAL_FEE_MODEL IS 
'Зарплата: образцы начислений/удержаний в лицевых счетах сотрудников
';

COMMENT ON TABLE SAL_FEE_MODEL_PARAM IS 
'Зарплата: параметры образцов начислений/удержаний из лицевых счетов сотрудников
';

COMMENT ON TABLE SAL_FEE_REF IS 
'Зарплата: справочник начислений/удержаний
';

COMMENT ON TABLE SAL_FEE_REF_PARAM IS 
'Зарплата: параметры начислений/удержаний из справочника
';

COMMENT ON TABLE SAL_FEE_SUMMARY_HEAD IS 
'Зарплата: своды начислений/удержаний по аналитике
(расширение заголовка документа)
';

COMMENT ON TABLE SAL_FEE_SUMMARY_SPEC IS 
'Зарплата: спецификации сводов начислений/удержаний по аналитике
(расширение спецификации документа)
';

COMMENT ON TABLE SAL_GNS_CODE IS 
'Зарплата: коды ГНС для видов оплаты
';

COMMENT ON TABLE SAL_INCLUDED_FEE IS 
'Зарплата: справочник входящих начислений/удержаний
';

COMMENT ON TABLE SAL_INCOMEKIND IS 
'Зарплата: справочник видов доходов
';

COMMENT ON TABLE SAL_MINSALARY IS 
'Зарплата: минимальные зарплаты
';

COMMENT ON TABLE SAL_PAY_ROLL IS 
'Зарплата: расчетные ведомости
';

COMMENT ON TABLE SAL_PAY_SHEET IS 
'Зарплата: платежные ведомости
';

COMMENT ON TABLE SAL_PAY_SHEET_SPEC IS 
'Зарплата: спецификации платежных ведомостей
';

COMMENT ON TABLE SAL_PERSONAL_ACCOUNT IS 
'Зарплата: лицевые счета сотрудников
';

COMMENT ON TABLE SAL_POSITION_FILL IS 
'Зарплата: должности, исполняемые сотрудниками
';

COMMENT ON TABLE SAL_REPLACED_FEE IS 
'Зарплата: справочник вытесняемых начислений/удержаний
';

COMMENT ON TABLE SAL_ROLL_KIND IS 
'Зарплата: типы ведомостей
';

COMMENT ON TABLE SAL_TARIFFING_IN_FEE IS 
'Зарплата: входимость категорий тарификации должности
в справочник начислений/удержаний
';

COMMENT ON TABLE SAL_TAXHEAD IS 
'Зарплата: заголовки налоговых сеток
';

COMMENT ON TABLE SAL_TAXRATE IS 
'Зарплата: ставки налогов
';

COMMENT ON TABLE SAL_TAXSCALE IS 
'Зарплата: налоговые шкалы
';

COMMENT ON TABLE SCH_TASK IS 
'Расписание заданий: задания планировщика';

COMMENT ON TABLE SEC_GROUPS IS 
'Безопасность: группы пользователей.';

COMMENT ON TABLE SEC_LINK_USERS_GROUPS IS 
'Безопасность: вхождение пользователей в группы.';

COMMENT ON TABLE SEC_METHOD_ACCESS IS 
'Безопасность: права на методы бизнес-компонентов.';

COMMENT ON TABLE SEC_MODULE_ACCESS IS 
'Безопасность: права на модули.';

COMMENT ON TABLE SEC_USERS IS 
'Безопасность: пользователи.';

COMMENT ON TABLE SEC_USER_PROFILE IS 
'Права пользователей: удаленный профайл';

COMMENT ON TABLE SEC_USER_PROFILE_ITEM IS 
'Права пользователей: описание удаленного профайла';

COMMENT ON TABLE SETOFGOOD IS 
'Справочники: состав комплекта в справочнике КТУ.
';

COMMENT ON TABLE SPECMARK IS 
'Бухгалтерия: особые отметки на хозяйственных операциях.
';

COMMENT ON TABLE STL_CONFIG IS 
'Расчеты с партнерами: конфигурация модуля.';

COMMENT ON TABLE STOCKBATCH IS 
'Склады: партии.';

COMMENT ON TABLE STOCKBATCHHISTORY IS 
'Склады: история фактического движения по партии.';

COMMENT ON TABLE STOCKCARD IS 
'Склады: карточки складского учета (КСУ).';

COMMENT ON TABLE STOCKDOCUMENTHEAD IS 
'Склады: заголовки складских документов.';

COMMENT ON TABLE STOCKDOCUMENTHEADMODEL IS 
'Склады: заголовки образцов складских документов.';

COMMENT ON TABLE STOCKDOCUMENTSPEC IS 
'Склады: спецификации складских документов.';

COMMENT ON TABLE STOCKDOCUMENTSPECMODEL IS 
'Склады: спецификации образцов складских документов.';

COMMENT ON TABLE STOCKPLANHISTORY IS 
'Склады: история планового движения и резервирования по партии.';

COMMENT ON TABLE STRINGS IS 
'Служебная таблица: используется для хранения строковых имен некоторых величин.';

COMMENT ON TABLE SYSTEMCONFIG IS 
'Система: конфигурация системы.';

COMMENT ON TABLE SYS_CLASS IS 
'Система: классы бизнес-компонентов.';

COMMENT ON TABLE SYS_COMPANY IS 
'Балансовая единица';

COMMENT ON TABLE SYS_DB_AUDIT IS 
'Аудит изменения хранилища данных';

COMMENT ON TABLE SYS_DB_AUDIT_DETAIL IS 
'Детализация аудита изменения хранилища данных';

COMMENT ON TABLE SYS_DB_AUDIT_SETUP IS 
'Настройка аудита изменения хранилища данных';

COMMENT ON TABLE SYS_METHOD IS 
'Система: методы бизнес-компонентов.';

COMMENT ON TABLE SYS_MODULE IS 
'Система: модули.';

COMMENT ON TABLE SYS_SECURITY_AUDIT IS 
'Аудит безопасности';

COMMENT ON TABLE TAB_CONFIG IS 
'Табельный учет: конфигурация';

COMMENT ON TABLE TAB_PATTERN_HEAD IS 
'Табельный учет: сведения шаблонов графитов';

COMMENT ON TABLE TAB_PATTERN_SPEC IS 
'Табельный учет: шаблоны графиков';

COMMENT ON TABLE TAB_SCHEDULE_HEAD IS 
'Табельный учет: спецификация графика работ в табельном учете';

COMMENT ON TABLE TAB_SCHEDULE_SPEC IS 
'Табельный учет: спецификация графика работ в табельном учете';

COMMENT ON TABLE TAB_TIME_BOARD_HEAD IS 
'Табельный учет: заголовки табелей';

COMMENT ON TABLE TAB_TIME_BOARD_POSITION IS 
'Табельный учет: список сотрудников в табеле';

COMMENT ON TABLE TAB_TIME_BOARD_SPEC IS 
'Табельный учет: содержание табеля';

COMMENT ON TABLE TAB_TIME_KIND IS 
'Табельный учет: типы времени';

COMMENT ON TABLE TAX IS 
'Справочники: налоги.
';

COMMENT ON TABLE TAXGROUP IS 
'Справочники: группы налогов.
';

COMMENT ON TABLE TAXLINK IS 
'Справочники: вхождение налогов в группы налогов.';

COMMENT ON TABLE TAXSUMM IS 
'Документы: суммы налогов в спецификациях документов.';

COMMENT ON TABLE TAXSUM_BUF IS 
'Документы: служебная таблица.';

COMMENT ON TABLE TURNONESFEATURES IS 
'Бухгалтерия: оборотная ведомость по дополнительным характеристикам проводок.';

COMMENT ON TABLE TYPEDOC IS 
'Документы: типы документов.
';

COMMENT ON TABLE WH_BIN_LOCATION IS 
'Склады: секции хранения на складах.';

COMMENT ON TABLE WH_BIN_LOCATION_DETAIL IS 
'Склады: секции хранения в партии.';

COMMENT ON TABLE WH_BIN_LOCATION_TYPE IS 
'Склады: типы секций хранения.';

COMMENT ON TABLE WH_BIN_TYPE_CAP_BY_PROD IS 
'Склады: секции хранения - емкость по продукции.';

COMMENT ON TABLE WH_CONFIG IS 
'Склады: конфигурация модуля.';

COMMENT ON TABLE WH_INVACT_COMMISSION IS 
'Склады: члены комиссии в акте инвентаризации.';

COMMENT ON TABLE WH_SECURITY IS 
'Склады: права, специфичные для модуля.';

COMMENT ON TABLE WH_SERIAL_NUM IS 
'Склады: серийные номера в партиях.';

COMMENT ON TABLE WH_STOCK_KIND IS 
'Склады: типы видов запаса';

COMMENT ON TABLE WH_WAREHOUSE IS 
'Склады: склады.';

COMMENT ON TABLE WH_WAREHOUSE_TYPE IS 
'Склады: Типы складов';

COMMENT ON TABLE WH_ZONE IS 
'Склады: зоны хранения.';



/* Fields descriptions */

COMMENT ON COLUMN ACCBATCH.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN ACCBATCH.INCOMEDATE IS 
'Дата прихода';

COMMENT ON COLUMN ACCBATCH.INCOMECOSTNAT IS 
'Приходная цена';

COMMENT ON COLUMN ACCBATCH.INCOMECOSTCUR IS 
'Приходная цена в валюте';

COMMENT ON COLUMN ACCBATCH.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN ACCBATCH.DOCSECTION IS 
'Не используется';

COMMENT ON COLUMN ACCBATCH.DOC_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN ACCBATCH.DOCTYPE IS 
'Тип документа';

COMMENT ON COLUMN ACCBATCH.DOCNUMBER IS 
'Номер документа';

COMMENT ON COLUMN ACCBATCH.DOCDATE IS 
'Дата документа';

COMMENT ON COLUMN ACCBATCH.BEGINQUAN IS 
'Начальное количество';

COMMENT ON COLUMN ACCBATCH.ENDQUAN IS 
'Конечное количество';

COMMENT ON COLUMN ACCBATCH.ANLPLAN1_ID IS 
'Аналитика 1-го порядка';

COMMENT ON COLUMN ACCBATCH.ANLPLAN2_ID IS 
'Аналитика 2-го порядка';

COMMENT ON COLUMN ACCBATCH.ANLPLAN3_ID IS 
'Аналитика 3-го порядка';

COMMENT ON COLUMN ACCBATCH.ANLPLAN4_ID IS 
'Аналитика 4-го порядка';

COMMENT ON COLUMN ACCBATCH.ANLPLAN5_ID IS 
'Аналитика 5-го порядка';

COMMENT ON COLUMN ACCBATCH.ACC_ID IS 
'Счет';

COMMENT ON COLUMN ACCBATCH.CONTRACTOR_ID IS 
'Контрагент';

COMMENT ON COLUMN ACCBATCHHISTORY.ID IS 
'Идентификатор';

COMMENT ON COLUMN ACCBATCHHISTORY.ACCBATCH_ID IS 
'Идентификатор партии';

COMMENT ON COLUMN ACCBATCHHISTORY.BEGINDATE IS 
'Дата начала действия партии';

COMMENT ON COLUMN ACCBATCHHISTORY.ENDDATE IS 
'Дата конца действия партии';

COMMENT ON COLUMN ACCBATCHHISTORY.QUANTITY IS 
'Количество';

COMMENT ON COLUMN ACCBATCHHISTORY.COSTNAT IS 
'Цена ';

COMMENT ON COLUMN ACCBATCHHISTORY.COSTCUR IS 
'Цена в валюте';

COMMENT ON COLUMN ACCBATCHHISTORY.ACTIONTYPE IS 
'Тип действия:
0 - расход
1 - переоценка';

COMMENT ON COLUMN ACCPLAN.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN ACCPLAN.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN ACCPLAN.UPACC IS 
'Код счета в верхнем регистре';

COMMENT ON COLUMN ACCPLAN.ACC IS 
'Код счета';

COMMENT ON COLUMN ACCPLAN.ACCNAME IS 
'Наименование счета';

COMMENT ON COLUMN ACCPLAN.CURRENCY_CODE IS 
'Код курса валюты';

COMMENT ON COLUMN ACCPLAN.ISANL IS 
'Признак наличия аналитических счетов
0 - нет аналитических счетов
1 - есть аналитические счета';

COMMENT ON COLUMN ACCPLAN.ISBAL IS 
'Признак счета - балансовый или забалансовый
0 - забалансовый
1 - балансовый';

COMMENT ON COLUMN ACCPLAN.ISWORK IS 
'Признак - рабочий счет или нет
0 - нерабочий счет
1 - рабочий';

COMMENT ON COLUMN ACCPLAN.ANLFORM IS 
'Вид аналитической ведомости
0 -  Нет
1 -  Основные средства
2 -  Капитальные вложения
3 -  Материалы, товары учетные цены
4 -  Материалы, товары партионный учет
5 -  Материалы, товары средние цены
6 -  Материалы, товары FIFO
7 -  Материалы, товары LIFO
8 -  МБП
9 -  Торговая наценка
10 - Реализация
11 - Дебиторы-кредиторы (по основанию)
12 - Дебиторы-кредиторы (по договору)
13 - Дебиторы-кредиторы (по основанию/договору)
14 - Дебиторы-кредиторы (по партнеру)
15 - Подотчетные лица
16 - Затраты
17 - Расходы будущих периодов
18 -  Денежные средства

';

COMMENT ON COLUMN ACCPLAN.ACCTYPE IS 
'Тип счета
0 - Активный
1 - Пассивный
2 - Активно-пассивный(развернутое сальдо)
3 - Активно-пассивный(свернутое сальдо)
4 - Нулевой';

COMMENT ON COLUMN ACC_ACCGROUP.ID IS 
'Идентификатор';

COMMENT ON COLUMN ACC_ACCGROUP.ACCKIND_ID IS 
'Идентификатор вида учета';

COMMENT ON COLUMN ACC_ACCGROUP.GCODE IS 
'Код группы учета ОС и НА';

COMMENT ON COLUMN ACC_ACCGROUP.GNAME IS 
'Наименование группы учета ОС и НА';

COMMENT ON COLUMN ACC_ACCGROUP.MIN_USAGEPERIOD IS 
'Минимальный срок полезного использования, лет';

COMMENT ON COLUMN ACC_ACCGROUP.MAX_USAGEPERIOD IS 
'Максимальный срок полезного использования, лет';

COMMENT ON COLUMN ACC_ACCKIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN ACC_ACCKIND.KCODE IS 
'Код вида учета ОС и НА';

COMMENT ON COLUMN ACC_ACCKIND.KNAME IS 
'Наименование вида учета ОС и НА';

COMMENT ON COLUMN ACC_ACCKIND.PRIORITY IS 
'Приоритет в сортировке';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.COMPANY_ID IS 
'Идентификатор организиции';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.ACC_ID IS 
'Идентификатор счета для учета операций';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.PURPOSE IS 
'Назначение аванса';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.PREVADVANCESUM IS 
'Сумма предыдущего аванса';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RECEIVED1SRC IS 
'Получено - источник 1';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RECEIVED1DATE IS 
'Получено - дата 1';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RECEIVED1SUM IS 
'Получено - сумма 1';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RECEIVED2SRC IS 
'Получено - источник 2';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RECEIVED2DATE IS 
'Получено - дата 2';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RECEIVED2SUM IS 
'Получено - сумма 2';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RECEIVED3SRC IS 
'Получено - источник 3';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RECEIVED3DATE IS 
'Получено - дата 3';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RECEIVED3SUM IS 
'Получено - сумма 3';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RESTDOCKIND IS 
'0 - перерасход
1 - остаток';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RESTDOC_ID IS 
'Идентификатор документа для остатка / перерасхода';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RESTDOCTYPE IS 
'Тип документа для остатка / перерасхода';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RESTDOCNUMBER IS 
'Номер документа для остатка / перерасхода';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RESTDOCDATE IS 
'Дата документа для остатка / перерасхода';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RESTSUM IS 
'Сумма остатка / перерасхода';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.CHIEF_ID IS 
'Не используются';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.CHIEFACCOUNTANT_ID IS 
'Не используются';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.ACCOUNTANT_ID IS 
'Не используются';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.ATTACHEDDOCS IS 
'Количество приложенных документов';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.ATTACHEDDOCSSHEETS IS 
'Количество листов приложенных документов';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.COMMENTS IS 
'Комментарий';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.RECEIVEDSUM IS 
'Полученная сумма';

COMMENT ON COLUMN ACC_ADVANCEREPHEAD.BALANCEOROVERRUN IS 
'Остаток/перерасход';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.COMPANY_ID IS 
'Идентификатор организиции';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.ACC_ID IS 
'Идентификатор счета для учета операций';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.PURPOSE IS 
'Назначение аванса';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.PREVADVANCESUM IS 
'Сумма предыдущего аванса';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RECEIVED1SRC IS 
'Получено - источник 1';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RECEIVED1DATE IS 
'Получено - дата 1';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RECEIVED1SUM IS 
'Получено - сумма 1';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RECEIVED2SRC IS 
'Получено - источник 2';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RECEIVED2DATE IS 
'Получено - дата 2';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RECEIVED2SUM IS 
'Получено - сумма 2';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RECEIVED3SRC IS 
'Получено - источник 3';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RECEIVED3DATE IS 
'Получено - дата 3';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RECEIVED3SUM IS 
'Получено - сумма 3';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RESTDOCKIND IS 
'0 - перерасход
1 - остаток';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RESTDOC_ID IS 
'Идентификатор документа для остатка / перерасхода';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RESTDOCTYPE IS 
'Тип документа для остатка / перерасхода';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RESTDOCNUMBER IS 
'Номер документа для остатка / перерасхода';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RESTDOCDATE IS 
'Дата документа для остатка / перерасхода';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.RESTSUM IS 
'Сумма остатка / перерасхода';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.CHIEF_ID IS 
'Не используются';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.CHIEFACCOUNTANT_ID IS 
'Не используются';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.ACCOUNTANT_ID IS 
'Не используются';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.ATTACHEDDOCS IS 
'Количество приложенных документов';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.ATTACHEDDOCSSHEETS IS 
'Количество листов приложенных документов';

COMMENT ON COLUMN ACC_ADVANCEREPHEADMODEL.COMMENTS IS 
'Комментарий';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.NUM IS 
'Номер по порядку';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.EXPENSEDOCNUMBER IS 
'Документ, подтверждающий расходы - номер';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.EXPENSEDOCDATE IS 
'Документ, подтверждающий расходы - дата';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.EXPENSEDOCNAME IS 
'Документ, подтверждающий расходы - наименование';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.EXPENSESUM IS 
'Сумма по отчету';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.ACC_ID IS 
'Идентификтор счета дебета';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.ANL1_ID IS 
'Идентификатор аналитики 1-го уровня счета дебета';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.ANL2_ID IS 
'Идентификатор аналитики 2-го уровня счета дебета';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.ANL3_ID IS 
'Идентификатор аналитики 3-го уровня счета дебета';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.ANL4_ID IS 
'Идентификатор аналитики 4-го уровня счета дебета';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.ANL5_ID IS 
'Идентификатор аналитики 5-го уровня счета дебета';

COMMENT ON COLUMN ACC_ADVANCEREPSPEC.CONSIDEREDSUM IS 
'Принято к учету';

COMMENT ON COLUMN ACC_AMCODE.ID IS 
'Идентификатор';

COMMENT ON COLUMN ACC_AMCODE.CODE IS 
'Код шифра';

COMMENT ON COLUMN ACC_AMCODE.CNAME IS 
'Наименование шифра';

COMMENT ON COLUMN ACC_AMORTIZATION.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN ACC_AMORTIZATION.INVENTORY_ID IS 
'Идентификатор инвентарной карточки';

COMMENT ON COLUMN ACC_AMORTIZATION.N_MONTHS IS 
'Число месяцев, за которое была начислена амортизация';

COMMENT ON COLUMN ACC_AMORTIZATION.BATCH IS 
'Служебное поле';

COMMENT ON COLUMN ACC_AMORTIZATION.BALANCECOST IS 
'Балансовая стоимость объекта';

COMMENT ON COLUMN ACC_AMORTIZATION.AMRATE IS 
'Норма, по которой была начислена амортизация';

COMMENT ON COLUMN ACC_AMORTIZATION.SUM_RATE IS 
'Сумма, начисленная по норме';

COMMENT ON COLUMN ACC_AMORTIZATION.EXPLPERIOD_Y IS 
'Период эксплуатации, лет';

COMMENT ON COLUMN ACC_AMORTIZATION.EXPLPERIOD_M IS 
'Период эксплуатации, месяцев';

COMMENT ON COLUMN ACC_AMORTIZATION.SUM_PERIOD IS 
'Сумма, начисленная по периоду';

COMMENT ON COLUMN ACC_AMORTIZATION.PRODUCT_EST IS 
'Объем продукции, предполагаемый';

COMMENT ON COLUMN ACC_AMORTIZATION.PRODUCT_FACT IS 
'Объем продукции, фактический';

COMMENT ON COLUMN ACC_AMORTIZATION.SUM_PRODUCT IS 
'Сумма, начисленная по произведенной продукции';

COMMENT ON COLUMN ACC_AMORTIZATION.FACTOR IS 
'Коэффициент';

COMMENT ON COLUMN ACC_AMORTIZATION.SUM_ADD IS 
'Сумма дополнительного начисления';

COMMENT ON COLUMN ACC_AMORTIZATION.DEPRVALUE IS 
'Остаточная стоимость';

COMMENT ON COLUMN ACC_AMORTIZATION.SUM_DEPRVALUE IS 
'Сумма, начисленная по остаточной стоимости';

COMMENT ON COLUMN ACC_AMORTIZATION.SUM_TOTAL IS 
'Начисленная сумма, всего';

COMMENT ON COLUMN ACC_AMORTIZATION.IMONTH IS 
'Месяц начисления амортизации в абсолютном исчислении (год*12 + месяц)';

COMMENT ON COLUMN ACC_AMORTIZATION.ENDCOST IS 
'Остаточная стоимость';

COMMENT ON COLUMN ACC_AMORTIZATION.AMCODE_ID IS 
'Идентификатор шифра нормы амортизации';

COMMENT ON COLUMN ACC_AMRATE.ID IS 
'Идентификатор';

COMMENT ON COLUMN ACC_AMRATE.AMCODE_ID IS 
'Идентификатор шифра нормы амортизации';

COMMENT ON COLUMN ACC_AMRATE.ACTMONTH IS 
'Количество месяцев действия нормы';

COMMENT ON COLUMN ACC_AMRATE.AMRATE IS 
'Норма, %';

COMMENT ON COLUMN ACC_AMRATE.AMRATE1000 IS 
'Норма на 1000км пробега, %';

COMMENT ON COLUMN ACC_AMRATE.PERIODYEAR IS 
'Срок полезного использования, лет';

COMMENT ON COLUMN ACC_AMRATE.VOLUMEPROD IS 
'Предполагаемый объем продукции';

COMMENT ON COLUMN ACC_AMRATE.PERIODMONTH IS 
'Срок полезного использования, месяцев';

COMMENT ON COLUMN ACC_CONFIG.BASE_CURRENCY IS 
'Код базовой валюты';

COMMENT ON COLUMN ACC_CONFIG.NAT_CURRENCY IS 
'Код национальной валюты';

COMMENT ON COLUMN ACC_CONFIG.CURRENCY_PREC IS 
'Точность денежных величин, знаков после запятой';

COMMENT ON COLUMN ACC_CONFIG.CUR_RATE_TYPE_ID IS 
'Тип курса';

COMMENT ON COLUMN ACC_CONFIG.CUR_RATE_AUTHORITY_ID IS 
'Источник курса';

COMMENT ON COLUMN ACC_CONFIG.BUYBOOK_DELIV_DOCGROUP_ID IS 
'Идентификатор группы документов, подтверждающих поставку для книги покупок';

COMMENT ON COLUMN ACC_CONFIG.SALEBOOK_DELIV_DOCGROUP_ID IS 
'Идентификатор группы документов, подтверждающих поставку для книги продаж';

COMMENT ON COLUMN ACC_CONFIG.SALEBOOK_AVANINV_DOCGROUP_ID IS 
'Идентификатор группы документов авансовых счетов-фактур для книги продаж';

COMMENT ON COLUMN ACC_CONFIG.SALEBOOK_KIND IS 
'0 - по отгрузке
1 - по оплате';

COMMENT ON COLUMN ACC_INVHEAD.ID IS 
'Идентификатор';

COMMENT ON COLUMN ACC_INVHEAD.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN ACC_INVHEAD.PARENT_ID IS 
'Не используется';

COMMENT ON COLUMN ACC_INVHEAD.GROUPNUM IS 
'Номер группы';

COMMENT ON COLUMN ACC_INVHEAD.CARDNUM IS 
'Номер карточки';

COMMENT ON COLUMN ACC_INVHEAD.OBJNUM IS 
'Номер объекта';

COMMENT ON COLUMN ACC_INVHEAD.MANUFACTURER IS 
'Завод-изготовитель';

COMMENT ON COLUMN ACC_INVHEAD.MODEL IS 
'Модель, тип, марка';

COMMENT ON COLUMN ACC_INVHEAD.SERIALNUM IS 
'Заводской номер';

COMMENT ON COLUMN ACC_INVHEAD.PASSPNUM IS 
'Паспортный номер';

COMMENT ON COLUMN ACC_INVHEAD.INOPERDOCNUM IS 
'Акт ввода в эксплуатацию - номер';

COMMENT ON COLUMN ACC_INVHEAD.INOPERDATE IS 
'Акт ввода в эксплуатацию - дата';

COMMENT ON COLUMN ACC_INVHEAD.OUTOPERDOCNUM IS 
'Акт выбытия из эксплуатации - номер';

COMMENT ON COLUMN ACC_INVHEAD.OUTOPERDATE IS 
'Акт выбытия из эксплуатации - дата';

COMMENT ON COLUMN ACC_INVHEAD.ISCOMPLEX IS 
'Не используется';

COMMENT ON COLUMN ACC_INVHEAD.ISCOMMON IS 
'Не используется';

COMMENT ON COLUMN ACC_INVHEAD.COMMENT IS 
'Примечание';

COMMENT ON COLUMN ACC_INVHEAD.CATALOG_ID IS 
'Идентификатор позиции КТУ';

COMMENT ON COLUMN ACC_INVHEAD.CONTRACTOR_ID IS 
'Идентификатор материально ответственного лица';

COMMENT ON COLUMN ACC_INVHEAD.INVNAME IS 
'Наименование объекта в картотеке';

COMMENT ON COLUMN ACC_INVHEAD.INCOMEDOCNUM IS 
'Номер акта поступления';

COMMENT ON COLUMN ACC_INVHEAD.INCOMEDATE IS 
'Дата поступления';

COMMENT ON COLUMN ACC_INVHEAD.INVLOCATION_ID IS 
'Ид. местонахождения объекта';

COMMENT ON COLUMN ACC_INVHEAD.OKOF_ID IS 
'Ид. кода ОКОФ';

COMMENT ON COLUMN ACC_INVHEAD.PRODUCTDATE IS 
'Дата выпуска';

COMMENT ON COLUMN ACC_INVPRODUCTION.ID IS 
'Идентификатор';

COMMENT ON COLUMN ACC_INVPRODUCTION.INVHEAD_ID IS 
'Ид. заголовка ИК';

COMMENT ON COLUMN ACC_INVPRODUCTION.AMONTH IS 
'Месяц (в абсолютном выражении: год * 12 + месяц)';

COMMENT ON COLUMN ACC_INVPRODUCTION.PRODUCTION IS 
'Количество выпущенной продукции или пробег';

COMMENT ON COLUMN ALG_CONST.ID IS 
'Идентификатор';

COMMENT ON COLUMN ALG_CONST.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN ALG_CONST.CODE IS 
'Код';

COMMENT ON COLUMN ALG_CONST.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN ALG_CONST.DATATYPE IS 
'Тип константы:
0 - строка;
1 - число целое;
2 - число вещественное;
3 - дата.';

COMMENT ON COLUMN ALG_CONST_VAL.ID IS 
'Идентификатор';

COMMENT ON COLUMN ALG_CONST_VAL.CONST_ID IS 
'Идентификатор константы';

COMMENT ON COLUMN ALG_CONST_VAL.VAL IS 
'Значение в виде строки';

COMMENT ON COLUMN ALG_CONST_VAL.STARTDATE IS 
'Дата начала действия';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.ID IS 
'Идентификатор';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.CODE IS 
'Код';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.CLASS_ID IS 
'Идентификатор БК';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.ALGORITHM_ID IS 
'Идентификатор алгоритма';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.CAPTION IS 
'Заголовок пункта';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.HINT IS 
'Подсказка';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.FROM_MENU IS 
'Доступен из меню';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.FROM_TOOLBAR IS 
'Доступен из панели инструментов';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.FORCE_REFRESH IS 
'Обновлять после выполнения';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.SEPARATOR_BEFORE IS 
'Разделитель перед пунктом';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.SEPARATOR_AFTER IS 
'Разделитель после пункта';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.KEY_STROKE IS 
'Клавишная комбинация';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.ICON IS 
'Пиктограмма';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION.IS_ACTIVE IS 
'Признак активности';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION_PERMISS.ID IS 
'Идентификатор';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION_PERMISS.ACTION_ID IS 
'Идентификатор настраиваемого действия';

COMMENT ON COLUMN ALG_CUSTOM_USER_ACTION_PERMISS.ROLE_ID IS 
'Идентификатор группы пользователей';

COMMENT ON COLUMN ALG_REPOSITORY.ID IS 
'Идентификатор';

COMMENT ON COLUMN ALG_REPOSITORY.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN ALG_REPOSITORY.CODE IS 
'Код';

COMMENT ON COLUMN ALG_REPOSITORY.NAME IS 
'Наименование';

COMMENT ON COLUMN ALG_REPOSITORY.ALGORITHM IS 
'Текст алгоритма';

COMMENT ON COLUMN ANLPLAN.ID IS 
'Идентификатор';

COMMENT ON COLUMN ANLPLAN.ACCPLAN_ID IS 
'Идентификатор бухгалтерского счета';

COMMENT ON COLUMN ANLPLAN.PARENT_ID IS 
'Идентификатор родителя - аналитического счета';

COMMENT ON COLUMN ANLPLAN.UPCODE IS 
'Код аналитического счета в верхнем регистре';

COMMENT ON COLUMN ANLPLAN.CODE IS 
'Код аналитического счета';

COMMENT ON COLUMN ANLPLAN.ANLNAME IS 
'Наименование аналитического счета';

COMMENT ON COLUMN ANLPLAN.ANLLEVEL IS 
'Уровень аналитики';

COMMENT ON COLUMN ANLPLAN.USESTDFORM IS 
'Использовать типовые формы аналитического учета';

COMMENT ON COLUMN ANLPLAN.STDFORM IS 
'Типовые формы учета';

COMMENT ON COLUMN BANKDOCUMENT.NDS1RATE IS 
'Ставка НДС 1';

COMMENT ON COLUMN BANKDOCUMENT.NDS2RATE IS 
'Ставка НДС 2';

COMMENT ON COLUMN BANKDOCUMENT.NDS1SUMMA IS 
'Сумма НДС 1';

COMMENT ON COLUMN BANKDOCUMENT.NDS2SUMMA IS 
'Сумма НДС 2';

COMMENT ON COLUMN BANKDOCUMENT.CLEARSUMMA IS 
'Сумма без НДС';

COMMENT ON COLUMN BANKDOCUMENT.SUMMAWITHNDS1 IS 
'Сумма с НДС 1';

COMMENT ON COLUMN BANKDOCUMENT.SUMMAWITHNDS2 IS 
'Сумма с НДС 2';

COMMENT ON COLUMN BANKDOCUMENT.INOUTDATE IS 
'Не используется';

COMMENT ON COLUMN BANKDOCUMENT.PAYWAY IS 
'Тип платежа
0 - нет
1 - почта
2 - электронно
3 - телеграф
4 - клиринг
';

COMMENT ON COLUMN BANKDOCUMENT.COMMENT IS 
'Назначение платежа';

COMMENT ON COLUMN BANKDOCUMENT.PAYTIME IS 
'Срок платежа';

COMMENT ON COLUMN BANKDOCUMENT.PAYTURN IS 
'Очередность платежа';

COMMENT ON COLUMN BANKDOCUMENT.PAYTARGET IS 
'Назначение платежа';

COMMENT ON COLUMN BANKDOCUMENT.PAYTYPE IS 
'Вид платежа';

COMMENT ON COLUMN BANKDOCUMENT.PAYCODE IS 
'Код';

COMMENT ON COLUMN BANKDOCUMENT.PAYERBANKREQ_ID IS 
'Идентификатор банковских реквизитов плательщика';

COMMENT ON COLUMN BANKDOCUMENT.RECIPIENTBANKREQ_ID IS 
'Идентификатор банковских реквизитов получателя';

COMMENT ON COLUMN BANKDOCUMENT.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN BANKDOCUMENT.PAYMENTFOR IS 
'Не используется';

COMMENT ON COLUMN BANKDOCUMENT.RESPONSIBLE IS 
'Не используется';

COMMENT ON COLUMN BANKDOCUMENT.KBK IS 
'Код КБК';

COMMENT ON COLUMN BANKDOCUMENT.OKATO IS 
'Код ОКАТО';

COMMENT ON COLUMN BANKDOCUMENT.PAYMENTBASEIDX IS 
'Основание палтежа';

COMMENT ON COLUMN BANKDOCUMENT.TAXPERIODIDX1 IS 
'Период платежа - код';

COMMENT ON COLUMN BANKDOCUMENT.TAXPERIODIDX2 IS 
'Период платежа - месяц';

COMMENT ON COLUMN BANKDOCUMENT.TAXPERIODIDX3 IS 
'Период платежа - год';

COMMENT ON COLUMN BANKDOCUMENT.DOCNUMBERIDX IS 
'Номер документа';

COMMENT ON COLUMN BANKDOCUMENT.DOCDATEIDX IS 
'Дата документа';

COMMENT ON COLUMN BANKDOCUMENT.PAYMENTTYPEIDX IS 
'Тип платежа';

COMMENT ON COLUMN BANKDOCUMENT.PAYERSTATUS IS 
'Статус платежа';

COMMENT ON COLUMN BANKDOCUMENTMODEL.NDS1RATE IS 
'Ставка НДС 1';

COMMENT ON COLUMN BANKDOCUMENTMODEL.NDS2RATE IS 
'Ставка НДС 2';

COMMENT ON COLUMN BANKDOCUMENTMODEL.NDS1SUMMA IS 
'Сумма НДС 1';

COMMENT ON COLUMN BANKDOCUMENTMODEL.NDS2SUMMA IS 
'Сумма НДС 2';

COMMENT ON COLUMN BANKDOCUMENTMODEL.CLEARSUMMA IS 
'Сумма без НДС';

COMMENT ON COLUMN BANKDOCUMENTMODEL.SUMMAWITHNDS1 IS 
'Сумма с НДС 1';

COMMENT ON COLUMN BANKDOCUMENTMODEL.SUMMAWITHNDS2 IS 
'Сумма с НДС 2';

COMMENT ON COLUMN BANKDOCUMENTMODEL.INOUTDATE IS 
'Не используется';

COMMENT ON COLUMN BANKDOCUMENTMODEL.PAYWAY IS 
'Тип платежа
0 - нет
1 - почта
2 - электронно
3 - телеграф
4 - клиринг
';

COMMENT ON COLUMN BANKDOCUMENTMODEL.COMMENT IS 
'Назначение платежа';

COMMENT ON COLUMN BANKDOCUMENTMODEL.PAYTIME IS 
'Срок платежа';

COMMENT ON COLUMN BANKDOCUMENTMODEL.PAYTURN IS 
'Очередность платежа';

COMMENT ON COLUMN BANKDOCUMENTMODEL.PAYTARGET IS 
'Назначение платежа';

COMMENT ON COLUMN BANKDOCUMENTMODEL.PAYTYPE IS 
'Вид платежа';

COMMENT ON COLUMN BANKDOCUMENTMODEL.PAYCODE IS 
'Код';

COMMENT ON COLUMN BANKDOCUMENTMODEL.PAYERBANKREQ_ID IS 
'Идентификатор банковских реквизитов плательщика';

COMMENT ON COLUMN BANKDOCUMENTMODEL.RECIPIENTBANKREQ_ID IS 
'Идентификатор банковских реквизитов получателя';

COMMENT ON COLUMN BANKDOCUMENTMODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN BANKDOCUMENTMODEL.PAYMENTFOR IS 
'Не используется';

COMMENT ON COLUMN BANKDOCUMENTMODEL.RESPONSIBLE IS 
'Не используется';

COMMENT ON COLUMN BANKDOCUMENTMODEL.KBK IS 
'Код КБК';

COMMENT ON COLUMN BANKDOCUMENTMODEL.OKATO IS 
'Код ОКАТО';

COMMENT ON COLUMN BANKDOCUMENTMODEL.PAYMENTBASEIDX IS 
'Основание палтежа';

COMMENT ON COLUMN BANKDOCUMENTMODEL.TAXPERIODIDX1 IS 
'Период платежа - код';

COMMENT ON COLUMN BANKDOCUMENTMODEL.TAXPERIODIDX2 IS 
'Период платежа - месяц';

COMMENT ON COLUMN BANKDOCUMENTMODEL.TAXPERIODIDX3 IS 
'Период платежа - год';

COMMENT ON COLUMN BANKDOCUMENTMODEL.DOCNUMBERIDX IS 
'Номер документа';

COMMENT ON COLUMN BANKDOCUMENTMODEL.DOCDATEIDX IS 
'Дата документа';

COMMENT ON COLUMN BANKDOCUMENTMODEL.PAYMENTTYPEIDX IS 
'Тип платежа';

COMMENT ON COLUMN BANKDOCUMENTMODEL.PAYERSTATUS IS 
'Статус платежа';

COMMENT ON COLUMN BILLHEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN BILLHEAD.SUMMACUR_WITH_DISCOUNT IS 
'Сумма без скидки/наценки в валюте';

COMMENT ON COLUMN BILLHEAD.SUMMANAT_WITH_DISCOUNT IS 
'Сумма без скидки/наценки';

COMMENT ON COLUMN BILLHEAD.ADD_EXPENSES IS 
'Сумма дополнительных расходов';

COMMENT ON COLUMN BILLHEAD.DISCOUNT_ON_DOC IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN BILLHEAD.DISCOUNT_ON_LINE IS 
'Скидка/наценка по строкам спецификации';

COMMENT ON COLUMN BILLHEAD.REGISTDATE IS 
'Не используется';

COMMENT ON COLUMN BILLHEAD.ACCEPTANCETERM IS 
'Срок акцепта';

COMMENT ON COLUMN BILLHEAD.ACCEPTANCEDATE IS 
'Дата окончания акцепта';

COMMENT ON COLUMN BILLHEAD.ACCEPTANCESUM IS 
'Сумма акцепта';

COMMENT ON COLUMN BILLHEAD.PAYMENTTERM IS 
'Срок оплаты';

COMMENT ON COLUMN BILLHEAD.PLANPAYMENTDATEDOC IS 
'Плановая дата оплаты по документу';

COMMENT ON COLUMN BILLHEAD.PLANPAYMENTDATE IS 
'Плановая дата оплаты';

COMMENT ON COLUMN BILLHEAD.PAYMENTDATE IS 
'Дата оплаты';

COMMENT ON COLUMN BILLHEAD.PAYMENTSUM IS 
'Сумма оплаты';

COMMENT ON COLUMN BILLHEAD.ADDEXPENSESSUM IS 
'Не используется';

COMMENT ON COLUMN BILLHEAD.COMMENT IS 
'Дополнения';

COMMENT ON COLUMN BILLHEAD.SHIPPER IS 
'Грузоотправитель';

COMMENT ON COLUMN BILLHEAD.CONSIGNEE IS 
'Грузополучатель';

COMMENT ON COLUMN BILLHEAD.PARTNERFROM_BANKREQ IS 
'Банковские реквизиты "от кого"';

COMMENT ON COLUMN BILLHEAD.PARTNERTO_BANKREQ IS 
'Банковские реквизиты "кому"';

COMMENT ON COLUMN BILLHEAD.TOPAYDOCNUMBER IS 
'К пл-расчетному документу, №';

COMMENT ON COLUMN BILLHEAD.TOPAYDOCDATE IS 
'К пл-расчетному документу, дата';

COMMENT ON COLUMN BILLHEAD.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN BILLHEAD.CONSUMER IS 
'Потребитель';

COMMENT ON COLUMN BILLHEADMODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN BILLHEADMODEL.SUMMACUR_WITH_DISCOUNT IS 
'Сумма без скидки/наценки в валюте';

COMMENT ON COLUMN BILLHEADMODEL.SUMMANAT_WITH_DISCOUNT IS 
'Сумма без скидки/наценки';

COMMENT ON COLUMN BILLHEADMODEL.ADD_EXPENSES IS 
'Сумма дополнительных расходов';

COMMENT ON COLUMN BILLHEADMODEL.DISCOUNT_ON_DOC IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN BILLHEADMODEL.DISCOUNT_ON_LINE IS 
'Скидка/наценка по строкам спецификации';

COMMENT ON COLUMN BILLHEADMODEL.REGISTDATE IS 
'Не используется';

COMMENT ON COLUMN BILLHEADMODEL.ACCEPTANCETERM IS 
'Срок акцепта';

COMMENT ON COLUMN BILLHEADMODEL.ACCEPTANCEDATE IS 
'Дата окончания акцепта';

COMMENT ON COLUMN BILLHEADMODEL.ACCEPTANCESUM IS 
'Сумма акцепта';

COMMENT ON COLUMN BILLHEADMODEL.PAYMENTTERM IS 
'Срок оплаты';

COMMENT ON COLUMN BILLHEADMODEL.PLANPAYMENTDATEDOC IS 
'Плановая дата оплаты по документу';

COMMENT ON COLUMN BILLHEADMODEL.PLANPAYMENTDATE IS 
'Плановая дата оплаты';

COMMENT ON COLUMN BILLHEADMODEL.PAYMENTDATE IS 
'Дата оплаты';

COMMENT ON COLUMN BILLHEADMODEL.PAYMENTSUM IS 
'Сумма оплаты';

COMMENT ON COLUMN BILLHEADMODEL.ADDEXPENSESSUM IS 
'Не используется';

COMMENT ON COLUMN BILLHEADMODEL.COMMENT IS 
'Дополнения';

COMMENT ON COLUMN BILLHEADMODEL.SHIPPER IS 
'Грузоотправитель';

COMMENT ON COLUMN BILLHEADMODEL.CONSIGNEE IS 
'Грузополучатель';

COMMENT ON COLUMN BILLHEADMODEL.PARTNERFROM_BANKREQ IS 
'Банковские реквизиты "от кого"';

COMMENT ON COLUMN BILLHEADMODEL.PARTNERTO_BANKREQ IS 
'Банковские реквизиты "кому"';

COMMENT ON COLUMN BILLHEADMODEL.TOPAYDOCDATE IS 
'К пл-расчетному документу, дата';

COMMENT ON COLUMN BILLHEADMODEL.TOPAYDOCNUMBER IS 
'К пл-расчетному документу, №';

COMMENT ON COLUMN BILLHEADMODEL.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN BILLHEADMODEL.CONSUMER IS 
'Потребитель';

COMMENT ON COLUMN BILLSPEC.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN BILLSPEC.DISCOUNT IS 
'Скидка/наценка по строке';

COMMENT ON COLUMN BILLSPEC.PRICE_WITH_DISCOUNT IS 
'Цена с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN BILLSPEC.SUMMA_WITH_DISCOUNT IS 
'Сумма с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN BILLSPEC.COST IS 
'Себестоимость (учитывает дополнительные расходы)';

COMMENT ON COLUMN BILLSPEC.ACCEPTANCEQUAN IS 
'Количество акцептованного товара';

COMMENT ON COLUMN BILLSPEC.ACCEPTANCESUM IS 
'Сумма акцептованного товара';

COMMENT ON COLUMN BILLSPEC.ACCEPTANCEPACKINGQUAN IS 
'Количествово акцептованного товара, упаковок';

COMMENT ON COLUMN BILLSPEC.DOC_DISCOUNT IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN BILLSPECMODEL.DOCSPECMODEL_ID IS 
'Идентификатор образца спецификации документа';

COMMENT ON COLUMN BILLSPECMODEL.DISCOUNT IS 
'Скидка/наценка по строке';

COMMENT ON COLUMN BILLSPECMODEL.PRICE_WITH_DISCOUNT IS 
'Цена с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN BILLSPECMODEL.SUMMA_WITH_DISCOUNT IS 
'Сумма с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN BILLSPECMODEL.COST IS 
'Себестоимость (учитывает дополнительные расходы)';

COMMENT ON COLUMN BILLSPECMODEL.ACCEPTANCEQUAN IS 
'Количество акцептованного товара';

COMMENT ON COLUMN BILLSPECMODEL.ACCEPTANCESUM IS 
'Сумма акцептованного товара';

COMMENT ON COLUMN BILLSPECMODEL.ACCEPTANCEPACKINGQUAN IS 
'Количествово акцептованного товара, упаковок';

COMMENT ON COLUMN BILLSPECMODEL.DOC_DISCOUNT IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN BUYBOOK.ID IS 
'Идентификатор записи
';

COMMENT ON COLUMN BUYBOOK.FOLDER_ID IS 
'Идентификатор папки
';

COMMENT ON COLUMN BUYBOOK.DOCUMENT_ID IS 
'Идентификатор документа
';

COMMENT ON COLUMN BUYBOOK.DOCTYPE IS 
'Тип документа
';

COMMENT ON COLUMN BUYBOOK.DOCNUMBER IS 
'Номер документа
';

COMMENT ON COLUMN BUYBOOK.DOCDATE IS 
'Дата документа
';

COMMENT ON COLUMN BUYBOOK.INSERTDATE IS 
'Дата регистрации в книге покупок
';

COMMENT ON COLUMN BUYBOOK.INDATE IS 
'Дата поступления
';

COMMENT ON COLUMN BUYBOOK.STOCKDATE IS 
'Дата оприходования
';

COMMENT ON COLUMN BUYBOOK.PAYDATE IS 
'Дата оплаты
';

COMMENT ON COLUMN BUYBOOK.TOTALSUM IS 
'Всего покупок, включая НДС и НСП
';

COMMENT ON COLUMN BUYBOOK.SUM_WITHOUT_NDS1 IS 
'Сумма без НДС 10%
';

COMMENT ON COLUMN BUYBOOK.SUM_WITHOUT_NDS2 IS 
'Сумма без НДС 20%
';

COMMENT ON COLUMN BUYBOOK.NDS1_SUM IS 
'Сумма НДС 10%
';

COMMENT ON COLUMN BUYBOOK.NDS2_SUM IS 
'Сумма НДС 20%
';

COMMENT ON COLUMN BUYBOOK.NOT_TAXABLE_SUM IS 
'Сумма, не облагаемая налогом
';

COMMENT ON COLUMN BUYBOOK.NSP_SUM IS 
'Сумма НСП
';

COMMENT ON COLUMN BUYBOOK.PROVIDER_ID IS 
'Поставщик';

COMMENT ON COLUMN BUYBOOK.ORGUNIT_ID IS 
'Подразделение';

COMMENT ON COLUMN BUYBOOK.SUM_WITHOUT_NDS3 IS 
'Сумма без НДС 18%';

COMMENT ON COLUMN BUYBOOK.NDS3_SUM IS 
'Сумма НДС 18%';

COMMENT ON COLUMN BUYBOOK.APPROVED IS 
'Признак утверждения';

COMMENT ON COLUMN CALCTAXESKIND.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN CALCTAXESKIND.CODE IS 
'Код вида начисления налогов';

COMMENT ON COLUMN CALCTAXESKIND.KNAME IS 
'Наименование вида начисления налогов';

COMMENT ON COLUMN CALCTAXESLINK.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN CALCTAXESLINK.KIND_ID IS 
'Идентификатор вида начисления налогов';

COMMENT ON COLUMN CALCTAXESLINK.TAX_ID IS 
'Идентификатор налога';

COMMENT ON COLUMN CALCTAXESLINK.FEEORDER IS 
'Порядок начисления';

COMMENT ON COLUMN CALCTAXESLINK.INCLUDED IS 
'Признак - Включен ли налог
0 - не включен
1 - включен';

COMMENT ON COLUMN CALCTAXESLINK.SUBJECT IS 
'Признак - Начисление налога на:
1 - цену
2 - сумму';

COMMENT ON COLUMN CASHDOCUMENT.ANLCODE IS 
'Шифр аналитического учета';

COMMENT ON COLUMN CASHDOCUMENT.TARGETCODE IS 
'Шифр целевого назначения';

COMMENT ON COLUMN CASHDOCUMENT.BASE IS 
'Основание';

COMMENT ON COLUMN CASHDOCUMENT.COMMENT IS 
'Приложение';

COMMENT ON COLUMN CASHDOCUMENT.GETDATE IS 
'Получил, дата';

COMMENT ON COLUMN CASHDOCUMENT.GETDOCUMENT IS 
'Получил по, документ';

COMMENT ON COLUMN CASHDOCUMENT.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN CASHDOCUMENT.COMPANY IS 
'Организация';

COMMENT ON COLUMN CASHDOCUMENT.BOOKKEEPER IS 
'Главный бухгалтер';

COMMENT ON COLUMN CASHDOCUMENT.CHIEF IS 
'Руководитель';

COMMENT ON COLUMN CASHDOCUMENT.CASHIER IS 
'Кассир';

COMMENT ON COLUMN CASHDOCUMENT.COMMENT1 IS 
'В том числе';

COMMENT ON COLUMN CASHDOCUMENT.ACC_ID IS 
'Корреспондирующий счет';

COMMENT ON COLUMN CASHDOCUMENTMODEL.ANLCODE IS 
'Шифр аналитического учета';

COMMENT ON COLUMN CASHDOCUMENTMODEL.TARGETCODE IS 
'Шифр целевого назначения';

COMMENT ON COLUMN CASHDOCUMENTMODEL.BASE IS 
'Основание';

COMMENT ON COLUMN CASHDOCUMENTMODEL.COMMENT IS 
'Приложение';

COMMENT ON COLUMN CASHDOCUMENTMODEL.GETDATE IS 
'Получил, дата';

COMMENT ON COLUMN CASHDOCUMENTMODEL.GETDOCUMENT IS 
'Получил по, документ';

COMMENT ON COLUMN CASHDOCUMENTMODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN CASHDOCUMENTMODEL.COMPANY IS 
'Организация';

COMMENT ON COLUMN CASHDOCUMENTMODEL.BOOKKEEPER IS 
'Главный бухгалтер';

COMMENT ON COLUMN CASHDOCUMENTMODEL.CHIEF IS 
'Руководитель';

COMMENT ON COLUMN CASHDOCUMENTMODEL.CASHIER IS 
'Кассир';

COMMENT ON COLUMN CASHDOCUMENTMODEL.ACC_ID IS 
'Корреспондирующий счет';

COMMENT ON COLUMN CASHDOCUMENTMODEL.COMMENT1 IS 
'В том числе';

COMMENT ON COLUMN CATALOG.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN CATALOG.FOLDER_ID IS 
'Идентификатор папки КТУ';

COMMENT ON COLUMN CATALOG.UPCODE IS 
'Код позиции в верхнем регистре';

COMMENT ON COLUMN CATALOG.CODE IS 
'Код позиции';

COMMENT ON COLUMN CATALOG.CNAME IS 
'Наименование позиции';

COMMENT ON COLUMN CATALOG.GOODTYPE IS 
'Тип позиции:
0 - Товар
1 - Комплект
2 - Тара
3 - Услуга нормированная
4 - Услуга ненормированная
5 - Налог
6 - Тариф';

COMMENT ON COLUMN CATALOG.BARCODE IS 
'Штрих-код позиции';

COMMENT ON COLUMN CATALOG.PLUCODE IS 
'Код местоположения объекта на складе';

COMMENT ON COLUMN CATALOG.OKDP_CODE IS 
'Код ОКДП в верхнем регистре';

COMMENT ON COLUMN CATALOG.ISHASWEIGHT IS 
'Признак - Весовой товар
0 - Товар не весовой
1 - Товар весовой
';

COMMENT ON COLUMN CATALOG.WEIGHT IS 
'Вес';

COMMENT ON COLUMN CATALOG.VOLUME IS 
'Объем';

COMMENT ON COLUMN CATALOG.MARKETING_MARGIN IS 
'Процент торговой наценки';

COMMENT ON COLUMN CATALOG.VALIDITY IS 
'Не используется';

COMMENT ON COLUMN CATALOG.ISNOTINUSE IS 
'Товар аннулирован:
0 - не аннулирован
1 - аннулирован';

COMMENT ON COLUMN CATALOG.TAXGROUP_ID IS 
'Рег. номер налоговой группы';

COMMENT ON COLUMN CATALOG.SHELFLIFE IS 
'Срок годности';

COMMENT ON COLUMN CATALOG.SHELFLIFE_MEAS IS 
'Единицы измерения срока годности
0 - нет
1 - час
2 - день
3 - месяц
4 - год
';

COMMENT ON COLUMN CATALOG.EXPDATE_CALC_KIND IS 
'Тип расчета даты истечения срока годности
0 - относительно даты изготовления
1 - относительно даты документа
2 - относительно даты прихода на склад
';

COMMENT ON COLUMN CATALOG.ARTICUL IS 
'Артикул';

COMMENT ON COLUMN CATALOG.MEASURE_CONTROL IS 
'Управление ЕИ
0 - Одна единица измерения
1 - Переменная эффективность
2 - Учетно - весовые
';

COMMENT ON COLUMN CATALOG.PACKAGED IS 
'Упакованный товар';

COMMENT ON COLUMN CATALOG.MEASURE1_ID IS 
'Идентификатор основной ЕИ';

COMMENT ON COLUMN CATALOG.MEASURE2_ID IS 
'Идентификатор дополнительной ЕИ';

COMMENT ON COLUMN CATALOG.WEIGHTMEASURE_ID IS 
'ЕИ веса';

COMMENT ON COLUMN CATALOG.VOLUMEMEASURE_ID IS 
'ЕИ объема';

COMMENT ON COLUMN CATALOG.USE_SERIAL_NUM IS 
'Использовать серийные номера';

COMMENT ON COLUMN CATALOG.GENERIC_ITEM_ID IS 
'Идентификатор обобщенного товара';

COMMENT ON COLUMN CATALOG.OKP_ID IS 
'Идентификатор кода ОПД';

COMMENT ON COLUMN CATALOG.CUSTOMS_DECLARATION_ID IS 
'Идентификатор грузовой таможенной декларации';

COMMENT ON COLUMN CATALOG.COUNTRY_OF_ORIGIN_ID IS 
'Идентификатор страны происхождения';

COMMENT ON COLUMN CATALOGFOLDER.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN CATALOGFOLDER.PARENT_ID IS 
'Идентификатор родителя';

COMMENT ON COLUMN CATALOGFOLDER.FNAME IS 
'Наименование папки КТУ';

COMMENT ON COLUMN CATALOGFOLDER.GROUPCODE IS 
'Код папки';

COMMENT ON COLUMN CATALOGFOLDER.BARCODE IS 
'Штрих-код папки';

COMMENT ON COLUMN CATALOGFOLDER.PLUCODE IS 
'Код папки местоположения объекта на складе';

COMMENT ON COLUMN CATALOGFOLDER.NUMBERING_ALG_ID IS 
'Идентификтатора алгоритма автонумерации';

COMMENT ON COLUMN CATALOGFOLDER.FOLDER_TAG IS 
'Тэг';

COMMENT ON COLUMN CATALOGPRICE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN CATALOGPRICE.CATALOG_ID IS 
'Идентификатор позиции КТУ';

COMMENT ON COLUMN CATALOGPRICE.IN_ACTION IS 
'Действует с...';

COMMENT ON COLUMN CATALOGPRICE.CURRENCY_CODE IS 
'Код валюты в верхнем регистре';

COMMENT ON COLUMN CATALOGPRICE.PRICE IS 
'Цена в НДЕ';

COMMENT ON COLUMN CATALOGPRICE.EQUIVALENT_PRICE IS 
'Цена в валюте';

COMMENT ON COLUMN CATALOGPRICE.CUR_RATE_TYPE_ID IS 
'Тип валюты';

COMMENT ON COLUMN CATALOGPRICE.CUR_RATE_AUTHORITY_ID IS 
'Источник валюты';

COMMENT ON COLUMN CODEAMOR.UPCODE IS 
'Код нормы амортизации в верхнем регистре';

COMMENT ON COLUMN CODEAMOR.CODE IS 
'Код нормы амортизации';

COMMENT ON COLUMN CODEAMOR.CANAME IS 
'Наименование нормы амортизации';

COMMENT ON COLUMN CONTRACT.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN CONTRACT.INCOMING_NUMBER IS 
'Входящий номер';

COMMENT ON COLUMN CONTRACT.REGISTRATION_DATE IS 
'Дата регистрации';

COMMENT ON COLUMN CONTRACT.STATUS IS 
'Статус:
0 - зарегистрирован
1 - в работе
2 - выполнен';

COMMENT ON COLUMN CONTRACT.RATIFICATION_DATE IS 
'Дата утверждения';

COMMENT ON COLUMN CONTRACT.COMPLETED_DATE IS 
'Дата выполнения';

COMMENT ON COLUMN CONTRACT.BEGINACTION_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN CONTRACT.ENDACTION_DATE IS 
'Дата конца действия';

COMMENT ON COLUMN CONTRACT.SUBJECT IS 
'Предмет договора';

COMMENT ON COLUMN CONTRACT.COMMENT IS 
'Примечание';

COMMENT ON COLUMN CONTRACT.CONTRACTORBANKREQ_ID IS 
'Банковские реквизиты контрагента';

COMMENT ON COLUMN CONTRACT.CONTRACTOR_RESPONSIBLE IS 
'Ответственное лицо контрагента';

COMMENT ON COLUMN CONTRACT.BANKREQ_ID IS 
'Банковские реквизиты организации';

COMMENT ON COLUMN CONTRACT.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN CONTRACT.SHIPPER IS 
'Грузоотправитель';

COMMENT ON COLUMN CONTRACT.SHIPPERBANKREQ_ID IS 
'Банковские реквизиты грузоотправителя';

COMMENT ON COLUMN CONTRACT.CONSIGNEE IS 
'Грузополучатель';

COMMENT ON COLUMN CONTRACT.CONSIGNEEBANKREQ_ID IS 
'Банковские реквизиты грузополучателя';

COMMENT ON COLUMN CONTRACT.CALCSUMKIND IS 
'Расчет суммы:
0 - не рассчитывается
1 - по этапам';

COMMENT ON COLUMN CONTRACT.SHIPPEDPAYMENT IS 
'Сумма платежей контрагенту, по договору';

COMMENT ON COLUMN CONTRACT.RECEIVEDPAYMENT IS 
'Сумма платежей от контрагента, по договору';

COMMENT ON COLUMN CONTRACT.SHIPPEDGOOD IS 
'Сумма ТМЦ и услуг контрагенту, по договору';

COMMENT ON COLUMN CONTRACT.RECEIVEDGOOD IS 
'Сумма ТМЦ и услуг от контрагента, по договору';

COMMENT ON COLUMN CONTRACT.FACTSHIPPEDPAYMENT IS 
'Сумма платежей контрагенту, фактически';

COMMENT ON COLUMN CONTRACT.FACTRECEIVEDPAYMENT IS 
'Сумма платежей от контрагента, фактически';

COMMENT ON COLUMN CONTRACT.FACTSHIPPEDGOOD IS 
'Сумма ТМЦ и услуг контрагенту, фактически';

COMMENT ON COLUMN CONTRACT.FACTRECEIVEDGOOD IS 
'Сумма ТМЦ и услуг от контрагента, фактически';

COMMENT ON COLUMN CONTRACT.PHASESHIPPEDPAYMENT IS 
'Сумма платежей контрагенту, по плану';

COMMENT ON COLUMN CONTRACT.PHASERECEIVEDPAYMENT IS 
'Сумма платежей от контрагента, по плану';

COMMENT ON COLUMN CONTRACT.PHASESHIPPEDGOOD IS 
'Сумма ТМЦ и услуг контрагенту, по плану';

COMMENT ON COLUMN CONTRACT.PHASERECEIVEDGOOD IS 
'Сумма ТМЦ и услуг от контрагента, по плану';

COMMENT ON COLUMN CONTRACT.CONTRACTORBANKDAYS IS 
'Контрагент: количество банковских дней';

COMMENT ON COLUMN CONTRACT.BANKDAYS IS 
'Организация: количество банковских дней';

COMMENT ON COLUMN CONTRACT.PENNY_RATE IS 
'Организация: % штрафа/пени';

COMMENT ON COLUMN CONTRACT.CONTRACTORPENNY_RATE IS 
'Контрагент: % штрафа/пени';

COMMENT ON COLUMN CONTRACT.CONTRACT_KIND_ID IS 
'Вид договора';

COMMENT ON COLUMN CONTRACT.CONTRACT_CATEGORY_ID IS 
'Категория договора';

COMMENT ON COLUMN CONTRACT.CONTRACTOR_IN_NAME_OF IS 
'Контрагент: в лице';

COMMENT ON COLUMN CONTRACT.CONTRACTOR_ACT_ON_BASIS IS 
'Контрагент: на основании';

COMMENT ON COLUMN CONTRACT.CONTRACTOR_CONSIGNMENT_TERM IS 
'Контрагент: срок консигнации';

COMMENT ON COLUMN CONTRACT.CONTRACTOR_GOODS_CREDIT IS 
'Контрагент: товарный кредит';

COMMENT ON COLUMN CONTRACT.IN_NAME_OF IS 
'Организация: в лице';

COMMENT ON COLUMN CONTRACT.ACT_ON_BASIS IS 
'Организация: на основании';

COMMENT ON COLUMN CONTRACT.CONSIGNMENT_TERM IS 
'Организация: срок консигнации';

COMMENT ON COLUMN CONTRACT.GOODS_CREDIT IS 
'Организация: товарный кредит';

COMMENT ON COLUMN CONTRACTMODIFYDOC.ID IS 
'Идентификатор';

COMMENT ON COLUMN CONTRACTMODIFYDOC.DOCHEAD_ID IS 
'Идентификатор договора';

COMMENT ON COLUMN CONTRACTMODIFYDOC.DOCTYPE IS 
'Тип документа';

COMMENT ON COLUMN CONTRACTMODIFYDOC.DOCNUMBER IS 
'Номер документа';

COMMENT ON COLUMN CONTRACTMODIFYDOC.DOCDATE IS 
'Дата документа';

COMMENT ON COLUMN CONTRACTMODIFYDOC.MODIFYDESC IS 
'Изменения';

COMMENT ON COLUMN CONTRACTMODIFYDOC.COMMENT IS 
'Примечания';

COMMENT ON COLUMN CONTRACTMODIFYDOC.ORIGINAL IS 
'Оригинал документа';

COMMENT ON COLUMN CONTRACTMODIFYDOC.DOC_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN CONTRACTOR.ID IS 
'Идентификатор';

COMMENT ON COLUMN CONTRACTOR.CODE IS 
'Код';

COMMENT ON COLUMN CONTRACTOR.UPCODE IS 
'Код в верхнем регистре';

COMMENT ON COLUMN CONTRACTOR.CNAME IS 
'Наименование';

COMMENT ON COLUMN CONTRACTOR.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN CONTRACTOR.KIND IS 
'Вид контрагента:
0 - партнер
1 - подразделение
2 - сотрудник';

COMMENT ON COLUMN CONTRACTORCARD.ID IS 
'Идентификатор';

COMMENT ON COLUMN CONTRACTORCARD.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN CONTRACTORCARD.TOTALINCOME IS 
'Итого приходов';

COMMENT ON COLUMN CONTRACTORCARD.TOTALEXPENSES IS 
'Итого расходов';

COMMENT ON COLUMN CONTRACTORCARD.DEBITORINDEBLIMIT IS 
'Лимит дебиторской задолженности';

COMMENT ON COLUMN CONTRACTORCARD.CREDITORINDEBLIMIT IS 
'Лимит кредиторской задолженности';

COMMENT ON COLUMN CONTRACTORCARD.PLANINCOME IS 
'Планируемый приход';

COMMENT ON COLUMN CONTRACTORCARD.PLANEXPENSES IS 
'Планируемый расход';

COMMENT ON COLUMN CONTRACTORCARD.ORGUNIT_ID IS 
'Подразделение (центр учета)';

COMMENT ON COLUMN CONTRACTORCARDHIST.ID IS 
'Идентификатор';

COMMENT ON COLUMN CONTRACTORCARDHIST.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN CONTRACTORCARDHIST.CONTRACTORCARD_ID IS 
'Идентификатор карточки';

COMMENT ON COLUMN CONTRACTORCARDHIST.KIND IS 
'Вид движения:
0 - приход
1 - расход
';

COMMENT ON COLUMN CONTRACTORCARDHIST.PROCESSDATE IS 
'Дата отработки';

COMMENT ON COLUMN CONTRACTORCARDHIST.SUMCUR IS 
'Сумма в валюте';

COMMENT ON COLUMN CONTRACTORCARDHIST.SUMNAT IS 
'Сумма';

COMMENT ON COLUMN CONTRACTORCARDHIST.DATETIME IS 
'Системная дата/время отработки';

COMMENT ON COLUMN CONTRACTORCARDPLAN.ID IS 
'Идентификатор';

COMMENT ON COLUMN CONTRACTORCARDPLAN.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN CONTRACTORCARDPLAN.CONTRACTORCARD_ID IS 
'Идентификатор карточки';

COMMENT ON COLUMN CONTRACTORCARDPLAN.KIND IS 
'Вид движения:
0 - приход
1 - расход
';

COMMENT ON COLUMN CONTRACTORCARDPLAN.PROCESSDATE IS 
'Дата отработки';

COMMENT ON COLUMN CONTRACTORCARDPLAN.SUMCUR IS 
'Сумма в валюте';

COMMENT ON COLUMN CONTRACTORCARDPLAN.SUMNAT IS 
'Сумма';

COMMENT ON COLUMN CONTRACTORCARDPLAN.IS_SET IS 
'Признак постановки или снятия плана:
0 - снятие с плана
1 - постановка в план
';

COMMENT ON COLUMN CONTRACTORCARDPLAN.DATETIME IS 
'Системная дата/время отработки';

COMMENT ON COLUMN CONTRACTPHASE.ID IS 
'Идентификатор';

COMMENT ON COLUMN CONTRACTPHASE.DOCHEAD_ID IS 
'Идентификатор договора';

COMMENT ON COLUMN CONTRACTPHASE.DOCNUMBER IS 
'Номер документа';

COMMENT ON COLUMN CONTRACTPHASE.BEGINACTION_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN CONTRACTPHASE.ENDACTION_DATE IS 
'Дата конца действия';

COMMENT ON COLUMN CONTRACTPHASE.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN CONTRACTPHASE.COMMENTS IS 
'Примечание';

COMMENT ON COLUMN CONTRACTPHASE.CONTRACTOR_ID IS 
'Контрагент';

COMMENT ON COLUMN CONTRACTPHASE.CONTRACTORBANKREQ_ID IS 
'Банковские реквизиты контрагента';

COMMENT ON COLUMN CONTRACTPHASE.CONTRACTOR_RESPONSIBLE IS 
'Ответственное лицо контрагента';

COMMENT ON COLUMN CONTRACTPHASE.COMPANY IS 
'Организация';

COMMENT ON COLUMN CONTRACTPHASE.BANKREQ_ID IS 
'Банковские реквизиты организации';

COMMENT ON COLUMN CONTRACTPHASE.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN CONTRACTPHASE.SHIPPER IS 
'Грузоотправитель';

COMMENT ON COLUMN CONTRACTPHASE.SHIPPERBANKREQ_ID IS 
'Банковские реквизиты грузоотправителя';

COMMENT ON COLUMN CONTRACTPHASE.CONSIGNEE IS 
'Грузополучатель';

COMMENT ON COLUMN CONTRACTPHASE.CONSIGNEEBANKREQ_ID IS 
'Банковские реквизиты грузополучателя';

COMMENT ON COLUMN CONTRACTPHASE.SUMCUR IS 
'Сумма в валюте';

COMMENT ON COLUMN CONTRACTPHASE.SUMNAT IS 
'Сумма';

COMMENT ON COLUMN CONTRACTPHASE.CALCSUMKIND IS 
'Расчет суммы:
0 - не рассчитывается
1 - по этапам';

COMMENT ON COLUMN CONTRACTPHASE.MARGIN IS 
'Не используется';

COMMENT ON COLUMN CONTRACTPHASE.AVOID IS 
'Этап аннулирован:
0 - нет
1 - да';

COMMENT ON COLUMN CONTRACTPHASE.SHIPPEDPAYMENT IS 
'Сумма платежей контрагенту, по этапу';

COMMENT ON COLUMN CONTRACTPHASE.RECEIVEDPAYMENT IS 
'Сумма платежей от контрагента, по этапу';

COMMENT ON COLUMN CONTRACTPHASE.SHIPPEDGOOD IS 
'Сумма ТМЦ и услуг контрагенту, по этапу';

COMMENT ON COLUMN CONTRACTPHASE.RECEIVEDGOOD IS 
'Сумма ТМЦ и услуг от контрагента, по этапу';

COMMENT ON COLUMN CONTRACTPHASE.FACTSHIPPEDPAYMENT IS 
'Сумма платежей контрагенту, фактически';

COMMENT ON COLUMN CONTRACTPHASE.FACTRECEIVEDPAYMENT IS 
'Сумма платежей от контрагента, фактически';

COMMENT ON COLUMN CONTRACTPHASE.FACTSHIPPEDGOOD IS 
'Сумма ТМЦ и услуг контрагенту, фактически';

COMMENT ON COLUMN CONTRACTPHASE.FACTRECEIVEDGOOD IS 
'Сумма ТМЦ и услуг от контрагента, фактически';

COMMENT ON COLUMN CONTRACTPHASE.ITEMSHIPPEDPAYMENT IS 
'Сумма платежей контрагенту, по плану';

COMMENT ON COLUMN CONTRACTPHASE.ITEMRECEIVEDPAYMENT IS 
'Сумма платежей от контрагента, по плану';

COMMENT ON COLUMN CONTRACTPHASE.ITEMSHIPPEDGOOD IS 
'Сумма ТМЦ и услуг контрагенту, по плану';

COMMENT ON COLUMN CONTRACTPHASE.ITEMRECEIVEDGOOD IS 
'Сумма ТМЦ и услуг от контрагента, по плану';

COMMENT ON COLUMN CONTRACTPHASE.CONTRACTORBANKDAYS IS 
'Контрагент: количество банковских дней';

COMMENT ON COLUMN CONTRACTPHASE.BANKDAYS IS 
'Организация: количество банковских дней';

COMMENT ON COLUMN CONTRACTPHASE.PENNY_RATE IS 
'Организация: % штрафа/пени';

COMMENT ON COLUMN CONTRACTPHASE.CONTRACTORPENNY_RATE IS 
'Контрагент: % штрафа/пени';

COMMENT ON COLUMN CONTRACTPHASE.PHASE_NUMBER IS 
'Номер этапа';

COMMENT ON COLUMN CONTRACTPHASE.DOCTYPE IS 
'Тип документа';

COMMENT ON COLUMN CONTRACTPHASE.DOCDATE IS 
'Дата документа';

COMMENT ON COLUMN CONTRACTPHASE.DOC_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN CONTRACTSPEC.ID IS 
'Идентификатор';

COMMENT ON COLUMN CONTRACTSPEC.PHASEITEMFACT_ID IS 
'Пункт планируемый';

COMMENT ON COLUMN CONTRACTSPEC.PHASEITEMPLAN_ID IS 
'Пункт фактический';

COMMENT ON COLUMN CONTRACTSPEC.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN CONTRACTSPEC.PRICELIST_ID IS 
'Позиция прайс-листа';

COMMENT ON COLUMN CONTRACTSPEC.PRICETYPE_ID IS 
'Тип цены';

COMMENT ON COLUMN CONTRACTSPEC.QUANTITY IS 
'Количество';

COMMENT ON COLUMN CONTRACTSPEC.PRICE IS 
'Цена';

COMMENT ON COLUMN CONTRACTSPEC.SUMMA IS 
'Сумма';

COMMENT ON COLUMN CONTRACT_CATEGORY.ID IS 
'Идентификатор';

COMMENT ON COLUMN CONTRACT_CATEGORY.CODE IS 
'Код';

COMMENT ON COLUMN CONTRACT_CATEGORY.NAME IS 
'Наименование';

COMMENT ON COLUMN CONTRACT_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN CONTRACT_KIND.CODE IS 
'Код';

COMMENT ON COLUMN CONTRACT_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_ACTIVITY_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_ACTIVITY_KIND.CODE IS 
'Код';

COMMENT ON COLUMN CRM_ACTIVITY_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_ACTIVITY_SPHERE.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_ACTIVITY_SPHERE.CODE IS 
'Код';

COMMENT ON COLUMN CRM_ACTIVITY_SPHERE.NAME IS 
'Наимнование';

COMMENT ON COLUMN CRM_BRANCH.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_BRANCH.CODE IS 
'Код';

COMMENT ON COLUMN CRM_BRANCH.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_CLIENT_RANK.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_CLIENT_RANK.CODE IS 
'Код';

COMMENT ON COLUMN CRM_CLIENT_RANK.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_CLIENT_TYPE.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_CLIENT_TYPE.CODE IS 
'Код';

COMMENT ON COLUMN CRM_CLIENT_TYPE.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_CONTACT.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_CONTACT.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN CRM_CONTACT.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN CRM_CONTACT.RESPONSIBLE_ID IS 
'Идентификатор ответственного';

COMMENT ON COLUMN CRM_CONTACT.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN CRM_CONTACT.IS_DEFAULT IS 
'По умолчанию';

COMMENT ON COLUMN CRM_CONTACT.THE_POSITION IS 
'Должность';

COMMENT ON COLUMN CRM_CONTACT.IS_RETIRED IS 
'Уволен';

COMMENT ON COLUMN CRM_CONTACT.NICKNAME IS 
'Nick';

COMMENT ON COLUMN CRM_CONTACT.PERSON_TITLE_ID IS 
'Идентификатор обращения';

COMMENT ON COLUMN CRM_CONTACT.CURATOR_ID IS 
'Идентификатор куратора';

COMMENT ON COLUMN CRM_CONTACT.ADDRESS_SOURCE IS 
'Адрес
0 - физического лица
1 - компании';

COMMENT ON COLUMN CRM_CONTACT.COMMENTS IS 
'Примечание';

COMMENT ON COLUMN CRM_CONTACT_LINK.CONTACT_ID IS 
'Идентификатор контактного лица';

COMMENT ON COLUMN CRM_CONTACT_LINK.RELATION_ID IS 
'Идентификатор отношения';

COMMENT ON COLUMN CRM_DELIVERY_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_DELIVERY_KIND.CODE IS 
'Код';

COMMENT ON COLUMN CRM_DELIVERY_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_LINKED_DOC.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_LINKED_DOC.ORIGINAL_ID IS 
'Идентификатор оригинала документа';

COMMENT ON COLUMN CRM_LINKED_DOC.RELATION_ID IS 
'Идентификатор отношения';

COMMENT ON COLUMN CRM_LINKED_DOC.OPERATION_ID IS 
'Идентификатор действия';

COMMENT ON COLUMN CRM_LINKED_DOC.CONTACT_ID IS 
'Идентификатор сонтактного лица';

COMMENT ON COLUMN CRM_LINKED_DOC.OFFER_ID IS 
'Идентификатор предложения';

COMMENT ON COLUMN CRM_LINKED_DOC.PROBLEM_ID IS 
'Идентификатор проблемя';

COMMENT ON COLUMN CRM_LINKED_DOC.SOLUTION_ID IS 
'Идентификатор решения';

COMMENT ON COLUMN CRM_LINK_PROBLEM_SOLUTION.SOLUTION_ID IS 
'Идентификатор решения';

COMMENT ON COLUMN CRM_LINK_PROBLEM_SOLUTION.PROBLEM_ID IS 
'Идентификатор проблемы';

COMMENT ON COLUMN CRM_LINK_SYMPTOM_PROBLEM.SYMPTOM_ID IS 
'Идентификатор симптома';

COMMENT ON COLUMN CRM_LINK_SYMPTOM_PROBLEM.PROBLEM_ID IS 
'Идентификатор проблемы';

COMMENT ON COLUMN CRM_MARKET.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_MARKET.CODE IS 
'Код';

COMMENT ON COLUMN CRM_MARKET.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_MARKET.WEIGHT IS 
'Вес';

COMMENT ON COLUMN CRM_OFFER.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_OFFER.CODE IS 
'Код';

COMMENT ON COLUMN CRM_OFFER.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_OFFER.OFFER_DATE IS 
'Дата предложения';

COMMENT ON COLUMN CRM_OFFER.VALID_UNTIL IS 
'Действительно до';

COMMENT ON COLUMN CRM_OFFER.STATUS_ID IS 
'Идентификатор статуса';

COMMENT ON COLUMN CRM_OFFER.SUCCESS_REASON_ID IS 
'Идентификатор причины заключения контракта';

COMMENT ON COLUMN CRM_OFFER.FAIL_REASON_ID IS 
'Идентификатор причины потери контракта';

COMMENT ON COLUMN CRM_OFFER.KIND_ID IS 
'Идентификатор вида предложения';

COMMENT ON COLUMN CRM_OFFER.FORECAST_ID IS 
'Идентификатор прогноза';

COMMENT ON COLUMN CRM_OFFER.RESPONSIBLE_ID IS 
'Идентификатор ответственного';

COMMENT ON COLUMN CRM_OFFER.RELATION_ID IS 
'Идентификатор отношения';

COMMENT ON COLUMN CRM_OFFER.OPERATION_ID IS 
'Идентификатор действия';

COMMENT ON COLUMN CRM_OFFER.CONTACT_ID IS 
'Идентификатор контактного лица';

COMMENT ON COLUMN CRM_OFFER.SWOT_S IS 
'Сильные стороны';

COMMENT ON COLUMN CRM_OFFER.SWOT_W IS 
'Слабые стороны';

COMMENT ON COLUMN CRM_OFFER.SWOT_O IS 
'Возможности';

COMMENT ON COLUMN CRM_OFFER.SWOT_T IS 
'Риски';

COMMENT ON COLUMN CRM_OFFER_FORECAST.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_OFFER_FORECAST.CODE IS 
'Код';

COMMENT ON COLUMN CRM_OFFER_FORECAST.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_OFFER_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_OFFER_KIND.CODE IS 
'Код';

COMMENT ON COLUMN CRM_OFFER_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_OFFER_REASON.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_OFFER_REASON.CODE IS 
'Код';

COMMENT ON COLUMN CRM_OFFER_REASON.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_OFFER_STATUS.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_OFFER_STATUS.CODE IS 
'Код';

COMMENT ON COLUMN CRM_OFFER_STATUS.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_OPERATION.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_OPERATION.CODE IS 
'Код';

COMMENT ON COLUMN CRM_OPERATION.RELATION_ID IS 
'Идентификатор отношения';

COMMENT ON COLUMN CRM_OPERATION.KIND_ID IS 
'Идентификатор вида действия';

COMMENT ON COLUMN CRM_OPERATION.PRIORITY_ID IS 
'Идентификатор приоритета';

COMMENT ON COLUMN CRM_OPERATION.PURPOSE_ID IS 
'Идентификатор цели действия';

COMMENT ON COLUMN CRM_OPERATION.IS_PLAN IS 
'Признак планового действия';

COMMENT ON COLUMN CRM_OPERATION.CREATE_DATE IS 
'Дата создания';

COMMENT ON COLUMN CRM_OPERATION.PLAN_DATE_FROM IS 
'Планируемая дата начала';

COMMENT ON COLUMN CRM_OPERATION.PLAN_DATE_TILL IS 
'Планируемая дата окончания';

COMMENT ON COLUMN CRM_OPERATION.FACT_DATE_FROM IS 
'Фактическая дата начала';

COMMENT ON COLUMN CRM_OPERATION.FACT_DATE_TILL IS 
'Фактическая дата окончания';

COMMENT ON COLUMN CRM_OPERATION.CURATOR_ID IS 
'Идентификатор куратора';

COMMENT ON COLUMN CRM_OPERATION.RESPONSIBLE_ID IS 
'Идентификатор ответственного';

COMMENT ON COLUMN CRM_OPERATION.OPERATION_PLAN IS 
'План дейтствия';

COMMENT ON COLUMN CRM_OPERATION.OPERATION_RESULT IS 
'Результат';

COMMENT ON COLUMN CRM_OPERATION.PARENT_ID IS 
'Не используется';

COMMENT ON COLUMN CRM_OPERATION.CONTACT_ID IS 
'Идентификатор контактного лица';

COMMENT ON COLUMN CRM_OPERATION.STATUS IS 
'Статус
0 - новое
1 - в работе
2 - выполнено
3 - отменено';

COMMENT ON COLUMN CRM_OPERATION.STATE IS 
'Состояние
1 - принято
2 - отклонено
3 - перенесено';

COMMENT ON COLUMN CRM_OPERATION.NOTIFIED IS 
'Не используется';

COMMENT ON COLUMN CRM_OPERATION_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_OPERATION_KIND.CODE IS 
'Код';

COMMENT ON COLUMN CRM_OPERATION_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_OPERATION_PRIORITY.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_OPERATION_PRIORITY.CODE IS 
'Код';

COMMENT ON COLUMN CRM_OPERATION_PRIORITY.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_OPERATION_PURPOSE.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_OPERATION_PURPOSE.CODE IS 
'Код';

COMMENT ON COLUMN CRM_OPERATION_PURPOSE.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_OPERATION_STATUS.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_OPERATION_STATUS.CODE IS 
'Код';

COMMENT ON COLUMN CRM_OPERATION_STATUS.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_OWNERSHIP_FORM.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_OWNERSHIP_FORM.CODE IS 
'Код';

COMMENT ON COLUMN CRM_OWNERSHIP_FORM.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_PAYMENT_COND.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_PAYMENT_COND.CODE IS 
'Код';

COMMENT ON COLUMN CRM_PAYMENT_COND.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_PERSON_TITLE.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_PERSON_TITLE.CODE IS 
'Код';

COMMENT ON COLUMN CRM_PERSON_TITLE.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_POSITION.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_POSITION.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_PROBLEM.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_PROBLEM.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN CRM_PROBLEM.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_PROBLEM.INFO IS 
'Пояснения';

COMMENT ON COLUMN CRM_PROBLEM.KEYWORDS IS 
'Ключевые слова';

COMMENT ON COLUMN CRM_PROBLEM.PROBLEM_TYPE_ID IS 
'Идентификатор типа проблемы';

COMMENT ON COLUMN CRM_PROBLEM.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN CRM_PROBLEM.VALID_FROM IS 
'Действительно с';

COMMENT ON COLUMN CRM_PROBLEM.VALID_TO IS 
'Действительно по';

COMMENT ON COLUMN CRM_PROBLEM.CREATOR_ID IS 
'Идентификатор создателя';

COMMENT ON COLUMN CRM_PROBLEM_TYPE.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_PROBLEM_TYPE.CODE IS 
'Код';

COMMENT ON COLUMN CRM_PROBLEM_TYPE.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_RELATION.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_RELATION.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN CRM_RELATION.CODE IS 
'Код';

COMMENT ON COLUMN CRM_RELATION.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_RELATION.IS_LEGAL_PERSON IS 
'0 - физическое лицо
1 - контрагент';

COMMENT ON COLUMN CRM_RELATION.MARKET_ID IS 
'Идентификатор рынка';

COMMENT ON COLUMN CRM_RELATION.DELIVERY_KIND_ID IS 
'Идентификатор вида доставки';

COMMENT ON COLUMN CRM_RELATION.INFO IS 
'Информация';

COMMENT ON COLUMN CRM_RELATION.RESPONSIBLE_ID IS 
'Идентификатор ответственного';

COMMENT ON COLUMN CRM_RELATION.CLIENT_TYPE_ID IS 
'Идентификатор типа клиента';

COMMENT ON COLUMN CRM_RELATION.CLIENT_RANK_ID IS 
'Идентификатор ранга делового отношения';

COMMENT ON COLUMN CRM_RELATION.PAYMENT_COND_ID IS 
'Идентификатор условия опалты';

COMMENT ON COLUMN CRM_RELATION.STATUS_ID IS 
'Идентификатор статуса';

COMMENT ON COLUMN CRM_RELATION.PARENT_ID IS 
'Идентификатор родительского отношения';

COMMENT ON COLUMN CRM_RELATION.NATURAL_PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN CRM_RELATION.NICKNAME IS 
'Nick';

COMMENT ON COLUMN CRM_RELATION.PERSON_TITLE_ID IS 
'Идентификатор обращения';

COMMENT ON COLUMN CRM_RELATION.UIN IS 
'Не используется';

COMMENT ON COLUMN CRM_RELATION.LEGAL_PERSON_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN CRM_RELATION.BRANCH_ID IS 
'Идентификатор отрасли';

COMMENT ON COLUMN CRM_RELATION.ACTIVITY_SPHERE_ID IS 
'Идентификатор сферы деятельности';

COMMENT ON COLUMN CRM_RELATION.ACTIVITY_KIND_ID IS 
'Идентификатор вида деятельности';

COMMENT ON COLUMN CRM_RELATION.OWNERSHIP_FORM_ID IS 
'Идентификатор формы собственности';

COMMENT ON COLUMN CRM_RELATION.CURATOR_ID IS 
'Идентификатор куратора';

COMMENT ON COLUMN CRM_RELATION_STATUS.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_RELATION_STATUS.CODE IS 
'Код';

COMMENT ON COLUMN CRM_RELATION_STATUS.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_SOLUTION.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_SOLUTION.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN CRM_SOLUTION.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_SOLUTION.INFO IS 
'Появления';

COMMENT ON COLUMN CRM_SOLUTION.SOLUTION_TYPE_ID IS 
'Идентификатор типа решения';

COMMENT ON COLUMN CRM_SOLUTION.VALID_FROM IS 
'Действительно с';

COMMENT ON COLUMN CRM_SOLUTION.VALID_TO IS 
'Действительно по';

COMMENT ON COLUMN CRM_SOLUTION.CREATOR_ID IS 
'Идентификатор создателя';

COMMENT ON COLUMN CRM_SOLUTION_TYPE.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_SOLUTION_TYPE.CODE IS 
'Код';

COMMENT ON COLUMN CRM_SOLUTION_TYPE.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_SYMPTOM.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_SYMPTOM.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN CRM_SYMPTOM.NAME IS 
'Наименование';

COMMENT ON COLUMN CRM_SYMPTOM.INFO IS 
'Пояснения';

COMMENT ON COLUMN CRM_SYMPTOM.CREATOR_ID IS 
'Идентификатор создателя';

COMMENT ON COLUMN CRM_USER.ID IS 
'Идентификатор';

COMMENT ON COLUMN CRM_USER.PERSON_ID IS 
'Идентификтаор физического лица';

COMMENT ON COLUMN CRM_USER.THE_POSITION IS 
'Должность';

COMMENT ON COLUMN CRM_USER.BUSY IS 
'Занятый';

COMMENT ON COLUMN CRM_USER.IS_ADMIN IS 
'Администратор CRM';

COMMENT ON COLUMN CT_CONFIG.BASE_CURRENCY IS 
'Базовая валюта';

COMMENT ON COLUMN CT_CONFIG.NAT_CURRENCY IS 
'Национальная валюта';

COMMENT ON COLUMN CT_CONFIG.CURRENCY_PREC IS 
'Точность денежных величин, знаков после запятой';

COMMENT ON COLUMN CT_CONFIG.CUR_RATE_AUTHORITY_ID IS 
'Источник курса';

COMMENT ON COLUMN CT_CONFIG.CUR_RATE_TYPE_ID IS 
'Тип курса';

COMMENT ON COLUMN CURRENCY.UPCODE IS 
'Код валюты в вернем регистре';

COMMENT ON COLUMN CURRENCY.CODE IS 
'Код валюты';

COMMENT ON COLUMN CURRENCY.ISO IS 
'Код ИСО';

COMMENT ON COLUMN CURRENCY.BANK_CODE IS 
'Банковский код валюты';

COMMENT ON COLUMN CURRENCY.CNAME IS 
'Наименование валюты';

COMMENT ON COLUMN CURRENCY.MEN IS 
'Род: 0 - женский, 1 - мужской, 2 - средний';

COMMENT ON COLUMN CURRENCY.ALTNAME1 IS 
'Именительный падеж единственного 
числа единицы валюты';

COMMENT ON COLUMN CURRENCY.ALTNAME2 IS 
'Родительный падеж единственного 
числа единицы валюты';

COMMENT ON COLUMN CURRENCY.ALTNAME3 IS 
'Именительный падеж множественного 
числа единицы валюты';

COMMENT ON COLUMN CURRENCY.ALTUNITNAME1 IS 
'Именительный падеж единственного 
числа дробной части валюты';

COMMENT ON COLUMN CURRENCY.ALTUNITNAME2 IS 
'Родительный падеж единственного 
числа дробной части валюты';

COMMENT ON COLUMN CURRENCY.ALTUNITNAME3 IS 
'Именительный падеж множественного 
числа дробной части валюты';

COMMENT ON COLUMN CURRENCY.ROUNDPRICE IS 
'Цены округлять до.. количество 
знаков';

COMMENT ON COLUMN CURRENCY.ROUNDSUM IS 
'Суммы округлять до.. количество 
знаков';

COMMENT ON COLUMN CURRENCY.VIEWPRIORITY IS 
'Приоритет отображения в списке валют';

COMMENT ON COLUMN CURRENCY.ID IS 
'Идентификатор';

COMMENT ON COLUMN DISCOUNT.ID IS 
'Идентификатор';

COMMENT ON COLUMN DISCOUNT.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN DISCOUNT.DNAME IS 
'Наименование';

COMMENT ON COLUMN DISCOUNT.FORMULA IS 
'Алгоритм расчета';

COMMENT ON COLUMN DISCOUNT.ALG_ID IS 
'Алгоритм в репозитории';

COMMENT ON COLUMN DIS_CARD.ID IS 
'Идентификатор';

COMMENT ON COLUMN DIS_CARD.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN DIS_CARD.CARDNUM IS 
'Номер';

COMMENT ON COLUMN DIS_CARD.OWNER_ID IS 
'Владелец (контрагент)';

COMMENT ON COLUMN DIS_CARD.DISCOUNT IS 
'Последнее значение базовой скидки';

COMMENT ON COLUMN DIS_CARD.CREDITLIMIT IS 
'Лимит товарного кредита';

COMMENT ON COLUMN DIS_CARD.CREDITDEPTH IS 
'Глубина товарного кредита';

COMMENT ON COLUMN DIS_CARD.COMMENTS IS 
'Комментарии';

COMMENT ON COLUMN DIS_CARD.IS_ACTIVE IS 
'Признак активности карты: 0 - неактивна; 1 - активна';

COMMENT ON COLUMN DIS_CARD_HIST.ID IS 
'Идентификатор';

COMMENT ON COLUMN DIS_CARD_HIST.CARD_ID IS 
'Идентификатор карты';

COMMENT ON COLUMN DIS_CARD_HIST.TIME_STAMP IS 
'Дата/время';

COMMENT ON COLUMN DIS_CARD_HIST.USER_ID IS 
'Пользователь, внесший запись';

COMMENT ON COLUMN DIS_CARD_HIST.DISCOUNT IS 
'Новое значение скидки';

COMMENT ON COLUMN DIS_CARD_HIST.COMMENTS IS 
'Комментарии';

COMMENT ON COLUMN DIS_CARD_USER.ID IS 
'Идентификатор';

COMMENT ON COLUMN DIS_CARD_USER.CARD_ID IS 
'Идентификатор карты';

COMMENT ON COLUMN DIS_CARD_USER.CONTRACTOR_ID IS 
'Пользователь (контрагент)';

COMMENT ON COLUMN DIS_COEF.ID IS 
'Идентификатор';

COMMENT ON COLUMN DIS_COEF.CARD_ID IS 
'Идентификатор карты. Если NULL, то это глобальный коэффициент.';

COMMENT ON COLUMN DIS_COEF.CATALOGFOLDER_ID IS 
'Папка каталога (группа товаров)';

COMMENT ON COLUMN DIS_COEF.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN DIS_COEF.COEFFICIENT IS 
'Коэффициент';

COMMENT ON COLUMN DIS_EXTRA_DISCOUNT.ID IS 
'Идентификатор';

COMMENT ON COLUMN DIS_EXTRA_DISCOUNT.CARD_ID IS 
'Идентификатор карты';

COMMENT ON COLUMN DIS_EXTRA_DISCOUNT.NAME IS 
'Наименование';

COMMENT ON COLUMN DIS_EXTRA_DISCOUNT.DISCOUNT IS 
'Доп. скидка';

COMMENT ON COLUMN DIS_EXTRA_DISCOUNT.PLANSALE IS 
'Планируемая сумма продаж';

COMMENT ON COLUMN DIS_EXTRA_DISCOUNT.FACTSALE IS 
'Фактическая сумма продаж';

COMMENT ON COLUMN DIS_EXTRA_DISCOUNT.COMMENTS IS 
'Комментарии';

COMMENT ON COLUMN DIS_EXTRA_DISCOUNT.DATE_FROM IS 
'Действует с';

COMMENT ON COLUMN DIS_EXTRA_DISCOUNT.DATE_TILL IS 
'Действует по';

COMMENT ON COLUMN DIS_EXTRA_DISCOUNT.IS_ACTIVE IS 
'Признак действия: 0 - не действует; 1 - действует';

COMMENT ON COLUMN DIS_EXTRA_DISCOUNT.USER_ID IS 
'Идентификатор пользователя, внесшего запись';

COMMENT ON COLUMN DIS_PROMOTION.ID IS 
'Идентификатор';

COMMENT ON COLUMN DIS_PROMOTION.NAME IS 
'Наименование';

COMMENT ON COLUMN DIS_PROMOTION.CODE IS 
'Код';

COMMENT ON COLUMN DIS_PROMOTION.DATE_FROM IS 
'Дата начала';

COMMENT ON COLUMN DIS_PROMOTION.DATE_TILL IS 
'Дата окончания';

COMMENT ON COLUMN DIS_PROMOTION.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN DIS_PROMOTION.TYPE_ID IS 
'Идентификатор типа рекламного мероприятия';

COMMENT ON COLUMN DIS_PROMOTION.DATE_APPROVE IS 
'Дата утверждения';

COMMENT ON COLUMN DIS_PROMOTION.NUMBER IS 
'Номер';

COMMENT ON COLUMN DIS_PROMOTION.IS_ACTIVE IS 
'Признак действия: 0 - не действует; 1 - действует';

COMMENT ON COLUMN DIS_PROMOTION.IS_APPLY_DISCOUNT_GROUP IS 
'Признак применения группы с/н: 0 - не применять; 1 - применять';

COMMENT ON COLUMN DIS_PROMOTION.IS_APPLY_DISCOUNT_ON_DOC IS 
'Признак применения с/н на документ: 0 - не применять; 1 - применять';

COMMENT ON COLUMN DIS_PROMOTION.COMMENT IS 
'Примечания';

COMMENT ON COLUMN DIS_PROMOTION_LINE.ID IS 
'Идентификатор';

COMMENT ON COLUMN DIS_PROMOTION_LINE.PROMOTION_ID IS 
'Идентификатор рекламного мероприятия';

COMMENT ON COLUMN DIS_PROMOTION_LINE.CATALOG_FOLDER_ID IS 
'Идентификатор папки каталога';

COMMENT ON COLUMN DIS_PROMOTION_LINE.CATALOG_ID IS 
'Идентификатор позиции каталога';

COMMENT ON COLUMN DIS_PROMOTION_LINE.DISCOUNT IS 
'Процент скидки/наценки';

COMMENT ON COLUMN DIS_PROMOTION_LINE.PRICE IS 
'Цена';

COMMENT ON COLUMN DIS_PROMOTION_LINE.CURRENCY_CODE IS 
'Код валюты';

COMMENT ON COLUMN DIS_PROMOTION_LINE.IS_ACTIVE IS 
'Признак действия позиции рекламного мероприятия: 0 - не действует; 1 - действует';

COMMENT ON COLUMN DIS_PROMOTION_LINE.IS_APPLY_DISCOUNT_GROUP IS 
'Признак применения группы с/н: 0 - не применять; 1 - применять';

COMMENT ON COLUMN DIS_PROMOTION_LINE.IS_APPLY_DISCOUNT_ON_DOC IS 
'Признак применения с/н на документ: 0 - не применять; 1 - применять';

COMMENT ON COLUMN DIS_PROMOTION_LINE.TYPE_ID IS 
'Идентификатор типа рекламного мероприятия';

COMMENT ON COLUMN DIS_PROMOTION_TYPE.ID IS 
'Идентификатор';

COMMENT ON COLUMN DIS_PROMOTION_TYPE.NAME IS 
'Наименование';

COMMENT ON COLUMN DIS_PROMOTION_TYPE.CODE IS 
'Код';

COMMENT ON COLUMN DIS_PROMOTION_TYPE.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN DIS_PROMOTION_TYPE.BAI_ID IS 
'Идентификатор бизнес-расширения расчета';

COMMENT ON COLUMN DOCACTION.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCACTION.DOCUMENT_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN DOCACTION.ACTIONTYPE IS 
'Тип этапа:
0 - этап документооборота
1 - изменение документа
';

COMMENT ON COLUMN DOCACTION.STAGE_ID IS 
'Идентификатор этапа (ссылка на DOCPROCESSSTAGE)';

COMMENT ON COLUMN DOCACTION.STAGESTATE IS 
'Состояние:
1 - отработан частично
2 - отработан полностью
';

COMMENT ON COLUMN DOCHEAD.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCHEAD.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN DOCHEAD.DOCSECTION IS 
'Класс документа (ссылка на DOCSECTION)';

COMMENT ON COLUMN DOCHEAD.DOCTYPE IS 
'Тип';

COMMENT ON COLUMN DOCHEAD.DOCNUMBER IS 
'Номер';

COMMENT ON COLUMN DOCHEAD.DOCDATE IS 
'Дата';

COMMENT ON COLUMN DOCHEAD.CURRENCY_CODE IS 
'Код валюты';

COMMENT ON COLUMN DOCHEAD.CURCOURCE IS 
'Курс валюты';

COMMENT ON COLUMN DOCHEAD.SUMMACUR IS 
'Сумма в валюте';

COMMENT ON COLUMN DOCHEAD.SUMMANAT IS 
'Сумма';

COMMENT ON COLUMN DOCHEAD.BASEDOC_ID IS 
'Идентификатор документа-основания';

COMMENT ON COLUMN DOCHEAD.BASEDOCTYPE IS 
'Тип документа-основания';

COMMENT ON COLUMN DOCHEAD.BASEDOCNUMBER IS 
'Номер документа-основания';

COMMENT ON COLUMN DOCHEAD.BASEDOCDATE IS 
'Дата документа-основания';

COMMENT ON COLUMN DOCHEAD.CONTRACT_ID IS 
'Идентификатор договора';

COMMENT ON COLUMN DOCHEAD.CONTRACTTYPE IS 
'Тип договора';

COMMENT ON COLUMN DOCHEAD.CONTRACTNUMBER IS 
'Номер договора';

COMMENT ON COLUMN DOCHEAD.CONTRACTDATE IS 
'Дата договора';

COMMENT ON COLUMN DOCHEAD.WEIGHT IS 
'Вес';

COMMENT ON COLUMN DOCHEAD.VOLUME IS 
'Объем';

COMMENT ON COLUMN DOCHEAD.PRICELIST_ID IS 
'Прайс-лист';

COMMENT ON COLUMN DOCHEAD.PRICETYPE_ID IS 
'Тип цены';

COMMENT ON COLUMN DOCHEAD.CALCTAXESKIND_ID IS 
'Вид начисления налогов';

COMMENT ON COLUMN DOCHEAD.STOCKSRC IS 
'Склад-источник';

COMMENT ON COLUMN DOCHEAD.STOCKDEST IS 
'Склад-приемник';

COMMENT ON COLUMN DOCHEAD.MOLSRC IS 
'МОЛ-источник';

COMMENT ON COLUMN DOCHEAD.MOLDEST IS 
'МОЛ-приемник';

COMMENT ON COLUMN DOCHEAD.DISCOUNT_FOLDER_ID IS 
'Папка скидок/наценок';

COMMENT ON COLUMN DOCHEAD.FROM_ID IS 
'Контрагент "от кого"';

COMMENT ON COLUMN DOCHEAD.TO_ID IS 
'Контрагент "кому"';

COMMENT ON COLUMN DOCHEAD.THROUGH_ID IS 
'Контрагент "через кого"';

COMMENT ON COLUMN DOCHEAD.REQUESTER IS 
'Служебное поле';

COMMENT ON COLUMN DOCHEAD.ORIGINAL IS 
'Оригинал документа';

COMMENT ON COLUMN DOCHEAD.CURRATETYPE_ID IS 
'Тип курса валюты';

COMMENT ON COLUMN DOCHEAD.CURRATEAUTHORITY_ID IS 
'Источник курса валюты';

COMMENT ON COLUMN DOCHEAD.UNID IS 
'Уникальный идентификатор';

COMMENT ON COLUMN DOCHEAD.SCHEDULE_ID IS 
'Идентификатор графика исполнения обязательств';

COMMENT ON COLUMN DOCHEAD.DESCRIPTION IS 
'Дополнительная информация (описание)';

COMMENT ON COLUMN DOCHEADMODEL.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCHEADMODEL.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN DOCHEADMODEL.DOCSECTION IS 
'Класс документа (ссылка на DOCSECTION)';

COMMENT ON COLUMN DOCHEADMODEL.MODELNAME IS 
'Имя образца';

COMMENT ON COLUMN DOCHEADMODEL.DOCTYPE IS 
'Тип';

COMMENT ON COLUMN DOCHEADMODEL.DOCNUMBER IS 
'Номер';

COMMENT ON COLUMN DOCHEADMODEL.DOCDATE IS 
'Дата';

COMMENT ON COLUMN DOCHEADMODEL.CURRENCY_CODE IS 
'Код валюты';

COMMENT ON COLUMN DOCHEADMODEL.CURCOURCE IS 
'Курс валюты';

COMMENT ON COLUMN DOCHEADMODEL.SUMMACUR IS 
'Сумма в валюте';

COMMENT ON COLUMN DOCHEADMODEL.SUMMANAT IS 
'Сумма';

COMMENT ON COLUMN DOCHEADMODEL.BASEDOC_ID IS 
'Идентификатор документа-основания';

COMMENT ON COLUMN DOCHEADMODEL.BASEDOCTYPE IS 
'Тип документа-основания';

COMMENT ON COLUMN DOCHEADMODEL.BASEDOCNUMBER IS 
'Номер документа-основания';

COMMENT ON COLUMN DOCHEADMODEL.BASEDOCDATE IS 
'Дата документа-основания';

COMMENT ON COLUMN DOCHEADMODEL.CONTRACT_ID IS 
'Идентификатор договора';

COMMENT ON COLUMN DOCHEADMODEL.CONTRACTTYPE IS 
'Тип договора';

COMMENT ON COLUMN DOCHEADMODEL.CONTRACTNUMBER IS 
'Номер договора';

COMMENT ON COLUMN DOCHEADMODEL.CONTRACTDATE IS 
'Дата договора';

COMMENT ON COLUMN DOCHEADMODEL.WEIGHT IS 
'Вес';

COMMENT ON COLUMN DOCHEADMODEL.VOLUME IS 
'Объем';

COMMENT ON COLUMN DOCHEADMODEL.PRICELIST_ID IS 
'Прайс-лист';

COMMENT ON COLUMN DOCHEADMODEL.PRICETYPE_ID IS 
'Тип цены';

COMMENT ON COLUMN DOCHEADMODEL.PROVIDERPRICELIST_ID IS 
'Прайс-лист поставщика';

COMMENT ON COLUMN DOCHEADMODEL.CALCTAXESKIND_ID IS 
'Вид начисления налогов';

COMMENT ON COLUMN DOCHEADMODEL.STOCKSRC IS 
'Склад-источник';

COMMENT ON COLUMN DOCHEADMODEL.STOCKDEST IS 
'Склад-приемник';

COMMENT ON COLUMN DOCHEADMODEL.MOLSRC IS 
'МОЛ-источник';

COMMENT ON COLUMN DOCHEADMODEL.MOLDEST IS 
'МОЛ-приемник';

COMMENT ON COLUMN DOCHEADMODEL.DISCOUNT_FOLDER_ID IS 
'Папка скидок/наценок';

COMMENT ON COLUMN DOCHEADMODEL.MODELDESTFOLDER_ID IS 
'Папка-приемник';

COMMENT ON COLUMN DOCHEADMODEL.FROM_ID IS 
'Контрагент "от кого"';

COMMENT ON COLUMN DOCHEADMODEL.TO_ID IS 
'Контрагент "кому"';

COMMENT ON COLUMN DOCHEADMODEL.THROUGH_ID IS 
'Контрагент "через кого"';

COMMENT ON COLUMN DOCHEADMODEL.CURRATETYPE_ID IS 
'Тип курса валюты';

COMMENT ON COLUMN DOCHEADMODEL.CURRATEAUTHORITY_ID IS 
'Источник курса валюты';

COMMENT ON COLUMN DOCHEADMODEL.DESCRIPTION IS 
'Дополнительная информация (описание)';

COMMENT ON COLUMN DOCHEADSTATE.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCHEADSTATE.DOCACTION_ID IS 
'Идентификатор выполненного этапа';

COMMENT ON COLUMN DOCHEADSTATE.READYSUMMA IS 
'Выполненная сумма';

COMMENT ON COLUMN DOCHEADSTATE.DATA1 IS 
'Служебное поле';

COMMENT ON COLUMN DOCHEADSTATE.DATA2 IS 
'Служебное поле';

COMMENT ON COLUMN DOCHEADSTATE.DATETIME IS 
'Системное время выполнения этапа';

COMMENT ON COLUMN DOCHEADSTATE.USER_ID IS 
'Пользователь, выполнивший этап';

COMMENT ON COLUMN DOCPROCESSSTAGE.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCPROCESSSTAGE.DOCTYPE_ID IS 
'Тип документа';

COMMENT ON COLUMN DOCPROCESSSTAGE.PARTIAL IS 
'Возможна частичная отработка';

COMMENT ON COLUMN DOCPROCESSSTAGE.PREVISCOMPLETE IS 
'Отработать все из предыдущего этапа';

COMMENT ON COLUMN DOCPROCESSSTAGE.SHOWNEWDOCUMENT IS 
'Признак Показывать документа';

COMMENT ON COLUMN DOCPROCESSSTAGE.STAGE IS 
'Этап (ссылка на DP_STAGE_ACTION).';

COMMENT ON COLUMN DOCPROCESSSTAGE.DPSNAME IS 
'Наименование';

COMMENT ON COLUMN DOCPROCESSSTAGE.COMMENT IS 
'Комментарии';

COMMENT ON COLUMN DOCPROCESSSTAGE.LINKDOCSECTION IS 
'Раздел документа';

COMMENT ON COLUMN DOCPROCESSSTAGE.LINKDOCTYPE IS 
'Тип документа';

COMMENT ON COLUMN DOCPROCESSSTAGE.LINKDOCMODEL IS 
'Идентификатор образца';

COMMENT ON COLUMN DOCPROCESSSTAGE.LINKDOCDESTFOLDER IS 
'Идентификатор папки-приемника';

COMMENT ON COLUMN DOCPROCESSSTAGE.ISANDIN IS 
'Ветвление на входе И';

COMMENT ON COLUMN DOCPROCESSSTAGE.ISANDOUT IS 
'Ветвление на выходе И';

COMMENT ON COLUMN DOCPROCESSSTAGE.ISORIN IS 
'Ветвление на входе ИЛИ';

COMMENT ON COLUMN DOCPROCESSSTAGE.ISOROUT IS 
'Ветвление на выходе ИЛИ';

COMMENT ON COLUMN DOCPROCESSSTAGE.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN DOCPROCESSSTAGE.LINKDOCMODELFOLDER IS 
'Идентификатор папки образца';

COMMENT ON COLUMN DOCPROCESSSTAGE.COORX IS 
'Координаты расположения по оси X';

COMMENT ON COLUMN DOCPROCESSSTAGE.COORY IS 
'Координаты расположения по оси Y';

COMMENT ON COLUMN DOCPROCESSSTAGE.DEPENDENT IS 
'Зависит от предыдущего';

COMMENT ON COLUMN DOCPROCESSSTAGE.ALGORITHM IS 
'Алгоритм отработки';

COMMENT ON COLUMN DOCPROCESSSTAGE.ROLLBACK_ALGORITHM IS 
'Алгоритм отката';

COMMENT ON COLUMN DOCPROCESSSTAGE.ALG_ID IS 
'Алгоритм отработки (ссылка на репозиторий)';

COMMENT ON COLUMN DOCPROCESSSTAGE.RBALG_ID IS 
'Алгоритм отката (ссылка на репозиторий)';

COMMENT ON COLUMN DOCPROCESSSTAGE.USE_CURRENT_DATE IS 
'Использовать текущую дату';

COMMENT ON COLUMN DOCPROCESSSTAGE.CODE IS 
'Код';

COMMENT ON COLUMN DOCPROCESSSTAGE.VALUE_OUT_OF_BOUND IS 
'Разрешать превышение значений';

COMMENT ON COLUMN DOCPROCESSSTAGE.LINKDOC_ROLLBACK IS 
'Откутывать ДО';

COMMENT ON COLUMN DOCPROCESSSTAGE.LINKDOC_ROLLBACK_INTERACTIVE IS 
'Интерактивность отката ДО
0 - стандартный
1 - тихий
2 - применить из текущено ДО';

COMMENT ON COLUMN DOCPROCESSSTAGE_RIGHTS.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCPROCESSSTAGE_RIGHTS.STAGE_ID IS 
'Этап';

COMMENT ON COLUMN DOCPROCESSSTAGE_RIGHTS.GROUP_ID IS 
'Группа пользователей';

COMMENT ON COLUMN DOCPROCESSSTAGE_RIGHTS.GRANTS IS 
'1 - выполнени этапа
2 - откат этапа
3 - полные права';

COMMENT ON COLUMN DOCSECTION.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCSECTION.DSNAME IS 
'Наименование';

COMMENT ON COLUMN DOCSECTION.FOLDERTYPE IS 
'Тип папки (соответствует полю FOLDERTYPE таблицы FOLDER)';

COMMENT ON COLUMN DOCSECTION.MODEL_FOLDERTYPE IS 
'Тип папки образца документа (соответствует полю FOLDERTYPE таблицы FOLDER)';

COMMENT ON COLUMN DOCSECTION.WITH_TAXES IS 
'Признак наличия в документе налогов';

COMMENT ON COLUMN DOCSECTION.WITH_SPEC IS 
'Признак наличия в документе спецификаций';

COMMENT ON COLUMN DOCSECTION.DIRECTION IS 
'Признак входящий-исходящий:
0 - входящий
1 - исходящий
2 - прочий';

COMMENT ON COLUMN DOCSECTION.DUMMY IS 
'Признак стандартности:
0 - документ стандартный, хранится в DOCHEAD+DOCSPEC
1 - документ нестандартный';

COMMENT ON COLUMN DOCSECTION.CLASS_ID IS 
'Класс бизнес-компонента, который реализует документ';

COMMENT ON COLUMN DOCSECTION.MODEL_CLASS_ID IS 
'Класс бизнес-компонента, который реализует образец документа';

COMMENT ON COLUMN DOCSECTION.SPEC_CLASS_ID IS 
'Класс бизнес-компонента, который реализует спецификацию документа';

COMMENT ON COLUMN DOCSECTION.MODEL_SPEC_CLASS_ID IS 
'Класс бизнес-компонента, который реализует образец спецификации документа';

COMMENT ON COLUMN DOCSPEC.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCSPEC.DOCHEAD_ID IS 
'Идентификатор заголовка';

COMMENT ON COLUMN DOCSPEC.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN DOCSPEC.PRICELISTSPEC_ID IS 
'Позиция прайс-листа';

COMMENT ON COLUMN DOCSPEC.QUANTITY IS 
'Количество';

COMMENT ON COLUMN DOCSPEC.PRICE IS 
'Цена (со всеми налогами)';

COMMENT ON COLUMN DOCSPEC.SUMMA IS 
'Сумма (со всеми налогами)';

COMMENT ON COLUMN DOCSPEC.PRICE1 IS 
'Цена (с включенными налогами)';

COMMENT ON COLUMN DOCSPEC.SUMMA1 IS 
'Сумма (с включенными налогами)';

COMMENT ON COLUMN DOCSPEC.WEIGHT IS 
'Вес';

COMMENT ON COLUMN DOCSPEC.VOLUME IS 
'Объем';

COMMENT ON COLUMN DOCSPEC.BESTBEFORE IS 
'Дата истечения срока годности';

COMMENT ON COLUMN DOCSPEC.TAXGROUP_ID IS 
'Налоговая группа';

COMMENT ON COLUMN DOCSPEC.SHELFLIFE IS 
'Срок хранения';

COMMENT ON COLUMN DOCSPEC.SHELFLIFE_MEAS IS 
'Единица измерения срока хранения';

COMMENT ON COLUMN DOCSPEC.PRODUCTIONDATE IS 
'Дата производства';

COMMENT ON COLUMN DOCSPEC.MEASURE1_ID IS 
'Основная ЕИ';

COMMENT ON COLUMN DOCSPEC.MEASURE2_ID IS 
'Дополнительная ЕИ';

COMMENT ON COLUMN DOCSPEC.QUANTITY2 IS 
'Количество в дополнительной ЕИ';

COMMENT ON COLUMN DOCSPEC.COMMENT IS 
'Комментарии';

COMMENT ON COLUMN DOCSPEC.CONTRACTOR_ID IS 
'Контрагент';

COMMENT ON COLUMN DOCSPEC.UNID IS 
'Уникальный идентификатор';

COMMENT ON COLUMN DOCSPEC.ORDER_SPEC_ID IS 
'Ссылка на строку заказа, по которому был создан данный документ';

COMMENT ON COLUMN DOCSPEC.STOCKSRC IS 
'Склад-источник';

COMMENT ON COLUMN DOCSPEC.STOCKDEST IS 
'Склад-приемник';

COMMENT ON COLUMN DOCSPEC.MOLSRC IS 
'МОЛ-источник';

COMMENT ON COLUMN DOCSPEC.MOLDEST IS 
'МОЛ-приемник';

COMMENT ON COLUMN DOCSPEC.CUSTOMS_DECLARATION_ID IS 
'Идентификатор грузовой таможенной декларации';

COMMENT ON COLUMN DOCSPEC.COUNTRY_OF_ORIGIN_ID IS 
'Идентификатор страны происхождения';

COMMENT ON COLUMN DOCSPECMODEL.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCSPECMODEL.DOCHEAD_ID IS 
'Идентификатор заголовка образца';

COMMENT ON COLUMN DOCSPECMODEL.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN DOCSPECMODEL.PRICELISTSPEC_ID IS 
'Позиция прайс-листа';

COMMENT ON COLUMN DOCSPECMODEL.QUANTITY IS 
'Количество';

COMMENT ON COLUMN DOCSPECMODEL.PRICE IS 
'Цена (со всеми налогами)';

COMMENT ON COLUMN DOCSPECMODEL.SUMMA IS 
'Сумма (со всеми налогами)';

COMMENT ON COLUMN DOCSPECMODEL.PRICE1 IS 
'Цена (с включенными налогами)';

COMMENT ON COLUMN DOCSPECMODEL.SUMMA1 IS 
'Сумма (с включенными налогами)';

COMMENT ON COLUMN DOCSPECMODEL.WEIGHT IS 
'Вес';

COMMENT ON COLUMN DOCSPECMODEL.VOLUME IS 
'Объем';

COMMENT ON COLUMN DOCSPECMODEL.BESTBEFORE IS 
'Дата истечения срока годности';

COMMENT ON COLUMN DOCSPECMODEL.PACKING_ID IS 
'Не используется';

COMMENT ON COLUMN DOCSPECMODEL.PACKINGQUAN IS 
'Не используется';

COMMENT ON COLUMN DOCSPECMODEL.TAXGROUP_ID IS 
'Налоговая группа';

COMMENT ON COLUMN DOCSPECMODEL.PRODUCTIONDATE IS 
'Дата производства';

COMMENT ON COLUMN DOCSPECMODEL.SHELFLIFE IS 
'Срок хранения';

COMMENT ON COLUMN DOCSPECMODEL.SHELFLIFE_MEAS IS 
'Единица измерения срока хранения';

COMMENT ON COLUMN DOCSPECMODEL.MEASURE1_ID IS 
'Основная ЕИ';

COMMENT ON COLUMN DOCSPECMODEL.MEASURE2_ID IS 
'Дополнительная ЕИ';

COMMENT ON COLUMN DOCSPECMODEL.QUANTITY2 IS 
'Количество в дополнительной ЕИ';

COMMENT ON COLUMN DOCSPECMODEL.COMMENT IS 
'Комментарии';

COMMENT ON COLUMN DOCSPECMODEL.CONTRACTOR_ID IS 
'Контрагент';

COMMENT ON COLUMN DOCSPECMODEL.STOCKSRC IS 
'Склад-источник';

COMMENT ON COLUMN DOCSPECMODEL.STOCKDEST IS 
'Склад-приемник';

COMMENT ON COLUMN DOCSPECMODEL.MOLSRC IS 
'МОЛ-источник';

COMMENT ON COLUMN DOCSPECMODEL.MOLDEST IS 
'МОЛ-приемник';

COMMENT ON COLUMN DOCSPECSTATE.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCSPECSTATE.DOCHEADSTATE_ID IS 
'Идентификатор истории выполненного этапа';

COMMENT ON COLUMN DOCSPECSTATE.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN DOCSPECSTATE.READYQUANTITY IS 
'Отработанное количество';

COMMENT ON COLUMN DOCSPECSTATE.READYSUMMA IS 
'Отработанная сумма';

COMMENT ON COLUMN DOCSPECSTATE.DATA1 IS 
'Служебное поле';

COMMENT ON COLUMN DOCSPECSTATE.READYQUANTITY2 IS 
'Отработанное количество в дополнительной ЕИ';

COMMENT ON COLUMN DOCSPECSTATE.DATA2 IS 
'Служебное поле';

COMMENT ON COLUMN DOCTYPE_DOCSECTION_LINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCTYPE_DOCSECTION_LINK.KIND IS 
'Тип связи:
0 - документ
1 - документ-подтверждение
2 - документ-основание
3 - договор';

COMMENT ON COLUMN DOCTYPE_DOCSECTION_LINK.DOCTYPE_ID IS 
'Тип документа';

COMMENT ON COLUMN DOCTYPE_DOCSECTION_LINK.DOCSECTION_ID IS 
'Класс документа';

COMMENT ON COLUMN DOCTYPE_RIGHTS.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCTYPE_RIGHTS.REC_ID IS 
'Тип документа';

COMMENT ON COLUMN DOCTYPE_RIGHTS.GROUP_ID IS 
'Группа пользователей';

COMMENT ON COLUMN DOCTYPE_RIGHTS.RIGHTS IS 
'Права:
0 - нет 
1 - есть';

COMMENT ON COLUMN DOCUMENT_LINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOCUMENT_LINK.DOC_ID IS 
'Документ';

COMMENT ON COLUMN DOCUMENT_LINK.BASEDOC_ID IS 
'Документ-основание';

COMMENT ON COLUMN DOC_SPEC_PACKAGE.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOC_SPEC_PACKAGE.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN DOC_SPEC_PACKAGE.PACKAGE_ID IS 
'Идентификатор упаковки';

COMMENT ON COLUMN DOC_SPEC_PACKAGE.QUANTITY IS 
'Количество';

COMMENT ON COLUMN DOC_SPEC_PACKAGE.WEIGHT IS 
'Вес';

COMMENT ON COLUMN DOC_SPEC_PACKAGE.VOLUME IS 
'Объем';

COMMENT ON COLUMN DOC_SPEC_SERIAL_NUM.ID IS 
'Идентификатор';

COMMENT ON COLUMN DOC_SPEC_SERIAL_NUM.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN DOC_SPEC_SERIAL_NUM.SERIAL_NUM IS 
'Серийный номер';

COMMENT ON COLUMN DOC_SPEC_SERIAL_NUM.COMMENT IS 
'Комментарии';

COMMENT ON COLUMN DP_STAGE_ACTION.ID IS 
'Идентификатор';

COMMENT ON COLUMN DP_STAGE_ACTION.NAME IS 
'Наименование';

COMMENT ON COLUMN DP_STAGE_ACTION.CREATEDOC_FLAG IS 
'Признак - этап создает документ';

COMMENT ON COLUMN ECONOMICOPER.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN ECONOMICOPER.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN ECONOMICOPER.KEEPDATE IS 
'Дата хозяйственной операции';

COMMENT ON COLUMN ECONOMICOPER.COMMENT IS 
'Содержание хозяйственной операции';

COMMENT ON COLUMN ECONOMICOPER.SPECMARK IS 
'Код особой отметки в верхнем регистре';

COMMENT ON COLUMN ECONOMICOPER.DOCBASETYPE IS 
'Тип документа-основания';

COMMENT ON COLUMN ECONOMICOPER.DOCBASENUMBER IS 
'Номер документа-основания';

COMMENT ON COLUMN ECONOMICOPER.DOCBASEDATE IS 
'Дата документа-основания';

COMMENT ON COLUMN ECONOMICOPER.DOCBASE_ID IS 
'Идентификатор документа-основания';

COMMENT ON COLUMN ECONOMICOPER.DOCTYPE IS 
'Тип документа-подтверждения';

COMMENT ON COLUMN ECONOMICOPER.DOCNUMBER IS 
'Номер документа-подтверждения';

COMMENT ON COLUMN ECONOMICOPER.DOCDATE IS 
'Дата документа-подтверждения';

COMMENT ON COLUMN ECONOMICOPER.DOC_ID IS 
'Идентификатор документа-подтверждения';

COMMENT ON COLUMN ECONOMICOPER.SUMMA IS 
'Сумма хозяйственной операции';

COMMENT ON COLUMN ECONOMICOPER.INSERTSIGN IS 
'Служебное поле';

COMMENT ON COLUMN ECONOMICOPER.CONTRACT_ID IS 
'Идентификатор договора';

COMMENT ON COLUMN ECONOMICOPER.CONTRACTTYPE IS 
'Тип договора';

COMMENT ON COLUMN ECONOMICOPER.CONTRACTNUMBER IS 
'Номер договора';

COMMENT ON COLUMN ECONOMICOPER.CONTRACTDATE IS 
'Дата договора';

COMMENT ON COLUMN ECONOMICOPER.FROM_ID IS 
'Контрагент "от кого"';

COMMENT ON COLUMN ECONOMICOPER.TO_ID IS 
'Контрагент "кому"';

COMMENT ON COLUMN ECONOMICOPER.USER_ID IS 
'Служебное поле';

COMMENT ON COLUMN ECONOMICOPERMODEL.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN ECONOMICOPERMODEL.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN ECONOMICOPERMODEL.MODELNAME IS 
'Наименование образца ХО';

COMMENT ON COLUMN ECONOMICOPERMODEL.KEEPDATE IS 
'Дата ХО';

COMMENT ON COLUMN ECONOMICOPERMODEL.COMMENT IS 
'Содержание ХО';

COMMENT ON COLUMN ECONOMICOPERMODEL.SPECMARK IS 
'Код особой отметки в верхнем регистре';

COMMENT ON COLUMN ECONOMICOPERMODEL.DOCBASETYPE IS 
'Тип документа-основания';

COMMENT ON COLUMN ECONOMICOPERMODEL.DOCBASENUMBER IS 
'Номер документа-основания';

COMMENT ON COLUMN ECONOMICOPERMODEL.DOCBASEDATE IS 
'Дата документа-основания';

COMMENT ON COLUMN ECONOMICOPERMODEL.DOCBASE_ID IS 
'Идентификатор документа-основания';

COMMENT ON COLUMN ECONOMICOPERMODEL.DOCTYPE IS 
'Тип документа-подтверждения';

COMMENT ON COLUMN ECONOMICOPERMODEL.DOCNUMBER IS 
'Номер документа-подтверждения';

COMMENT ON COLUMN ECONOMICOPERMODEL.DOCDATE IS 
'Дата документа-подтверждения';

COMMENT ON COLUMN ECONOMICOPERMODEL.DOC_ID IS 
'Идентификатор документа-подтверждения';

COMMENT ON COLUMN ECONOMICOPERMODEL.SUMMA IS 
'Сумма';

COMMENT ON COLUMN ECONOMICOPERMODEL.SOURCEFROM IS 
'От кого - тип:
0 - пусто
1 - Поставщик
2 - Покупатель
3 - Грузоотправитель
4 - Грузополучатель
5 - Склад источник
6 - Склад приемник
7 - МОЛ источник
8 - МОЛ приемник
9 - Через кого
';

COMMENT ON COLUMN ECONOMICOPERMODEL.SOURCETO IS 
'Кому - тип:
0 - пусто
1 - Поставщик
2 - Покупатель
3 - Грузоотправитель
4 - Грузополучатель
5 - Склад источник
6 - Склад приемник
7 - МОЛ источник
8 - МОЛ приемник
9 - Через кого
';

COMMENT ON COLUMN ECONOMICOPERMODEL.CONTRACT_ID IS 
'Идентификатор договора';

COMMENT ON COLUMN ECONOMICOPERMODEL.CONTRACTTYPE IS 
'Тип договора';

COMMENT ON COLUMN ECONOMICOPERMODEL.CONTRACTNUMBER IS 
'Номер договора';

COMMENT ON COLUMN ECONOMICOPERMODEL.CONTRACTDATE IS 
'Дата договора';

COMMENT ON COLUMN ECONOMICOPERMODEL.FROM_ID IS 
'Контрагент "от кого"';

COMMENT ON COLUMN ECONOMICOPERMODEL.TO_ID IS 
'Контрагент "кому"';

COMMENT ON COLUMN ECONOMICOPERMODEL.MODELDESTFOLDER_ID IS 
'Идентификатор папки-приемника';

COMMENT ON COLUMN ECONOMICSPEC.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN ECONOMICSPEC.ECONOMICOPER_ID IS 
'Идентификатор заголовка хозяйственной операции';

COMMENT ON COLUMN ECONOMICSPEC.ANLDB1_ID IS 
'Идентификатор аналитического счета 1-го порядка по дебету';

COMMENT ON COLUMN ECONOMICSPEC.ANLDB2_ID IS 
'Идентификатор аналитического счета 2-го порядка по дебету';

COMMENT ON COLUMN ECONOMICSPEC.ANLDB3_ID IS 
'Идентификатор аналитического счета 3-го порядка по дебету';

COMMENT ON COLUMN ECONOMICSPEC.ANLDB4_ID IS 
'Идентификатор аналитического счета 4-го порядка по дебету';

COMMENT ON COLUMN ECONOMICSPEC.ANLDB5_ID IS 
'Идентификатор аналитического счета 5-го порядка по дебету';

COMMENT ON COLUMN ECONOMICSPEC.ANLKT1_ID IS 
'Идентификатор аналитического счета 1-го порядка по кредиту';

COMMENT ON COLUMN ECONOMICSPEC.ANLKT2_ID IS 
'Идентификатор аналитического счета 2-го порядка по кредиту';

COMMENT ON COLUMN ECONOMICSPEC.ANLKT3_ID IS 
'Идентификатор аналитического счета 3-го порядка по кредиту';

COMMENT ON COLUMN ECONOMICSPEC.ANLKT4_ID IS 
'Идентификатор аналитического счета 4-го порядка по кредиту';

COMMENT ON COLUMN ECONOMICSPEC.ANLKT5_ID IS 
'Идентификатор аналитического счета 5-го порядка по кредиту';

COMMENT ON COLUMN ECONOMICSPEC.CATALOG_ID IS 
'Идентификатор позиции КТУ';

COMMENT ON COLUMN ECONOMICSPEC.QUANTITY IS 
'Количество';

COMMENT ON COLUMN ECONOMICSPEC.SUMMANAT IS 
'Сумма в НДЕ';

COMMENT ON COLUMN ECONOMICSPEC.SUMMACUR IS 
'Сумма в валюте';

COMMENT ON COLUMN ECONOMICSPEC.CURCOURCE IS 
'Курс валюты';

COMMENT ON COLUMN ECONOMICSPEC.REMNACCDB_ID IS 
'Идентификатор записи в таблице 
''Остатки и обороты средств по счетам''
для оборотов в дебет счета';

COMMENT ON COLUMN ECONOMICSPEC.REMNACCKT_ID IS 
'Идентификатор записи в таблице 
''Остатки и обороты средств по счетам''
для оборотов в кредит счета';

COMMENT ON COLUMN ECONOMICSPEC.REMNANLDB_ID IS 
'Идентификатор записи в таблице 
''Остатки и обороты средств по аналитическим счетам''
для оборотов в дебет счета 
(составного= счет + аналитика)';

COMMENT ON COLUMN ECONOMICSPEC.REMNANLKT_ID IS 
'Идентификатор записи в таблице 
''Остатки и обороты средств по аналитическим счетам''
для оборотов в кредит счета 
(составного= счет + аналитика)';

COMMENT ON COLUMN ECONOMICSPEC.REMNVALDB_ID IS 
'Идентификатор записи в таблице 
''Остатки и обороты по товарно-материальным ценностям''
для дебетовых оборотов 
';

COMMENT ON COLUMN ECONOMICSPEC.REMNVALKT_ID IS 
'Идентификатор записи в таблице 
''Остатки и обороты по товарно-материальным ценностям''
для кредитовых оборотов 
';

COMMENT ON COLUMN ECONOMICSPEC.REMNDB_ID IS 
'Идентификатор записи в таблице 
''Ведомости расчетов с контрагенами''
для дебетовых оборотов 
';

COMMENT ON COLUMN ECONOMICSPEC.REMNKT_ID IS 
'Идентификатор записи в таблице 
''Ведомости расчетов с контрагенами''
для кредитовых оборотов 
';

COMMENT ON COLUMN ECONOMICSPEC.ACCBATCHDB_ID IS 
'Идентификатор партии ТМЦ в дебет счета (только при партионном учете)';

COMMENT ON COLUMN ECONOMICSPEC.ACCBATCHHISTORYDB_ID IS 
'Идентификатор истории партии ТМЦ по дебету';

COMMENT ON COLUMN ECONOMICSPEC.ACCBATCHKT_ID IS 
'Идентификатор партии ТМЦ в 
кредит счета (только при партионном учете)';

COMMENT ON COLUMN ECONOMICSPEC.ACCBATCHHISTORYKT_ID IS 
'Идентификатор истории партии ТМЦ по кредиту';

COMMENT ON COLUMN ECONOMICSPEC.FEATURE1_ID IS 
'Идентификатор дополнительной характеристики 1-го уровня';

COMMENT ON COLUMN ECONOMICSPEC.FEATURE2_ID IS 
'Идентификатор дополнительной характеристики 2-го уровня';

COMMENT ON COLUMN ECONOMICSPEC.FEATURE3_ID IS 
'Идентификатор дополнительной характеристики 3-го уровня';

COMMENT ON COLUMN ECONOMICSPEC.FEATURE4_ID IS 
'Идентификатор дополнительной характеристики 4-го уровня';

COMMENT ON COLUMN ECONOMICSPEC.FEATURE5_ID IS 
'Идентификатор дополнительной характеристики 5-го уровня';

COMMENT ON COLUMN ECONOMICSPEC.ACCDB_ID IS 
'Счет дебет';

COMMENT ON COLUMN ECONOMICSPEC.ACCKT_ID IS 
'Счет кредит';

COMMENT ON COLUMN ECONOMICSPECMODEL.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN ECONOMICSPECMODEL.ECONOMICOPER_ID IS 
'Идентификатор заголовка образца хозяйственной операции';

COMMENT ON COLUMN ECONOMICSPECMODEL.ANLDB1_ID IS 
'Идентификатор аналитического счета 1-го порядка по дебету';

COMMENT ON COLUMN ECONOMICSPECMODEL.ANLDB2_ID IS 
'Идентификатор аналитического счета 2-го порядка по дебету';

COMMENT ON COLUMN ECONOMICSPECMODEL.ANLDB3_ID IS 
'Идентификатор аналитического счета 3-го порядка по дебету';

COMMENT ON COLUMN ECONOMICSPECMODEL.ANLDB4_ID IS 
'Идентификатор аналитического счета 4-го порядка по дебету';

COMMENT ON COLUMN ECONOMICSPECMODEL.ANLDB5_ID IS 
'Идентификатор аналитического счета 5-го порядка по дебету';

COMMENT ON COLUMN ECONOMICSPECMODEL.ANLKT1_ID IS 
'Идентификатор аналитического счета 1-го порядка по кредиту';

COMMENT ON COLUMN ECONOMICSPECMODEL.ANLKT2_ID IS 
'Идентификатор аналитического счета 2-го порядка по кредиту';

COMMENT ON COLUMN ECONOMICSPECMODEL.ANLKT3_ID IS 
'Идентификатор аналитического счета 3-го порядка по кредиту';

COMMENT ON COLUMN ECONOMICSPECMODEL.ANLKT4_ID IS 
'Идентификатор аналитического счета 4-го порядка по кредиту';

COMMENT ON COLUMN ECONOMICSPECMODEL.ANLKT5_ID IS 
'Идентификатор аналитического счета 5-го порядка по кредиту';

COMMENT ON COLUMN ECONOMICSPECMODEL.CATALOG_ID IS 
'Идентификатор позиции КТУ';

COMMENT ON COLUMN ECONOMICSPECMODEL.ENTRYFOLDER IS 
'Условия вхождения - Папка КТУ';

COMMENT ON COLUMN ECONOMICSPECMODEL.QUANTITY IS 
'Количество';

COMMENT ON COLUMN ECONOMICSPECMODEL.SUMMANAT IS 
'Сумма в НДЕ';

COMMENT ON COLUMN ECONOMICSPECMODEL.SUMMACUR IS 
'Сумма в валюте';

COMMENT ON COLUMN ECONOMICSPECMODEL.CURCOURCE IS 
'Курс валюты';

COMMENT ON COLUMN ECONOMICSPECMODEL.SUMMAFORMULA IS 
'Формула для суммы';

COMMENT ON COLUMN ECONOMICSPECMODEL.QUANFORMULA IS 
'Формула для количества';

COMMENT ON COLUMN ECONOMICSPECMODEL.FEATURE1_ID IS 
'Идентификатор дополнительной характеристики 1-го уровня';

COMMENT ON COLUMN ECONOMICSPECMODEL.FEATURE2_ID IS 
'Идентификатор дополнительной характеристики 2-го уровня';

COMMENT ON COLUMN ECONOMICSPECMODEL.FEATURE3_ID IS 
'Рег. номер дополнительной характеристики 3-го уровня';

COMMENT ON COLUMN ECONOMICSPECMODEL.FEATURE4_ID IS 
'Рег. номер дополнительной характеристики 4-го уровня';

COMMENT ON COLUMN ECONOMICSPECMODEL.FEATURE5_ID IS 
'Идентификатор дополнительной характеристики 5-го уровня';

COMMENT ON COLUMN ECONOMICSPECMODEL.ENTRYGOODTYPE IS 
'Условия вхождения - тип позиции КТУ';

COMMENT ON COLUMN ECONOMICSPECMODEL.ENTRYTAXGROUP IS 
'Условия вхождения - налоговая группа
спецификации документа';

COMMENT ON COLUMN ECONOMICSPECMODEL.ACCDB_ID IS 
'Счет дебет';

COMMENT ON COLUMN ECONOMICSPECMODEL.ACCKT_ID IS 
'Счет кредит';

COMMENT ON COLUMN ECONOMICSPECMODEL.SUMALG_ID IS 
'Идентификатор алгоритма формирования суммы';

COMMENT ON COLUMN ECONOMICSPECMODEL.QTYALG_ID IS 
'Идентификатор алгоритма формирования количества';

COMMENT ON COLUMN ECONSPEC_FEATURE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN ECONSPEC_FEATURE.UPCODE IS 
'Код дополнительной характеристики в верхнем регистре';

COMMENT ON COLUMN ECONSPEC_FEATURE.CODE IS 
'Код дополнительной характеристики 
';

COMMENT ON COLUMN ECONSPEC_FEATURE.FNAME IS 
'Наименование дополнительной характеристики';

COMMENT ON COLUMN EMPLOYEES.FNAME IS 
'Имя';

COMMENT ON COLUMN EMPLOYEES.PATRONYMIC IS 
'Отчество';

COMMENT ON COLUMN EMPLOYEES.SURNAME IS 
'Фамилия';

COMMENT ON COLUMN EMPLOYEES.ADDRESS IS 
'Адрес';

COMMENT ON COLUMN EMPLOYEES.PASSP_GIVEN IS 
'Паспорт - Выдан';

COMMENT ON COLUMN EMPLOYEES.PASSP_CITY IS 
'Паспорт - Город';

COMMENT ON COLUMN EMPLOYEES.PASSP_DATE IS 
'Паспорт - Дата выдачи';

COMMENT ON COLUMN EMPLOYEES.PASSP_NUM IS 
'Паспорт - Номер';

COMMENT ON COLUMN EMPLOYEES.PASSP_SER IS 
'Паспорт - Серия';

COMMENT ON COLUMN EMPLOYEES.OFFICE IS 
'Должность';

COMMENT ON COLUMN EMPLOYEES.PHONE IS 
'Телефон';

COMMENT ON COLUMN EMPLOYEES.COMMENT IS 
'Примечание';

COMMENT ON COLUMN EMPLOYEES.TABNUM IS 
'Табельный номер';

COMMENT ON COLUMN EMPLOYEES.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN EMPLOYEES.PERSONNEL_ID IS 
'Идентификатор анкетных данных';

COMMENT ON COLUMN EMPLOYEES.IS_DEFAULT IS 
'Признак "МОЛ по-умолчанию".';

COMMENT ON COLUMN EMPLOYEES.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN ENTITY_TRANSFORMER_MAPPING.APP_LAYER IS 
'Уровень приложения, на котором действует MAP_ID для мапинга классов';

COMMENT ON COLUMN ENTITY_TRANSFORMER_MAPPING.CLASS_A IS 
'Имя класса';

COMMENT ON COLUMN ENTITY_TRANSFORMER_MAPPING.CLASS_B IS 
'Имя класса';

COMMENT ON COLUMN ENTITY_TRANSFORMER_MAPPING.MAP_ID IS 
'Ключ, по которому производится маппинг преобразования класса A в класс B';

COMMENT ON COLUMN ENTITY_TRANSFORMER_MAPPING.HASHAB IS 
'Уникальное значение хэш функции для пары имён:
CLASS_A и CLASS_B, независимо от порядка следования';

COMMENT ON COLUMN EXCH_CONFIG.SITE_CODE IS 
'Код текущей БД';

COMMENT ON COLUMN EXCH_EXPORT.ID IS 
'Идентификатор';

COMMENT ON COLUMN EXCH_EXPORT.SITE_ID IS 
'Идентификатор внешней БД';

COMMENT ON COLUMN EXCH_EXPORT.BEAN_NAME IS 
'Имя бизнес-компонента, который экспортируется';

COMMENT ON COLUMN EXCH_EXPORT.ORIGIN IS 
'Таблица БД, запись которой экспортируется';

COMMENT ON COLUMN EXCH_EXPORT.REC_ID IS 
'Идентификатор экспортируемой записи';

COMMENT ON COLUMN EXCH_EXPORT.PACKET IS 
'Пакет, в который вошла экспортируемая запись. Для подготовленных к экспорту записей со статусом 0 значение поля =null.';

COMMENT ON COLUMN EXCH_EXPORT.STATUS IS 
'Статус записи:
0 - подготовлена к экспорту
1 - помещена в пакет
2 - импортирована во в нешнюю БД (от нее получен соотв. пакет подтверждения)
3 - получен запрос на удаление записи из внешней БД
4 - запрос на удаление записи из внешней БД помещен в пакет
';

COMMENT ON COLUMN EXCH_EXPORT.PACKET_TIME IS 
'Время создания';

COMMENT ON COLUMN EXCH_IMPORT.ID IS 
'Идентификатор';

COMMENT ON COLUMN EXCH_IMPORT.SITE_ID IS 
'Идентификатор внешней БД';

COMMENT ON COLUMN EXCH_IMPORT.BEAN_NAME IS 
'Имя импортированного бизнес-компонента';

COMMENT ON COLUMN EXCH_IMPORT.ORIGIN IS 
'Таблица, запись которой импортирована';

COMMENT ON COLUMN EXCH_IMPORT.OLD_KEY IS 
'Значение ключа записи во внешней БД';

COMMENT ON COLUMN EXCH_IMPORT.NEW_KEY IS 
'Значение ключа записи в текущей БД';

COMMENT ON COLUMN EXCH_IMPORT.PACKET IS 
'Номер пакета';

COMMENT ON COLUMN EXCH_IMPORT.PACKET_TIME IS 
'Время создания';

COMMENT ON COLUMN EXCH_SITE.ID IS 
'Идентификатор ';

COMMENT ON COLUMN EXCH_SITE.CODE IS 
'Код внешней БД';

COMMENT ON COLUMN EXCH_SITE.NAME IS 
'Наименование внешней БД';

COMMENT ON COLUMN EXCH_SITE.PATH_IN IS 
'Каталог входящих пакетов';

COMMENT ON COLUMN EXCH_SITE.PATH_OUT IS 
'Каталог исходящих пакетов';

COMMENT ON COLUMN EXCH_SITE.PACKET_IN IS 
'Номер входящего пакета';

COMMENT ON COLUMN EXCH_SITE.PACKET_IN_TIME IS 
'Дата/время входящего пакета';

COMMENT ON COLUMN EXCH_SITE.PACKET_OUT IS 
'Номер исходящего пакета';

COMMENT ON COLUMN EXCH_SITE.PACKET_OUT_TIME IS 
'Дата/время исходящего пакета';

COMMENT ON COLUMN EXCH_SITE.REQUEST_DONE IS 
'Служебное поле. В процессе импорта устанавливается в 1 после выдачи пользователю сообщения о запросе на удаление документов. ';

COMMENT ON COLUMN EXCH_SITE.EXPORT_CMD IS 
'Команда экспорта';

COMMENT ON COLUMN EXCH_SITE.IMPORT_CMD IS 
'Команда импорта';

COMMENT ON COLUMN EXCH_TABLE.CLASS_ID IS 
'Класс бизнес-компонента';

COMMENT ON COLUMN EXCH_TABLE.TABLE_NAME IS 
'Таблица БД';

COMMENT ON COLUMN FACTURAHEAD.INDATE IS 
'Поступило, дата ';

COMMENT ON COLUMN FACTURAHEAD.STOCKDATE IS 
'Склад, дата';

COMMENT ON COLUMN FACTURAHEAD.PAYDATE IS 
'Оплачено, дата';

COMMENT ON COLUMN FACTURAHEAD.PARTNERFROM_BANKREQ IS 
'Банковские реквизиты "от кого"';

COMMENT ON COLUMN FACTURAHEAD.PARTNERTO_BANKREQ IS 
'Банковские реквизиты "кому"';

COMMENT ON COLUMN FACTURAHEAD.TOPAYDOCNUMBER IS 
'К пл.-расч. документу, №';

COMMENT ON COLUMN FACTURAHEAD.TOPAYDOCDATE IS 
'К пл.-расч. документу, дата';

COMMENT ON COLUMN FACTURAHEAD.COMMENT IS 
'Дополнения';

COMMENT ON COLUMN FACTURAHEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN FACTURAHEAD.SHIPPER IS 
'Грузоотправитель';

COMMENT ON COLUMN FACTURAHEAD.CONSIGNEE IS 
'Грузополучатель';

COMMENT ON COLUMN FACTURAHEADMODEL.INDATE IS 
'Поступило, дата ';

COMMENT ON COLUMN FACTURAHEADMODEL.STOCKDATE IS 
'Склад, дата';

COMMENT ON COLUMN FACTURAHEADMODEL.PAYDATE IS 
'Оплачено, дата';

COMMENT ON COLUMN FACTURAHEADMODEL.PARTNERFROM_BANKREQ IS 
'Банковские реквизиты "от кого"';

COMMENT ON COLUMN FACTURAHEADMODEL.PARTNERTO_BANKREQ IS 
'Банковские реквизиты "кому"';

COMMENT ON COLUMN FACTURAHEADMODEL.TOPAYDOCNUMBER IS 
'К пл.-расч. документу, №';

COMMENT ON COLUMN FACTURAHEADMODEL.TOPAYDOCDATE IS 
'К пл.-расч. документу, дата';

COMMENT ON COLUMN FACTURAHEADMODEL.COMMENT IS 
'Дополнения';

COMMENT ON COLUMN FACTURAHEADMODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN FACTURAHEADMODEL.SHIPPER IS 
'Грузоотправитель';

COMMENT ON COLUMN FACTURAHEADMODEL.CONSIGNEE IS 
'Грузополучатель';

COMMENT ON COLUMN FEATURE.ID IS 
'Идентификатор';

COMMENT ON COLUMN FEATURE.NAME IS 
'Наименование';

COMMENT ON COLUMN FEATURE.DATATYPE IS 
'Тип данных: 0 - перечислимый; 1 - строка; 2 - число целое; 3 - число вещественное; 4 - дата; 5 - бизнес-компонент';

COMMENT ON COLUMN FEATURE.PRIORITY IS 
'Приоритет отображения в форме';

COMMENT ON COLUMN FEATURE.NULL_VALUE IS 
'Null-значение';

COMMENT ON COLUMN FEATURE.ENTITY_CLASS_ID IS 
'Класс бизнес-компонента (для типа данных = бизнес-компонент)';

COMMENT ON COLUMN FEATURE.CODE IS 
'Код';

COMMENT ON COLUMN FEATURE.IS_ARRAY IS 
'Массив';

COMMENT ON COLUMN FEATURELINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN FEATURELINK.REC_ID IS 
'В случае NULL - определяет принадлежность признака классу бизнес-компонентов (определяемому полем CLASS_ID); в ином случае - идентификатор записи, которой принадлежит признак';

COMMENT ON COLUMN FEATURELINK.FEATURE_ID IS 
'Идентификатор признака';

COMMENT ON COLUMN FEATURELINK.VAL IS 
'Значение признака в строковой интерпретации, для признака типа "бизнес-компонент" - идентификатор';

COMMENT ON COLUMN FEATURELINK.VAL_FOLDER IS 
'Для признака типа "бизнес-компонент" - идентификатор папки, для простых признаков - NULL';

COMMENT ON COLUMN FEATURELINK.VAL_TEXT IS 
'Для признака типа "бизнес-компонент" - строковое описание, для простых признаков - NULL';

COMMENT ON COLUMN FEATURELINK.CLASS_ID IS 
'Класс бизнес-компонента, записи которого принадлежит признак';

COMMENT ON COLUMN FEATUREVAL.ID IS 
'Идентификатор';

COMMENT ON COLUMN FEATUREVAL.FEATURE_ID IS 
'Ид. признака';

COMMENT ON COLUMN FEATUREVAL.VAL IS 
'Значение';

COMMENT ON COLUMN FINACCOUNT.ID IS 
'Идентификатор';

COMMENT ON COLUMN FINACCOUNT.FOLDER_ID IS 
'Папка';

COMMENT ON COLUMN FINACCOUNT.CODE IS 
'Код';

COMMENT ON COLUMN FINACCOUNT.UPCODE IS 
'Код в верхнем регистре';

COMMENT ON COLUMN FINACCOUNT.ACCNAME IS 
'Наименование';

COMMENT ON COLUMN FINACCOUNT.CURRENCY_CODE IS 
'Код валюты';

COMMENT ON COLUMN FINACCOUNT.KIND IS 
'Признак:
0 - счет
1 - признак';

COMMENT ON COLUMN FINACCOUNT.ANL1_KIND IS 
'Является ли аналитика 1-го уровня бизнес-компонентов';

COMMENT ON COLUMN FINACCOUNT.ANL2_KIND IS 
'Является ли аналитика 2-го уровня бизнес-компонентов';

COMMENT ON COLUMN FINACCOUNT.ANL3_KIND IS 
'Является ли аналитика 3-го уровня бизнес-компонентов';

COMMENT ON COLUMN FINACCOUNT.ANL4_KIND IS 
'Является ли аналитика 4-го уровня бизнес-компонентов';

COMMENT ON COLUMN FINACCOUNT.ANL5_KIND IS 
'Является ли аналитика 5-го уровня бизнес-компонентов';

COMMENT ON COLUMN FINACCOUNT.ANL1_CLASS_ID IS 
'Идентификатор БК для аналитики 1-го уровня';

COMMENT ON COLUMN FINACCOUNT.ANL2_CLASS_ID IS 
'Идентификатор БК для аналитики 2-го уровня';

COMMENT ON COLUMN FINACCOUNT.ANL3_CLASS_ID IS 
'Идентификатор БК для аналитики 3-го уровня';

COMMENT ON COLUMN FINACCOUNT.ANL4_CLASS_ID IS 
'Идентификатор БК для аналитики 4-го уровня';

COMMENT ON COLUMN FINACCOUNT.ANL5_CLASS_ID IS 
'Идентификатор БК для аналитики 5-го уровня';

COMMENT ON COLUMN FINANL.ID IS 
'Идентификатор';

COMMENT ON COLUMN FINANL.PARENT_ID IS 
'Идентификатор аналитики старшего порядка  ';

COMMENT ON COLUMN FINANL.FINACC_ID IS 
'Счет/признак';

COMMENT ON COLUMN FINANL.CODE IS 
'Код';

COMMENT ON COLUMN FINANL.UPCODE IS 
'Код в верхнем регистре';

COMMENT ON COLUMN FINANL.ANLNAME IS 
'Наименование';

COMMENT ON COLUMN FINANL.ANLLEVEL IS 
'Уровень';

COMMENT ON COLUMN FINOPER.ID IS 
'Идентификатор';

COMMENT ON COLUMN FINOPER.FOLDER_ID IS 
'Папка';

COMMENT ON COLUMN FINOPER.INSERTSIGN IS 
'Служебное поле';

COMMENT ON COLUMN FINOPER.KEEPDATE IS 
'Дата операции';

COMMENT ON COLUMN FINOPER.COMMENT IS 
'Содержание';

COMMENT ON COLUMN FINOPER.DOCBASETYPE IS 
'Тип документа-основания';

COMMENT ON COLUMN FINOPER.DOCBASENUMBER IS 
'Номер документа-основания';

COMMENT ON COLUMN FINOPER.DOCBASEDATE IS 
'Дата документа-основания';

COMMENT ON COLUMN FINOPER.DOCBASE_ID IS 
'Идентификатор документа-основания';

COMMENT ON COLUMN FINOPER.DOCTYPE IS 
'Тип документа-подтверждения';

COMMENT ON COLUMN FINOPER.DOCNUMBER IS 
'Номер документа-подтверждения';

COMMENT ON COLUMN FINOPER.DOCDATE IS 
'Дата документа-подтверждения';

COMMENT ON COLUMN FINOPER.DOC_ID IS 
'Идентификатор документа-подтверждения';

COMMENT ON COLUMN FINOPER.CONTRACT_ID IS 
'Идентификатор договора';

COMMENT ON COLUMN FINOPER.CONTRACTTYPE IS 
'Тип договора';

COMMENT ON COLUMN FINOPER.CONTRACTNUMBER IS 
'Номер договора';

COMMENT ON COLUMN FINOPER.CONTRACTDATE IS 
'Дата договора';

COMMENT ON COLUMN FINOPER.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN FINOPER.SUMNAT IS 
'Сумма';

COMMENT ON COLUMN FINOPER.SUMCUR IS 
'Сумма в валюте';

COMMENT ON COLUMN FINOPER.CURCODE IS 
'Код валюты';

COMMENT ON COLUMN FINOPER.CURRATE IS 
'Курс валюты';

COMMENT ON COLUMN FINOPER.USER_ID IS 
'Служебное поле';

COMMENT ON COLUMN FINOPER.FROM_ID IS 
'Контрагент "от кого"';

COMMENT ON COLUMN FINOPER.TO_ID IS 
'Контрагент "кому"';

COMMENT ON COLUMN FINOPER.PLANNED IS 
'Признак: 0 - факт, 1 - план';

COMMENT ON COLUMN FINOPER.CURRATETYPE_ID IS 
'Тип курса валюты';

COMMENT ON COLUMN FINOPER.CURRATEAUTHORITY_ID IS 
'Источник курса валюты';

COMMENT ON COLUMN FINOPERMODEL.ID IS 
'Идентификатор';

COMMENT ON COLUMN FINOPERMODEL.FOLDER_ID IS 
'Папка';

COMMENT ON COLUMN FINOPERMODEL.MODELNAME IS 
'Служебное поле';

COMMENT ON COLUMN FINOPERMODEL.KEEPDATE IS 
'Дата операции';

COMMENT ON COLUMN FINOPERMODEL.COMMENT IS 
'Содержание';

COMMENT ON COLUMN FINOPERMODEL.DOCBASETYPE IS 
'Тип документа-основания';

COMMENT ON COLUMN FINOPERMODEL.DOCBASENUMBER IS 
'Номер документа-основания';

COMMENT ON COLUMN FINOPERMODEL.DOCBASEDATE IS 
'Дата документа-основания';

COMMENT ON COLUMN FINOPERMODEL.DOCBASE_ID IS 
'Идентификатор документа-основания';

COMMENT ON COLUMN FINOPERMODEL.DOCTYPE IS 
'Тип документа-подтверждения';

COMMENT ON COLUMN FINOPERMODEL.DOCNUMBER IS 
'Номер документа-подтверждения';

COMMENT ON COLUMN FINOPERMODEL.DOCDATE IS 
'Дата документа-подтверждения';

COMMENT ON COLUMN FINOPERMODEL.DOC_ID IS 
'Идентификатор документа-подтверждения';

COMMENT ON COLUMN FINOPERMODEL.CONTRACT_ID IS 
'Идентификатор договора';

COMMENT ON COLUMN FINOPERMODEL.CONTRACTTYPE IS 
'Тип договора';

COMMENT ON COLUMN FINOPERMODEL.CONTRACTNUMBER IS 
'Номер договора';

COMMENT ON COLUMN FINOPERMODEL.CONTRACTDATE IS 
'Дата договора';

COMMENT ON COLUMN FINOPERMODEL.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN FINOPERMODEL.SUMNAT IS 
'Сумма';

COMMENT ON COLUMN FINOPERMODEL.SUMCUR IS 
'Сумма в валюте';

COMMENT ON COLUMN FINOPERMODEL.CURCODE IS 
'Код валюты';

COMMENT ON COLUMN FINOPERMODEL.CURRATE IS 
'Курс валюты';

COMMENT ON COLUMN FINOPERMODEL.FROM_ID IS 
'Контрагент "от кого"';

COMMENT ON COLUMN FINOPERMODEL.TO_ID IS 
'Контрагент "кому"';

COMMENT ON COLUMN FINOPERMODEL.PLANNED IS 
'Признак: 0 - факт, 1 - план';

COMMENT ON COLUMN FINOPERMODEL.CURRATETYPE_ID IS 
'Тип курса валюты';

COMMENT ON COLUMN FINOPERMODEL.CURRATEAUTHORITY_ID IS 
'Источник курса валюты';

COMMENT ON COLUMN FINOPERMODEL.MODELDESTFOLDER_ID IS 
'Папка-приемник';

COMMENT ON COLUMN FINOPERMODEL.SOURCEFROM IS 
'От кого - тип:
0 - пусто
1 - Поставщик
2 - Покупатель
3 - Грузоотправитель
4 - Грузополучатель
5 - Склад источник
6 - Склад приемник
7 - МОЛ источник
8 - МОЛ приемник
9 - Через кого
';

COMMENT ON COLUMN FINOPERMODEL.SOURCETO IS 
'Кому - тип:
0 - пусто
1 - Поставщик
2 - Покупатель
3 - Грузоотправитель
4 - Грузополучатель
5 - Склад источник
6 - Склад приемник
7 - МОЛ источник
8 - МОЛ приемник
9 - Через кого
';

COMMENT ON COLUMN FINPERIOD.ID IS 
'Идентификатор';

COMMENT ON COLUMN FINPERIOD.PNAME IS 
'Наименование';

COMMENT ON COLUMN FINPERIOD.DATEFROM IS 
'Дата начала периода';

COMMENT ON COLUMN FINPERIOD.DATETO IS 
'Дата конца периода';

COMMENT ON COLUMN FINPERIOD.WHOCLOSED IS 
'Кто закрыл период';

COMMENT ON COLUMN FINPERIOD.DATECLOSE IS 
'Дата закрытия периода';

COMMENT ON COLUMN FINSPEC.ID IS 
'Идентификатор';

COMMENT ON COLUMN FINSPEC.FINOPER_ID IS 
'Идентификатор операции';

COMMENT ON COLUMN FINSPEC.PARENT_ID IS 
'Для проводок признаков - идентификатор проводки счетов, которой принадлежит данная проводка;
для проводок счетов - null.';

COMMENT ON COLUMN FINSPEC.SRCACC_ID IS 
'Счет источник';

COMMENT ON COLUMN FINSPEC.DSTACC_ID IS 
'Счет приемник';

COMMENT ON COLUMN FINSPEC.SRCANL1_ID IS 
'Аналитика источника 1-го уровня';

COMMENT ON COLUMN FINSPEC.SRCANL2_ID IS 
'Аналитика источника 2-го уровня';

COMMENT ON COLUMN FINSPEC.SRCANL3_ID IS 
'Аналитика источника 3-го уровня';

COMMENT ON COLUMN FINSPEC.SRCANL4_ID IS 
'Аналитика источника 4-го уровня';

COMMENT ON COLUMN FINSPEC.SRCANL5_ID IS 
'Аналитика источника 5-го уровня';

COMMENT ON COLUMN FINSPEC.DSTANL1_ID IS 
'Аналитика приемника 1-го уровня';

COMMENT ON COLUMN FINSPEC.DSTANL2_ID IS 
'Аналитика приемника 2-го уровня';

COMMENT ON COLUMN FINSPEC.DSTANL3_ID IS 
'Аналитика приемника 3-го уровня';

COMMENT ON COLUMN FINSPEC.DSTANL4_ID IS 
'Аналитика приемника 4-го уровня';

COMMENT ON COLUMN FINSPEC.DSTANL5_ID IS 
'Аналитика приемника 5-го уровня';

COMMENT ON COLUMN FINSPEC.SUMNAT IS 
'Сумма';

COMMENT ON COLUMN FINSPEC.SUMCUR IS 
'Сумма в валюте';

COMMENT ON COLUMN FINSPEC.SRCTURNACC_ID IS 
'Идентификатор в оборотке по счетам, по источнику';

COMMENT ON COLUMN FINSPEC.DSTTURNACC_ID IS 
'Идентификатор в оборотке по счетам, по приемнику';

COMMENT ON COLUMN FINSPEC.SRCTURNFEAT_ID IS 
'Идентификатор в оборотке по признакам, по источнику';

COMMENT ON COLUMN FINSPEC.DSTTURNFEAT_ID IS 
'Идентификатор в оборотке по признакам, по приемнику';

COMMENT ON COLUMN FINSPEC.PLANNED IS 
'Признак: 0 - факт, 1 - план';

COMMENT ON COLUMN FINSPECMODEL.ID IS 
'Идентификатор';

COMMENT ON COLUMN FINSPECMODEL.FINOPER_ID IS 
'Идентификатор образца операции';

COMMENT ON COLUMN FINSPECMODEL.PARENT_ID IS 
'Для проводок признаков - идентификатор проводки счетов, которой принадлежит данная проводка;
для проводок счетов - null.';

COMMENT ON COLUMN FINSPECMODEL.SRCACC_ID IS 
'Счет источник';

COMMENT ON COLUMN FINSPECMODEL.DSTACC_ID IS 
'Счет приемник';

COMMENT ON COLUMN FINSPECMODEL.SRCANL1_ID IS 
'Аналитика источника 1-го уровня';

COMMENT ON COLUMN FINSPECMODEL.SRCANL2_ID IS 
'Аналитика источника 2-го уровня';

COMMENT ON COLUMN FINSPECMODEL.SRCANL3_ID IS 
'Аналитика источника 3-го уровня';

COMMENT ON COLUMN FINSPECMODEL.SRCANL4_ID IS 
'Аналитика источника 4-го уровня';

COMMENT ON COLUMN FINSPECMODEL.SRCANL5_ID IS 
'Аналитика источника 5-го уровня';

COMMENT ON COLUMN FINSPECMODEL.DSTANL1_ID IS 
'Аналитика приемника 1-го уровня';

COMMENT ON COLUMN FINSPECMODEL.DSTANL2_ID IS 
'Аналитика приемника 2-го уровня';

COMMENT ON COLUMN FINSPECMODEL.DSTANL3_ID IS 
'Аналитика приемника 3-го уровня';

COMMENT ON COLUMN FINSPECMODEL.DSTANL4_ID IS 
'Аналитика приемника 4-го уровня';

COMMENT ON COLUMN FINSPECMODEL.DSTANL5_ID IS 
'Аналитика приемника 5-го уровня';

COMMENT ON COLUMN FINSPECMODEL.SUMNAT IS 
'Сумма';

COMMENT ON COLUMN FINSPECMODEL.SUMCUR IS 
'Сумма в валюте';

COMMENT ON COLUMN FINSPECMODEL.FORMULA IS 
'Алгоритм расчета суммы проводки';

COMMENT ON COLUMN FINSPECMODEL.PLANNED IS 
'Признак: 0 - факт, 1 - план';

COMMENT ON COLUMN FINSPECMODEL.ALG_ID IS 
'Алгоритм расчета суммы проводки (в репозитории)';

COMMENT ON COLUMN FINSTRUCTURE.ID IS 
'Идентификатор';

COMMENT ON COLUMN FINSTRUCTURE.PARENT_ID IS 
'Идентификатор родительского узла';

COMMENT ON COLUMN FINSTRUCTURE.CODE IS 
'Код';

COMMENT ON COLUMN FINSTRUCTURE.UPCODE IS 
'Код в верхнем регистре';

COMMENT ON COLUMN FINSTRUCTURE.SNAME IS 
'Наименование';

COMMENT ON COLUMN FINSTRUCTURE.KIND IS 
'Тип структурной единицы:
0 - центр финансового учета
1 - центр финансовой ответственности
2 - венчур-центр
3 - профит-центр';

COMMENT ON COLUMN FINTURNACC.ID IS 
'Идентификатор';

COMMENT ON COLUMN FINTURNACC.PERIOD_ID IS 
'Период учета';

COMMENT ON COLUMN FINTURNACC.ACC_ID IS 
'Счет';

COMMENT ON COLUMN FINTURNACC.ANL1_ID IS 
'Аналитика 1-го уровня';

COMMENT ON COLUMN FINTURNACC.ANL2_ID IS 
'Аналитика 2-го уровня';

COMMENT ON COLUMN FINTURNACC.ANL3_ID IS 
'Аналитика 3-го уровня';

COMMENT ON COLUMN FINTURNACC.ANL4_ID IS 
'Аналитика 4-го уровня';

COMMENT ON COLUMN FINTURNACC.ANL5_ID IS 
'Аналитика 5-го уровня';

COMMENT ON COLUMN FINTURNACC.REMNBEGCUR IS 
'Остаток на начало в валюте';

COMMENT ON COLUMN FINTURNACC.REMNBEGNAT IS 
'Остаток на начало';

COMMENT ON COLUMN FINTURNACC.REMNBEGCURPLAN IS 
'Остаток на начало в валюте по плану';

COMMENT ON COLUMN FINTURNACC.REMNBEGNATPLAN IS 
'Остаток на начало по плану';

COMMENT ON COLUMN FINTURNACC.CURCODE IS 
'Код валюты';

COMMENT ON COLUMN FINTURNFEAT.ID IS 
'Идентификатор';

COMMENT ON COLUMN FINTURNFEAT.FINTURNACC_ID IS 
'Идентификатор записи оборотки по счетам';

COMMENT ON COLUMN FINTURNFEAT.PERIOD_ID IS 
'Период учета';

COMMENT ON COLUMN FINTURNFEAT.FEAT_ID IS 
'Признак';

COMMENT ON COLUMN FINTURNFEAT.FANL1_ID IS 
'Аналитика признака 1-го порядка';

COMMENT ON COLUMN FINTURNFEAT.FANL2_ID IS 
'Аналитика признака 2-го порядка';

COMMENT ON COLUMN FINTURNFEAT.FANL3_ID IS 
'Аналитика признака 3-го порядка';

COMMENT ON COLUMN FINTURNFEAT.FANL4_ID IS 
'Аналитика признака 4-го порядка';

COMMENT ON COLUMN FINTURNFEAT.FANL5_ID IS 
'Аналитика признака 5-го порядка';

COMMENT ON COLUMN FINTURNFEAT.REMNBEGCUR IS 
'Остаток на начало в валюте';

COMMENT ON COLUMN FINTURNFEAT.REMNBEGNAT IS 
'Остаток на начало';

COMMENT ON COLUMN FINTURNFEAT.REMNBEGCURPLAN IS 
'Остаток на начало в валюте по плану';

COMMENT ON COLUMN FINTURNFEAT.REMNBEGNATPLAN IS 
'Остаток на начало по плану';

COMMENT ON COLUMN FINTURNFEAT.CURCODE IS 
'Код валюты';

COMMENT ON COLUMN FIN_CONFIG.BASE_CURRENCY IS 
'Базовая валюта';

COMMENT ON COLUMN FIN_CONFIG.NAT_CURRENCY IS 
'Национальная валюта';

COMMENT ON COLUMN FIN_CONFIG.CURRENCY_PREC IS 
'Точность денежных величин, знаков после запятой';

COMMENT ON COLUMN FIN_CONFIG.CUR_RATE_AUTHORITY_ID IS 
'Источник курса';

COMMENT ON COLUMN FIN_CONFIG.CUR_RATE_TYPE_ID IS 
'Тип курса';

COMMENT ON COLUMN FOLDER.ID IS 
'Идентификатор папки
';

COMMENT ON COLUMN FOLDER.PARENT_ID IS 
'Идентификатор родительской папки
';

COMMENT ON COLUMN FOLDER.FNAME IS 
'Наименование папки
';

COMMENT ON COLUMN FOLDER.FOLDERTYPE IS 
'Тип папки
';

COMMENT ON COLUMN FOLDER.DATA IS 
'Не используется
';

COMMENT ON COLUMN FOLDER.FOLDER_TAG IS 
'Тэг папки';

COMMENT ON COLUMN FOLDER_RIGHTS.ID IS 
'Идентификатор записи
';

COMMENT ON COLUMN FOLDER_RIGHTS.GROUP_ID IS 
'Идентификатор группы
';

COMMENT ON COLUMN FOLDER_RIGHTS.FOLDERPART IS 
'Тип раздела, имеющего папки:
0 - папки (таблица FOLDER)
1 - папки словаря КТУ (таблица CATALOGFOLDER)
2 - папки раздела "Прайс-листы" (таблица PRICELISTSPEC)
3 - папки раздела "Прайс-листы поставщиков" (таблица PROVIDER_PRICELISTSPEC)
4 - папки словаря "Сотрудники" (таблица CONTRACTOR)
5 - папки анкетных данных сотрудников (таблица PREF_PERSONNEL_GROUP)
6 - подразделения штатного расписания (PREF_STAFF_LIST_UNIT)
7 - виды стажа (PREF_SERVICE_KIND)
';

COMMENT ON COLUMN FOLDER_RIGHTS.FOLDER_ID IS 
'Идентификатор папки
';

COMMENT ON COLUMN FOLDER_RIGHTS.RIGHTS IS 
'Права:
0 - нет
1 - есть
';

COMMENT ON COLUMN FORMULA.UPCODE IS 
'Код функции в верхнем регистре
';

COMMENT ON COLUMN FORMULA.CODE IS 
'Код функции
';

COMMENT ON COLUMN FORMULA.FNAME IS 
'Полное наименование
';

COMMENT ON COLUMN FORMULA.STOREDPROCEDURE IS 
'Наименование хранимой процедуры
';

COMMENT ON COLUMN FORMULA.CONTEXT IS 
'Контекст:
0 - Нет
1 - Документ
2 - Спецификация
';

COMMENT ON COLUMN FUEL_DENSITY_HEAD.ID IS 
'Идентификатор';

COMMENT ON COLUMN FUEL_DENSITY_HEAD.FOLDER_ID IS 
'Папка';

COMMENT ON COLUMN FUEL_DENSITY_HEAD.DATE_TIME IS 
'Дата/время';

COMMENT ON COLUMN FUEL_DENSITY_HEAD.CONTRACTOR_ID IS 
'Контрагент';

COMMENT ON COLUMN FUEL_DENSITY_HEAD.CODE IS 
'Код';

COMMENT ON COLUMN FUEL_DENSITY_HEAD.DHNAME IS 
'Наименование';

COMMENT ON COLUMN FUEL_DENSITY_SPEC.ID IS 
'Идентификатор';

COMMENT ON COLUMN FUEL_DENSITY_SPEC.HEAD_ID IS 
'Идентификатор заголовка';

COMMENT ON COLUMN FUEL_DENSITY_SPEC.DATE_TIME IS 
'Дата/время';

COMMENT ON COLUMN FUEL_DENSITY_SPEC.TANK_ID IS 
'Резервуар, контрагент';

COMMENT ON COLUMN FUEL_DENSITY_SPEC.FUEL_ID IS 
'Топливо, позиция каталога';

COMMENT ON COLUMN FUEL_DENSITY_SPEC.DENSITY IS 
'Плотность';

COMMENT ON COLUMN FUEL_DENSITY_SPEC.TEMPERATURE IS 
'Температура';

COMMENT ON COLUMN FUEL_DENSITY_SPEC.OPERATOR_ID IS 
'Оператор, контрагент';

COMMENT ON COLUMN INTERNALINVOICESPEC.REQUESTQUAN IS 
'Затребованное количество';

COMMENT ON COLUMN INTERNALINVOICESPEC.REQUESTSUMMA IS 
'Затребованная сумма';

COMMENT ON COLUMN INTERNALINVOICESPEC.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN INTERNALINVOICESPECMODEL.REQUESTQUAN IS 
'Затребованное количество';

COMMENT ON COLUMN INTERNALINVOICESPECMODEL.REQUESTSUMMA IS 
'Затребованная сумма';

COMMENT ON COLUMN INTERNALINVOICESPECMODEL.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN INVENTORY.ID IS 
'Идентификтор';

COMMENT ON COLUMN INVENTORY.FOLDER_ID IS 
'Идентификтор папки';

COMMENT ON COLUMN INVENTORY.PARENT_ID IS 
'Не используется';

COMMENT ON COLUMN INVENTORY.GROUPNUM IS 
'Номер группы';

COMMENT ON COLUMN INVENTORY.CARDNUM IS 
'Номер карточки';

COMMENT ON COLUMN INVENTORY.OBJNUM IS 
'Номер объекта';

COMMENT ON COLUMN INVENTORY.MANUFACTURER IS 
'Завод-изготовитель';

COMMENT ON COLUMN INVENTORY.MODEL IS 
'Модель, тип, марка';

COMMENT ON COLUMN INVENTORY.SERIALNUM IS 
'Заводской номер';

COMMENT ON COLUMN INVENTORY.PASSPNUM IS 
'Паспортный номер';

COMMENT ON COLUMN INVENTORY.INOPERDOCNUM IS 
'Акт ввода в эксплуатацию - номер';

COMMENT ON COLUMN INVENTORY.INOPERDATE IS 
'Акт ввода в эксплуатацию - дата';

COMMENT ON COLUMN INVENTORY.OUTOPERDOCNUM IS 
'Акт выбытия из эксплуатации - номер';

COMMENT ON COLUMN INVENTORY.OUTOPERDATE IS 
'Акт выбытия из эксплуатации - дата';

COMMENT ON COLUMN INVENTORY.BALANCECOST IS 
'Балансовая стоимость';

COMMENT ON COLUMN INVENTORY.BEGINCOST IS 
'Начальная стоимость';

COMMENT ON COLUMN INVENTORY.BEGINLOSS IS 
'Износ при создании карточки';

COMMENT ON COLUMN INVENTORY.AMORT IS 
'Начисленная амортизация';

COMMENT ON COLUMN INVENTORY.ENDCOST IS 
'Остаточная стоимость';

COMMENT ON COLUMN INVENTORY.BEGINLOSSDATE IS 
'Износ при создании карточки - дата начисления';

COMMENT ON COLUMN INVENTORY.AMORTDATE IS 
'Дата начисления амортизации';

COMMENT ON COLUMN INVENTORY.ISCOMPLEX IS 
'Не используется';

COMMENT ON COLUMN INVENTORY.ISCOMMON IS 
'Не используется';

COMMENT ON COLUMN INVENTORY.FACTOR IS 
'Поправочный коэффициент';

COMMENT ON COLUMN INVENTORY.ALGORITHM IS 
'Код алгоритма расчета амортизации';

COMMENT ON COLUMN INVENTORY.YEARAMORTRATE IS 
'Годовая норма амортизации';

COMMENT ON COLUMN INVENTORY.EXPLPERIOD_Y IS 
'Срок полезного использования, лет';

COMMENT ON COLUMN INVENTORY.EXPLPERIOD_M IS 
'Срок полезного использования, мес';

COMMENT ON COLUMN INVENTORY.PRODUCTION IS 
'Предполагаемый объем продукции';

COMMENT ON COLUMN INVENTORY.ANL1_ID IS 
'Идентификатор аналитического счета 1-го порядка учета ОС';

COMMENT ON COLUMN INVENTORY.ANL2_ID IS 
'Идентификатор аналитического счета 2-го порядка учета ОС';

COMMENT ON COLUMN INVENTORY.ANL3_ID IS 
'Идентификатор аналитического счета 3-го порядка учета ОС';

COMMENT ON COLUMN INVENTORY.ANL4_ID IS 
'Идентификатор аналитического счета 4-го порядка учета ОС';

COMMENT ON COLUMN INVENTORY.ANL5_ID IS 
'Идентификатор аналитического счета 5-го порядка учета ОС';

COMMENT ON COLUMN INVENTORY.ANLDB1_ID IS 
'Идентификатор аналитического счета 1-го порядка по дебету';

COMMENT ON COLUMN INVENTORY.ANLDB2_ID IS 
'Идентификатор аналитического счета 2-го порядка по дебету';

COMMENT ON COLUMN INVENTORY.ANLDB3_ID IS 
'Идентификатор аналитического счета 3-го порядка по дебету';

COMMENT ON COLUMN INVENTORY.ANLDB4_ID IS 
'Идентификатор аналитического счета 4-го порядка по дебету';

COMMENT ON COLUMN INVENTORY.ANLDB5_ID IS 
'Идентификатор аналитического счета 5-го порядка по дебету';

COMMENT ON COLUMN INVENTORY.ANLKT1_ID IS 
'Идентификатор аналитического счета 4-го порядка по кредиту';

COMMENT ON COLUMN INVENTORY.ANLKT2_ID IS 
'Идентификатор аналитического счета 2-го порядка по кредиту';

COMMENT ON COLUMN INVENTORY.ANLKT3_ID IS 
'Идентификатор аналитического счета 3-го порядка по кредиту';

COMMENT ON COLUMN INVENTORY.ANLKT4_ID IS 
'Идентификатор аналитического счета 4-го порядка по кредиту';

COMMENT ON COLUMN INVENTORY.ANLKT5_ID IS 
'Идентификатор аналитического счета 5-го порядка по кредиту';

COMMENT ON COLUMN INVENTORY.COMMENT IS 
'Примечание';

COMMENT ON COLUMN INVENTORY.CATALOG_ID IS 
'Идентификатор позиции КТУ';

COMMENT ON COLUMN INVENTORY.INITIALLOSS IS 
'Начальный износ';

COMMENT ON COLUMN INVENTORY.ACC_ID IS 
'Счет учета ОС';

COMMENT ON COLUMN INVENTORY.ACCDB_ID IS 
'Счет дебет начисления амортизации';

COMMENT ON COLUMN INVENTORY.ACCKT_ID IS 
'Счет кредит начисления амортизации';

COMMENT ON COLUMN INVENTORY.CONTRACTOR_ID IS 
'Идентификатор материально ответственного лица';

COMMENT ON COLUMN INVENTORY.AMCODE_ID IS 
'Идентификатор шифра нормы аморитзации';

COMMENT ON COLUMN INVENTORY.INCOMEDOCNUM IS 
'Номер акта поступления';

COMMENT ON COLUMN INVENTORY.INCOMEDATE IS 
'Дата поступления';

COMMENT ON COLUMN INVENTORY.INVNAME IS 
'Наименование объекта в картотеке';

COMMENT ON COLUMN INVENTORY.INVHEAD_ID IS 
'Идентификатор заголовка инвентарной карточки';

COMMENT ON COLUMN INVENTORY.ACCKIND_ID IS 
'Идентификатор вида учета ОС и НА';

COMMENT ON COLUMN INVENTORY.ACCGROUP_ID IS 
'Идентификатор группы учета ОС и НА';

COMMENT ON COLUMN INVENTORY.INVLOCATION_ID IS 
'Ид. местонахождения объекта';

COMMENT ON COLUMN INVENTORY.OKOF_ID IS 
'Ид. кода ОКОФ';

COMMENT ON COLUMN INVENTORYACTHEAD.REALSUMMANAT IS 
'Фактическая сумма';

COMMENT ON COLUMN INVENTORYACTHEAD.REALSUMMACUR IS 
'Фактическая сумма в валюте';

COMMENT ON COLUMN INVENTORYACTHEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN INVENTORYACTHEAD.CHAIRMAN IS 
'Председатель комиссии';

COMMENT ON COLUMN INVENTORYACTHEAD.ENDDATE IS 
'На дату';

COMMENT ON COLUMN INVENTORYACTSPEC.REALQUANTITY IS 
'Фактическое количество';

COMMENT ON COLUMN INVENTORYACTSPEC.REALSUMMA IS 
'Фактическая сумма';

COMMENT ON COLUMN INVENTORYACTSPEC.DOCSPEC_ID IS 
'Идентификатор спецификации';

COMMENT ON COLUMN INVENTORYACTSPEC.REALQUANTITY2 IS 
'Фактическое количество во второй единице измерения';

COMMENT ON COLUMN INVHISTORY.ID IS 
'Идентификатор';

COMMENT ON COLUMN INVHISTORY.INVENTORY_ID IS 
'Идентификатор записи данных из инвентарной карточки';

COMMENT ON COLUMN INVHISTORY.AMORTIZATION_ID IS 
'Идентификатор истории начисления амортизации';

COMMENT ON COLUMN INVHISTORY.EO_ID IS 
'Идентификатор заголовка хозяйственной операции';

COMMENT ON COLUMN INVHISTORY.ES_ID IS 
'Идентификатор позициии спецификации хозяйственной операции';

COMMENT ON COLUMN INVHISTORY.KIND IS 
'Тип записи истории:
0 - начисление амортизаци
1 - переоценка
2 - перемещение
3 - списание
4 - консервация
5 - дооценка';

COMMENT ON COLUMN INVHISTORY.DELTA_BALCOST IS 
'Изменение балансовой стоимости';

COMMENT ON COLUMN INVHISTORY.DELTA_DEPRVAL IS 
'Изменение остаточной стоимости, при переоценке - изменение начисленной амортизации';

COMMENT ON COLUMN INVHISTORY.REVAL_FACTOR IS 
'Коэффициент переоценки';

COMMENT ON COLUMN INVHISTORY.REVAL_SUM IS 
'Сумма переоценки';

COMMENT ON COLUMN INVHISTORY.ACT_DATE IS 
'Дата произведенного действия';

COMMENT ON COLUMN INVHISTORY.DELTA_BEGINLOSS IS 
'При переоценке - изменение начального износа';

COMMENT ON COLUMN INVHISTORY.DELTA_INITIALLOSS IS 
'При переоценке - изменение износа при создании карточки';

COMMENT ON COLUMN INVHISTORY.OLD_INVLOCATION_ID IS 
'Прежний ид. местонахождения';

COMMENT ON COLUMN INVLOCATION.UPCODE IS 
'Код в верхнем регистре';

COMMENT ON COLUMN INVLOCATION.CODE IS 
'Код';

COMMENT ON COLUMN INVLOCATION.ILNAME IS 
'Наименование';

COMMENT ON COLUMN INVLOCATION.ID IS 
'Идентификатор';

COMMENT ON COLUMN INVMETAL.ID IS 
'Идентификатор';

COMMENT ON COLUMN INVMETAL.METAL_CODE IS 
'Металл';

COMMENT ON COLUMN INVMETAL.MASS IS 
'Масса';

COMMENT ON COLUMN INVMETAL.INVHEAD_ID IS 
'Идентификатор инвентарной карточки';

COMMENT ON COLUMN INVOICEHEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN INVOICEHEAD.SUMMACUR_WITH_DISCOUNT IS 
'Сумма без скидки/наценки в валюте';

COMMENT ON COLUMN INVOICEHEAD.SUMMANAT_WITH_DISCOUNT IS 
'Сумма без скидки/наценки';

COMMENT ON COLUMN INVOICEHEAD.ADD_EXPENSES IS 
'Сумма дополнительных расходов';

COMMENT ON COLUMN INVOICEHEAD.DISCOUNT_ON_DOC IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN INVOICEHEAD.DISCOUNT_ON_LINE IS 
'Скидка/наценка по строкам спецификации';

COMMENT ON COLUMN INVOICEHEAD.PARTNERFROM_BANKREQ IS 
'Банковские реквизиты "от кого"';

COMMENT ON COLUMN INVOICEHEAD.PARTNERTO_BANKREQ IS 
'Банковские реквизиты "кому"';

COMMENT ON COLUMN INVOICEHEAD.TOPAYDOCNUMBER IS 
'К пл-расчетному документу, №';

COMMENT ON COLUMN INVOICEHEAD.TOPAYDOCDATE IS 
'К пл-расчетному документу, дата';

COMMENT ON COLUMN INVOICEHEAD.COMMENT IS 
'Дополнения';

COMMENT ON COLUMN INVOICEHEAD.SHIPPER IS 
'Грузоотправитель';

COMMENT ON COLUMN INVOICEHEAD.CONSIGNEE IS 
'Грузополучатель';

COMMENT ON COLUMN INVOICEHEAD.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN INVOICEHEAD.CONSUMER IS 
'Потребитель';

COMMENT ON COLUMN INVOICEHEADMODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN INVOICEHEADMODEL.SUMMACUR_WITH_DISCOUNT IS 
'Сумма без скидки/наценки в валюте';

COMMENT ON COLUMN INVOICEHEADMODEL.SUMMANAT_WITH_DISCOUNT IS 
'Сумма без скидки/наценки';

COMMENT ON COLUMN INVOICEHEADMODEL.ADD_EXPENSES IS 
'Сумма дополнительных расходов';

COMMENT ON COLUMN INVOICEHEADMODEL.DISCOUNT_ON_DOC IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN INVOICEHEADMODEL.DISCOUNT_ON_LINE IS 
'Скидка/наценка по строкам спецификации';

COMMENT ON COLUMN INVOICEHEADMODEL.PARTNERFROM_BANKREQ IS 
'Банковские реквизиты "от кого"';

COMMENT ON COLUMN INVOICEHEADMODEL.PARTNERTO_BANKREQ IS 
'Банковские реквизиты "кому"';

COMMENT ON COLUMN INVOICEHEADMODEL.TOPAYDOCNUMBER IS 
'К пл-расчетному документу, №';

COMMENT ON COLUMN INVOICEHEADMODEL.TOPAYDOCDATE IS 
'К пл-расчетному документу, дата';

COMMENT ON COLUMN INVOICEHEADMODEL.COMMENT IS 
'Дополнения';

COMMENT ON COLUMN INVOICEHEADMODEL.SHIPPER IS 
'Грузоотправитель';

COMMENT ON COLUMN INVOICEHEADMODEL.CONSIGNEE IS 
'Грузополучатель';

COMMENT ON COLUMN INVOICEHEADMODEL.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN INVOICEHEADMODEL.CONSUMER IS 
'Потребитель';

COMMENT ON COLUMN INVOICESPEC.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN INVOICESPEC.DISCOUNT IS 
'Скидка/наценка по строке';

COMMENT ON COLUMN INVOICESPEC.PRICE_WITH_DISCOUNT IS 
'Цена с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN INVOICESPEC.SUMMA_WITH_DISCOUNT IS 
'Сумма с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN INVOICESPEC.COST IS 
'Себестоимость (учитывает дополнительные расходы)';

COMMENT ON COLUMN INVOICESPEC.DOC_DISCOUNT IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN INVOICESPECMODEL.DOCSPECMODEL_ID IS 
'Идентификатор спецификации образца документа';

COMMENT ON COLUMN INVOICESPECMODEL.DISCOUNT IS 
'Скидка/наценка по строке';

COMMENT ON COLUMN INVOICESPECMODEL.PRICE_WITH_DISCOUNT IS 
'Цена с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN INVOICESPECMODEL.SUMMA_WITH_DISCOUNT IS 
'Сумма с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN INVOICESPECMODEL.COST IS 
'Себестоимость (учитывает дополнительные расходы)';

COMMENT ON COLUMN INVOICESPECMODEL.DOC_DISCOUNT IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN LINKSTAGE.ID IS 
'Идентификатор';

COMMENT ON COLUMN LINKSTAGE.PREVSTAGE_ID IS 
'Предыдущий этап';

COMMENT ON COLUMN LINKSTAGE.NEXTSTAGE_ID IS 
'Следующий этап';

COMMENT ON COLUMN LINKSTAGE.DIRECTLY IS 
'Признак: следует непосредственно';

COMMENT ON COLUMN LS_CONFIG.DEFAULT_FOLDER_ID IS 
'Идентификатор папки по умолчанию';

COMMENT ON COLUMN LS_ITEM.ID IS 
'Идентификатор';

COMMENT ON COLUMN LS_ITEM.SCHEDULE_ID IS 
'Идентификатор графика';

COMMENT ON COLUMN LS_ITEM.COMMENTS IS 
'Комментарий';

COMMENT ON COLUMN LS_ITEM.NUM IS 
'Номер';

COMMENT ON COLUMN LS_ITEM.ITEMKIND_ID IS 
'Идентификатор типа пункта';

COMMENT ON COLUMN LS_ITEM.STATUS IS 
'Статус пункта
0 - запланировно
1 - в работе
2 - выполнено
3 - не используется';

COMMENT ON COLUMN LS_ITEM.TOSOURCE IS 
'Источник Кому
1 - от кого
2 - кому
3 - через кого
4 - склад-источник
5 - склад-приемник
6 - МОЛ-источник
7 - МОЛ-приемник';

COMMENT ON COLUMN LS_ITEM.FROMSOURCE IS 
'Источник От кого
1 - от кого
2 - кому
3 - через кого
4 - склад-источник
5 - склад-приемник
6 - МОЛ-источник
7 - МОЛ-приемник';

COMMENT ON COLUMN LS_ITEM.FROM_ID IS 
'Идентификатор От кого';

COMMENT ON COLUMN LS_ITEM.TO_ID IS 
'Идентификатор Кому';

COMMENT ON COLUMN LS_ITEM.RESOURCEFROM_ID IS 
'Идентификатор средства платежа От кого';

COMMENT ON COLUMN LS_ITEM.RESOURCETO_ID IS 
'Идентификатор средства платежа Кому';

COMMENT ON COLUMN LS_ITEM.SPECSOURCE IS 
'Источник спецификации
0 - документ
1 - каталог
2 - прайл-лист';

COMMENT ON COLUMN LS_ITEM.HAS_SPEC IS 
'Признак содержания спецификации';

COMMENT ON COLUMN LS_ITEM.PRICELISTHEAD_ID IS 
'Идентификатор прайс-листа';

COMMENT ON COLUMN LS_ITEM.PRICETYPE_ID IS 
'Идентификатор типа цены';

COMMENT ON COLUMN LS_ITEM.ABS_DATE IS 
'Абсолютная дата';

COMMENT ON COLUMN LS_ITEM.IS_ABS_DATE IS 
'0 - относительная дата
1 - абсилютная дата';

COMMENT ON COLUMN LS_ITEM.DATEOFFSETKIND IS 
'Тип времени
0 - рабочих дней
1 - календарных дней
2 - месяцев
3 - лет';

COMMENT ON COLUMN LS_ITEM.DATEOFFSET IS 
'Количество относительного времени';

COMMENT ON COLUMN LS_ITEM.DATERELITEM_ID IS 
'Идентификатор пункта, относительного которого считается дата';

COMMENT ON COLUMN LS_ITEM.ABS_SUM IS 
'Абсолютная сумма';

COMMENT ON COLUMN LS_ITEM.IS_ABS_SUM IS 
'0 - относительная сумма
1 - абсилютная сумма';

COMMENT ON COLUMN LS_ITEM.RESULTDATE IS 
'Дата начала';

COMMENT ON COLUMN LS_ITEM.IS_RELFACT IS 
'Относительно фактических показаний';

COMMENT ON COLUMN LS_ITEM.SUMRELITEM_ID IS 
'Идентификатор пункта, относительного которого считается сумма';

COMMENT ON COLUMN LS_ITEM.FACTSUM IS 
'Фактическая сумма панкта';

COMMENT ON COLUMN LS_ITEM.RESULTSUM IS 
'Сумма пункта';

COMMENT ON COLUMN LS_ITEM.CURRATEAUTHORITY_ID IS 
'Идентификатор источника курса';

COMMENT ON COLUMN LS_ITEM.CURRATETYPE_ID IS 
'Идентификатор типа курса';

COMMENT ON COLUMN LS_ITEM.CURCODE IS 
'Код валюты';

COMMENT ON COLUMN LS_ITEM.IS_DATERELDOC IS 
'Дата относительно документа';

COMMENT ON COLUMN LS_ITEM.IS_SUMRELDOC IS 
'Сумма относительно документа';

COMMENT ON COLUMN LS_ITEM.PERC IS 
'Процент';

COMMENT ON COLUMN LS_ITEM.RESULTDATEEND IS 
'Дата окончания';

COMMENT ON COLUMN LS_ITEM.IS_DATERELEND IS 
'Относительно даты
0 - начала пункта
1 - окончания пункта';

COMMENT ON COLUMN LS_ITEMKIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN LS_ITEMKIND.NAME IS 
'Наименование';

COMMENT ON COLUMN LS_ITEMKIND.CODE IS 
'Код';

COMMENT ON COLUMN LS_ITEMSPEC.ID IS 
'Идентификатор';

COMMENT ON COLUMN LS_ITEMSPEC.ITEM_ID IS 
'Идентификатор пункта';

COMMENT ON COLUMN LS_ITEMSPEC.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN LS_ITEMSPEC.CATALOG_ID IS 
'Идентификатор позиции каталога';

COMMENT ON COLUMN LS_ITEMSPEC.PRICE IS 
'Цена';

COMMENT ON COLUMN LS_ITEMSPEC.CLEARPRICE IS 
'Цена без налогов';

COMMENT ON COLUMN LS_ITEMSPEC.SUMMA IS 
'Сумма';

COMMENT ON COLUMN LS_ITEMSPEC.CLEARSUMMA IS 
'Сумма без налогов';

COMMENT ON COLUMN LS_ITEMSPEC.QTY1 IS 
'Количество в первой единице измерения';

COMMENT ON COLUMN LS_ITEMSPEC.QTY2 IS 
'Количество во второй единице измерения';

COMMENT ON COLUMN LS_ITEMSPEC.MEASURE1_ID IS 
'Идентификатор первой единицы измерения';

COMMENT ON COLUMN LS_ITEMSPEC.MEASURE2_ID IS 
'Идентификатор второй единицы измерения';

COMMENT ON COLUMN LS_ITEMSPECALT.ID IS 
'Идентификатор';

COMMENT ON COLUMN LS_ITEMSPECALT.ITEMSPEC_ID IS 
'Идентификатор спецификации графика';

COMMENT ON COLUMN LS_ITEMSPECALT.CATALOG_ID IS 
'Идентификатор позиции каталога';

COMMENT ON COLUMN LS_ITEMSPECTAX.ID IS 
'Идентификатор';

COMMENT ON COLUMN LS_ITEMSPECTAX.ITEMSPEC_ID IS 
'Идентификатор спецификации графика';

COMMENT ON COLUMN LS_ITEMSPECTAX.TAX_ID IS 
'Идентификатор налога';

COMMENT ON COLUMN LS_ITEMSPECTAX.SUMMA IS 
'Сумма';

COMMENT ON COLUMN LS_ITEMSPECTAX.PRICE IS 
'Цена';

COMMENT ON COLUMN LS_SCHEDULE.ID IS 
'Идентификатор';

COMMENT ON COLUMN LS_SCHEDULE.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN LS_SCHEDULE.COMMENTS IS 
'Комментарии';

COMMENT ON COLUMN LS_SCHEDULE.NAME IS 
'Наименование';

COMMENT ON COLUMN LS_SCHEDULE.STATUS IS 
'Статус
0 - запланировно
1 - в работе
2 - выполнено
3 - не используется';

COMMENT ON COLUMN LS_SCHEDULE_DOCHEAD.ID IS 
'Идентификатор';

COMMENT ON COLUMN LS_SCHEDULE_DOCHEAD.LS_SCHEDULE_ID IS 
'Идентификатор графика исполнения обязательств';

COMMENT ON COLUMN LS_SCHEDULE_DOCHEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN MEASURE.ID IS 
'Идентификатор';

COMMENT ON COLUMN MEASURE.UPCODE IS 
'Код единицы измерения в верхнем регистре';

COMMENT ON COLUMN MEASURE.CODE IS 
'Код единицы измерения';

COMMENT ON COLUMN MEASURE.MNAME IS 
'Наименование единицы измерения';

COMMENT ON COLUMN MEASURE.DIVIDE IS 
'Делимая единица измерения:
0 - не делимая
1 - делимая';

COMMENT ON COLUMN MEASURE.UNIVERSAL_CODE IS 
'Международный код';

COMMENT ON COLUMN MEASURE.INTERNAL_CODE IS 
'Внутренний код';

COMMENT ON COLUMN METAL.UPCODE IS 
'Код металла в верхенм регистре';

COMMENT ON COLUMN METAL.CODE IS 
'Код металла';

COMMENT ON COLUMN METAL.MNAME IS 
'Наименование металла';

COMMENT ON COLUMN MF_BOM.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_BOM.BOM_TYPE IS 
'Тип
0 - подготовительный
1 - текущий
2 - стандартный';

COMMENT ON COLUMN MF_BOM.BOM_STATUS IS 
'Статус
0 - создается
1 - создан';

COMMENT ON COLUMN MF_BOM.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN MF_BOM.DEF_SRC_STOCK_ID IS 
'Склад-источник для материалов';

COMMENT ON COLUMN MF_BOM.DEF_DST_STOCK_ID IS 
'Склад-приемник для готовой продукции';

COMMENT ON COLUMN MF_BOM.DEF_SRC_MOL_ID IS 
'МОЛ склада-источника для материалов';

COMMENT ON COLUMN MF_BOM.DEF_DST_MOL_ID IS 
'МОЛ склада-приемника готовой продукции';

COMMENT ON COLUMN MF_BOM.REVISION IS 
'Версия';

COMMENT ON COLUMN MF_BOM.FOLDER_ID IS 
'Идентификатор папки СИ';

COMMENT ON COLUMN MF_BOM.REVISION_DATETIME IS 
'Дата создания СИ';

COMMENT ON COLUMN MF_BOM.STD_COST_DETAIL_ID IS 
'Идентификатор расшифровки стоимости';

COMMENT ON COLUMN MF_BOM.ROLLUP_DATETIME IS 
'Дата и время последнего замещения стоиости';

COMMENT ON COLUMN MF_BOM.SETUP_TICKS IS 
'Постоянное время задержки';

COMMENT ON COLUMN MF_BOM.SETUP_TIME_UM IS 
'Ед.изм. постоянного времени задержки';

COMMENT ON COLUMN MF_BOM.RUN_TICKS IS 
'Переменное времемя задержки';

COMMENT ON COLUMN MF_BOM.RUN_TIME_UM IS 
'Ед.изм. переменного времеми задержки';

COMMENT ON COLUMN MF_BOM.SCHED_DIRECTION IS 
'Направление планирования
0 - вперед
1 - назад';

COMMENT ON COLUMN MF_BOM.USE_MOVE_TIMES IS 
'Учитывать времена перемещений';

COMMENT ON COLUMN MF_BOM.USE_QUEUE_TIMES IS 
'Учитывать время в очереди';

COMMENT ON COLUMN MF_BOM.USE_FINITE_CAPACITY IS 
'Планировать в ограниченных мощностях';

COMMENT ON COLUMN MF_BOM.PRIORITY IS 
'Приоритет ЗНП по СИ';

COMMENT ON COLUMN MF_BOM.PRIORITY_FREEZE_FLAG IS 
'Признак фиксации приоритета ЗНП по СИ';

COMMENT ON COLUMN MF_BOM.CELL_ID IS 
'Идентификатор производственной линии';

COMMENT ON COLUMN MF_BOM.PCS_PER_HR_CELL IS 
'Производительность линии';

COMMENT ON COLUMN MF_BOM.APPROVED_FLAG IS 
'СИ одобрен';

COMMENT ON COLUMN MF_BOM.BOM_VERSION_REQUIRED IS 
'Создавать версии СИ';

COMMENT ON COLUMN MF_BOM.CREATE_JOB_APPROVED IS 
'Разрешать создание ЗНП';

COMMENT ON COLUMN MF_BOM.COMMENT IS 
'Примечание';

COMMENT ON COLUMN MF_BOM.MIN_LOT_QTY IS 
'Минимальный размер партии';

COMMENT ON COLUMN MF_BOM.MAX_LOT_QTY IS 
'Максимальный размер партии';

COMMENT ON COLUMN MF_BOM.LOT_INCREMENT_QTY IS 
'Дискретность партии';

COMMENT ON COLUMN MF_BOM.PLANNING_LOT_QTY IS 
'Плановый размер партии';

COMMENT ON COLUMN MF_BOM_LABOR.LABOR_CLASS_ID IS 
'Идентификатор класса рабочей силы';

COMMENT ON COLUMN MF_BOM_LABOR.BOM_ROUTE_RESOURCE_ID IS 
'Идентификатор группы ресурсов';

COMMENT ON COLUMN MF_BOM_LABOR.RUN_TICKS_LBR IS 
'Время работы рабочей силы';

COMMENT ON COLUMN MF_BOM_LABOR.RUN_TIME_LBR_UM IS 
'Ед.изм. времени работы рабочей силы';

COMMENT ON COLUMN MF_BOM_LABOR.LBR_NUMBER IS 
'Коэффициент умножения мощности';

COMMENT ON COLUMN MF_BOM_LABOR.LBR_BACKFLUSH_FLAG IS 
'Флаг обратного списания возмещения стоимости';

COMMENT ON COLUMN MF_BOM_LABOR.LBR_OH_BACKFLUSH_FLAG IS 
'Признак обратного списания';

COMMENT ON COLUMN MF_BOM_MACHINE.BOM_ROUTE_RESOURCE_ID IS 
'Идентификатор группы ресурсов';

COMMENT ON COLUMN MF_BOM_MACHINE.TIME_RATE_FLAG IS 
'Метод измерения расхода времени
0 - на единицу ГП
1 - единиц ГП на время
2 - фиксированное время на партию ГП';

COMMENT ON COLUMN MF_BOM_MACHINE.RUN_TICKS_MCH IS 
'Время работы оборудования';

COMMENT ON COLUMN MF_BOM_MACHINE.RUN_TIME_MCH_UM IS 
'Ед.изм. времени работы оборудования';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_NUMBER IS 
'Коэффициент умножения мощности';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_RECOVERY_FLAG IS 
'Метод начисления возмещения стоимости
0 - на один час операции
1 - на единицу ГП
2 - фиксированная стоимость на партию ГП';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_RATE IS 
'Норма возмещения стоимости';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_RATE_CUR_CODE IS 
'Валяла нормы на возмещение стоимости';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_COST_CATEGORY_ID IS 
'Идентификатор категории затрат на оборудование';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_BACKFLUSH_FLAG IS 
'Флаг обратного списания возмещения стоимости';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_OH_ALLOCATION_FLAG IS 
'Метод начисления НР
0 - на 1 час операции
1 - на единицу готовой продукции
2 - процент от стоимости работы
3 - фиксированная стоимочсть на паритию ГП';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_OH_RATE IS 
'Норма НР на оборудование';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_OH_RATE_CUR_CODE IS 
'Валюта норма на оборудование';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_OH_RATIO IS 
'Коэффициент накладных расходов';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_OH_COST_CATEGORY_ID IS 
'Идентификатор категории затрат НР на материал';

COMMENT ON COLUMN MF_BOM_MACHINE.MCH_OH_BACKFLUSH_FLAG IS 
'Признак обратного списания';

COMMENT ON COLUMN MF_BOM_MATERIAL.BOM_ROUTE_RESOURCE_ID IS 
'Идентификатор группы ресурсов';

COMMENT ON COLUMN MF_BOM_MATERIAL.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN MF_BOM_MATERIAL.REVISION IS 
'Версия СИ';

COMMENT ON COLUMN MF_BOM_MATERIAL.VIEW_SEQUENCE IS 
'Порядковый номер материала';

COMMENT ON COLUMN MF_BOM_MATERIAL.REPORT_SEQUENCE IS 
'Порядковый номер материала для печати';

COMMENT ON COLUMN MF_BOM_MATERIAL.PROBABLE IS 
'Вероятность включения';

COMMENT ON COLUMN MF_BOM_MATERIAL.QUANTITY_RATE_FLAG IS 
'Метод измерения расхода материалов
0 - на один час операции
1 - на единицу готовой продукции
2 - фиксированное количество на партию';

COMMENT ON COLUMN MF_BOM_MATERIAL.MTL_QTY IS 
'Применяемость материала';

COMMENT ON COLUMN MF_BOM_MATERIAL.SCRAP_FACTOR IS 
'Коэффициент брака';

COMMENT ON COLUMN MF_BOM_MATERIAL.MEASURE_ID IS 
'Ед.изм. применяемости материала';

COMMENT ON COLUMN MF_BOM_MATERIAL.MTL_COST_CATEGORY_ID IS 
'Идентификатор категории затрат на материал';

COMMENT ON COLUMN MF_BOM_MATERIAL.MTL_BACKFLUSH_FLAG IS 
'Признак обратного списания материалов';

COMMENT ON COLUMN MF_BOM_MATERIAL.BACKFLUSH_ZONE_ID IS 
'Идентификтор зоны склада обратного списания';

COMMENT ON COLUMN MF_BOM_MATERIAL.MTL_OH_ALLOCATION_FLAG IS 
'Метод начисления НР расходов на материал
0 - на единицу материала
1 - Коэффициетн от стоимости ресурса
2 - фиксированная стоимость на партию';

COMMENT ON COLUMN MF_BOM_MATERIAL.MTL_OH_RATE IS 
'Норма накладных расходов на материал';

COMMENT ON COLUMN MF_BOM_MATERIAL.CURRENCY_CODE IS 
'Валюта нормы НР на материал';

COMMENT ON COLUMN MF_BOM_MATERIAL.MTL_OH_RATIO IS 
'Коэффициент накладных расходов на материал';

COMMENT ON COLUMN MF_BOM_MATERIAL.MTL_OH_COST_CATEGORY_ID IS 
'Идентификатор категории затрат НР на материал';

COMMENT ON COLUMN MF_BOM_MATERIAL.MTL_OH_BACKFLUSH_FLAG IS 
'Признак обратного списания НР по материалу';

COMMENT ON COLUMN MF_BOM_ROUTE.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_BOM_ROUTE.BOM_ID IS 
'Идентификатор СИ';

COMMENT ON COLUMN MF_BOM_ROUTE.OPER_NUM IS 
'Номер операции';

COMMENT ON COLUMN MF_BOM_ROUTE.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN MF_BOM_ROUTE.EFF_ON_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN MF_BOM_ROUTE.EFF_OFF_DATE IS 
'Дата окончания действия';

COMMENT ON COLUMN MF_BOM_ROUTE.WC_ID IS 
'Идентификатор рабочего центра';

COMMENT ON COLUMN MF_BOM_ROUTE.EFFICIENCY IS 
'Коэффициент эффективности';

COMMENT ON COLUMN MF_BOM_ROUTE.MOVE_TICKS IS 
'Время перемещения между операциями';

COMMENT ON COLUMN MF_BOM_ROUTE.MOVE_TIME_UM IS 
'Ед.изм. времеми перемещения между операциями';

COMMENT ON COLUMN MF_BOM_ROUTE.SETUP_TICKS IS 
'Постоянная составляющая времени операции';

COMMENT ON COLUMN MF_BOM_ROUTE.SETUP_TIME_UM IS 
'Ед.изм. постоянной составляющей времени операции';

COMMENT ON COLUMN MF_BOM_ROUTE.RUN_TICKS IS 
'Переменая составляющая времени операции';

COMMENT ON COLUMN MF_BOM_ROUTE.RUN_TIME_UM IS 
'Ед.изм. переменой составляющей времени операции';

COMMENT ON COLUMN MF_BOM_ROUTE.SCHED_TICKS IS 
'Не зависящее от размера партии время выполнения операции';

COMMENT ON COLUMN MF_BOM_ROUTE.SCHED_TIME_UM IS 
'Ед.изм. времени выполнения операции не зависящее от размера партии';

COMMENT ON COLUMN MF_BOM_ROUTE.SCHED_OFFSET_TICKS IS 
'Время смещения между нач.пред.опер. и нач.тек.операции';

COMMENT ON COLUMN MF_BOM_ROUTE.SCHED_OFFSET_TIME_UM IS 
'Ед.изм. времи смещения между нач.пред.опер. и нач.тек.операции';

COMMENT ON COLUMN MF_BOM_ROUTE.QUEUE_TICKS IS 
'Запранированное время ожидания';

COMMENT ON COLUMN MF_BOM_ROUTE.QUEUE_TIME_UM IS 
'Ед.изм.запранированного времи ожидания';

COMMENT ON COLUMN MF_BOM_ROUTE.CONTROL_POINT_FLAG IS 
'Признак контрольной точки';

COMMENT ON COLUMN MF_BOM_ROUTE.STD_COST_DETAIL_ID IS 
'Идентификатор расшифровки стоимости';

COMMENT ON COLUMN MF_BOM_ROUTE.COMMENT IS 
'Примечание';

COMMENT ON COLUMN MF_BOM_ROUTE_RESOURCE.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_BOM_ROUTE_RESOURCE.RESOURCE_GROUP_ID IS 
'Идентификатор группы ресурсов';

COMMENT ON COLUMN MF_BOM_ROUTE_RESOURCE.BOM_OPER_ID IS 
'Идентификатор операции';

COMMENT ON COLUMN MF_BOM_ROUTE_RESOURCE.RESOURCE_TYPE IS 
'Тип ресурса';

COMMENT ON COLUMN MF_BOM_ROUTE_RESOURCE.TIME_SEQUENCE IS 
'Номер временного интервала';

COMMENT ON COLUMN MF_BOM_ROUTE_RESOURCE.EFF_ON_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN MF_BOM_ROUTE_RESOURCE.EFF_OFF_DATE IS 
'Дата окончания действия';

COMMENT ON COLUMN MF_BOM_ROUTE_RESOURCE.STD_COST_DETAIL_ID IS 
'Идентификатор нормативных значений статей затрат';

COMMENT ON COLUMN MF_BOM_ROUTE_RESOURCE.COMMENT IS 
'Примечание';

COMMENT ON COLUMN MF_CELL.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_CELL.WEEK_CAL_ID IS 
'Идентификатор недельного календаря';

COMMENT ON COLUMN MF_CELL.CELL_NAME IS 
'Наименование производственной линии';

COMMENT ON COLUMN MF_CELL.BOTTLE_NECK_WC_ID IS 
'Идентификатор рабочего центра, являющегося узким местом';

COMMENT ON COLUMN MF_CELL.CAPACITY_FACTOR IS 
'Коэффициент приведения календарей';

COMMENT ON COLUMN MF_CELL.COMMENT IS 
'Примечание';

COMMENT ON COLUMN MF_CONFIG.TICK_UM IS 
'Ед.изм. тика';

COMMENT ON COLUMN MF_CONFIG.MAIN_TIME_UM IS 
'Ед.изм. времени';

COMMENT ON COLUMN MF_CONFIG.BASE_CURRENCY IS 
'Базовая валюта';

COMMENT ON COLUMN MF_CONFIG.NAT_CURRENCY IS 
'Нацоинальная валюта';

COMMENT ON COLUMN MF_CONFIG.CURRENCY_RATE_AUTHORITY IS 
'Источник курса';

COMMENT ON COLUMN MF_CONFIG.CURRENCY_RATE_TYPE IS 
'Тип курса';

COMMENT ON COLUMN MF_CONFIG.CURRENCY_PREC IS 
'Точность денежных вычислений';

COMMENT ON COLUMN MF_CONFIG.INPUT_MATERIAL_MODEL_BF IS 
'Ижентификатор образца акта по обратному списанию материалов';

COMMENT ON COLUMN MF_CONFIG.INPUT_LABOR_MODEL_BF IS 
'Ижентификатор образца акта по обратному списанию времени работы рабочей силы';

COMMENT ON COLUMN MF_CONFIG.INPUT_MACHINE_MODEL_BF IS 
'Ижентификатор образца акта по обратному списанию времени работы оборудования';

COMMENT ON COLUMN MF_CONFIG.LABOR_TIME IS 
'Время работы рабочей силы (позиция КТУ)';

COMMENT ON COLUMN MF_CONFIG.MACHINE_TIME IS 
'Время работы оборудования (позиция КТУ)';

COMMENT ON COLUMN MF_CONFIG.MATERIAL_OVERHEAD IS 
'Накладные расходы на материалы (позиция КТУ)';

COMMENT ON COLUMN MF_CONFIG.LABOR_OVERHEAD IS 
'Накладные расходы на время работы рабочей силы (позиция КТУ)';

COMMENT ON COLUMN MF_CONFIG.MACHINE_OVERHEAD IS 
'Накладные расходы на время работы оборудования (позиция КТУ)';

COMMENT ON COLUMN MF_CONFIG.PURCHASE_ORDER_MODEL_MRP_REC IS 
'Идентификатор образца заказа поставщику для рекомендаций ППМ';

COMMENT ON COLUMN MF_CONFIG.SCRAP_MATERIAL_MODEL IS 
'Идентификатор образца акта на списание потерь материалов';

COMMENT ON COLUMN MF_CONFIG.SCRAP_LABOR_MODEL IS 
'Идентификатор образца акта на списание потерь времени работы рабочей силы';

COMMENT ON COLUMN MF_CONFIG.SCRAP_MACHINE_MODEL IS 
'Идентификатор образца акта на списание потерь времени работы оборудования';

COMMENT ON COLUMN MF_CONFIG.VARIANCE_DOCUMENT_MODEL IS 
'Идентификатор образца документа по отклонениям';

COMMENT ON COLUMN MF_COST_CATEGORIES.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_COST_CATEGORIES.CODE IS 
'Код';

COMMENT ON COLUMN MF_COST_CATEGORIES.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN MF_COST_CATEGORIES.VIEW_ORDER IS 
'Порядок сортировки при просмотре';

COMMENT ON COLUMN MF_COST_CATEGORIES.CALCULATION_SEQUENCE IS 
'Порядок расчета';

COMMENT ON COLUMN MF_COST_CATEGORIES.FORMULA_ID IS 
'Идентификатор алгоритма расчета';

COMMENT ON COLUMN MF_COST_DETAIL.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_COST_DETAIL_LINE.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_COST_DETAIL_LINE.COST_DETAIL_ID IS 
'Идентификатор расшифровки стоимости';

COMMENT ON COLUMN MF_COST_DETAIL_LINE.COST_CATEGORIES_ID IS 
'Идентификатор категории затрат';

COMMENT ON COLUMN MF_COST_DETAIL_LINE.SUMMA IS 
'Сумма';

COMMENT ON COLUMN MF_COST_DETAIL_LINE.CURRENCY_CODE IS 
'Валюта';

COMMENT ON COLUMN MF_CREW.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_CREW.CODE IS 
'Код';

COMMENT ON COLUMN MF_CREW.NAME IS 
'Наименование';

COMMENT ON COLUMN MF_DAY_CAL.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_DAY_CAL.CODE IS 
'Код';

COMMENT ON COLUMN MF_DAY_CAL.DAY_CAL_NAME IS 
'Наименование';

COMMENT ON COLUMN MF_DAY_TIME.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_DAY_TIME.DAY_CAL_ID IS 
'Идентификатор дневного календаря';

COMMENT ON COLUMN MF_DAY_TIME.START_TICK IS 
'Начало времени отчета';

COMMENT ON COLUMN MF_DAY_TIME.TICKS IS 
'Длительность';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD.OUTPUT_DOC_HEAD_ID IS 
'Идентификатор акта выпуска готовой продукции';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD.BACKFLUSH_FLAG IS 
'Обратное списание';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD.WC_ID IS 
'Идентификатор рабочего центра, выполнивший заказ-наряд на производство';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD.JOB_ID IS 
'Идентификатор ЗНП, по которому формируется документ';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD.OPER_ID IS 
'Идентификатор операции ЗНП, по которой формируется документ';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD.CREW_ID IS 
'Идентификатор бригады';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD.EMPLOYEE_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD_MODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD_MODEL.OUTPUT_DOC_HEAD_ID IS 
'Идентификатор акта выпуска готовой продукции';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD_MODEL.BACKFLUSH_FLAG IS 
'Обратное списание';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD_MODEL.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD_MODEL.WC_ID IS 
'Идентификатор рабочего центра, выполнивший заказ-наряд на производство';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD_MODEL.JOB_ID IS 
'Идентификатор ЗНП, по которому формируется документ';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD_MODEL.OPER_ID IS 
'Идентификатор операции ЗНП, по которой формируется документ';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD_MODEL.CREW_ID IS 
'Идентификатор бригады';

COMMENT ON COLUMN MF_INPUT_DOC_HEAD_MODEL.EMPLOYEE_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN MF_INPUT_DOC_SPEC.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN MF_INPUT_DOC_SPEC.JOB_ROUTE_RESOURCE_ID IS 
'Идентификатор потребляемого на операции ЗНП ресурса';

COMMENT ON COLUMN MF_INPUT_DOC_SPEC.COST_CATEGORY_ID IS 
'Идентификатор категории затрат';

COMMENT ON COLUMN MF_JOB.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_JOB.DEF_SRC_STOCK_ID IS 
'Идентификатор склада-источника для материалов';

COMMENT ON COLUMN MF_JOB.DEF_DST_STOCK_ID IS 
'Идентификатор склада-приемника для готовой продукции';

COMMENT ON COLUMN MF_JOB.DEF_SRC_MOL_ID IS 
'Идентификатор МОЛ склада-источника для материалов';

COMMENT ON COLUMN MF_JOB.DEF_DST_MOL_ID IS 
'Идентификатор МОЛ склада-приемника для готовой продукции';

COMMENT ON COLUMN MF_JOB.JOB_NUMBER IS 
'Номер ЗНП';

COMMENT ON COLUMN MF_JOB.JOB_DATE IS 
'Дата ЗНП';

COMMENT ON COLUMN MF_JOB.JOB_STATUS IS 
'Статус ЗНП
0 - новый
1 - запущен
2 - остановлен
3 - завершен';

COMMENT ON COLUMN MF_JOB.FOLDER_ID IS 
'Идентификатор папки ЗНП';

COMMENT ON COLUMN MF_JOB.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN MF_JOB.QTY_RELEASED IS 
'Запущенное количество';

COMMENT ON COLUMN MF_JOB.QTY_COMPLETE IS 
'Изготовленное количество';

COMMENT ON COLUMN MF_JOB.QTY_SCRAPPED IS 
'Отбракованное количество';

COMMENT ON COLUMN MF_JOB.PARENT_JOB_ID IS 
'Идентификатор родительского ЗНП';

COMMENT ON COLUMN MF_JOB.ROOT_JOB_ID IS 
'Идентификатор корневого ЗНП';

COMMENT ON COLUMN MF_JOB.STD_COST_DETAIL_ID IS 
'Идентификатор расшифровки стоимости';

COMMENT ON COLUMN MF_JOB.ACT_WIP_COST_DETAIL_ID IS 
'Идентификатор расшифровки фактической стоимости';

COMMENT ON COLUMN MF_JOB.ROLLUP_DATETIME IS 
'Дата и время последнего замещения стоиости';

COMMENT ON COLUMN MF_JOB.START_DATE IS 
'Планируемая дата запуска';

COMMENT ON COLUMN MF_JOB.END_DATE IS 
'Планируемая дата окончания';

COMMENT ON COLUMN MF_JOB.START_TICK IS 
'Не используется';

COMMENT ON COLUMN MF_JOB.END_TICK IS 
'Не используется';

COMMENT ON COLUMN MF_JOB.START_JOB IS 
'Планируемое время запуска в тиках от начала дня';

COMMENT ON COLUMN MF_JOB.FINISH_JOB IS 
'Планируемое время окончания в тиках от начала дня';

COMMENT ON COLUMN MF_JOB.SCHED_DIRECTION IS 
'Направление планирования
0 - вперед
1 - назад';

COMMENT ON COLUMN MF_JOB.USE_MOVE_TIMES IS 
'Учитывать времена перемещений';

COMMENT ON COLUMN MF_JOB.USE_QUEUE_TIMES IS 
'Учитывать время в очереди';

COMMENT ON COLUMN MF_JOB.USE_FINITE_CAPACITY IS 
'Планировать в ограниченных мощностях';

COMMENT ON COLUMN MF_JOB.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN MF_JOB.PRIORITY_FREEZE_FLAG IS 
'Признак фиксации приоритета';

COMMENT ON COLUMN MF_JOB.MRP_END_DATE IS 
'Конечная дата завершения согласно MRP';

COMMENT ON COLUMN MF_JOB.CELL_ID IS 
'Идентификатор производственной линии';

COMMENT ON COLUMN MF_JOB.CHANGE_JOB_APPROVED IS 
'Разрешать изменять СИ ЗНП';

COMMENT ON COLUMN MF_JOB.COMMENT IS 
'Примечание';

COMMENT ON COLUMN MF_JOB_LABOR.JOB_ROUTE_RESOURCE_ID IS 
'Идентификатор группы ресурсов';

COMMENT ON COLUMN MF_JOB_LABOR.TIME_RATE_FLAG IS 
'Метод измерени ярасхода
0 - время на единицу готовой продукции
1 - единиц готовой продукции на время
2 - фиксированное время на партию';

COMMENT ON COLUMN MF_JOB_LABOR.RUN_TICKS_LBR IS 
'Время работы рабочей силы';

COMMENT ON COLUMN MF_JOB_LABOR.RUN_TIME_LBR_UM IS 
'Ед.изм. времени работы РС';

COMMENT ON COLUMN MF_JOB_LABOR.LBR_NUMBER IS 
'Коэффициент умножения мощности';

COMMENT ON COLUMN MF_JOB_LABOR.LBR_RATE IS 
'Норма на один час работы';

COMMENT ON COLUMN MF_JOB_LABOR.LBR_COST_CATEGORY_ID IS 
'Категория затрат на рабочую силу';

COMMENT ON COLUMN MF_JOB_LABOR.LBR_RATE_CUR_CODE IS 
'Код валюты нормы на один час работы';

COMMENT ON COLUMN MF_JOB_LABOR.LBR_BACKFLUSH_FLAG IS 
'Флаг обратного списания возмещения стоимости';

COMMENT ON COLUMN MF_JOB_LABOR.LBR_OH_ALLOCATION_FLAG IS 
'Метод начисления НР
0 - на единицу времени
1 - на единицу готовой продукции
2 - процент от стоиомсти работ
3 - фиксированная стоимость';

COMMENT ON COLUMN MF_JOB_LABOR.LBR_OH_RATE IS 
'Норма накладных расходов';

COMMENT ON COLUMN MF_JOB_LABOR.LBR_OH_RATE_CUR_CODE IS 
'Код валюты нормы НР';

COMMENT ON COLUMN MF_JOB_LABOR.LBR_OH_RATIO IS 
'Коэффициент накладных расходов';

COMMENT ON COLUMN MF_JOB_LABOR.LBR_OH_COST_CATEGORY_ID IS 
'Категория затрат НР на РС';

COMMENT ON COLUMN MF_JOB_LABOR.LBR_OH_BACKFLUSH_FLAG IS 
'Признак обратного списания';

COMMENT ON COLUMN MF_JOB_MACHINE.JOB_ROUTE_RESOURCE_ID IS 
'Идентификатор группы ресурсов';

COMMENT ON COLUMN MF_JOB_MACHINE.TIME_RATE_FLAG IS 
'Метод измерения расхода времени
0 - на единицу ГП
1 - единиц ГП на время
2 - фиксированное время на партию ГП';

COMMENT ON COLUMN MF_JOB_MACHINE.RUN_TICKS_MCH IS 
'Время работы оборудования';

COMMENT ON COLUMN MF_JOB_MACHINE.RUN_TIME_MCH_UM IS 
'Ед.изм. времени работы оборудования';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_NUMBER IS 
'Коэффициент умножения мощности';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_RECOVERY_FLAG IS 
'Метод начисления возмещения стоимости
0 - на один час операции
1 - на единицу ГП
2 - фиксированная стоимость на партию ГП';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_RATE IS 
'Норма возмещения стоимости';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_RATE_CUR_CODE IS 
'Валяла нормы на возмещение стоимости';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_COST_CATEGORY_ID IS 
'Идентификатор категории затрат на оборудование';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_BACKFLUSH_FLAG IS 
'Флаг обратного списания возмещения стоимости';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_OH_ALLOCATION_FLAG IS 
'Метод начисления НР
0 - на 1 час операции
1 - на единицу готовой продукции
2 - процент от стоимости работы
3 - фиксированная стоимочсть на паритию ГП';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_OH_RATE IS 
'Норма НР на оборудование';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_OH_RATE_CUR_CODE IS 
'Валюта норма на оборудование';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_OH_RATIO IS 
'Коэффициент накладных расходов';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_OH_COST_CATEGORY_ID IS 
'Идентификатор категории затрат НР на материал';

COMMENT ON COLUMN MF_JOB_MACHINE.MCH_OH_BACKFLUSH_FLAG IS 
'Признак обратного списания';

COMMENT ON COLUMN MF_JOB_MATERIAL.JOB_ROUTE_RESOURCE_ID IS 
'Идентификатор группы ресурсов';

COMMENT ON COLUMN MF_JOB_MATERIAL.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN MF_JOB_MATERIAL.REVISION IS 
'Версия СИ';

COMMENT ON COLUMN MF_JOB_MATERIAL.VIEW_SEQUENCE IS 
'Порядковый номер материала';

COMMENT ON COLUMN MF_JOB_MATERIAL.REPORT_SEQUENCE IS 
'Порядковый номер материала для печати';

COMMENT ON COLUMN MF_JOB_MATERIAL.QUANTITY_RATE_FLAG IS 
'Метод измерения расхода материалов
0 - на один час операции
1 - на единицу готовой продукции
2 - фиксированное количество на партию';

COMMENT ON COLUMN MF_JOB_MATERIAL.MTL_QTY IS 
'Применяемость материала';

COMMENT ON COLUMN MF_JOB_MATERIAL.SCRAP_FACTOR IS 
'Коэффициент брака';

COMMENT ON COLUMN MF_JOB_MATERIAL.MEASURE_ID IS 
'Ед.изм. применяемости материала';

COMMENT ON COLUMN MF_JOB_MATERIAL.MTL_COST_CATEGORY_ID IS 
'Идентификатор категории затрат на материал';

COMMENT ON COLUMN MF_JOB_MATERIAL.MTL_BACKFLUSH_FLAG IS 
'Признак обратного списания материалов';

COMMENT ON COLUMN MF_JOB_MATERIAL.BACKFLUSH_ZONE_ID IS 
'Идентификтор зоны склада обратного списания';

COMMENT ON COLUMN MF_JOB_MATERIAL.MTL_OH_ALLOCATION_FLAG IS 
'Метод начисления НР расходов на материал
0 - на единицу материала
1 - Коэффициетн от стоимости ресурса
2 - фиксированная стоимость на партию';

COMMENT ON COLUMN MF_JOB_MATERIAL.MTL_OH_RATE IS 
'Норма накладных расходов на материал';

COMMENT ON COLUMN MF_JOB_MATERIAL.CURRENCY_CODE IS 
'Валюта нормы НР на материал';

COMMENT ON COLUMN MF_JOB_MATERIAL.MTL_OH_RATIO IS 
'Коэффициент накладных расходов на материал';

COMMENT ON COLUMN MF_JOB_MATERIAL.MTL_OH_COST_CATEGORY_ID IS 
'Идентификатор категории затрат НР на материал';

COMMENT ON COLUMN MF_JOB_MATERIAL.MTL_OH_BACKFLUSH_FLAG IS 
'Признак обратного списания НР по материалу';

COMMENT ON COLUMN MF_JOB_ROUTE.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_JOB_ROUTE.JOB_ID IS 
'Идентификатор ЗНП';

COMMENT ON COLUMN MF_JOB_ROUTE.OPER_NUM IS 
'Номер операции';

COMMENT ON COLUMN MF_JOB_ROUTE.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN MF_JOB_ROUTE.EFF_ON_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN MF_JOB_ROUTE.EFF_OFF_DATE IS 
'Дата окончания действия';

COMMENT ON COLUMN MF_JOB_ROUTE.WC_ID IS 
'Идентификатор рабочего центра';

COMMENT ON COLUMN MF_JOB_ROUTE.COMPLETE_FLAG IS 
'Признак завершающей операции';

COMMENT ON COLUMN MF_JOB_ROUTE.EFFICIENCY_FACTOR IS 
'Процент эффективности';

COMMENT ON COLUMN MF_JOB_ROUTE.START_DATE IS 
'Запланированная дата запуска операции';

COMMENT ON COLUMN MF_JOB_ROUTE.END_DATE IS 
'Запланированная дата окончания операции';

COMMENT ON COLUMN MF_JOB_ROUTE.START_TICK IS 
'Запланированное время начала операции в тиках';

COMMENT ON COLUMN MF_JOB_ROUTE.END_TICK IS 
'Запланированное время окончания операции в тиках';

COMMENT ON COLUMN MF_JOB_ROUTE.MOVE_TICKS IS 
'Время перемещения между операциями';

COMMENT ON COLUMN MF_JOB_ROUTE.MOVE_TIME_UM IS 
'Ед.изм. времеми перемещения между операциями';

COMMENT ON COLUMN MF_JOB_ROUTE.SETUP_TICKS IS 
'Постоянная составляющая времени операции';

COMMENT ON COLUMN MF_JOB_ROUTE.SETUP_TIME_UM IS 
'Ед.изм. постоянной составляющей времени операции';

COMMENT ON COLUMN MF_JOB_ROUTE.RUN_TICKS IS 
'Переменая составляющая времени операции';

COMMENT ON COLUMN MF_JOB_ROUTE.RUN_TIME_UM IS 
'Ед.изм. переменой составляющей времени операции';

COMMENT ON COLUMN MF_JOB_ROUTE.SCHED_TICKS IS 
'Не зависящее от размера партии время выполнения операции';

COMMENT ON COLUMN MF_JOB_ROUTE.SCHED_TIME_UM IS 
'Ед.изм. времени выполнения операции не зависящее от размера партии';

COMMENT ON COLUMN MF_JOB_ROUTE.SCHED_OFFSET_TICKS IS 
'Время смещения между нач.пред.опер. и нач.тек.операции';

COMMENT ON COLUMN MF_JOB_ROUTE.SCHED_OFFSET_TIME_UM IS 
'Ед.изм. времи смещения между нач.пред.опер. и нач.тек.операции';

COMMENT ON COLUMN MF_JOB_ROUTE.QUEUE_TICKS IS 
'Запранированное время ожидания';

COMMENT ON COLUMN MF_JOB_ROUTE.QUEUE_TIME_UM IS 
'Ед.изм.запранированного времи ожидания';

COMMENT ON COLUMN MF_JOB_ROUTE.FREEZE_SCHEDULE_FLAG IS 
'Признак замороженного плана';

COMMENT ON COLUMN MF_JOB_ROUTE.QTY_RECEIVED IS 
'Количество к выполнению';

COMMENT ON COLUMN MF_JOB_ROUTE.QTY_COMPLETE IS 
'Количество выпущенной годной продукции';

COMMENT ON COLUMN MF_JOB_ROUTE.QTY_SCRAPPED IS 
'Количество выпущенное забракованной продукции';

COMMENT ON COLUMN MF_JOB_ROUTE.QTY_MOVED IS 
'Количсетво переданное на следующую операцию';

COMMENT ON COLUMN MF_JOB_ROUTE.CONTROL_POINT_FLAG IS 
'Признак контрольной точки';

COMMENT ON COLUMN MF_JOB_ROUTE.STD_COST_DETAIL_ID IS 
'Идентификатор расшифровки стоимости';

COMMENT ON COLUMN MF_JOB_ROUTE.ACT_COST_DETAIL_ID IS 
'Идентификатор расшифровки фактической стоимости';

COMMENT ON COLUMN MF_JOB_ROUTE.COMMENT IS 
'Примечание';

COMMENT ON COLUMN MF_JOB_ROUTE_RESOURCE.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_JOB_ROUTE_RESOURCE.RESOURCE_GROUP_ID IS 
'Идентификатор группы ресурсов';

COMMENT ON COLUMN MF_JOB_ROUTE_RESOURCE.OPER_ID IS 
'Идентификатор операции';

COMMENT ON COLUMN MF_JOB_ROUTE_RESOURCE.RESOURCE_TYPE IS 
'Тип ресурса';

COMMENT ON COLUMN MF_JOB_ROUTE_RESOURCE.TIME_SEQUENCE IS 
'Номер временного интервала';

COMMENT ON COLUMN MF_JOB_ROUTE_RESOURCE.EFF_ON_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN MF_JOB_ROUTE_RESOURCE.EFF_OFF_DATE IS 
'Дата окончания действия';

COMMENT ON COLUMN MF_JOB_ROUTE_RESOURCE.STD_COST_DETAIL_ID IS 
'Идентификатор нормативных значений статей затрат';

COMMENT ON COLUMN MF_JOB_ROUTE_RESOURCE.ACT_COST_DETAIL_ID IS 
'Идентификатор фактических значений статей затрат';

COMMENT ON COLUMN MF_JOB_ROUTE_RESOURCE.COMMENT IS 
'Примечание';

COMMENT ON COLUMN MF_LABOR_CLASS.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_LABOR_CLASS.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN MF_LABOR_CLASS.TIME_RATE_FLAG IS 
'Метод измерения расхода
0 - время на единицу готовой продукции
1 - единиц готовой продукции на время
2 - фиксированное количество на партию готовой продукции';

COMMENT ON COLUMN MF_LABOR_CLASS.LBR_RATE IS 
'Норма оплаты работы рабочей силы за ед.изм. времени';

COMMENT ON COLUMN MF_LABOR_CLASS.LBR_TIME_UM IS 
'Ед.изм. времени для оплаты РС';

COMMENT ON COLUMN MF_LABOR_CLASS.LBR_RATE_CUR_CODE IS 
'Код валюты для нормы на единицу измерения времени работы РС';

COMMENT ON COLUMN MF_LABOR_CLASS.LBR_COST_CATEGORY_ID IS 
'Категория затрат на рабочую силу';

COMMENT ON COLUMN MF_LABOR_CLASS.LBR_OH_ALLOCATION_FLAG IS 
'Метод начисления НР на РС
0 - на единицу времени
1 - на единицу готовой продукции
2 - процент от стоимости работы
3 - фиксированная стоимость на партию';

COMMENT ON COLUMN MF_LABOR_CLASS.LBR_OH_RATE IS 
'Норма НР на РС на единицу измерения времения работы РС';

COMMENT ON COLUMN MF_LABOR_CLASS.LBR_OH_TIME_UM IS 
'Ед.изм. времени для ставки НР на РС';

COMMENT ON COLUMN MF_LABOR_CLASS.LBR_OH_RATE_CUR_CODE IS 
'Код валюты для нормы на НР на РС';

COMMENT ON COLUMN MF_LABOR_CLASS.LBR_OH_RATIO IS 
'Коэффициент НР на рабочую силу';

COMMENT ON COLUMN MF_LABOR_CLASS.LBR_OH_COST_CATEGORY_ID IS 
'Категория затрат НР на рабочую силы';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD.CONTRACTOR_ID IS 
'Идентификатор контрагента, изготовившего продукцию';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD.WC_ID IS 
'Идентификатор рабочего центра, на котором изготовлена продукция';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD.JOB_ID IS 
'Идентификатор ЗНП, по которому изготовлена продукция';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD.OPER_ID IS 
'Идентификатор операции ЗНП, на которой изготовлена продукция';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD.CREW_ID IS 
'Идентификатор бригады, изготовившей продукцию';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD.EMPLOYEE_ID IS 
'Идентификатор сотрудника, изготовившего продукцию';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD_MODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD_MODEL.CONTRACTOR_ID IS 
'Идентификатор контрагента, изготовившего продукцию';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD_MODEL.WC_ID IS 
'Идентификатор рабочего центра, на котором изготовлена продукция';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD_MODEL.JOB_ID IS 
'Идентификатор ЗНП, по которому изготовлена продукция';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD_MODEL.OPER_ID IS 
'Идентификатор операции ЗНП, на которой изготовлена продукция';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD_MODEL.CREW_ID IS 
'Идентификатор бригады, изготовившей продукцию';

COMMENT ON COLUMN MF_OUTPUT_DOC_HEAD_MODEL.EMPLOYEE_ID IS 
'Идентификатор сотрудника, изготовившего продукцию';

COMMENT ON COLUMN MF_RESOURCE_FAMILY.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_RESOURCE_FAMILY.PLANNING_LEVEL_ID IS 
'Идентификатор уровня планирвоания';

COMMENT ON COLUMN MF_RESOURCE_FAMILY.PARENT_RESOURCE_GROUP_ID IS 
'Идентификатор родительской группы ресурсов';

COMMENT ON COLUMN MF_RESOURCE_FAMILY.CHILD_RESOURCE_GROUP_ID IS 
'Идентификатор дочерней группы ресурсов';

COMMENT ON COLUMN MF_RESOURCE_GROUP.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_RESOURCE_GROUP.RESOURCE_GROUP_CODE IS 
'Код';

COMMENT ON COLUMN MF_RESOURCE_GROUP.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN MF_RESOURCE_GROUP.RESOURCE_TYPE IS 
'Тип ресурса
0 - материалы
1 - оборудование
2 - рабочая сила
3 - рабочий центр
4 - подразделения';

COMMENT ON COLUMN MF_RESOURCE_GROUP.LIMITED_RESOURCE_FLAG IS 
'Признак ограниченности ресурсов';

COMMENT ON COLUMN MF_RESOURCE_GROUP.CRITICAL_LEVEL_ID IS 
'Идентификатор критического уровня планирования';

COMMENT ON COLUMN MF_RESOURCE_GROUP.COMMENT IS 
'Примечание';

COMMENT ON COLUMN MF_RESOURCE_GROUP.MEASURE_ID IS 
'Единица измерения';

COMMENT ON COLUMN MF_RESOURCE_GROUP_CAPACITY.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_RESOURCE_GROUP_CAPACITY.PLANNING_CAPACITY IS 
'Плановая ескость ресурса';

COMMENT ON COLUMN MF_RESOURCE_GROUP_CAPACITY.MAXIMUM_CAPACITY IS 
'Максимальная емкость ресурса';

COMMENT ON COLUMN MF_RESOURCE_GROUP_CAPACITY.EFF_ON_DATE IS 
'Начало действия емкости';

COMMENT ON COLUMN MF_RESOURCE_GROUP_CAPACITY.EFF_OFF_DATE IS 
'Окончание действия емкости';

COMMENT ON COLUMN MF_RESOURCE_GROUP_CAPACITY.RESOURCE_GROUP_ID IS 
'Идентификатор группы ресурсов';

COMMENT ON COLUMN MF_ROUTE.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_ROUTE.CATALOG_ID IS 
'Позация каталога';

COMMENT ON COLUMN MF_ROUTE.VENDOR_ID IS 
'Идентификатор поставщика';

COMMENT ON COLUMN MF_ROUTE.SRC_TYPE IS 
'Тип источника товара
0 - закупка
1 - производство
2 - перемещение';

COMMENT ON COLUMN MF_ROUTE.SRC_CYCLE IS 
'Цикл источника';

COMMENT ON COLUMN MF_ROUTE.SRC_RANK IS 
'Ранг источника';

COMMENT ON COLUMN MF_ROUTE.SUPPLY_PERCENT IS 
'Процент покрытия потребности';

COMMENT ON COLUMN MF_ROUTE.DEST_TYPE IS 
'Тип приемника товара
0 - закупка
1 - производство
2 - перемещение';

COMMENT ON COLUMN MF_ROUTE.REORDER_MIN_QTY IS 
'Минимальный размер партии';

COMMENT ON COLUMN MF_ROUTE.CUSTOMER_ID IS 
'Идентификатор получатели';

COMMENT ON COLUMN MF_ROUTE.REORDER_LOT_SIZE IS 
'Размер партии';

COMMENT ON COLUMN MF_ROUTE.DEST_WAREHOUSE_ID IS 
'Идентификатор склада-получателя';

COMMENT ON COLUMN MF_ROUTE.DEST_CYCLE IS 
'Цикл приемника';

COMMENT ON COLUMN MF_ROUTE.QC_RECEIVING_DAYS IS 
'Количество дней на приемку по качеству';

COMMENT ON COLUMN MF_ROUTE.LEAD_TIME IS 
'Количество дней на обеспечение';

COMMENT ON COLUMN MF_ROUTE.SAFETY_DAYS IS 
'Количество дней для подстраховки';

COMMENT ON COLUMN MF_ROUTE.SRC_WAREHOUSE_ID IS 
'Идентификатор склада-поставщика';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.DETECT_CONTRACTOR_ID IS 
'Идентификатор контрагента, обнаружевшего потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.DETECT_WC_ID IS 
'Идентификатор рабочего центра, где обнаружемы потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.DETECT_JOB_ID IS 
'Идентификатор ЗНП, где обнаружемы потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.DETECT_OPER_ID IS 
'Идентификатор операции ЗНП, где обнаружемы потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.DETECT_CREW_ID IS 
'Идентификатор бригады, где обнаружены потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.DETECT_EMPLOYEE_ID IS 
'Идентификатор сотрудника, обнаружевшего потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.CAUSE_CONTRACTOR_ID IS 
'Идентификатор контрагента, виновника в появлении потерь';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.CAUSE_WC_ID IS 
'Идентификатор рабочего центра, выпустивший продукцию, по которой произошли потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.CAUSE_JOB_ID IS 
'Идентификатор ЗНП, по которому изготовлена бракованная продукция';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.CAUSE_OPER_ID IS 
'Идентификатор операции ЗНП, по которой изготовлена бракованная продукция';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.CAUSE_CREW_ID IS 
'Идентификатор бригады, выпустившая продукцию, по которой произошли потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.CAUSE_EMPLOYEE_ID IS 
'Идентификатор сотрудника, виновного в выпуске бракованной продукции';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.SCRAP_TYPE_ID IS 
'Идентификатор вида потерь';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD.SCRAP_REASON_ID IS 
'Идентификатор причины потерь';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.DETECT_CONTRACTOR_ID IS 
'Идентификатор контрагента, обнаружевшего потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.DETECT_WC_ID IS 
'Идентификатор рабочего центра, где обнаружемы потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.DETECT_JOB_ID IS 
'Идентификатор ЗНП, где обнаружемы потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.DETECT_OPER_ID IS 
'Идентификатор операции ЗНП, где обнаружемы потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.DETECT_CREW_ID IS 
'Идентификатор бригады, где обнаружены потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.DETECT_EMPLOYEE_ID IS 
'Идентификатор сотрудника, обнаружевшего потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.CAUSE_CONTRACTOR_ID IS 
'Идентификатор контрагента, виновника в появлении потерь';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.CAUSE_WC_ID IS 
'Идентификатор рабочего центра, выпустивший продукцию, по которой произошли потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.CAUSE_JOB_ID IS 
'Идентификатор ЗНП, по которому изготовлена бракованная продукция';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.CAUSE_OPER_ID IS 
'Идентификатор операции ЗНП, по которой изготовлена бракованная продукция';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.CAUSE_CREW_ID IS 
'Идентификатор бригады, выпустившая продукцию, по которой произошли потери';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.CAUSE_EMPLOYEE_ID IS 
'Идентификатор сотрудника, виновного в выпуске бракованной продукции';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.SCRAP_TYPE_ID IS 
'Идентификатор вида потерь';

COMMENT ON COLUMN MF_SCRAP_DOC_HEAD_MODEL.SCRAP_REASON_ID IS 
'Идентификатор причины потерь';

COMMENT ON COLUMN MF_SCRAP_DOC_SPEC.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN MF_SCRAP_DOC_SPEC.JOB_ROUTE_RESOURCE_ID IS 
'Идентификатор потребляемого на операции ЗНП ресурса';

COMMENT ON COLUMN MF_SCRAP_DOC_SPEC.COST_CATEGORY_ID IS 
'Идентификатор категории затрат';

COMMENT ON COLUMN MF_TRANSACTION.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_TRANSACTION.BACKFLUSH_FLAG IS 
'Признак обратного списания';

COMMENT ON COLUMN MF_TRANSACTION.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN MF_TRANSACTION.WC_ID IS 
'Идентификатор рабочего центра';

COMMENT ON COLUMN MF_TRANSACTION.JOB_ID IS 
'Идентификатор ЗНП';

COMMENT ON COLUMN MF_TRANSACTION.OPER_ID IS 
'Идентификатор операции';

COMMENT ON COLUMN MF_TRANSACTION.CREW_ID IS 
'Идентификатор бригады';

COMMENT ON COLUMN MF_TRANSACTION.EMPLOYEE_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN MF_TRANSACTION.DOCSPEC_ID IS 
'Идентификатор строки спецификации';

COMMENT ON COLUMN MF_TRANSACTION.JOB_ROUTE_RESOURCE_ID IS 
'Идентификатор ресурса';

COMMENT ON COLUMN MF_TRANSACTION.COST_CATEGORY_ID IS 
'Идентификатор категории затрат';

COMMENT ON COLUMN MF_TRANSACTION.QUANTITY IS 
'Количество';

COMMENT ON COLUMN MF_TRANSACTION.SUMMA IS 
'Сумма';

COMMENT ON COLUMN MF_VARIANCE_DOC_HEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN MF_VARIANCE_DOC_HEAD.WC_ID IS 
'Идентификатор рабочего центра';

COMMENT ON COLUMN MF_VARIANCE_DOC_HEAD.JOB_ID IS 
'Идентификатор ЗНП';

COMMENT ON COLUMN MF_VARIANCE_DOC_HEAD_MODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN MF_VARIANCE_DOC_HEAD_MODEL.WC_ID IS 
'Идентификатор рабочего центра';

COMMENT ON COLUMN MF_VARIANCE_DOC_HEAD_MODEL.JOB_ID IS 
'Идентификатор ЗНП';

COMMENT ON COLUMN MF_VARIANCE_DOC_SPEC.DOCSPEC_ID IS 
'Идентификатор спецификации документов';

COMMENT ON COLUMN MF_VARIANCE_DOC_SPEC.COST_CATEGORY_ID IS 
'Идентификатор категории затрат';

COMMENT ON COLUMN MF_VARIANCE_DOC_SPEC.VARIANCE_TYPE IS 
'Тип отклонения';

COMMENT ON COLUMN MF_WC_RATES.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_WC_RATES.WC_ID IS 
'Идентификатор рачочего центра';

COMMENT ON COLUMN MF_WC_RATES.EFF_ON_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN MF_WC_RATES.EFF_OFF_DATE IS 
'Дата окончания действия';

COMMENT ON COLUMN MF_WC_RATES.MCH_FOH_RATE IS 
'Норма постоянных накладных расходов на оборудование';

COMMENT ON COLUMN MF_WC_RATES.MCH_VOH_RATE IS 
'Норма переменных накладных расходов на оборудование';

COMMENT ON COLUMN MF_WC_RATES.LBR_RUN_RATE IS 
'Норма оплаты труда РС на операциях';

COMMENT ON COLUMN MF_WC_RATES.LBR_SETUP_RATE IS 
'Норма оплаты труда РС на настройках';

COMMENT ON COLUMN MF_WC_RATES.LBR_FOH_RATE IS 
'Норма постоянных накладных расходов для РС';

COMMENT ON COLUMN MF_WC_RATES.LBR_VOH_RATE IS 
'Норма переменных накладных расходов для РС';

COMMENT ON COLUMN MF_WEEK_CAL.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_WEEK_CAL.CODE IS 
'Код';

COMMENT ON COLUMN MF_WEEK_CAL_CHANGE.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_WEEK_CAL_CHANGE.WEEK_CAL_ID IS 
'Идентификатор недельного календаря';

COMMENT ON COLUMN MF_WEEK_CAL_CHANGE.EFF_ON_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN MF_WEEK_CAL_CHANGE.EFF_OFF_DATE IS 
'Дата окончания действия';

COMMENT ON COLUMN MF_WEEK_CAL_CHANGE.DAY_CAL_MON IS 
'Идентификатор дневного календаря для понедельника';

COMMENT ON COLUMN MF_WEEK_CAL_CHANGE.DAY_CAL_TUE IS 
'Идентификатор дневного календаря для вторника';

COMMENT ON COLUMN MF_WEEK_CAL_CHANGE.DAY_CAL_WED IS 
'Идентификатор дневного календаря для среды';

COMMENT ON COLUMN MF_WEEK_CAL_CHANGE.DAY_CAL_THU IS 
'Идентификатор дневного календаря для четверга';

COMMENT ON COLUMN MF_WEEK_CAL_CHANGE.DAY_CAL_FRI IS 
'Идентификатор дневного календаря для пятницы';

COMMENT ON COLUMN MF_WEEK_CAL_CHANGE.DAY_CAL_SAT IS 
'Идентификатор дневного календаря для субботы';

COMMENT ON COLUMN MF_WEEK_CAL_CHANGE.DAY_CAL_SUN IS 
'Идентификатор дневного календаря для воскресенья';

COMMENT ON COLUMN MF_WORK_CENTER.ID IS 
'Идентификатор';

COMMENT ON COLUMN MF_WORK_CENTER.WC_CODE IS 
'Код';

COMMENT ON COLUMN MF_WORK_CENTER.WC_NAME IS 
'Наименование';

COMMENT ON COLUMN MF_WORK_CENTER.CELL_ID IS 
'Идентификатор производственной линии';

COMMENT ON COLUMN MF_WORK_CENTER.WEEK_CAL_ID IS 
'Идентификатор недельного календаря';

COMMENT ON COLUMN MF_WORK_CENTER.EFFICIENCY IS 
'Процент эффективности';

COMMENT ON COLUMN MF_WORK_CENTER.UTILIZATION IS 
'Процент использования';

COMMENT ON COLUMN MF_WORK_CENTER.CAPACITY_PLAN IS 
'Признак создания записей о загрузке';

COMMENT ON COLUMN MF_WORK_CENTER.CAPACITY_SCHEDULE IS 
'Признак ограниченности по мощности';

COMMENT ON COLUMN MF_WORK_CENTER.MCH_FLAG IS 
'Признак планирования по оборудованию';

COMMENT ON COLUMN MF_WORK_CENTER.MCH_NUMBER IS 
'Коэффициент по оборудованию';

COMMENT ON COLUMN MF_WORK_CENTER.LBR_FLAG IS 
'Признак планирования по рабочей силе';

COMMENT ON COLUMN MF_WORK_CENTER.LBR_NUMBER IS 
'Коэффициет по рабочей силе';

COMMENT ON COLUMN MF_WORK_CENTER.SCH_TOLERANCE IS 
'Допустимый процент отклонения по времени';

COMMENT ON COLUMN MF_WORK_CENTER.QUEUE_TICKS IS 
'Время в очереди (ч)';

COMMENT ON COLUMN MF_WORK_CENTER.MCH_RUN_TOTAL_HRS IS 
'Всего отработыно оборудованием';

COMMENT ON COLUMN MF_WORK_CENTER.LBR_SETUP_TOTAL_HRS IS 
'Всего отработано рабочей силой на настройке';

COMMENT ON COLUMN MF_WORK_CENTER.LBR_RUN_TOTAL_HRS IS 
'Всего отработано рабочей силой на операциях';

COMMENT ON COLUMN MF_WORK_CENTER.QUEUE_TOTAL_QTY IS 
'Время в очереди (шт)';

COMMENT ON COLUMN MF_WORK_CENTER.QUEUE_AVG_HRS IS 
'Среднее время в очереди';

COMMENT ON COLUMN MF_WORK_CENTER.OUTSIDE_FLAG IS 
'Признак субподряда';

COMMENT ON COLUMN MF_WORK_CENTER.CONTRACTOR_ID IS 
'Идентификатор подразделения';

COMMENT ON COLUMN MF_WORK_CENTER.MCH_BACKFLUSH_FLAG IS 
'Признак обратного списания по оборудованию';

COMMENT ON COLUMN MF_WORK_CENTER.LBR_BACKFLUSH_FLAG IS 
'Признак обратного списания по рабочей силе';

COMMENT ON COLUMN MF_WORK_CENTER.MCH_BASE_OH_FLAG IS 
'Признак начисления накладных расходов по оборудованию';

COMMENT ON COLUMN MF_WORK_CENTER.LBR_BASE_OH_FLAG IS 
'Признак начисления накладных расходов по рабочей силе';

COMMENT ON COLUMN MF_WORK_CENTER.MTL_BASE_OH_FLAG IS 
'Признак начисления накладных расходов по материалам';

COMMENT ON COLUMN MF_WORK_CENTER.CONTROL_POINT_FLAG IS 
'Признак контрольной точки';

COMMENT ON COLUMN MF_WORK_CENTER.WIP_LBR_TOTAL IS 
'Рабочая сила в НЗП';

COMMENT ON COLUMN MF_WORK_CENTER.WIP_MTL_TOTAL IS 
'Материалы в НЗП';

COMMENT ON COLUMN MF_WORK_CENTER.WIP_FOH_TOTAL IS 
'Постоянные НР в НЗП';

COMMENT ON COLUMN MF_WORK_CENTER.WIP_VOH_TOTAL IS 
'Переменные НР в НЗП';

COMMENT ON COLUMN MF_WORK_CENTER.WIP_OUT_TOTAL IS 
'Субподряд в НЗП';

COMMENT ON COLUMN MF_WORK_CENTER.LBR_SETUP_AVG_RATE IS 
'Средняя стоимость рабочей силы на настройке';

COMMENT ON COLUMN MF_WORK_CENTER.LBR_RUN_AVG_RATE IS 
'Средняя стоимость рабочей силы на операциях';

COMMENT ON COLUMN MF_WORK_CENTER.STD_COST_DETAIL_ID IS 
'Идентификатор расшифровки стоимости';

COMMENT ON COLUMN MF_WORK_CENTER.ACT_COST_DETAIL_ID IS 
'Идентификатор расшифровки фактической стоимости';

COMMENT ON COLUMN MF_WORK_CENTER.COMMENT IS 
'Примечание';

COMMENT ON COLUMN MF_WORK_CENTER.RESOURCE_GROUP_ID IS 
'Группа ресурсов';

COMMENT ON COLUMN OKDP.UPCODE IS 
'Код ОКДП в вернем регистре
';

COMMENT ON COLUMN OKDP.CODE IS 
'Код ОКДП
';

COMMENT ON COLUMN OKDP.ONAME IS 
'Полное наименование кода ОКДП
';

COMMENT ON COLUMN OKOF.UPCODE IS 
'Код ОКОФ в верхнем регистре
';

COMMENT ON COLUMN OKOF.CODE IS 
'Код ОКОФ
';

COMMENT ON COLUMN OKOF.OKOFNAME IS 
'Полное наименование кода ОКОФ
';

COMMENT ON COLUMN OKOF.ID IS 
'Идентификатор';

COMMENT ON COLUMN OLAP_DATAPUMP.ID IS 
'Идентификатор';

COMMENT ON COLUMN OLAP_DATAPUMP.PUMPNAME IS 
'Наименование';

COMMENT ON COLUMN OLAP_DATAPUMP.OLAPDB_TYPE IS 
'Тип базы данных:
0 - Interbase
1 - Oracle';

COMMENT ON COLUMN OLAP_DATAPUMP.OLAPDB_NAME IS 
'Имя базы данных';

COMMENT ON COLUMN OLAP_DATAPUMP.OLAPDB_USER IS 
'Пользователь базы данных';

COMMENT ON COLUMN OLAP_DATAPUMP.OLAPDB_PASSWORD IS 
'Пароль';

COMMENT ON COLUMN OLAP_DATAPUMP.CREATE_ALG_ID IS 
'Ид. алгоритма создания метаданных';

COMMENT ON COLUMN OLAP_DATAPUMP.DELETE_ALG_ID IS 
'Ид. алгоритма удаления метаданных';

COMMENT ON COLUMN OLAP_DATAPUMP.PUMP_ALG_ID IS 
'Ид. алгоритма закачки данных';

COMMENT ON COLUMN OLAP_DATAPUMP.CLEAR_ALG_ID IS 
'Ид. алгоритма удаления данных';

COMMENT ON COLUMN ORDERHEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN ORDERHEAD.SUMMACUR_WITH_DISCOUNT IS 
'Сумма без скидки/наценки в валюте';

COMMENT ON COLUMN ORDERHEAD.SUMMANAT_WITH_DISCOUNT IS 
'Сумма без скидки/наценки';

COMMENT ON COLUMN ORDERHEAD.ADD_EXPENSES IS 
'Сумма дополнительных расходов';

COMMENT ON COLUMN ORDERHEAD.DISCOUNT_ON_DOC IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN ORDERHEAD.DISCOUNT_ON_LINE IS 
'Скидка/наценка по строкам спецификации';

COMMENT ON COLUMN ORDERHEAD.DUEDATE_KIND IS 
'Срок выполнения заказа, единица измерения';

COMMENT ON COLUMN ORDERHEAD.DUEDATE_QUAN IS 
'Срок выполнения заказа, количество единиц';

COMMENT ON COLUMN ORDERHEAD.DUEDATE IS 
'Дата выполнения';

COMMENT ON COLUMN ORDERHEAD.CREDITTERM IS 
'Количество дней просрочки';

COMMENT ON COLUMN ORDERHEAD.PENALTY IS 
'% штрафа';

COMMENT ON COLUMN ORDERHEAD.COMMENT IS 
'Дополнения';

COMMENT ON COLUMN ORDERHEAD.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN ORDERHEAD.CONSUMER IS 
'Потребитель';

COMMENT ON COLUMN ORDERHEAD.FIXED_INPUT IS 
'Поступления зафиксированы';

COMMENT ON COLUMN ORDERHEAD.STATUS IS 
'Статус';

COMMENT ON COLUMN ORDERHEADMODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN ORDERHEADMODEL.SUMMACUR_WITH_DISCOUNT IS 
'Сумма со скидкой/наценкой в валюте';

COMMENT ON COLUMN ORDERHEADMODEL.SUMMANAT_WITH_DISCOUNT IS 
'Сумма со скидкой/наценкой';

COMMENT ON COLUMN ORDERHEADMODEL.ADD_EXPENSES IS 
'Сумма дополнительных расходов';

COMMENT ON COLUMN ORDERHEADMODEL.DISCOUNT_ON_DOC IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN ORDERHEADMODEL.DISCOUNT_ON_LINE IS 
'Скидка/наценка по строкам спецификации';

COMMENT ON COLUMN ORDERHEADMODEL.DUEDATE_KIND IS 
'Срок выполнения заказа, единица измерения';

COMMENT ON COLUMN ORDERHEADMODEL.DUEDATE_QUAN IS 
'Срок выполнения заказа, количество единиц';

COMMENT ON COLUMN ORDERHEADMODEL.DUEDATE IS 
'Дата выполнения';

COMMENT ON COLUMN ORDERHEADMODEL.CREDITTERM IS 
'Количество дней просрочки';

COMMENT ON COLUMN ORDERHEADMODEL.PENALTY IS 
'% штрафа';

COMMENT ON COLUMN ORDERHEADMODEL.COMMENT IS 
'Дополнения';

COMMENT ON COLUMN ORDERHEADMODEL.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN ORDERHEADMODEL.CONSUMER IS 
'Потребитель';

COMMENT ON COLUMN ORDERHEADMODEL.FIXED_INPUT IS 
'Поступления зафиксированы';

COMMENT ON COLUMN ORDERHEADMODEL.STATUS IS 
'Статус
0 - запланировано
1 - заказано
2 - выполнено';

COMMENT ON COLUMN ORDERSPEC.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN ORDERSPEC.DISCOUNT IS 
'Скидка/наценка по строке';

COMMENT ON COLUMN ORDERSPEC.PRICE_WITH_DISCOUNT IS 
'Цена с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN ORDERSPEC.SUMMA_WITH_DISCOUNT IS 
'Сумма с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN ORDERSPEC.COST IS 
'Себестоимость (учитывает дополнительные расходы)';

COMMENT ON COLUMN ORDERSPEC.REQUIRED_DATE IS 
'Дата требования';

COMMENT ON COLUMN ORDERSPEC.PROMISED_DATE IS 
'Дата поставки';

COMMENT ON COLUMN ORDERSPEC.VENDOR_ITEM_CODE IS 
'Код товара у покупателя';

COMMENT ON COLUMN ORDERSPEC.WAREHOUSE_ID IS 
'Склад';

COMMENT ON COLUMN ORDERSPEC.QTY_ACCEPTED IS 
'Оприходовано на склад';

COMMENT ON COLUMN ORDERSPEC.QTY_INVOICED IS 
'Отфактуровано';

COMMENT ON COLUMN ORDERSPEC.QTY_RETURNED IS 
'Возвращено покупателем';

COMMENT ON COLUMN ORDERSPEC.QTY_SHIPPED IS 
'Отгружено со склада';

COMMENT ON COLUMN ORDERSPEC.QTY_PICKED IS 
'Создана накладная';

COMMENT ON COLUMN ORDERSPEC.QTY_OUTSTANDING IS 
'Планируется отгрузить';

COMMENT ON COLUMN ORDERSPEC.CLOSED_FOR_PLANNING IS 
'Недоступно для планирования';

COMMENT ON COLUMN ORDERSPEC.STATUS IS 
'Статус';

COMMENT ON COLUMN ORDERSPEC.DOC_DISCOUNT IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN ORDERSPECMODEL.DOCSPECMODEL_ID IS 
'Идентификатор спецификации образца документа';

COMMENT ON COLUMN ORDERSPECMODEL.DISCOUNT IS 
'Скидка/наценка по строке';

COMMENT ON COLUMN ORDERSPECMODEL.PRICE_WITH_DISCOUNT IS 
'Цена с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN ORDERSPECMODEL.SUMMA_WITH_DISCOUNT IS 
'Сумма с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN ORDERSPECMODEL.COST IS 
'Себестоимость (учитывает дополнительные расходы)';

COMMENT ON COLUMN ORDERSPECMODEL.DOC_DISCOUNT IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN ORGUNIT.KIND IS 
'Тип подразделения:
0 - Головное предприятие
1 - Филиал
2 - Подразделение
3 - Отдел, служба';

COMMENT ON COLUMN ORGUNIT.IS_OFFICE IS 
'Признак, показывающий, что подразделение является офисом:
0 - нет
1 - офис';

COMMENT ON COLUMN ORGUNIT.IS_STORE IS 
'Признак, показывающий, 
что подразделение является магазином:
0 - нет
1 - магазин';

COMMENT ON COLUMN ORGUNIT.PARTNER_ID IS 
'Юридическое лицо';

COMMENT ON COLUMN ORGUNIT.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN ORGUNIT.RESOURCE_GROUP_ID IS 
'Идентификатор ресурса';

COMMENT ON COLUMN ORGUNIT.FOLDER_TAG IS 
'Тэг папки';

COMMENT ON COLUMN OVR_CANCELLATION.ID IS 
'Идентификатор';

COMMENT ON COLUMN OVR_CANCELLATION.OVR_CARD_HIST_ID IS 
'Идентификатор истории выдачи';

COMMENT ON COLUMN OVR_CANCELLATION.CANCELLATION_DATE IS 
'Дата погашения';

COMMENT ON COLUMN OVR_CANCELLATION.CURRENT_CANCELLATION_SUMMA IS 
'Сумма текущего погашения';

COMMENT ON COLUMN OVR_CANCELLATION.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN OVR_CANCELLATION.DOCTYPE IS 
'Тип документа';

COMMENT ON COLUMN OVR_CANCELLATION.DOCNUMBER IS 
'Номер документа';

COMMENT ON COLUMN OVR_CANCELLATION.DOCDATE IS 
'Дата документа';

COMMENT ON COLUMN OVR_CANCELLATION.CANCELLATION_REASON IS 
'Причина погашения';

COMMENT ON COLUMN OVR_CARD.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN OVR_CARD.REF_PERSONNEL_ID IS 
'Идентификатор основных сведений сотрудников';

COMMENT ON COLUMN OVR_CARD.STF_JOB_ID IS 
'Идентификатор профессии';

COMMENT ON COLUMN OVR_CARD.STF_POSITION_ID IS 
'Идентификатор должности';

COMMENT ON COLUMN OVR_CARD.ACTDATE_FROM IS 
'Дата начала действия';

COMMENT ON COLUMN OVR_CARD.ACTDATE_TO IS 
'Дата окончания действия';

COMMENT ON COLUMN OVR_CARD.ORGUNIT_ID IS 
'Идентификатор папки (подразделения)';

COMMENT ON COLUMN OVR_CARD.OVR_CARD_NUMBER IS 
'Номер лицевой карточки сотрудника (ЛКС)';

COMMENT ON COLUMN OVR_CARD_DOCUMENT_LINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN OVR_CARD_DOCUMENT_LINK.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN OVR_CARD_DOCUMENT_LINK.OVR_CARD_ID IS 
'Идентификатор лицевой карточки';

COMMENT ON COLUMN OVR_CARD_DOCUMENT_LINK.OVR_NORM_HEAD_ID IS 
'Идентификатор норма выдачи';

COMMENT ON COLUMN OVR_CARD_DOCUMENT_LINK.REMOVE_TYPE_ID IS 
'Тип';

COMMENT ON COLUMN OVR_CARD_HIST.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN OVR_CARD_HIST.OVR_CARD_ID IS 
'Идентификатор ЛКС';

COMMENT ON COLUMN OVR_CARD_HIST.MEASURE_UPCODE IS 
'Код единицы измерения';

COMMENT ON COLUMN OVR_CARD_HIST.CATALOG_ID IS 
'Идентификатор позиции КТУ';

COMMENT ON COLUMN OVR_CARD_HIST.OVR_NORM_SPEC_ID IS 
'Идентификатор позиции спецификации нормы выдачи';

COMMENT ON COLUMN OVR_CARD_HIST.OVR_NORM_HEAD_ID IS 
'Идентификатор заголовка нормы выдачи';

COMMENT ON COLUMN OVR_CARD_HIST.CATALOG_GROUPS_TYPE_ID IS 
'Тип группы позиций КТУ';

COMMENT ON COLUMN OVR_CARD_HIST.ISBASIC IS 
'Тип выдачи:
0 - дополнительная
1 - основная
';

COMMENT ON COLUMN OVR_CARD_HIST.ISPERIODIC IS 
'Периодичность выдачи:
0 - разовая
1 - периодическая';

COMMENT ON COLUMN OVR_CARD_HIST.RETURNABLE IS 
'Подлежит возврату';

COMMENT ON COLUMN OVR_CARD_HIST.GIVE_DATE IS 
'Дата выдачи';

COMMENT ON COLUMN OVR_CARD_HIST.READOUT_DATE IS 
'Дата ввода в эксплуатацию';

COMMENT ON COLUMN OVR_CARD_HIST.SHELFLIFE IS 
'Срок годности';

COMMENT ON COLUMN OVR_CARD_HIST.SHELFLIFE_MEAS IS 
'Единица измерения срока годности:
1 - час
2 - день
3 - месяц
4 - год';

COMMENT ON COLUMN OVR_CARD_HIST.QUANTITY IS 
'Количество выдаваемой спецодежды';

COMMENT ON COLUMN OVR_CARD_HIST.NDE_COST IS 
'Цена в НДЕ';

COMMENT ON COLUMN OVR_CARD_HIST.NDE_SUMMA IS 
'Сумма в НДЕ';

COMMENT ON COLUMN OVR_CARD_HIST.DETERIORATION IS 
'Износ в процентах';

COMMENT ON COLUMN OVR_CARD_HIST.DEPRECIABLE_VALUE IS 
'Остаточная стоимость';

COMMENT ON COLUMN OVR_CARD_HIST.COMMON_SUMMA_FOR_DINCH IS 
'Общая сумма, подлежащая погашению';

COMMENT ON COLUMN OVR_CARD_HIST.DINCHED_SUMMA IS 
'Погашенная сумма';

COMMENT ON COLUMN OVR_CARD_HIST.REST_OF_DINCH_SUMMA IS 
'Остаток суммы к погашению';

COMMENT ON COLUMN OVR_CARD_HIST.ARREAR_SUMMA IS 
'Сумма задолженности';

COMMENT ON COLUMN OVR_CARD_HIST.GIVE_DOCHEAD_ID IS 
'Идентификатор документа, по которому производилась выдача';

COMMENT ON COLUMN OVR_CARD_HIST.GIVE_DOCSPEC_ID IS 
'Идентификатор позиции спецификации документа, по которой производилась выдача';

COMMENT ON COLUMN OVR_CARD_HIST.GIVE_DOCTYPE IS 
'Тип документа, по которому производилась выдача';

COMMENT ON COLUMN OVR_CARD_HIST.GIVE_DOCNUMBER IS 
'Номер документа, по которому производилась выдача';

COMMENT ON COLUMN OVR_CARD_HIST.GIVE_DOCDATE IS 
'Дата выдачи';

COMMENT ON COLUMN OVR_CARD_HIST.EXPL_DOCHEAD_ID IS 
'Идентификатор документа, по которому производился ввод в эксплуатацию';

COMMENT ON COLUMN OVR_CARD_HIST.EXPL_DOCSPEC_ID IS 
'Идентификатор позиции спецификации документа, по которой производился ввод в эксплуатацию';

COMMENT ON COLUMN OVR_CARD_HIST.EXPL_DOCTYPE IS 
'Тип документа, по которому производился ввод в эксплуатацию';

COMMENT ON COLUMN OVR_CARD_HIST.EXPL_DOCNUMBER IS 
'Номер документа, по которому производился ввод в эксплуатацию';

COMMENT ON COLUMN OVR_CARD_HIST.EXPL_DOCDATE IS 
'Дата документа, по которому производился ввод в эксплуатацию';

COMMENT ON COLUMN OVR_CARD_HIST.REMOVE_DOCHEAD_ID IS 
'Идентификатор документа, по которому производился вывод из эксплуатации';

COMMENT ON COLUMN OVR_CARD_HIST.REMOVE_DOCSPEC_ID IS 
'Идентификатор позиции спецификации документа, по которой производился вывод из эксплуатации';

COMMENT ON COLUMN OVR_CARD_HIST.REMOVE_DOCTYPE IS 
'Тип документа, по которому производился вывод из эксплуатации';

COMMENT ON COLUMN OVR_CARD_HIST.REMOVE_DOCNUMBER IS 
'Номер документа, по которому производился вывод из эксплуатации';

COMMENT ON COLUMN OVR_CARD_HIST.REMOVE_DOCDATE IS 
'Дата документа, по которому производился вывод из эксплуатации';

COMMENT ON COLUMN OVR_CARD_HIST.REMOVE_TYPE_ID IS 
'Тип выбытия из эксплуатации
3 - возвращено
4 - утеряно
5 - списано';

COMMENT ON COLUMN OVR_CARD_HIST.REMOVE_DATE IS 
'Дата выбытия из эксплуатации';

COMMENT ON COLUMN OVR_CARD_HIST_DOC_SPEC_LINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN OVR_CARD_HIST_DOC_SPEC_LINK.OVR_CARD_HIST_ID IS 
'Идентификатор лицевой карточки сотрудников';

COMMENT ON COLUMN OVR_CARD_HIST_DOC_SPEC_LINK.DOCSPEC_ID IS 
'Идентификатор спецификации документов';

COMMENT ON COLUMN OVR_NORM_HEAD.ID IS 
'Идентификатор';

COMMENT ON COLUMN OVR_NORM_HEAD.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN OVR_NORM_HEAD.OVR_NORM_NAME IS 
'Наименование';

COMMENT ON COLUMN OVR_NORM_HEAD.OVR_NORM_TYPE_ID IS 
'Не используется';

COMMENT ON COLUMN OVR_NORM_HEAD.STF_JOB_ID IS 
'Идентификатор профессии';

COMMENT ON COLUMN OVR_NORM_HEAD.STF_POSITION_ID IS 
'Идентификатор должности';

COMMENT ON COLUMN OVR_NORM_HEAD.OVR_NORM_BEGIN_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN OVR_NORM_HEAD.OVR_NORM_END_DATE IS 
'Дата окончания действия';

COMMENT ON COLUMN OVR_NORM_SPEC.ID IS 
'Идентификатор';

COMMENT ON COLUMN OVR_NORM_SPEC.OVR_NORM_HEAD_ID IS 
'Идентификатор норм выдачи спецодежды';

COMMENT ON COLUMN OVR_NORM_SPEC.OVR_NORM_SPEC_NAME IS 
'Наименование';

COMMENT ON COLUMN OVR_NORM_SPEC.MEASURE_UPCODE IS 
'Единица измерения';

COMMENT ON COLUMN OVR_NORM_SPEC.CATALOG_GROUPS_TYPE_ID IS 
'Тип группы
0 - специальная одежда
1 - форменная одежда
2 - индивидуальные средства защита
3 - инструменты
4 - оргтехника, мебель
5 - прочие ТМЦ';

COMMENT ON COLUMN OVR_NORM_SPEC.SHELFLIFE IS 
'Срок использования';

COMMENT ON COLUMN OVR_NORM_SPEC.SHELFLIFE_MEAS IS 
'Единица измерения срока использования
1 - час
2 - день
3 - месяц
4 - год';

COMMENT ON COLUMN OVR_NORM_SPEC.ISBASIC IS 
'Тип выдачи
0 - дополнительная
1 - основная';

COMMENT ON COLUMN OVR_NORM_SPEC.ISPERIODIC IS 
'Периодичность
0 - разовая
1 - периодическая';

COMMENT ON COLUMN OVR_NORM_SPEC.ISDINCH IS 
'Подлежит погашению';

COMMENT ON COLUMN OVR_NORM_SPEC.DINCH_FORMULA IS 
'Формуда для расчета суммы погашения';

COMMENT ON COLUMN OVR_NORM_SPEC.DOC_NAME IS 
'Каким документом предусмотрено';

COMMENT ON COLUMN OVR_NORM_SPEC.QUANTITY IS 
'Количество';

COMMENT ON COLUMN OVR_NORM_SPEC_DOC_SPEC_LINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN OVR_NORM_SPEC_DOC_SPEC_LINK.OVR_NORM_SPEC_ID IS 
'Идентификатор норм выдачи';

COMMENT ON COLUMN OVR_NORM_SPEC_DOC_SPEC_LINK.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN OVR_NORM_SPEC_LINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN OVR_NORM_SPEC_LINK.OVR_NORM_SPEC_ID IS 
'Идентификатор норм выдачи';

COMMENT ON COLUMN OVR_NORM_SPEC_LINK.CATALOG_ID IS 
'Идентификатор позиции каталога';

COMMENT ON COLUMN OVR_SIZE.ID IS 
'Идентификатор';

COMMENT ON COLUMN OVR_SIZE.OVR_CARD_ID IS 
'Идентификатор карточки';

COMMENT ON COLUMN OVR_SIZE.CATALOG_GROUPS_TYPE_ID IS 
'Тип группы
0 - специальная одежда
1 - форменная одежда
2 - индивидуальные средства защиты
3 - инструменты
4 - оргтехника, мебель
5 - прочие ТМЦ';

COMMENT ON COLUMN OVR_SIZE.CLOTHES_SIZE IS 
'Размер одежды';

COMMENT ON COLUMN OVR_SIZE.SHOES_SIZE IS 
'размер обуви';

COMMENT ON COLUMN OVR_SIZE.HAT_SIZE IS 
'Размер головного убора';

COMMENT ON COLUMN OVR_SIZE.GAS_MASK_SIZE IS 
'Размер противогаза';

COMMENT ON COLUMN OVR_SIZE.RESPIRATOR_SIZE IS 
'Размер респиратора';

COMMENT ON COLUMN OVR_SIZE.MITTENS_SIZE IS 
'Размер рукавиц';

COMMENT ON COLUMN OVR_SIZE.GLOVES_SIZE IS 
'Размер перчаток';

COMMENT ON COLUMN PACKING.ID IS 
'Идентификатор';

COMMENT ON COLUMN PACKING.CATALOG_ID IS 
'Идентификатор позиции каталога';

COMMENT ON COLUMN PACKING.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN PACKING.WEIGHT IS 
'Вес';

COMMENT ON COLUMN PACKING.VOLUME IS 
'Объем';

COMMENT ON COLUMN PACKING.MEASURE_ID IS 
'ЕИ';

COMMENT ON COLUMN PACKING.WEIGHTMEASURE_ID IS 
'ЕИ веса';

COMMENT ON COLUMN PACKING.VOLUMEMEASURE_ID IS 
'ЕИ объема';

COMMENT ON COLUMN PACKING.QANTITY_MEASURE1 IS 
'Количество в основной ЕИ в упаковке';

COMMENT ON COLUMN PACKING.QANTITY_MEASURE2 IS 
'Количество в дополнительной ЕИ в упаковке';

COMMENT ON COLUMN PARTNEMPL.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PARTNEMPL.PARTNER_ID IS 
'Идентификатор партнера';

COMMENT ON COLUMN PARTNEMPL.CODE IS 
'Код сотрудника партнера';

COMMENT ON COLUMN PARTNEMPL.FNAME IS 
'Имя сотрудника';

COMMENT ON COLUMN PARTNEMPL.PATRONYMIC IS 
'Отчество сотрудника';

COMMENT ON COLUMN PARTNEMPL.SURNAME IS 
'Фамилия сотрудника';

COMMENT ON COLUMN PARTNEMPL.ADDRESS IS 
'Паспорт - Адрес';

COMMENT ON COLUMN PARTNEMPL.MILITIA IS 
'Паспорт - выдан';

COMMENT ON COLUMN PARTNEMPL.MILIT_CITY IS 
'Паспорт - Город';

COMMENT ON COLUMN PARTNEMPL.PASSP_DATE IS 
'Паспорт - дата выдачи';

COMMENT ON COLUMN PARTNEMPL.PASSP_NUM IS 
'Паспорт - номер';

COMMENT ON COLUMN PARTNEMPL.PASSP_SER IS 
'Паспорт - серия';

COMMENT ON COLUMN PARTNEMPL.OFFICE IS 
'Должность';

COMMENT ON COLUMN PARTNEMPL.COMMENT IS 
'Комментарий';

COMMENT ON COLUMN PARTNEMPL.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN PARTNER.INN IS 
'ИНН';

COMMENT ON COLUMN PARTNER.OKONH IS 
'Код ОКОНХ';

COMMENT ON COLUMN PARTNER.OKPO IS 
'Код ОКПО';

COMMENT ON COLUMN PARTNER.CITY IS 
'Почтовый адрес - Город';

COMMENT ON COLUMN PARTNER.AREA IS 
'Почтовый адрес - Область';

COMMENT ON COLUMN PARTNER.ADDRESS IS 
'Почтовый адрес - Адрес';

COMMENT ON COLUMN PARTNER.CITYLEGAL IS 
'Юридический адрес - Город';

COMMENT ON COLUMN PARTNER.AREALEGAL IS 
'Юридический адрес - Область';

COMMENT ON COLUMN PARTNER.ADDRESSLEGAL IS 
'Юридический адрес - Адрес';

COMMENT ON COLUMN PARTNER.COMMENT IS 
'Комментарий';

COMMENT ON COLUMN PARTNER.MAXSUPCREDIT IS 
'Сумма максимального кредита поставщика';

COMMENT ON COLUMN PARTNER.MAXSUPCREDITCUR IS 
'Код валюты кредита поставщика в верхнем регистре';

COMMENT ON COLUMN PARTNER.TERMSUPCREDIT IS 
'Срок кредитования поставщика в днях';

COMMENT ON COLUMN PARTNER.PENALTYSUP IS 
'Пеня за просрочку поставщика';

COMMENT ON COLUMN PARTNER.MAXCUSCREDIT IS 
'Сумма максимального кредита покупателя';

COMMENT ON COLUMN PARTNER.MAXCUSCREDITCUR IS 
'Код валюты кредита покупателя в верхнем регистре';

COMMENT ON COLUMN PARTNER.TERMCUSCREDIT IS 
'Срок кредитования покупателя в днях';

COMMENT ON COLUMN PARTNER.PENALTYCUS IS 
'Пеня за просрочку покупателя';

COMMENT ON COLUMN PARTNER.KPP IS 
'КПП';

COMMENT ON COLUMN PARTNER.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN PARTNER.ZIP IS 
'Почтовый адрес - Индекс';

COMMENT ON COLUMN PARTNER.ZIPLEGAL IS 
'Юридический адрес - Индекс';

COMMENT ON COLUMN PARTNER.INN_UNIQUE IS 
'Признак уникальности ИНН: 0 - не уникален, 1 - уникален';

COMMENT ON COLUMN PARTNER.OKVED IS 
'Код ОКВЭД';

COMMENT ON COLUMN PARTNER.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN PARTNER.ZIPCODE_ID IS 
'Идентификатор индекса почтового адреса';

COMMENT ON COLUMN PARTNER.COUNTRY_ID IS 
'Идентификатор страны почтового адреса';

COMMENT ON COLUMN PARTNER.REGION_ID IS 
'Идентификатор региона почтового адреса';

COMMENT ON COLUMN PARTNER.DISTRICT_ID IS 
'Идентификатор района почтового адреса';

COMMENT ON COLUMN PARTNER.PLACE_ID IS 
'Идентификатор населенного пункта почтового адреса';

COMMENT ON COLUMN PARTNER.STREET IS 
'Улица почтового адреса';

COMMENT ON COLUMN PARTNER.HOUSE IS 
'Дом почтового адреса';

COMMENT ON COLUMN PARTNER.BUILDING IS 
'Строение почтового адреса';

COMMENT ON COLUMN PARTNER.ROOM IS 
'Помещение почтового адреса';

COMMENT ON COLUMN PARTNER.ZIPCODE1_ID IS 
'Идентификатор индекса юридического адреса';

COMMENT ON COLUMN PARTNER.COUNTRY1_ID IS 
'Идентификатор страны юридического адреса';

COMMENT ON COLUMN PARTNER.REGION1_ID IS 
'Идентификатор региона юридического адреса';

COMMENT ON COLUMN PARTNER.DISTRICT1_ID IS 
'Идентификатор района юридического адреса';

COMMENT ON COLUMN PARTNER.PLACE1_ID IS 
'Идентификатор населенного пункта юридического адреса';

COMMENT ON COLUMN PARTNER.STREET1 IS 
'Улица юридического адреса';

COMMENT ON COLUMN PARTNER.HOUSE1 IS 
'Дом юридического адреса';

COMMENT ON COLUMN PARTNER.BUILDING1 IS 
'Строение юридического адреса';

COMMENT ON COLUMN PARTNER.ROOM1 IS 
'Помещение юридического адреса';

COMMENT ON COLUMN PERIOD.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PERIOD.PNAME IS 
'Наименование учетного периода';

COMMENT ON COLUMN PERIOD.DATEFROM IS 
'Дата начала';

COMMENT ON COLUMN PERIOD.DATETO IS 
'Дата окончания';

COMMENT ON COLUMN PERIOD.WHOCLOSED IS 
'Имя пользователя в верхнем регистре, закрывшего период';

COMMENT ON COLUMN PERIOD.DATECLOSE IS 
'Системная дата закрытия периода';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ANLDB1_ID IS 
'Идентификатор аналитического счета 1-го уровня по дебету';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ANLDB2_ID IS 
'Идентификатор аналитического счета 2-го уровня по дебету';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ANLDB3_ID IS 
'Идентификатор аналитического счета 3-го уровня по дебету';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ANLDB4_ID IS 
'Идентификатор аналитического счета 4-го уровня по дебету';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ANLDB5_ID IS 
'Идентификатор аналитического счета 5-го уровня по дебету';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ANLKT1_ID IS 
'Идентификатор аналитического счета 1-го уровня по кредиту';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ANLKT2_ID IS 
'Рег. номер аналитического счета 2-го уровня по кредиту';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ANLKT3_ID IS 
'Идентификатор аналитического счета 3-го уровня по кредиту';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ANLKT4_ID IS 
'Идентификатор аналитического счета 4-го уровня по кредиту';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ANLKT5_ID IS 
'Идентификатор аналитического счета 5-го уровня по кредиту';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ACCDB_ID IS 
'Счет дебет';

COMMENT ON COLUMN PERMISSIBLEACCOUNTS.ACCKT_ID IS 
'Счет кредит';

COMMENT ON COLUMN PHASEITEMFACT.ID IS 
'Идентификатор';

COMMENT ON COLUMN PHASEITEMFACT.DOCHEAD_ID IS 
'Идентификатор договора';

COMMENT ON COLUMN PHASEITEMFACT.REGDATE IS 
'Дата регистрации';

COMMENT ON COLUMN PHASEITEMFACT.DOCTYPE IS 
'Тип документа';

COMMENT ON COLUMN PHASEITEMFACT.DOCNUMBER IS 
'Номер документа';

COMMENT ON COLUMN PHASEITEMFACT.DOCDATE IS 
'Дата документа';

COMMENT ON COLUMN PHASEITEMFACT.DOC_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN PHASEITEMFACT.FACTSUM IS 
'Фактическая сумма';

COMMENT ON COLUMN PHASEITEMFACT.DISTSUM IS 
'Распределенная сумма';

COMMENT ON COLUMN PHASEITEMFACT.CONTRACTOR_ID IS 
'Контрагент';

COMMENT ON COLUMN PHASEITEMFACT.KIND IS 
'Вид этапа:
0 - сумма платежей контрагенту
1 - сумма платежей от контрагента
2 - сумма ТМЦ и услуг контрагенту
3 - сумма ТМЦ и услуг от контрагента';

COMMENT ON COLUMN PHASEITEMPLAN.ID IS 
'Идентификатор';

COMMENT ON COLUMN PHASEITEMPLAN.PHASE_ID IS 
'Этап договора';

COMMENT ON COLUMN PHASEITEMPLAN.DOCNUMBER IS 
'Номер';

COMMENT ON COLUMN PHASEITEMPLAN.KIND IS 
'Вид этапа:
0 - сумма платежей контрагенту
1 - сумма платежей от контрагента
2 - сумма ТМЦ и услуг контрагенту
3 - сумма ТМЦ и услуг от контрагента';

COMMENT ON COLUMN PHASEITEMPLAN.BEGINACTION_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN PHASEITEMPLAN.ENDACTION_DATE IS 
'Дата конца действия';

COMMENT ON COLUMN PHASEITEMPLAN.CONTRACTORFROM IS 
'Контрагент "от кого"';

COMMENT ON COLUMN PHASEITEMPLAN.CONTRACTORTO IS 
'Контрагент "кому"';

COMMENT ON COLUMN PHASEITEMPLAN.PLANSUM IS 
'Планируемая сумма';

COMMENT ON COLUMN PHASEITEMPLAN.FACTSUM IS 
'Фактическая сумма';

COMMENT ON COLUMN PHASEITEMPLAN.AVOID IS 
'Не используется';

COMMENT ON COLUMN PHASEITEMPLAN.ITEM_NUMBER IS 
'Номер пункта';

COMMENT ON COLUMN PHASEITEMPLAN.DOCTYPE IS 
'Тип документа';

COMMENT ON COLUMN PHASEITEMPLAN.DOCDATE IS 
'Дата документа';

COMMENT ON COLUMN PHASEITEMPLAN.DOC_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN PHASEITEM_LINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN PHASEITEM_LINK.PLANITEM_ID IS 
'Планируемый пункт';

COMMENT ON COLUMN PHASEITEM_LINK.FACTITEM_ID IS 
'Фактический пункт';

COMMENT ON COLUMN PHASEITEM_LINK.DISTSUM IS 
'Сумма, распределенная для данного планируемого пункта';

COMMENT ON COLUMN PMA_DOCGROUP.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMA_DOCGROUP.NAME IS 
'Наименование';

COMMENT ON COLUMN PMA_DOCGROUPLINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMA_DOCGROUPLINK.DOCGROUP_ID IS 
'Идентификатор группы';

COMMENT ON COLUMN PMA_DOCGROUPLINK.DOCTYPE IS 
'Идентификатор типа документа';

COMMENT ON COLUMN PMA_PAYMENT.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMA_PAYMENT.FOLDER_ID IS 
'Идентификатор папки журнала платежей';

COMMENT ON COLUMN PMA_PAYMENT.PLANNED IS 
'0 - фактический платеж
1 - плановый платеж';

COMMENT ON COLUMN PMA_PAYMENT.PDATE IS 
'Дата платежа';

COMMENT ON COLUMN PMA_PAYMENT.NAME IS 
'Наименование';

COMMENT ON COLUMN PMA_PAYMENT.CURCODE IS 
'Код валюты';

COMMENT ON COLUMN PMA_PAYMENT.CURRATETYPE_ID IS 
'Тип валюты';

COMMENT ON COLUMN PMA_PAYMENT.CURRATEAUTHORITY_ID IS 
'Источник валюты';

COMMENT ON COLUMN PMA_PAYMENT.CURRATE IS 
'Курс валюты';

COMMENT ON COLUMN PMA_PAYMENT.SUMCUR IS 
'Курс валюты';

COMMENT ON COLUMN PMA_PAYMENT.SUMNAT IS 
'Сумма';

COMMENT ON COLUMN PMA_PAYMENT.ALLOCSUMCUR IS 
'Распределенная сумма в валюте';

COMMENT ON COLUMN PMA_PAYMENT.ALLOCSUMNAT IS 
'Распределенная сумма';

COMMENT ON COLUMN PMA_PAYMENT.DOC_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN PMA_PAYMENT.DOCTYPE IS 
'Тип документа';

COMMENT ON COLUMN PMA_PAYMENT.DOCNUMBER IS 
'Номер документа';

COMMENT ON COLUMN PMA_PAYMENT.DOCDATE IS 
'Дата документа';

COMMENT ON COLUMN PMA_PAYMENT.BASEDOC_ID IS 
'Идентификатор документа-основания';

COMMENT ON COLUMN PMA_PAYMENT.BASEDOCTYPE IS 
'Тип документа-основания';

COMMENT ON COLUMN PMA_PAYMENT.BASEDOCNUMBER IS 
'Номер документа-основания';

COMMENT ON COLUMN PMA_PAYMENT.BASEDOCDATE IS 
'Дата документа-основания';

COMMENT ON COLUMN PMA_PAYMENT.CONTRACT_ID IS 
'Идентификатор контракта';

COMMENT ON COLUMN PMA_PAYMENT.CONTRACTTYPE IS 
'Тип контракта';

COMMENT ON COLUMN PMA_PAYMENT.CONTRACTNUMBER IS 
'Номер контракта';

COMMENT ON COLUMN PMA_PAYMENT.CONTRACTDATE IS 
'Дата контракта';

COMMENT ON COLUMN PMA_PAYMENT.FROM_ID IS 
'От кого';

COMMENT ON COLUMN PMA_PAYMENT.TO_ID IS 
'Кому';

COMMENT ON COLUMN PMA_PAYMENT.FROMUNIT_ID IS 
'Идентифкатор подразделения, у которого контрагент От кого в качестве юридического лица';

COMMENT ON COLUMN PMA_PAYMENT.TOUNIT_ID IS 
'Идентифкатор подразделения, у которого контрагент Кому в качестве юридического лица';

COMMENT ON COLUMN PMA_PAYMENT.DESCRIPTION IS 
'Назначение платежа';

COMMENT ON COLUMN PMA_PAYMENT.COMMENTS IS 
'Комментарий';

COMMENT ON COLUMN PMA_PAYMENT.IS_MODEL IS 
'0 - обязательство
1 - образец обязательства';

COMMENT ON COLUMN PMA_PAYMENT.DESTFOLDER_ID IS 
'Идентификатор папки-приемника';

COMMENT ON COLUMN PMA_PAYMENT.MODELNAME IS 
'Наименование образца';

COMMENT ON COLUMN PMA_TRHEAD.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMA_TRHEAD.PAYMENT_ID IS 
'Идентификатор записи в журнале платежей';

COMMENT ON COLUMN PMA_TRHEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN PMA_TRHEAD.PDATE IS 
'Дата исполнения';

COMMENT ON COLUMN PMA_TRHEAD.TOTALSUMCUR IS 
'Сумма документа в валюте';

COMMENT ON COLUMN PMA_TRHEAD.TOTALSUMNAT IS 
'Сумма документа';

COMMENT ON COLUMN PMA_TRHEAD.ALLOCSUMCUR IS 
'Распределенная сумма в валюте';

COMMENT ON COLUMN PMA_TRHEAD.ALLOCSUMNAT IS 
'Распределенная сумма';

COMMENT ON COLUMN PMA_TRSPEC.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMA_TRSPEC.TRHEAD_ID IS 
'Идентификатор строки связанного документа';

COMMENT ON COLUMN PMA_TRSPEC.DOCSPEC_ID IS 
'Идентификатор спецификации';

COMMENT ON COLUMN PMA_TRSPEC.TOTALQTY IS 
'Количество по спецификации';

COMMENT ON COLUMN PMA_TRSPEC.TOTALSUM IS 
'Сумма по спецификации';

COMMENT ON COLUMN PMA_TRSPEC.ALLOCQTY IS 
'Распределенное количество';

COMMENT ON COLUMN PMA_TRSPEC.ALLOCSUM IS 
'Распределенная сумма';

COMMENT ON COLUMN PMA_TRTAX.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMA_TRTAX.TRSPEC_ID IS 
'Идентификатор строка спецификации жунрала платежей';

COMMENT ON COLUMN PMA_TRTAX.TAXSUMM_ID IS 
'Идентификатор строки налогов';

COMMENT ON COLUMN PMA_TRTAX.TAX_ID IS 
'Идентификатор налога';

COMMENT ON COLUMN PMA_TRTAX.TOTALSUM IS 
'Сумма по документа';

COMMENT ON COLUMN PMA_TRTAX.ALLOCSUM IS 
'Распределенная сумма';

COMMENT ON COLUMN PMC_CONFIG.NAT_CURRENCY IS 
'Код национальной валюты';

COMMENT ON COLUMN PMC_CONFIG.CURRENCY_PREC IS 
'Точность денежных велеичин';

COMMENT ON COLUMN PMC_CONFIG.CUR_RATE_TYPE_ID IS 
'Тип валюты';

COMMENT ON COLUMN PMC_CONFIG.CUR_RATE_AUTHORITY_ID IS 
'Источник валюты';

COMMENT ON COLUMN PMC_EXECUTION.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMC_EXECUTION.RECEIVABLE IS 
'Направление платежа
0 - к оплате
1 - к получению';

COMMENT ON COLUMN PMC_EXECUTION.PLANDATE IS 
'Дата исполнения';

COMMENT ON COLUMN PMC_EXECUTION.FACTDATE IS 
'Фактическая дата иполнения';

COMMENT ON COLUMN PMC_EXECUTION.SUMCUR IS 
'Сумма в валюте';

COMMENT ON COLUMN PMC_EXECUTION.SUMNAT IS 
'Сумма';

COMMENT ON COLUMN PMC_EXECUTION.CURCODE IS 
'Код валюты';

COMMENT ON COLUMN PMC_EXECUTION.CURRATETYPE_ID IS 
'Тип валюты';

COMMENT ON COLUMN PMC_EXECUTION.CURRATEAUTHORITY_ID IS 
'Источник валюты';

COMMENT ON COLUMN PMC_EXECUTION.TRANSFERKIND IS 
'Признак создания внутренним перемещением';

COMMENT ON COLUMN PMC_EXECUTION.FIXEDPERIOD IS 
'Не используется';

COMMENT ON COLUMN PMC_EXECUTION.VERSION_ID IS 
'Идентификатор версии планирования платежей';

COMMENT ON COLUMN PMC_EXECUTION.VERSTATUS_ID IS 
'Идентификатор статуса версии';

COMMENT ON COLUMN PMC_EXECUTION.LIABILITY_ID IS 
'Идентификатор обязательства';

COMMENT ON COLUMN PMC_EXECUTION.RESOURCEFOLDER_ID IS 
'Идентификатор папки средства платежа';

COMMENT ON COLUMN PMC_EXECUTION.RESOURCE_ID IS 
'Идентификатор средства платежа';

COMMENT ON COLUMN PMC_EXECUTION.PAYMENT_ID IS 
'Не используется';

COMMENT ON COLUMN PMC_EXECUTION.DOC_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN PMC_EXECUTION.DOCCREATED IS 
'Признак создания документа';

COMMENT ON COLUMN PMC_EXECUTION.DOCPROCESSED IS 
'Признак отработки документа';

COMMENT ON COLUMN PMC_EXECUTION.APPROVED IS 
'Признак утверждения';

COMMENT ON COLUMN PMC_LIABILITY.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMC_LIABILITY.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN PMC_LIABILITY.VERSION_ID IS 
'Идентификатор версии планирования платежей';

COMMENT ON COLUMN PMC_LIABILITY.VERSTATUS_ID IS 
'Идентификатор статуса версии';

COMMENT ON COLUMN PMC_LIABILITY.IS_SHARED IS 
'0 - обязятельство версии
1 - обязательство из реестра';

COMMENT ON COLUMN PMC_LIABILITY.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN PMC_LIABILITY.RECEIVABLE IS 
'Направление платежа
0 - к оплате
1 - к получению';

COMMENT ON COLUMN PMC_LIABILITY.NUM IS 
'Номер обязательства';

COMMENT ON COLUMN PMC_LIABILITY.REGDATE IS 
'Дата регистрации';

COMMENT ON COLUMN PMC_LIABILITY.DATETOEXECUTE IS 
'Дата выполения';

COMMENT ON COLUMN PMC_LIABILITY.FROM_ID IS 
'От кого';

COMMENT ON COLUMN PMC_LIABILITY.TO_ID IS 
'Кому';

COMMENT ON COLUMN PMC_LIABILITY.SUMCUR IS 
'Сумма в валюте';

COMMENT ON COLUMN PMC_LIABILITY.CURCODE IS 
'Код валюты';

COMMENT ON COLUMN PMC_LIABILITY.CURRATETYPE_ID IS 
'Тип валюты';

COMMENT ON COLUMN PMC_LIABILITY.CURRATEAUTHORITY_ID IS 
'Источник валюты';

COMMENT ON COLUMN PMC_LIABILITY.PAYMENTDELAY IS 
'Количество дней банковской просрочки';

COMMENT ON COLUMN PMC_LIABILITY.DOC_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN PMC_LIABILITY.DOCNUMBER IS 
'Номер документа';

COMMENT ON COLUMN PMC_LIABILITY.DOCTYPE IS 
'Идентификатор типа документа';

COMMENT ON COLUMN PMC_LIABILITY.DOCDATE IS 
'Дата документа';

COMMENT ON COLUMN PMC_LIABILITY.BASEDOC_ID IS 
'Идентификатор документа-основания';

COMMENT ON COLUMN PMC_LIABILITY.BASEDOCTYPE IS 
'Идентификатор типа документа-основания';

COMMENT ON COLUMN PMC_LIABILITY.BASEDOCNUMBER IS 
'Номер документа-основания';

COMMENT ON COLUMN PMC_LIABILITY.BASEDOCDATE IS 
'Дата документа-основания';

COMMENT ON COLUMN PMC_LIABILITY.CONTRACT_ID IS 
'Идентификатор контракта';

COMMENT ON COLUMN PMC_LIABILITY.CONTRACTTYPE IS 
'Идентификатор типа контракта';

COMMENT ON COLUMN PMC_LIABILITY.CONTRACTNUMBER IS 
'Номер контракта';

COMMENT ON COLUMN PMC_LIABILITY.CONTRACTDATE IS 
'Дата контракта';

COMMENT ON COLUMN PMC_LIABILITY.PREFRESOURCE_ID IS 
'Идентификатор средства платежа';

COMMENT ON COLUMN PMC_LIABILITY.PREFRESOURCEFOLDER_ID IS 
'Идентификатор папки средства платежа';

COMMENT ON COLUMN PMC_LIABILITY.PREFONLY IS 
'Только выбранное средство платежа';

COMMENT ON COLUMN PMC_LIABILITY.COMMENTS IS 
'Комментарий';

COMMENT ON COLUMN PMC_LIABILITY.TRANSFERKIND IS 
'Признак создания внутренним перемещением';

COMMENT ON COLUMN PMC_LIABILITY.IS_MODEL IS 
'0 - обязательство
1 - образец обязательства';

COMMENT ON COLUMN PMC_LIABILITY.DESTFOLDER_ID IS 
'Идентификатор папки-приемника';

COMMENT ON COLUMN PMC_LIABILITY.MODELNAME IS 
'Наименование образца обязательства';

COMMENT ON COLUMN PMC_LIABILITY.FROMSOURCE IS 
'Источник От кого
1 - от кого
2 - кому
3 - через кого';

COMMENT ON COLUMN PMC_LIABILITY.TOSOURCE IS 
'Источник Кому
1 - от кого
2 - кому
3 - через кого';

COMMENT ON COLUMN PMC_LIABILITY.FROMBANKACC_ID IS 
'Идентификатор банковского счета От кого';

COMMENT ON COLUMN PMC_LIABILITY.TOBANKACC_ID IS 
'Идентификатор банковского счета Кому';

COMMENT ON COLUMN PMC_PERIOD.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMC_PERIOD.NAME IS 
'Наименование';

COMMENT ON COLUMN PMC_PERIOD.DATEFROM IS 
'Дата начала';

COMMENT ON COLUMN PMC_PERIOD.DATETILL IS 
'Дата окончания';

COMMENT ON COLUMN PMC_PERIOD.PARENT_ID IS 
'Идентификатор родительского периода';

COMMENT ON COLUMN PMC_PERIOD.KIND IS 
'0 - периоды верхнего уровня
1 - периоды нижнего уровня';

COMMENT ON COLUMN PMC_RESOURCE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMC_RESOURCE.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN PMC_RESOURCE.ORGUNIT_ID IS 
'Идентификатор подразделения';

COMMENT ON COLUMN PMC_RESOURCE.NAME IS 
'Наименование';

COMMENT ON COLUMN PMC_RESOURCE.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN PMC_RESOURCE.CATALOG_ID IS 
'Идентификатор позиции каталога';

COMMENT ON COLUMN PMC_RESOURCE.ACTDATETILL IS 
'Дата начала действия';

COMMENT ON COLUMN PMC_RESOURCE.ACTDATEFROM IS 
'Дата окончания действия';

COMMENT ON COLUMN PMC_RESOURCE.CURCODE IS 
'Код валюты';

COMMENT ON COLUMN PMC_RESOURCE.CURRATEAUTHORITY_ID IS 
'Источник курса';

COMMENT ON COLUMN PMC_RESOURCE.CURRATETYPE_ID IS 
'Тип курса';

COMMENT ON COLUMN PMC_RESOURCE.INDOCMODEL1_ID IS 
'Идентификатор образца прихода';

COMMENT ON COLUMN PMC_RESOURCE.OUTDOCMODEL1_ID IS 
'Идентификатор образца расхода';

COMMENT ON COLUMN PMC_RESOURCE.INDOCMODEL2_ID IS 
'Идентификатор образца внутреннего прихода';

COMMENT ON COLUMN PMC_RESOURCE.OUTDOCMODEL2_ID IS 
'Идентификатор образца внутреннего расхода';

COMMENT ON COLUMN PMC_VERSION.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMC_VERSION.NAME IS 
'Наименование';

COMMENT ON COLUMN PMC_VERSION.AVAILABLE IS 
'Признак доступности';

COMMENT ON COLUMN PMC_VERSION.CREATEDATE IS 
'Дата создания';

COMMENT ON COLUMN PMC_VERSION.CREATOR_ID IS 
'Идентификатор создателя';

COMMENT ON COLUMN PMC_VERSTATUS.ID IS 
'Идентификатор';

COMMENT ON COLUMN PMC_VERSTATUS.KIND IS 
'Статус версии
1 - в работе
2 - готово
3 - утверждено';

COMMENT ON COLUMN PMC_VERSTATUS.VERSION_ID IS 
'Идентификатор версии';

COMMENT ON COLUMN PMC_VERSTATUS.DATETILL IS 
'Дата начала действия';

COMMENT ON COLUMN PMC_VERSTATUS.DATEFROM IS 
'Дата окончания действия';

COMMENT ON COLUMN PMC_VERSTATUS.CREATOR_ID IS 
'Идентификатор создателя';

COMMENT ON COLUMN PMC_VERSTATUS.CREATEDATE IS 
'Дата создания';

COMMENT ON COLUMN PP_CATALOG_WAREHOUSE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_CATALOG_WAREHOUSE.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN PP_CATALOG_WAREHOUSE.SAFETY_LEVEL IS 
'Страховой запас';

COMMENT ON COLUMN PP_CATALOG_WAREHOUSE.MRP_DAMPING_DAYS IS 
'Количество дней демпфирования для MRP';

COMMENT ON COLUMN PP_CATALOG_WAREHOUSE.DEMAND_FENCE_DAYS IS 
'Количество дней до границы стпроса';

COMMENT ON COLUMN PP_CATALOG_WAREHOUSE.ORDER_INTERVAL_DAYS IS 
'Интервал в днях между заказами';

COMMENT ON COLUMN PP_CATALOG_WAREHOUSE.WAREHOUSE_ID IS 
'Идентификатор склада хранения товара';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.MRP_RECOMENDATION_ID IS 
'Идентификатор ресомендации';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.MRP_VERSION_CONTROL_ID IS 
'Идентификатор версии MRP';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.MEASURE_ID IS 
'Единица измерения';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.WAREHOUSE_ID IS 
'Идентификатор склада';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.CATALOG_ID IS 
'Идентификатор позиции каталога';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.REQUIRED_DATE IS 
'Дата потребности';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.ORDER_QTY IS 
'Количество к закупке / перемещению';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.VENDOR_ID IS 
'Идентификатор поставщика';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.ORDER_DATE IS 
'Дата заказа';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.FIXED_INPUT IS 
'Признак фиксации поступления';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.REQUISITION_FLAG IS 
'Признак преобразования в заказы / заявки';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.SOURCE_WAREHOUSE_ID IS 
'Идентификатор склада-источника';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.PURCHASE_OR_TRANSFER IS 
'Назначение заказа
0 - закупка
1 - перемещений';

COMMENT ON COLUMN PP_FIRM_PLANNED_ORDER.MANUAL_ENTRY IS 
'Признак ручного создания записи';

COMMENT ON COLUMN PP_FORECAST_VERSION.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_FORECAST_VERSION.CODE IS 
'Код';

COMMENT ON COLUMN PP_FORECAST_VERSION.DESCRIPTION IS 
'Наименование';

COMMENT ON COLUMN PP_GENERIC_ITEM.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_GENERIC_ITEM.GENERIC_ITEM_CODE IS 
'Код';

COMMENT ON COLUMN PP_GENERIC_ITEM.GENERIC_ITEM_NAME IS 
'Наименование';

COMMENT ON COLUMN PP_GENERIC_ITEM.PLANNING_ITEM_FLAG IS 
'Флаг товара планируемого по ОПП';

COMMENT ON COLUMN PP_GENERIC_ITEM.PLANNING_SHELF_LIFE IS 
'Планируемый срок хнанения';

COMMENT ON COLUMN PP_GENERIC_ITEM.DEMAND_FENCE_DAYS IS 
'Дней до границы спроса';

COMMENT ON COLUMN PP_GENERIC_ITEM.DAYS_STOCK_COVER IS 
'Страховой запас в днях покрытия спроса';

COMMENT ON COLUMN PP_GENERIC_ITEM.MEASURE_ID IS 
'Единица измерения';

COMMENT ON COLUMN PP_GENERIC_ITEM.LOW_LEVEL_CODE IS 
'Код нижнего уровня';

COMMENT ON COLUMN PP_INVENTORY_FORECAST.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_INVENTORY_FORECAST.INVENTORY_FORECAST_CODE IS 
'Код';

COMMENT ON COLUMN PP_INVENTORY_FORECAST.DESCRIPTION IS 
'Наименование';

COMMENT ON COLUMN PP_INVENTORY_FORECAST_LINE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_INVENTORY_FORECAST_LINE.GENERIC_ITEM_ID IS 
'Идентификатор обобщенного товара';

COMMENT ON COLUMN PP_INVENTORY_FORECAST_LINE.INVENTORY_FORECAST_ID IS 
'Идентификатор прогноза складских запасов';

COMMENT ON COLUMN PP_INVENTORY_FORECAST_LINE.EFF_ON_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN PP_INVENTORY_FORECAST_LINE.EFF_OFF_DATE IS 
'Дата окончания действия';

COMMENT ON COLUMN PP_INVENTORY_FORECAST_LINE.QTY_ON_HAND IS 
'Прогнозируемое доступное количество';

COMMENT ON COLUMN PP_INVENTORY_FORECAST_LINE.WAREHOUSE_ID IS 
'Идентификатор склада';

COMMENT ON COLUMN PP_INVENTORY_FORECAST_LINE.MEASURE_ID IS 
'Единица измерения';

COMMENT ON COLUMN PP_ITEM_FAMILY.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_ITEM_FAMILY.PARENT_GENERIC_ITEM IS 
'Идентификатор родительского обобщенного товара';

COMMENT ON COLUMN PP_ITEM_FAMILY.PLANNING_LEVEL_ID IS 
'Идентификатор уровня планирования';

COMMENT ON COLUMN PP_ITEM_FAMILY.CHILD_GENERIC_ITEM IS 
'Идентификатор дочернего обобщенного товара';

COMMENT ON COLUMN PP_ITEM_FAMILY.EFF_ON_DATE IS 
'Дата начала действия';

COMMENT ON COLUMN PP_ITEM_FAMILY.EFF_OFF_DATE IS 
'Дата окончания действия';

COMMENT ON COLUMN PP_ITEM_FAMILY.ALLOCATION_PERCENT IS 
'Процент входимости дочернего товара в родительский';

COMMENT ON COLUMN PP_MPS.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_MPS.PLANNING_LEVEL_ID IS 
'Идентификатор уровня планирования';

COMMENT ON COLUMN PP_MPS.INVENTORY_FORECAST_ID IS 
'Идентификатор прогноза уровня складских запасов';

COMMENT ON COLUMN PP_MPS.FORECAST_VERSION_ID IS 
'Идентификатор версии прогноза';

COMMENT ON COLUMN PP_MPS.CODE IS 
'Код';

COMMENT ON COLUMN PP_MPS.DEMAND_FENCE_DATE IS 
'Дата начала отсчета до границы спроса';

COMMENT ON COLUMN PP_MPS.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN PP_MPS.PLANNING_DATE IS 
'Дата старта плана';

COMMENT ON COLUMN PP_MPS.PP_LEVEL_PROCESSED_TO IS 
'Код нижнего уровня, до которого происходит обработка';

COMMENT ON COLUMN PP_MPS.PRODUCTION IS 
'Учитывать текущее производство';

COMMENT ON COLUMN PP_MPS.PROFILE_APPLIED IS 
'Учитывать профили производства';

COMMENT ON COLUMN PP_MPS.PURCHASES_FORECASTS IS 
'Учитывать прогнозы закупок';

COMMENT ON COLUMN PP_MPS.PURCHASES_LIVE IS 
'Учитывать заказы поставщикам';

COMMENT ON COLUMN PP_MPS.QTY_ON_HAND IS 
'Учитывать текущие заказы';

COMMENT ON COLUMN PP_MPS.SALES_FORECASTS IS 
'Учитывать прогнозы продаж';

COMMENT ON COLUMN PP_MPS.SALES_LIVE IS 
'Учитывать заказы клиентов';

COMMENT ON COLUMN PP_MPS.WAREHOUSE_TRANSFERS IS 
'Учитывать заказы на перемещение';

COMMENT ON COLUMN PP_MPS.WEEK_CAL_ID IS 
'Идентификатор недельного календаря';

COMMENT ON COLUMN PP_MPS.MPS_VERSION IS 
'Номер версии';

COMMENT ON COLUMN PP_MPS.LAST_RUN_DATETIME IS 
'Дата и время последнего расчета';

COMMENT ON COLUMN PP_MPS_LINE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_MPS_LINE.PLANNING_ITEM_ID IS 
'Идентификатор обобщенного товара';

COMMENT ON COLUMN PP_MPS_LINE.INVENTORY_FORECAST_ID IS 
'Идентификатор прогноза складских запасов';

COMMENT ON COLUMN PP_MPS_LINE.FORECAST_VERSION_ID IS 
'Идентификатор прогноза';

COMMENT ON COLUMN PP_MPS_LINE.MPS_ID IS 
'Идентификатор производственного плана';

COMMENT ON COLUMN PP_MPS_LINE.ADJUSTMENT_QTY IS 
'Ручная корректировка плана';

COMMENT ON COLUMN PP_MPS_LINE.BUCKET_OFFSET IS 
'Смещение периода';

COMMENT ON COLUMN PP_MPS_LINE.BUCKET_OFFSET_DATE IS 
'Дата начала бакета';

COMMENT ON COLUMN PP_MPS_LINE.DEMAND_FENCE_DATE IS 
'Дата начала отсчета до границы спроса';

COMMENT ON COLUMN PP_MPS_LINE.DEMAND_QTY IS 
'Потребность в производстве';

COMMENT ON COLUMN PP_MPS_LINE.MPS_SEQUENCE IS 
'Порядковый номер строки плана';

COMMENT ON COLUMN PP_MPS_LINE.OUTPUT_MPS_SEQUENCE IS 
'Ссылка на родительскую строку плана';

COMMENT ON COLUMN PP_MPS_LINE.PLANNED_QTY IS 
'Количество планируемое к производству';

COMMENT ON COLUMN PP_MPS_LINE.PP_DEPENDANT_DEMAND IS 
'Суммарная зависимая потребность';

COMMENT ON COLUMN PP_MPS_LINE.PP_LEVEL_CODE IS 
'Код нижнего уровня для данного товара';

COMMENT ON COLUMN PP_MPS_LINE.PRODUCTION_DEMAND_QTY IS 
'Зависимая потребность';

COMMENT ON COLUMN PP_MPS_LINE.PRODUCTION_PROFILE_QTY IS 
'Количество к производству после наложения профиля';

COMMENT ON COLUMN PP_MPS_LINE.PRODUCTION_QTY IS 
'Количество, производимое по тек ЗНП';

COMMENT ON COLUMN PP_MPS_LINE.PURCHASE_FORECAST_QTY IS 
'Количество, прогнозируемое к закупке';

COMMENT ON COLUMN PP_MPS_LINE.PURCHASE_ORDER_QTY IS 
'Количество, по заказам на закупку';

COMMENT ON COLUMN PP_MPS_LINE.PURCHASE_QTY IS 
'Закупаемое количество';

COMMENT ON COLUMN PP_MPS_LINE.QTY_AVAILABLE IS 
'Количество, доступное на складах';

COMMENT ON COLUMN PP_MPS_LINE.SALES_FORECAST_QTY IS 
'Количество, прогнозируемое к продаже';

COMMENT ON COLUMN PP_MPS_LINE.SALES_ORDER_QTY IS 
'Количество, по заказам клиентов';

COMMENT ON COLUMN PP_MPS_LINE.SALES_QTY IS 
'Продаваемое количество';

COMMENT ON COLUMN PP_MPS_LINE.TRANSFERS_IN_QTY IS 
'Количество, которое будет получено по заказам на межскладское перемещение';

COMMENT ON COLUMN PP_MPS_LINE.TRANSFERS_OUT_QTY IS 
'Потребность по заказам на межскладское перемещение';

COMMENT ON COLUMN PP_MPS_LINE.LIVE_PRODUCTION_DEMAND IS 
'ПОтребность в полуфабрикатах';

COMMENT ON COLUMN PP_MPS_LINE.SAFETY_LEVEL_QTY IS 
'Страховой запас';

COMMENT ON COLUMN PP_MPS_LINE.MEASURE_ID IS 
'Единица измерения';

COMMENT ON COLUMN PP_MPS_LINE.FIRM_PLAN_SUGGESTED IS 
'Признак одобрения ОПП';

COMMENT ON COLUMN PP_MPS_LINE.MPS_ORDERED IS 
'Признак создания ЗНП';

COMMENT ON COLUMN PP_MRP_INPUTS.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_MRP_INPUTS.MRP_VERSION_CONTROL_ID IS 
'Идентификатор версии расчета MRP';

COMMENT ON COLUMN PP_MRP_INPUTS.PP_REFERENCE IS 
'Ссылка на источник поступления';

COMMENT ON COLUMN PP_MRP_INPUTS.REFERENCE_ID IS 
'Идентификатор строки прогноза';

COMMENT ON COLUMN PP_MRP_INPUTS.REQUIRED_DATE IS 
'Дата поступления';

COMMENT ON COLUMN PP_MRP_INPUTS.MRP_QUANTITY IS 
'Количество';

COMMENT ON COLUMN PP_MRP_INPUTS.MRP_ORDER_TYPE IS 
'Тип поступления';

COMMENT ON COLUMN PP_MRP_INPUTS.MRP_SOURCE IS 
'Источник поступления';

COMMENT ON COLUMN PP_MRP_INPUTS.FIXED_INPUT IS 
'Признак фиксации поступления';

COMMENT ON COLUMN PP_MRP_INPUTS.BATCH_DATE IS 
'Дата истечения срока годности';

COMMENT ON COLUMN PP_MRP_INPUTS.WAREHOUSE_ID IS 
'Идентификатор склада';

COMMENT ON COLUMN PP_MRP_INPUTS.CATALOG_ID IS 
'Идентификатор товара';

COMMENT ON COLUMN PP_MRP_OUTPUTS.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_MRP_OUTPUTS.MRP_VERSION_CONTROL_ID IS 
'Идентификатор версии расчета MRP';

COMMENT ON COLUMN PP_MRP_OUTPUTS.REQUIRED_DATE IS 
'Дата потребности';

COMMENT ON COLUMN PP_MRP_OUTPUTS.PP_REFERENCE IS 
'Ссылка на источник потребности';

COMMENT ON COLUMN PP_MRP_OUTPUTS.REFERENCE_ID IS 
'Идентификатор строки прогноза';

COMMENT ON COLUMN PP_MRP_OUTPUTS.MRP_QUANTITY IS 
'Количество';

COMMENT ON COLUMN PP_MRP_OUTPUTS.MRP_ORDER_TYPE IS 
'Тип потребности';

COMMENT ON COLUMN PP_MRP_OUTPUTS.MRP_SOURCE IS 
'Источник потребности';

COMMENT ON COLUMN PP_MRP_OUTPUTS.WAREHOUSE_ID IS 
'Идентификатор склада';

COMMENT ON COLUMN PP_MRP_OUTPUTS.CATALOG_ID IS 
'Идентификатор тавара';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.MRP_VERSION_CONTROL_ID IS 
'Идентификатор версии ПММ';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.REQUIRED_DATE IS 
'Дата потребности';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.ORDER_QTY IS 
'Количество к закупке / перемещению';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.MRP_QUANTITY IS 
'Количество к закупке / перемещению по расчету';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.PURCHASE_LEAD_TIME IS 
'Количество дней на закупку';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.FIRM_PLAN_SUGGESTED_ORDER IS 
'Признак одобрения рекомендации';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.ORDER_DATE IS 
'Дата заказа';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.MRP_ARREARS_FLAG IS 
'Признак просроченности';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.MRP_ORDERED IS 
'Признак преобразованности в заказ';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.PURCHASE_OR_TRANSFER IS 
'Источник заказа
0 - закупка
1 - перемещение';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.CATALOG_ID IS 
'Идентификатор позиции каталога';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.MEASURE_ID IS 
'Единица измерения';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.VENDOR_ID IS 
'Идентификатор поставщика';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.WAREHOUSE_ID IS 
'Идентификатор склада';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.SOURCE_WAREHOUSE_ID IS 
'Идентификатор исходного склада';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.PP_REFERENCE IS 
'Ссылка';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.MANUAL_ENTRY IS 
'Признак ручного создания записи';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.MRP_RESCHEDULE_FLAG IS 
'Способ перепланирования';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.MRP_SOURCE IS 
'Источник возникновения';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.ORIGINAL_DATE IS 
'Исходная дата';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.BATCH_DATE IS 
'Дата истечения срока';

COMMENT ON COLUMN PP_MRP_RECOMMENDATION.ORIGINAL_QUANTITY IS 
'Исходное количество';

COMMENT ON COLUMN PP_MRP_REPORT.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_MRP_REPORT.MRP_VERSION_CONTROL_ID IS 
'Идентификатор версии расчета';

COMMENT ON COLUMN PP_MRP_REPORT.REQUIRED_DATE IS 
'Дата потребности';

COMMENT ON COLUMN PP_MRP_REPORT.MRP_ORDER_TYPE IS 
'Тип заказа MRP';

COMMENT ON COLUMN PP_MRP_REPORT.PP_REFERENCE IS 
'Ссылка на источник потребности';

COMMENT ON COLUMN PP_MRP_REPORT.QTY_AVAILABLE IS 
'Доступное количество';

COMMENT ON COLUMN PP_MRP_REPORT.MRP_QUANTITY IS 
'Доступное количество';

COMMENT ON COLUMN PP_MRP_REPORT.MRP_SOURCE IS 
'Источник потребности/поступления';

COMMENT ON COLUMN PP_MRP_REPORT.MRP_INPUT_OUTPUT_FLAG IS 
'Признак потребности/поступления';

COMMENT ON COLUMN PP_MRP_REPORT.FIXED_INPUT IS 
'Признак фиксации поступления';

COMMENT ON COLUMN PP_MRP_REPORT.ORDER_DATE IS 
'Дата заказа';

COMMENT ON COLUMN PP_MRP_REPORT.MRP_ARREARS_FLAG IS 
'Признак просроченности';

COMMENT ON COLUMN PP_MRP_REPORT.WAREHOUSE_ID IS 
'Идентификатор склада';

COMMENT ON COLUMN PP_MRP_REPORT.CATALOG_ID IS 
'Идентификатор товара';

COMMENT ON COLUMN PP_MRP_REPORT.ORIGINAL_DATE IS 
'Исходная дата';

COMMENT ON COLUMN PP_MRP_REPORT.ORIGINAL_QUANTITY IS 
'Исходное количество';

COMMENT ON COLUMN PP_MRP_REPORT."SEQUENCE" IS 
'Порядковый номер записи в данной версии расчета MRP';

COMMENT ON COLUMN PP_MRP_REPORT.MRP_RESCHEDULE_FLAG IS 
'Способ перепланирования';

COMMENT ON COLUMN PP_MRP_SHORTAGE.ID IS 
'Идентификтаор';

COMMENT ON COLUMN PP_MRP_SHORTAGE.MRP_VERSION_CONTROL_ID IS 
'Идентификатор версии расчета MRP';

COMMENT ON COLUMN PP_MRP_SHORTAGE.REQUIRED_DATE IS 
'Дата потребности';

COMMENT ON COLUMN PP_MRP_SHORTAGE.SHORTAGE_QTY IS 
'Дефицитное количество';

COMMENT ON COLUMN PP_MRP_SHORTAGE.WAREHOUSE_ID IS 
'Идентификатор склада';

COMMENT ON COLUMN PP_MRP_SHORTAGE.CATALOG_ID IS 
'Идентификатор позиции каталога';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.MRP_VERSION_CONTROL_ID IS 
'Идентификатор версии расчета MRP';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.REQUIRED_DATE IS 
'Дата';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.SALES_ORDER_QTY IS 
'Количество по заказам на продажу';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.SALES_FORECAST_QTY IS 
'Количество по прогнозам на продажу';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.SALES_QTY IS 
'Потребность в продаже';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.PRODUCTION_QTY IS 
'Количество, которое будет произведено по ЗНП';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.PLANNED_PRODUCTION_QTY IS 
'Количество, которое будет произведено по MPS';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.PRODUCTION_REQUIREMENTS IS 
'Потребность под выполение ЗНП';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.PLANNED_PRODUCTION_REQUIREMENTS IS 
'Потребность под выполнение MPS';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.SUGGESTED_PURCHASES IS 
'Предложенные закупки';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.QTY_ON_HAND IS 
'Количество в наличии на складе';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.QTY_AVAILABLE IS 
'Планируемое количество в наличии';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.SUGGESTED_TRANSFERS IS 
'Предложенное кол к перемещению с др склада';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.TOTAL_OUTPUTS IS 
'Всего потребности';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.WAREHOUSE_ID IS 
'Идентификатор склада';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.CATALOG_ID IS 
'Идентификатор позиции каталога';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.TOTAL_INPUTS_AFTER IS 
'Всего поступление';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.TRANSFER_QTY_AFTER IS 
'Количество по заказам на перемещение';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.PURCHASE_ORDER_QTY_AFTER IS 
'Количество по заказам поставщикам';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.EXPIRY_QTY IS 
'Просроченное количество';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.FIRM_PLAN_TRANSF_OUT_AFTER IS 
'Количество, которое поступит по подтвержденным плановым заказам на межскладское перемещение';

COMMENT ON COLUMN PP_MRP_TOTALS_BY_DATE.PURCHASE_QTY_AFTER IS 
'Закупаемое количество';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.CODE IS 
'Код';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.MRP_VERSION IS 
'Номер версии расчета ППМ';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.MRP_SO_FLAG IS 
'Обрабатывать заказы на продажу';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.MRP_SF_FLAG IS 
'Обрабатывать прогнозы на продажу';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.MRP_PO_FLAG IS 
'Обрабатывать заказы на закупку';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.MRP_PF_FLAG IS 
'Обрабатывать прогнозы на закупку';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.MRP_QOH_FLAG IS 
'Обрабатывать количество в наличии';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.MRP_FIRM_PLANNED_ORDERS_FLAG IS 
'Обрабатывать одобренные предложения на перемещения';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.MRP_JOB_FLAG IS 
'Обрабатывать ЗНП';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.DAMPING_DAYS IS 
'Количество дней демпфирвоания';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.QC_RECEIVING_DAYS IS 
'Количество дней на приемку по качеству';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.RUN_DATE IS 
'Дата запуска MRP';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.MRP_START_DATE IS 
'Начало периода, охватываемого расчетом';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.MRP_END_DATE IS 
'Окончание периода, охватываемого расчетом';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.LAST_RUN_DATETIME IS 
'Дата последнего запуска MRP';

COMMENT ON COLUMN PP_MRP_VERSION_CONTROL.MRP_SUGGESTED_ORDERS_FIRMED IS 
'Завершение работы с рекомендациями ППМ';

COMMENT ON COLUMN PP_MRP_VERSION_FORECAST.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_MRP_VERSION_FORECAST.MRP_VERSION_CONTROL_ID IS 
'Идентификатор версии ППМ';

COMMENT ON COLUMN PP_MRP_VERSION_FORECAST.FORECAST_TYPE IS 
'Тип прогноза
0 - продажи
1 - закупки';

COMMENT ON COLUMN PP_MRP_VERSION_FORECAST.FORECAST_VERSION_ID IS 
'Идентификатор версии прогноза';

COMMENT ON COLUMN PP_MRP_VERSION_MPS.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_MRP_VERSION_MPS.MRP_VERSION_CONTROL_ID IS 
'Идентификатор версии ППМ';

COMMENT ON COLUMN PP_MRP_VERSION_MPS.MPS_ID IS 
'Идентификатор производственного плана';

COMMENT ON COLUMN PP_PLANNING_FORECAST.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_PLANNING_FORECAST.PLANNING_ITEM_ID IS 
'Идентификатор обобщенного товара';

COMMENT ON COLUMN PP_PLANNING_FORECAST.PLANNING_LEVEL_ID IS 
'Идентификатор уровня планирования';

COMMENT ON COLUMN PP_PLANNING_FORECAST.FORECAST_VERSION_ID IS 
'Идентификатор версии прогноза';

COMMENT ON COLUMN PP_PLANNING_FORECAST.FORECAST_TYPE IS 
'Тип прогноза
0 - прогноз продаж
1 - прогноз закупок';

COMMENT ON COLUMN PP_PLANNING_FORECAST.FORECAST_METHOD IS 
'Метод прогноза
0 - прогнозируемое количество задается на период
1 - прогнозируемое количество задается на дату';

COMMENT ON COLUMN PP_PLANNING_FORECAST.BUCKET_OFFSET IS 
'Смещение периода';

COMMENT ON COLUMN PP_PLANNING_FORECAST.REQUIRED_DATE IS 
'Дата прогноза';

COMMENT ON COLUMN PP_PLANNING_FORECAST.FORECAST_QUANTITY IS 
'Прогнозируемое количество';

COMMENT ON COLUMN PP_PLANNING_FORECAST.MEASURE_ID IS 
'Единица измерения';

COMMENT ON COLUMN PP_PLANNING_FORECAST.CATALOG_ID IS 
'Идентификатор позиции каталога';

COMMENT ON COLUMN PP_PLANNING_FORECAST.WAREHOUSE_ID IS 
'Идентификатор склада';

COMMENT ON COLUMN PP_PLANNING_LEVEL.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_PLANNING_LEVEL.PLANNING_LEVEL_NUM IS 
'Номер уровня планирования';

COMMENT ON COLUMN PP_PLANNING_LEVEL.DESCRIPTION IS 
'Наименование';

COMMENT ON COLUMN PP_PLANNING_LEVEL.TIME_FENCE IS 
'Длина горизонта планирования';

COMMENT ON COLUMN PP_PLANNING_LEVEL_BUCKET.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_PLANNING_LEVEL_BUCKET.PLANNING_LEVEL_ID IS 
'Идентификатор уровня планирования';

COMMENT ON COLUMN PP_PLANNING_LEVEL_BUCKET.START_DATE IS 
'Начальная дата';

COMMENT ON COLUMN PP_PLANNING_LEVEL_BUCKET.END_DATE IS 
'Конечная дата';

COMMENT ON COLUMN PP_PLANNING_LEVEL_BUCKET.BUCKET_OFFSET IS 
'Порядковый номер периода';

COMMENT ON COLUMN PP_PRODUCTION_PROFILE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_PRODUCTION_PROFILE.PLANNING_LEVEL_ID IS 
'Идентификатор уровня планирования';

COMMENT ON COLUMN PP_PRODUCTION_PROFILE.GENERIC_ITEM_ID IS 
'Идентификатор обобщенного товара';

COMMENT ON COLUMN PP_PRODUCTION_PROFILE.START_BUCKET_OFFSET IS 
'Номер бакета начального периода';

COMMENT ON COLUMN PP_PRODUCTION_PROFILE.END_BUCKET_OFFSET IS 
'Номер бакета конечного периода';

COMMENT ON COLUMN PP_PRODUCTION_PROFILE.PRODUCTION_RATIO IS 
'Коэффициент производства';

COMMENT ON COLUMN PP_PRODUCTION_PROFILE.BUCKET_PRODUCTION_RATIO IS 
'Коэффициент производства в одном периоде';

COMMENT ON COLUMN PP_RCCP_DETAIL.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_RCCP_DETAIL.LOAD_MEASURE_ID IS 
'Идентификатор единицы измерения';

COMMENT ON COLUMN PP_RCCP_DETAIL.PLANNING_ITEM_ID IS 
'Идентификатор обобщенного товара';

COMMENT ON COLUMN PP_RCCP_DETAIL.RCCP_HEADER_ID IS 
'Идентификатор УППМ';

COMMENT ON COLUMN PP_RCCP_DETAIL.RESOURCE_GROUP_ID IS 
'Идентификатор группы ресурсов';

COMMENT ON COLUMN PP_RCCP_DETAIL.BUCKET_OFFSET IS 
'Смещение периода';

COMMENT ON COLUMN PP_RCCP_DETAIL.MPS_BUCKET_OFFSET IS 
'Смещение периода из ОПП';

COMMENT ON COLUMN PP_RCCP_DETAIL.LOAD_VALUE IS 
'Загрузка, вызванная строкой производственного плана';

COMMENT ON COLUMN PP_RCCP_DETAIL.LOAD_ADJUSTMENT_VALUE IS 
'Загрузка, вызванная ручной корректировкой';

COMMENT ON COLUMN PP_RCCP_DETAIL.LOAD_PRODUCTION_VALUE IS 
'Загрузка, вызванная запущенными в производство ЗНП';

COMMENT ON COLUMN PP_RCCP_DETAIL.LOAD_DEMAND_VALUE IS 
'Загрузка от плана сбыта';

COMMENT ON COLUMN PP_RCCP_HEADER.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_RCCP_HEADER.MPS_ID IS 
'Идентификатор производственногго плана';

COMMENT ON COLUMN PP_RCCP_HEADER.NAME IS 
'Наименование';

COMMENT ON COLUMN PP_RCCP_HEADER.RCCP_VERSION IS 
'Версия';

COMMENT ON COLUMN PP_RCCP_HEADER.LAST_RUN_DATETIME IS 
'Дата последнегего запуска';

COMMENT ON COLUMN PP_RCCP_HEADER.WEEK_CAL_ID IS 
'Идентификатор недельного календаря';

COMMENT ON COLUMN PP_RCCP_RESOURCE_LOAD.ID IS 
'Идентификатор';

COMMENT ON COLUMN PP_RCCP_RESOURCE_LOAD.LOAD_MEASURE_ID IS 
'Идентификатор единицы измерения';

COMMENT ON COLUMN PP_RCCP_RESOURCE_LOAD.RCCP_HEADER_ID IS 
'Идентификатор УППМ';

COMMENT ON COLUMN PP_RCCP_RESOURCE_LOAD.RESOURCE_GROUP_ID IS 
'Идентификатор ресурса';

COMMENT ON COLUMN PP_RCCP_RESOURCE_LOAD.BUCKET_OFFSET IS 
'Смещение периода';

COMMENT ON COLUMN PP_RCCP_RESOURCE_LOAD.LOAD_VALUE IS 
'Загрузка, вызванная строкой производственного плана';

COMMENT ON COLUMN PP_RCCP_RESOURCE_LOAD.LOAD_ADJUSTMENT_VALUE IS 
'Загрузка, вызванная ручной корректировкой';

COMMENT ON COLUMN PP_RCCP_RESOURCE_LOAD.LOAD_PRODUCTION_VALUE IS 
'Загрузка, вызванная запущенными в производство ЗНП';

COMMENT ON COLUMN PP_RCCP_RESOURCE_LOAD.LOAD_DEMAND_VALUE IS 
'Загрузка от плана сбыта';

COMMENT ON COLUMN PP_RCCP_RESOURCE_LOAD.CAPACITY IS 
'Емкость ресурса';

COMMENT ON COLUMN PP_RCCP_RESOURCE_LOAD.MAX_CAPACITY IS 
'Максимальная емкость ресурса';

COMMENT ON COLUMN PREF_ABBREVIATION.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_ABBREVIATION.ALEVEL IS 
'Уровень адресного объекта';

COMMENT ON COLUMN PREF_ABBREVIATION.SCNAME IS 
'Сокращение';

COMMENT ON COLUMN PREF_ABBREVIATION.SOCRNAME IS 
'Наименование';

COMMENT ON COLUMN PREF_ABBREVIATION.KOD_T_ST IS 
'Служебное поле';

COMMENT ON COLUMN PREF_ADDITIONAL_EDUCATION_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_ADDITIONAL_EDUCATION_KIND.CODE IS 
'Код';

COMMENT ON COLUMN PREF_ADDITIONAL_EDUCATION_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_ADDITIONAL_EDUCATION_KIND.OKIN IS 
'Код ОКИН';

COMMENT ON COLUMN PREF_ADDRESS.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_ADDRESS.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_ADDRESS.ADDRESS_KIND IS 
'Тип адреса
0 - фактический
1 - прописка';

COMMENT ON COLUMN PREF_ADDRESS.BEGINDATE IS 
'Действует с';

COMMENT ON COLUMN PREF_ADDRESS.FULL_ADDRESS IS 
'Полный адрес';

COMMENT ON COLUMN PREF_ADDRESS.POST_INDEX IS 
'Почтовый индекс';

COMMENT ON COLUMN PREF_ADDRESS.COUNTRY IS 
'Страна';

COMMENT ON COLUMN PREF_ADDRESS.REGION IS 
'Регион';

COMMENT ON COLUMN PREF_ADDRESS.DISTRICT IS 
'Район';

COMMENT ON COLUMN PREF_ADDRESS.DISTRICT_TYPE IS 
'Соращенное наименование типа района';

COMMENT ON COLUMN PREF_ADDRESS.CITY IS 
'Город';

COMMENT ON COLUMN PREF_ADDRESS.CITY_TYPE IS 
'Сокращенное наименование типа города';

COMMENT ON COLUMN PREF_ADDRESS.AREA IS 
'Населенный пункт';

COMMENT ON COLUMN PREF_ADDRESS.AREA_TYPE IS 
'Сокращенное наименование типа населенного пункта';

COMMENT ON COLUMN PREF_ADDRESS.STREET IS 
'Улица';

COMMENT ON COLUMN PREF_ADDRESS.STREET_TYPE IS 
'Сокращенное наименование типа улицы';

COMMENT ON COLUMN PREF_ADDRESS.HOUSE IS 
'Дом';

COMMENT ON COLUMN PREF_ADDRESS."BLOCK" IS 
'Корпус';

COMMENT ON COLUMN PREF_ADDRESS.FLAT IS 
'Квартира';

COMMENT ON COLUMN PREF_ADDRESS.REGION_TYPE IS 
'Сокращенное наименование типа региона';

COMMENT ON COLUMN PREF_ADDRESS.KLADR_CODE IS 
'Код классификатора, соответствующий адресу';

COMMENT ON COLUMN PREF_CALC_PERIOD.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_CALC_PERIOD.BEGINDATE IS 
'Дата начала периода';

COMMENT ON COLUMN PREF_CALC_PERIOD.ENDDATE IS 
'Дата окончания периода';

COMMENT ON COLUMN PREF_CALC_PERIOD.STAFFLIST_ID IS 
'Идентификатор штатного расписания';

COMMENT ON COLUMN PREF_CALC_PERIOD.PNAME IS 
'Наименование';

COMMENT ON COLUMN PREF_CONFIG.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_CONFIG.COSTS_ANL_ID IS 
'Идентификатор позиции каталога, соответствующей аналитике состава затрат';

COMMENT ON COLUMN PREF_CONFIG.BASE_CURRENCY IS 
'Код базовой валюты';

COMMENT ON COLUMN PREF_CONFIG.NAT_CURRENCY IS 
'Код национальной валюты';

COMMENT ON COLUMN PREF_CONFIG.CURRENCY_PREC IS 
'Точность денежных вычислений';

COMMENT ON COLUMN PREF_CONFIG.CUR_RATE_AUTHORITY_ID IS 
'Источник валюты';

COMMENT ON COLUMN PREF_CONFIG.CUR_RATE_TYPE_ID IS 
'Тип валюты';

COMMENT ON COLUMN PREF_COSTS_ANL.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_COSTS_ANL.ACODE IS 
'Код аналитики';

COMMENT ON COLUMN PREF_COSTS_ANL.ANAME IS 
'Наименование аналитики';

COMMENT ON COLUMN PREF_COSTS_ANL.ANLLEVEL IS 
'Уровень аналитики (1-5)';

COMMENT ON COLUMN PREF_COSTS_ANL.PARENT_ID IS 
'Идентификатор аналитики верхнего уровня';

COMMENT ON COLUMN PREF_COUNTRY.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_COUNTRY.CCODE IS 
'Код страны';

COMMENT ON COLUMN PREF_COUNTRY.CNAME IS 
'Наименование страны';

COMMENT ON COLUMN PREF_DEDUCTION_KIND.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_DEDUCTION_KIND.DEDUCTIONCLASS IS 
'Категория вычетов:
0 - нет
1 - на себя
2 - на детей
3 - на иждивенцев';

COMMENT ON COLUMN PREF_DEDUCTION_KIND.DCODE IS 
'Код вычета';

COMMENT ON COLUMN PREF_DEDUCTION_KIND.DNAME IS 
'Наименование вычета';

COMMENT ON COLUMN PREF_DEDUCTION_KIND.MINSALARYNUMBER IS 
'Число минимальных зарплат';

COMMENT ON COLUMN PREF_DEDUCTION_KIND.FIXEDSUM IS 
'Фиксированная сумма';

COMMENT ON COLUMN PREF_DEDUCTION_KIND.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN PREF_DEDUCTION_KIND.MAX_INCOME IS 
'Максимальный доход';

COMMENT ON COLUMN PREF_EDUCATION_DEGREE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_EDUCATION_DEGREE.CODE IS 
'Код';

COMMENT ON COLUMN PREF_EDUCATION_DEGREE.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_EDUCATION_DEGREE.OKIN IS 
'Код ОКИН';

COMMENT ON COLUMN PREF_FAMILYDEDUCTIONS.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_FAMILYDEDUCTIONS.DEDUCTIONKIND_ID IS 
'Идентификатор вида вычета';

COMMENT ON COLUMN PREF_FAMILYDEDUCTIONS.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN PREF_FAMILYDEDUCTIONS.ENDDATE IS 
'Дата окончания действия';

COMMENT ON COLUMN PREF_FAMILYDEDUCTIONS.RATIO IS 
'Коэффициент вычета';

COMMENT ON COLUMN PREF_FAMILYDEDUCTIONS.FAMILY_MEMBER_ID IS 
'Идентификатор члена семьи';

COMMENT ON COLUMN PREF_FAMILYMEMBERS.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_FAMILYMEMBERS.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_FAMILYMEMBERS.FNAME IS 
'Имя';

COMMENT ON COLUMN PREF_FAMILYMEMBERS.PATRONYMIC IS 
'Отчество';

COMMENT ON COLUMN PREF_FAMILYMEMBERS.SURNAME IS 
'Фамилия';

COMMENT ON COLUMN PREF_FAMILYMEMBERS.RELATION_ID IS 
'Идентификатор степени родства';

COMMENT ON COLUMN PREF_FAMILYMEMBERS.BIRTHDATE IS 
'Дата рождения';

COMMENT ON COLUMN PREF_FAMILYRELATION.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_FAMILYRELATION.RCODE IS 
'Код степени родства';

COMMENT ON COLUMN PREF_FAMILYRELATION.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN PREF_FAMILYRELATION.OKIN IS 
'Код ОКИН';

COMMENT ON COLUMN PREF_FAMILYSTATUS.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_FAMILYSTATUS.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_FAMILYSTATUS.STATUSKIND_ID IS 
'Идентификатор вида семейного положения';

COMMENT ON COLUMN PREF_FAMILYSTATUS.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN PREF_FAMILYSTATUS_KIND.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_FAMILYSTATUS_KIND.KCODE IS 
'Код типа';

COMMENT ON COLUMN PREF_FAMILYSTATUS_KIND.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN PREF_FAMILYSTATUS_KIND.OKIN IS 
'Код ОКИН';

COMMENT ON COLUMN PREF_FOREIGN_LANGUAGE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_FOREIGN_LANGUAGE.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_FOREIGN_LANGUAGE.OKIN IS 
'Код ОКИН';

COMMENT ON COLUMN PREF_IDENTDOC.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_IDENTDOC.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_IDENTDOC.IDENTDOCKIND_ID IS 
'Идентификатор типа документа';

COMMENT ON COLUMN PREF_IDENTDOC.IS_BASIC IS 
'Признак базового документа';

COMMENT ON COLUMN PREF_IDENTDOC.SERIES_LEFT IS 
'Левая часть серии';

COMMENT ON COLUMN PREF_IDENTDOC.SERIES_DIVIDER IS 
'Разделитель серии';

COMMENT ON COLUMN PREF_IDENTDOC.SERIES_RIGHT IS 
'Правая часть серии';

COMMENT ON COLUMN PREF_IDENTDOC.NUMBER IS 
'Номер документа';

COMMENT ON COLUMN PREF_IDENTDOC.WHO_ISSUED IS 
'Кем выдан';

COMMENT ON COLUMN PREF_IDENTDOC.WHEN_ISSUED IS 
'Когда выдан';

COMMENT ON COLUMN PREF_IDENTDOC.ACTIVE_TILL IS 
'Действует до';

COMMENT ON COLUMN PREF_IDENTDOC.CITIZENSHIP IS 
'Гражданство';

COMMENT ON COLUMN PREF_IDENTDOC.ADDRESS_ID IS 
'Идентификатор адреса';

COMMENT ON COLUMN PREF_IDENTDOC.BIRTHDATE IS 
'Дата рождения';

COMMENT ON COLUMN PREF_IDENTDOC.NATIONALITY_ID IS 
'Идентификатор национальности';

COMMENT ON COLUMN PREF_IDENTDOC.BIRTHPLACE_COUNTRY IS 
'Место рождения: страна';

COMMENT ON COLUMN PREF_IDENTDOC.BIRTHPLACE_REGION IS 
'Место рождения: регион';

COMMENT ON COLUMN PREF_IDENTDOC.BIRTHPLACE_DISTRICT IS 
'Место рождения: район';

COMMENT ON COLUMN PREF_IDENTDOC.BIRTHPLACE_CITY IS 
'Место рождения: город';

COMMENT ON COLUMN PREF_IDENTDOC.BIRTHPLACE_OKATO IS 
'Код по ОКАТО';

COMMENT ON COLUMN PREF_IDENTDOC_KIND.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_IDENTDOC_KIND.KCODE IS 
'Код типа документа';

COMMENT ON COLUMN PREF_IDENTDOC_KIND.KNAME IS 
'Наименование типа документа';

COMMENT ON COLUMN PREF_IDENTDOC_KIND.LSERIES_LENGTH IS 
'Длина левой части серии';

COMMENT ON COLUMN PREF_IDENTDOC_KIND.RSERIES_LENGTH IS 
'Длина правой части серии';

COMMENT ON COLUMN PREF_IDENTDOC_KIND.SERIES_DIVIDER IS 
'Символ-разделитель серии';

COMMENT ON COLUMN PREF_IDENTDOC_KIND.NUMBER_LENGTH IS 
'Длина номера';

COMMENT ON COLUMN PREF_INSUREDCLASS.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_INSUREDCLASS.CCODE IS 
'Код категории';

COMMENT ON COLUMN PREF_INSUREDCLASS.CNAME IS 
'Наименование категории';

COMMENT ON COLUMN PREF_INSUREDCLASS.INSURED_PERCENT IS 
'Процент взносов застрахованного лица';

COMMENT ON COLUMN PREF_INSUREDCLASS.EMPLOYER_PERCENT IS 
'Процент взносов работодателя';

COMMENT ON COLUMN PREF_JOB.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_JOB.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_JOB.OKPDTR IS 
'Код ОКПДТР';

COMMENT ON COLUMN PREF_KLADR.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_KLADR.KNAME IS 
'Наименование объекта';

COMMENT ON COLUMN PREF_KLADR.KTYPE IS 
'Сокращенное наименование элемента адреса';

COMMENT ON COLUMN PREF_KLADR.KCODE IS 
'Иерархический классификационный код объекта';

COMMENT ON COLUMN PREF_KLADR.POST_INDEX IS 
'Почтовый индекс';

COMMENT ON COLUMN PREF_KLADR.GNINMB IS 
'Код налогового органа';

COMMENT ON COLUMN PREF_KLADR.OCATD IS 
'Код СОАТО';

COMMENT ON COLUMN PREF_KLADR.SYSCOD IS 
'Системный код';

COMMENT ON COLUMN PREF_LANGUAGE_KNOWLEDGE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_LANGUAGE_KNOWLEDGE.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_LANGUAGE_KNOWLEDGE.OKIN IS 
'Код ОКИН';

COMMENT ON COLUMN PREF_LEAVE_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_LEAVE_KIND.CODE IS 
'Код';

COMMENT ON COLUMN PREF_LEAVE_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_LEAVE_KIND.OKIN IS 
'Код ОКИН';

COMMENT ON COLUMN PREF_MILITARY_RANK.ID IS 
'Идентификтор';

COMMENT ON COLUMN PREF_MILITARY_RANK.CODE IS 
'Код';

COMMENT ON COLUMN PREF_MILITARY_RANK.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_MILITARY_RANK.OKIN IS 
'Код ОКИН';

COMMENT ON COLUMN PREF_MILITARY_RANK_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_MILITARY_RANK_KIND.CODE IS 
'Код';

COMMENT ON COLUMN PREF_MILITARY_RANK_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_MILITARY_VALIDITY.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_MILITARY_VALIDITY.CODE IS 
'Код';

COMMENT ON COLUMN PREF_MILITARY_VALIDITY.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_NATIONALITY.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_NATIONALITY.NNAME IS 
'Наименование национальности';

COMMENT ON COLUMN PREF_PERSONNEL.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_PERSONNEL.GROUP_ID IS 
'Идентификатор папки (группы)';

COMMENT ON COLUMN PREF_PERSONNEL.ACT_DATE IS 
'Действует с';

COMMENT ON COLUMN PREF_PERSONNEL.TABLE_NUMBER IS 
'Табельный номер';

COMMENT ON COLUMN PREF_PERSONNEL.NAME1 IS 
'Фимилия';

COMMENT ON COLUMN PREF_PERSONNEL.NAME2 IS 
'Имя';

COMMENT ON COLUMN PREF_PERSONNEL.NAME3 IS 
'Отчество';

COMMENT ON COLUMN PREF_PERSONNEL.BORNDATE IS 
'Дата рождения';

COMMENT ON COLUMN PREF_PERSONNEL.SEX IS 
'Пол:
0 - мужской
1 - женский';

COMMENT ON COLUMN PREF_PERSONNEL.STATURE IS 
'Рост';

COMMENT ON COLUMN PREF_PERSONNEL.MEASURE_UPCODE IS 
'Код единицы измерения роста';

COMMENT ON COLUMN PREF_PERSONNEL.PHOTO IS 
'Фотография сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL.PENSION_NUMBER IS 
'Номер карточки пенсионного страхования';

COMMENT ON COLUMN PREF_PERSONNEL.INSUREDCLASS_ID IS 
'Идентификатор категории плательщиков страховых взносов';

COMMENT ON COLUMN PREF_PERSONNEL.INN IS 
'Индивидуальный номер налогоплательщика (ИНН)';

COMMENT ON COLUMN PREF_PERSONNEL.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN PREF_PERSONNEL.EDUCATION_DEGREE_ID IS 
'Идентификатор степени образование';

COMMENT ON COLUMN PREF_PERSONNEL.LABOUR_CONTRACT_NUMBER IS 
'Номер трудового договора';

COMMENT ON COLUMN PREF_PERSONNEL.LABOUR_CONTRACT_DATE IS 
'Дата трудового договора';

COMMENT ON COLUMN PREF_PERSONNEL.ADDITIONAL_INFO IS 
'Дополнительное поле';

COMMENT ON COLUMN PREF_PERSONNEL.RETIRE_REASON IS 
'Причина увольнения';

COMMENT ON COLUMN PREF_PERSONNEL.RETIRE_DATE IS 
'Дата увольнения';

COMMENT ON COLUMN PREF_PERSONNEL.RETIRE_ORDER_ID IS 
'Идентификатор приваза на увольнение';

COMMENT ON COLUMN PREF_PERSONNEL.MIL_RESERVE_CATEGORY_ID IS 
'Идентификатор категории запаса';

COMMENT ON COLUMN PREF_PERSONNEL.MIL_RANK_ID IS 
'Идентификатор воинского звания';

COMMENT ON COLUMN PREF_PERSONNEL.MIL_RANK_KIND_ID IS 
'Идентификатор состава воинского звания';

COMMENT ON COLUMN PREF_PERSONNEL.MIL_SPECIALITY IS 
'Код военно-учетной специальности';

COMMENT ON COLUMN PREF_PERSONNEL.MIL_VALIDITY_ID IS 
'Идентификатор категории должности';

COMMENT ON COLUMN PREF_PERSONNEL.MIL_COMMISSARIAT IS 
'Наименование военного коммисариата';

COMMENT ON COLUMN PREF_PERSONNEL.MIL_REG_PARTY_NUMBER IS 
'Состоит на воинском учете';

COMMENT ON COLUMN PREF_PERSONNEL.MIL_REG_SPECIAL IS 
'Стоит на специальном воинском учете';

COMMENT ON COLUMN PREF_PERSONNEL.MIL_IS_TAKEN_OFF IS 
'Отметка о снятии с учета
0 - не снят
1 - снят с воинского учета по должности
2 - снят с воинского учета по состоянию здоровья';

COMMENT ON COLUMN PREF_PERSONNEL_ATTESTATION.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_ATTESTATION.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_ATTESTATION.ATTESTATION_DATE IS 
'Дата';

COMMENT ON COLUMN PREF_PERSONNEL_ATTESTATION.RESOLUTION IS 
'Резолюция комиссии';

COMMENT ON COLUMN PREF_PERSONNEL_ATTESTATION.RESOLUTION_DOCUMENT_ID IS 
'Идентификатор протокола';

COMMENT ON COLUMN PREF_PERSONNEL_ATTESTATION.ORDER_ID IS 
'Идентификатор приказа';

COMMENT ON COLUMN PREF_PERSONNEL_EDUCATION.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_EDUCATION.PERSONNEL_ID IS 
'Идентификатор основных сведений';

COMMENT ON COLUMN PREF_PERSONNEL_EDUCATION.INSTITUTION_NAME IS 
'Название образовательного учреждения';

COMMENT ON COLUMN PREF_PERSONNEL_EDUCATION.DIPLOMA_QUALIFICATION IS 
'Квалификация по диплому';

COMMENT ON COLUMN PREF_PERSONNEL_EDUCATION.DIPLOMA_NUMBER IS 
'Серия и номер дмплома';

COMMENT ON COLUMN PREF_PERSONNEL_EDUCATION.DIPLOMA_DATE IS 
'дата выдачи';

COMMENT ON COLUMN PREF_PERSONNEL_EDUCATION.GRADUATION_YEAR IS 
'Год окончания';

COMMENT ON COLUMN PREF_PERSONNEL_EDUCATION.SPECIALITY_ID IS 
'Идентификатор специальности';

COMMENT ON COLUMN PREF_PERSONNEL_EDUCATION.IS_ADDITIONAL IS 
'Тип образования
0 - основное
1 - послевузовское';

COMMENT ON COLUMN PREF_PERSONNEL_EDUCATION.ADDITIONAL_EDUCATION_KIND_ID IS 
'Идентификатор типа дополнительного образования';

COMMENT ON COLUMN PREF_PERSONNEL_GROUP.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_PERSONNEL_GROUP.FLDNAME IS 
'Наименование группы';

COMMENT ON COLUMN PREF_PERSONNEL_GROUP.GROUPTYPE_ID IS 
'Идентификатор типа группы';

COMMENT ON COLUMN PREF_PERSONNEL_GROUP.PARENT_ID IS 
'Идентификатор родительской папки';

COMMENT ON COLUMN PREF_PERSONNEL_GROUP.FOLDER_TAG IS 
'Тэг папки';

COMMENT ON COLUMN PREF_PERSONNEL_GROUP_TYPE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_GROUP_TYPE.NAME IS 
'Наименование типа';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.ACT_DATE IS 
'Действует с';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.TABLE_NUMBER IS 
'Табельный номер';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.NAME1 IS 
'Фамилия';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.NAME2 IS 
'Имя';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.NAME3 IS 
'Отчество';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.BORNDATE IS 
'Дата рождения';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.SEX IS 
'Пол:
0 - мужской
1 - женский';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.STATURE IS 
'Рост';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.MEASURE_UPCODE IS 
'Код единицы измерения роста';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.PHOTO IS 
'Фотография сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.PENSION_NUMBER IS 
'Номер карточки пенсионного страхования';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.INSUREDCLASS_ID IS 
'Идентификатор категории плательщиков страховых взносов';

COMMENT ON COLUMN PREF_PERSONNEL_HIST.INN IS 
'Индивидуальный номер налогоплательщика (ИНН)';

COMMENT ON COLUMN PREF_PERSONNEL_LABOUR_CONTRACT.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_LABOUR_CONTRACT.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_LABOUR_CONTRACT.NAME IS 
'Наименование документа';

COMMENT ON COLUMN PREF_PERSONNEL_LABOUR_CONTRACT.ORIGINAL_DOCUMENT_ID IS 
'Идентификатор оригинала документа';

COMMENT ON COLUMN PREF_PERSONNEL_LANGUAGE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_LANGUAGE.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_LANGUAGE.FOREIGN_LANGUAGE_ID IS 
'Идентификатор иностранного языка';

COMMENT ON COLUMN PREF_PERSONNEL_LANGUAGE.LANGUAGE_KNOWLEDGE_ID IS 
'Идентификатор ступени знания языка';

COMMENT ON COLUMN PREF_PERSONNEL_LEAVE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_LEAVE.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_LEAVE.LEAVE_KIND_ID IS 
'Идентификатор вида отпуска';

COMMENT ON COLUMN PREF_PERSONNEL_LEAVE.WORK_BEGINDATE IS 
'Дата начала периода';

COMMENT ON COLUMN PREF_PERSONNEL_LEAVE.WORK_ENDDATE IS 
'Дата окончания периода';

COMMENT ON COLUMN PREF_PERSONNEL_LEAVE.HOLIDAY_NUMBER IS 
'Количество дней отпуска';

COMMENT ON COLUMN PREF_PERSONNEL_LEAVE.BEGINDATE IS 
'Дата начала';

COMMENT ON COLUMN PREF_PERSONNEL_LEAVE.ENDDATE IS 
'Дата окончания';

COMMENT ON COLUMN PREF_PERSONNEL_LEAVE.ORDER_ID IS 
'Идентификатор приказа';

COMMENT ON COLUMN PREF_PERSONNEL_PHONE.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_PHONE.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_PHONE.TOWN_CODE IS 
'Код';

COMMENT ON COLUMN PREF_PERSONNEL_PHONE.PHONE IS 
'Номер';

COMMENT ON COLUMN PREF_PERSONNEL_PHONE.PHONE_KIND_ID IS 
'Идентификатор вида телефона';

COMMENT ON COLUMN PREF_PERSONNEL_PROFESSION.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_PROFESSION.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_PROFESSION.JOB_ID IS 
'Идентификатор профессии';

COMMENT ON COLUMN PREF_PERSONNEL_PROFESSION.IS_BASIC IS 
'Признак основной должности';

COMMENT ON COLUMN PREF_PERSONNEL_RECORD.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_RECORD.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_RECORD.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_PERSONNEL_RECORD.ORIGINAL_DOCUMENT_ID IS 
'Идентификатор оригинала документа';

COMMENT ON COLUMN PREF_PERSONNEL_RECORD.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN PREF_PERSONNEL_REWARD.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_REWARD.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_REWARD.REWARD_NAME IS 
'Наименование награды';

COMMENT ON COLUMN PREF_PERSONNEL_REWARD.ORIGINAL_DOCUMENT_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN PREF_PERSONNEL_SERVICE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_PERSONNEL_SERVICE.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_SERVICE.SERVICEKIND_ID IS 
'Идентификатор вида стажа';

COMMENT ON COLUMN PREF_PERSONNEL_SERVICE.BEGINDATE IS 
'Дата начала стажа';

COMMENT ON COLUMN PREF_PERSONNEL_SERVICE.ENDDATE IS 
'Дата окончания стажа';

COMMENT ON COLUMN PREF_PERSONNEL_SERVICE.LENGTHSERVICE IS 
'Длительность стажа';

COMMENT ON COLUMN PREF_PERSONNEL_SERVICE.COMMENT IS 
'Примечание';

COMMENT ON COLUMN PREF_PERSONNEL_SERVICE.IS_GOINGON IS 
'Признак - стаж продолжается';

COMMENT ON COLUMN PREF_PERSONNEL_SERVICE.RATIO IS 
'Коэффициент';

COMMENT ON COLUMN PREF_PERSONNEL_SKILL_RAISING.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_SKILL_RAISING.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_SKILL_RAISING.STUDY_BEGINDATE IS 
'Дата начала обучения';

COMMENT ON COLUMN PREF_PERSONNEL_SKILL_RAISING.STUDY_ENDDATE IS 
'Дата окончания обучения';

COMMENT ON COLUMN PREF_PERSONNEL_SKILL_RAISING.SKILL_RAISING_KIND_ID IS 
'Идентификатор вида повышения квалификации';

COMMENT ON COLUMN PREF_PERSONNEL_SKILL_RAISING.INSTITUTION_NAME IS 
'Наименовнаие образовательного учреждения';

COMMENT ON COLUMN PREF_PERSONNEL_SKILL_RAISING.INSTITUTION_ADDRESS IS 
'Адрес образовательного учреждения';

COMMENT ON COLUMN PREF_PERSONNEL_SKILL_RAISING.CERTIFICATE_DOCUMENT_ID IS 
'Идентификатор сертификата';

COMMENT ON COLUMN PREF_PERSONNEL_SKILL_RAISING.ORDER_ID IS 
'Идентификатор приказа';

COMMENT ON COLUMN PREF_PERSONNEL_SOCIAL_BENEFIT.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_SOCIAL_BENEFIT.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_SOCIAL_BENEFIT.BENEFIT_NAME IS 
'Наименование льготы';

COMMENT ON COLUMN PREF_PERSONNEL_SOCIAL_BENEFIT.ORIGINAL_DOCUMENT_ID IS 
'Идентификатор оригинала документа';

COMMENT ON COLUMN PREF_PERSONNEL_SOCIAL_BENEFIT.BENEFIT_REASON IS 
'Основание';

COMMENT ON COLUMN PREF_PERSONNEL_TRANSFER.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERSONNEL_TRANSFER.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERSONNEL_TRANSFER.TRANSFER_DATE IS 
'Дата';

COMMENT ON COLUMN PREF_PERSONNEL_TRANSFER.STAFF_LIST_UNIT_ID IS 
'Идентификатор подразделения';

COMMENT ON COLUMN PREF_PERSONNEL_TRANSFER.STAFF_LIST_POSITION_ID IS 
'Идентификатор должности';

COMMENT ON COLUMN PREF_PERSONNEL_TRANSFER.SALARY IS 
'Оклад';

COMMENT ON COLUMN PREF_PERSONNEL_TRANSFER.SALARY_RAISE IS 
'Надбавка';

COMMENT ON COLUMN PREF_PERSONNEL_TRANSFER.ORDER_ID IS 
'Идентификатор приказа';

COMMENT ON COLUMN PREF_PERS_VOCATIONAL_TRAINING.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_PERS_VOCATIONAL_TRAINING.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN PREF_PERS_VOCATIONAL_TRAINING.TRAINING_BEGINDATE IS 
'Дата начала переподготовки';

COMMENT ON COLUMN PREF_PERS_VOCATIONAL_TRAINING.TRAINING_ENDDATE IS 
'Дата окончания переподготовки';

COMMENT ON COLUMN PREF_PERS_VOCATIONAL_TRAINING.SPECIALITY_ID IS 
'Идентификатор специальности';

COMMENT ON COLUMN PREF_PERS_VOCATIONAL_TRAINING.CERTIFICATE_DOCUMENT_ID IS 
'Идентификатор свидетельства';

COMMENT ON COLUMN PREF_PERS_VOCATIONAL_TRAINING.ORDER_ID IS 
'Идентификатор приказа-основания';

COMMENT ON COLUMN PREF_PFCODEKIND_IN_SERVICEKIND.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_PFCODEKIND_IN_SERVICEKIND.PFCODEKIND_ID IS 
'Идентификатор вида кода стажа для ПФ';

COMMENT ON COLUMN PREF_PFCODEKIND_IN_SERVICEKIND.SERVICEKIND_ID IS 
'Идентификатор вида стажа';

COMMENT ON COLUMN PREF_PFCODEKIND_IN_SERVICEKIND.RATIO IS 
'Коэффициент для расчета стажа';

COMMENT ON COLUMN PREF_PFCODE_IN_SERVICE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_PFCODE_IN_SERVICE.PERSONNELSERVICE_ID IS 
'Идентификатор записи о стаже сотрудника';

COMMENT ON COLUMN PREF_PFCODE_IN_SERVICE.PFCODE_ID IS 
'Идентификатор кода стажа для ПФ';

COMMENT ON COLUMN PREF_PFCODE_IN_SERVICE.COMMENT IS 
'Примечание';

COMMENT ON COLUMN PREF_POSITION.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_POSITION.NAME IS 
'Наименование должности';

COMMENT ON COLUMN PREF_POSITION_FILL_KIND.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_POSITION_FILL_KIND.KCODE IS 
'Код вида';

COMMENT ON COLUMN PREF_POSITION_FILL_KIND.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN PREF_RESERVE_CATEGORY.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_RESERVE_CATEGORY.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_RISE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_RISE.RCODE IS 
'Код надбавки';

COMMENT ON COLUMN PREF_RISE.RNAME IS 
'Наименование надбавки';

COMMENT ON COLUMN PREF_RISE_PERCENT.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_RISE_PERCENT.RISESCALE_ID IS 
'Идентификатор шкалы';

COMMENT ON COLUMN PREF_RISE_PERCENT.PERCENT_NUMBER IS 
'Порядковый номер';

COMMENT ON COLUMN PREF_RISE_PERCENT.SERVICE_FROM IS 
'Стаж от';

COMMENT ON COLUMN PREF_RISE_PERCENT.SERVICE_TO IS 
'Стаж до';

COMMENT ON COLUMN PREF_RISE_PERCENT.RISE_VALUE IS 
'Величина надбавки';

COMMENT ON COLUMN PREF_RISE_SCALE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_RISE_SCALE.RISE_ID IS 
'Идентификатор надбавки';

COMMENT ON COLUMN PREF_RISE_SCALE.SCALE_NUMBER IS 
'Номер шкалы';

COMMENT ON COLUMN PREF_RISE_SCALE.SNAME IS 
'Наименование шкалы';

COMMENT ON COLUMN PREF_RISE_SCALE.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN PREF_SERVICE_KIND.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_SERVICE_KIND.KNAME IS 
'Наименование вида стажа';

COMMENT ON COLUMN PREF_SERVICE_KIND.PARENT_ID IS 
'Идентификатор родителя';

COMMENT ON COLUMN PREF_SERVICE_KIND.KCODE IS 
'Код стажа';

COMMENT ON COLUMN PREF_SERVICE_KIND.BEGINSERVICE_ALG_ID IS 
'Идентификатор алгоритма расчета даты начала стажа';

COMMENT ON COLUMN PREF_SERVICE_KIND.ENDSERVICE_ALG_ID IS 
'Идентификатор алгоритма расчета даты окончания стажа';

COMMENT ON COLUMN PREF_SERVICE_KIND.LENGTHSERVICE_ALG_ID IS 
'Идентификатор алгоритма расчета продолжительности стажа (в годах)';

COMMENT ON COLUMN PREF_SERVICE_KIND.FOLDER_TAG IS 
'Тэг папки';

COMMENT ON COLUMN PREF_SERVICE_PFCODE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_SERVICE_PFCODE.FOLDER_ID IS 
'Идентификатор родительской папки';

COMMENT ON COLUMN PREF_SERVICE_PFCODE.CODE IS 
'Код стажа';

COMMENT ON COLUMN PREF_SERVICE_PFCODE.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN PREF_SKILL_RAISING_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_SKILL_RAISING_KIND.CODE IS 
'Код';

COMMENT ON COLUMN PREF_SKILL_RAISING_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_SPECIALITY.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_SPECIALITY.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_SPECIALITY.OKSO IS 
'Код по ОКСО';

COMMENT ON COLUMN PREF_SPECIALITY.MSKO IS 
'Код по МСКО';

COMMENT ON COLUMN PREF_STAFF_CATEGORY.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_STAFF_CATEGORY.CCODE IS 
'Код категории';

COMMENT ON COLUMN PREF_STAFF_CATEGORY.CNAME IS 
'Наименование категории';

COMMENT ON COLUMN PREF_STAFF_CATEGORY.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN PREF_STAFF_LIST.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_STAFF_LIST.LNAME IS 
'Наименование штатного расписания';

COMMENT ON COLUMN PREF_STAFF_LIST.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.STAFFLISTUNIT_ID IS 
'Идентификатор подразделения';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.POSITION_ID IS 
'Идентификатор должности';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.SL_POSITION_UNIQUE_ID IS 
'Уникальный код должности';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.STAFFCATEGORY_ID IS 
'Идентификатор категории персонала';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.ENDDATE IS 
'Дата окончания действия';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.RATE_NUMBER IS 
'Общее количество ставок по должности';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.HOLIDAY_NUMBER IS 
'Количество дней отпуска';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.WORKCONDITION_ID IS 
'Идентификатор условий труда';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.WORK_SCHEDULE_ID IS 
'Идентификатор графика работы';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.COSTS_ANL1_ID IS 
'Идентификатор аналитики состава затрат 1-го уровня';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.COSTS_ANL2_ID IS 
'Идентификатор аналитики состава затрат 2-го уровня';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.COSTS_ANL3_ID IS 
'Идентификатор аналитики состава затрат 3-го уровня';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.COSTS_ANL4_ID IS 
'Идентификатор аналитики состава затрат 4-го уровня';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.COSTS_ANL5_ID IS 
'Идентификатор аналитики состава затрат 5-го уровня';

COMMENT ON COLUMN PREF_STAFF_LIST_POSITION.TAX_CALC_KIND_ID IS 
'Идентификатор схемы расчета налогов';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.STAFFLIST_ID IS 
'Идентификатор штатного расписания';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.PARENT_ID IS 
'Идентификатор родительского подразделения';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.UCODE IS 
'Код подразделения';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.UNAME IS 
'Наименование подразделения';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.COMMENTS IS 
'Комментарий';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.WORK_SCHEDULE_ID IS 
'Идентификатор графика работы';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.COSTS_ANL1_ID IS 
'Идентификатор аналитики состава затрат 1-го уровня';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.COSTS_ANL2_ID IS 
'Идентификатор аналитики состава затрат 2-го уровня';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.COSTS_ANL3_ID IS 
'Идентификатор аналитики состава затрат 3-го уровня';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.COSTS_ANL4_ID IS 
'Идентификатор аналитики состава затрат 4-го уровня';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.COSTS_ANL5_ID IS 
'Идентификатор аналитики состава затрат 5-го уровня';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.TAX_CALC_KIND_ID IS 
'Идентификатор схемы расчета налогов';

COMMENT ON COLUMN PREF_STAFF_LIST_UNIT.FOLDER_TAG IS 
'Тэг папки';

COMMENT ON COLUMN PREF_STREET.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_STREET.SNAME IS 
'Наименование улицы';

COMMENT ON COLUMN PREF_STREET.KTYPE IS 
'Сокращенное наименование элемента адреса';

COMMENT ON COLUMN PREF_STREET.KCODE IS 
'Иерархический классификационный код объекта';

COMMENT ON COLUMN PREF_STREET.POST_INDEX IS 
'Почтовый индекс';

COMMENT ON COLUMN PREF_STREET.GNINMB IS 
'Код налогового органа';

COMMENT ON COLUMN PREF_STREET.OCATD IS 
'Код СОАТО';

COMMENT ON COLUMN PREF_TARIFFING.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_TARIFFING.STAFFLIST_ID IS 
'Идентификатор штатного расписания';

COMMENT ON COLUMN PREF_TARIFFING.SL_POSITION_UNIQUE_ID IS 
'Уникальный код должности из штатного расписания';

COMMENT ON COLUMN PREF_TARIFFING.POSITIONFILL_ID IS 
'Идентификатор исполнения должности сотрудником';

COMMENT ON COLUMN PREF_TARIFFING.CATEGORY_ID IS 
'Идентификатор категории тарификации должности';

COMMENT ON COLUMN PREF_TARIFFING.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN PREF_TARIFFING.ENDDATE IS 
'Дата окончания действия';

COMMENT ON COLUMN PREF_TARIFFING.RATE_OF_SALARY IS 
'Размер оклада';

COMMENT ON COLUMN PREF_TARIFFING.TARIFFSCALE_CODE IS 
'Код тарифной сетки';

COMMENT ON COLUMN PREF_TARIFFING.TARIFFCLASS IS 
'Разряд тарифной сетки';

COMMENT ON COLUMN PREF_TARIFFING.RISE_VALUE IS 
'Величина надбавки';

COMMENT ON COLUMN PREF_TARIFFING.USE_RISE_REFERENCE IS 
'Признак - использовать справочник надбавок';

COMMENT ON COLUMN PREF_TARIFFING.RISE_ID IS 
'Идентификатор надбавки';

COMMENT ON COLUMN PREF_TARIFFING.RISESCALE_ID IS 
'Идентификатор шкалы надбавок';

COMMENT ON COLUMN PREF_TARIFFING.MINSALARY_NUMBER IS 
'Количество минимальных зарплат';

COMMENT ON COLUMN PREF_TARIFFING.COSTS_ANL1_ID IS 
'Идентификатор аналитики состава затрат 1-го уровня';

COMMENT ON COLUMN PREF_TARIFFING.COSTS_ANL2_ID IS 
'Идентификатор аналитики состава затрат 2-го уровня';

COMMENT ON COLUMN PREF_TARIFFING.COSTS_ANL3_ID IS 
'Идентификатор аналитики состава затрат 3-го уровня';

COMMENT ON COLUMN PREF_TARIFFING.COSTS_ANL4_ID IS 
'Идентификатор аналитики состава затрат 4-го уровня';

COMMENT ON COLUMN PREF_TARIFFING.COSTS_ANL5_ID IS 
'Идентификатор аналитики состава затрат 5-го уровня';

COMMENT ON COLUMN PREF_TARIFFING_CATEGORY.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_TARIFFING_CATEGORY.CCODE IS 
'Код категории';

COMMENT ON COLUMN PREF_TARIFFING_CATEGORY.CNAME IS 
'Наименование категории';

COMMENT ON COLUMN PREF_TARIFFING_CATEGORY.CTYPE IS 
'Тип категории тарификации:
0 - оклад
1 - ставка по тарифной сетке
2 - процент надбавки
3 - количество минимальных окладов';

COMMENT ON COLUMN PREF_TARIFFING_CATEGORY.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN PREF_TARIFF_SCALE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_TARIFF_SCALE.SCODE IS 
'Код сетки';

COMMENT ON COLUMN PREF_TARIFF_SCALE.SNAME IS 
'Наименование сетки';

COMMENT ON COLUMN PREF_TARIFF_SCALE.STYPE IS 
'Тип тарифной сетки';

COMMENT ON COLUMN PREF_TARIFF_SCALE.FIRST_CLASS_ALG_ID IS 
'Алгоритм расчета ставки первого разряда';

COMMENT ON COLUMN PREF_TARIFF_SCALE.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN PREF_TARIFF_SCALE_CLASS.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_TARIFF_SCALE_CLASS.TARIFFSCALE_ID IS 
'Идентификатор тарифной сетки';

COMMENT ON COLUMN PREF_TARIFF_SCALE_CLASS.CLASS_NUMBER IS 
'Номер разряда';

COMMENT ON COLUMN PREF_TARIFF_SCALE_CLASS.FACTOR IS 
'Коэффициент разряда';

COMMENT ON COLUMN PREF_TARIFF_SCALE_CLASS.RATE IS 
'Ставка разряда';

COMMENT ON COLUMN PREF_TAX_CALC_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN PREF_TAX_CALC_KIND.CODE IS 
'Код';

COMMENT ON COLUMN PREF_TAX_CALC_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN PREF_WORKTIME_NORM.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_WORKTIME_NORM.CALC_PERIOD_ID IS 
'Идентификатор расчетного периода';

COMMENT ON COLUMN PREF_WORKTIME_NORM.WORK_SCHEDULE_ID IS 
'Идентификатор графика работы';

COMMENT ON COLUMN PREF_WORKTIME_NORM.WORKDAYS_NUMBER IS 
'Количество рабочих дней';

COMMENT ON COLUMN PREF_WORKTIME_NORM.WORKHOURS_NUMBER IS 
'Количество рабочих часов';

COMMENT ON COLUMN PREF_WORKTIME_NORM.WORKDAYS_ALG_ID IS 
'Идентификатор алгоритма расчета количества рабочих дней';

COMMENT ON COLUMN PREF_WORKTIME_NORM.WORKHOURS_ALG_ID IS 
'Идентификатор алгоритма расчета количества рабочих часов';

COMMENT ON COLUMN PREF_WORK_CONDITION.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_WORK_CONDITION.CCODE IS 
'Код';

COMMENT ON COLUMN PREF_WORK_CONDITION.CNAME IS 
'Наименование';

COMMENT ON COLUMN PREF_WORK_SCHEDULE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PREF_WORK_SCHEDULE.SCODE IS 
'Код графика';

COMMENT ON COLUMN PREF_WORK_SCHEDULE.SNAME IS 
'Наименование графика';

COMMENT ON COLUMN PREF_WORK_SCHEDULE.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN PREF_WORK_SCHEDULE.ENDDATE IS 
'Дата окончания действия';

COMMENT ON COLUMN PREF_WORK_SCHEDULE.LEAVE_SCHEDULE_ID IS 
'Идентификатор графика для расчета отпуска';

COMMENT ON COLUMN PRICELISTFOLDER.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PRICELISTFOLDER.PRICELISTHEAD_ID IS 
'Идентификатор прайс-листа';

COMMENT ON COLUMN PRICELISTFOLDER.PARENT_ID IS 
'Идентификатор родителя';

COMMENT ON COLUMN PRICELISTFOLDER.FNAME IS 
'Наименование папки';

COMMENT ON COLUMN PRICELISTFOLDER.FOLDER_TAG IS 
'Тэг папки';

COMMENT ON COLUMN PRICELISTHEAD.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PRICELISTHEAD.PRNAME IS 
'Наименование прайс-листа';

COMMENT ON COLUMN PRICELISTHEAD.CREATEDATE IS 
'Дата создания';

COMMENT ON COLUMN PRICELISTHEAD.CURRENCY_CODE IS 
'Код валюты в верхнем регистре';

COMMENT ON COLUMN PRICELISTHEAD.BASEPRICETYPE IS 
'Идентификатор базового типа цены';

COMMENT ON COLUMN PRICELISTHEAD.ISCURRENT IS 
'Текущий прайс-лист:
0 - не текущий
1 - текущий';

COMMENT ON COLUMN PRICELISTHEAD.INSERTSIGN IS 
'Служебное поле';

COMMENT ON COLUMN PRICELISTHEAD.CURRATETYPE_ID IS 
'Тип валюты';

COMMENT ON COLUMN PRICELISTHEAD.CURRATEAUTHORITY_ID IS 
'Источник валюты';

COMMENT ON COLUMN PRICELISTHEAD.PRICE_PRECISION IS 
'Признак доступности прайс-листа';

COMMENT ON COLUMN PRICELISTHEAD.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN PRICELISTHEAD_RIGHTS.ID IS 
'Идентификатор';

COMMENT ON COLUMN PRICELISTHEAD_RIGHTS.REC_ID IS 
'Идентификатор заголовка прайс-листа';

COMMENT ON COLUMN PRICELISTHEAD_RIGHTS.GROUP_ID IS 
'Группа пользователей';

COMMENT ON COLUMN PRICELISTHEAD_RIGHTS.RIGHTS IS 
'Права:
0 - нет
1 -есть';

COMMENT ON COLUMN PRICELISTSPEC.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PRICELISTSPEC.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN PRICELISTSPEC.CATALOG_ID IS 
'Идентификатор позиции КТУ';

COMMENT ON COLUMN PRICELISTSPEC.PRICE IS 
'Базовая цена';

COMMENT ON COLUMN PRICELISTSPEC.LASTCOST IS 
'Цена последнего прихода';

COMMENT ON COLUMN PRICELISTSPEC.SNAME IS 
'Наименование позиции прайс-листа';

COMMENT ON COLUMN PRICELISTSPEC.CANCELED IS 
'Позиция аннулирована
0 - не аннулирована
1 - аннулирована';

COMMENT ON COLUMN PRICELISTSPEC.UNID IS 
'Уникальный идентификатор';

COMMENT ON COLUMN PRICELISTSPEC.PRICELISTHEAD_ID IS 
'Ссылка на заголовок прайс-листа';

COMMENT ON COLUMN PRICELISTSPEC.ACTDATE IS 
'Дата начала действия позиции';

COMMENT ON COLUMN PRICELISTSPEC.ACTDATETILL IS 
'Дата окончания действия позиции';

COMMENT ON COLUMN PRICELISTSPEC.INTERNALCODE IS 
'Артикул поставщика';

COMMENT ON COLUMN PRICELISTSPEC_PRICE.PRICELISTSPEC_ID IS 
'Идентификатор позиции прайс-листа';

COMMENT ON COLUMN PRICELISTSPEC_PRICE.PRICETYPE_ID IS 
'Идентификатор типа цены';

COMMENT ON COLUMN PRICELISTSPEC_PRICE.PRICE IS 
'Цена';

COMMENT ON COLUMN PRICELIST_PRICETYPE_LINK.PRICELIST_ID IS 
'Идентификатор прайс-листа';

COMMENT ON COLUMN PRICELIST_PRICETYPE_LINK.PRICETYPE_ID IS 
'Идентификатор типа цены';

COMMENT ON COLUMN PRICELIST_PRICETYPE_LINK.PRIORITY IS 
'Приоритет при сортировке в окне просмотра';

COMMENT ON COLUMN PRICELIST_PRICETYPE_LINK.RELATIVE_PERCENT IS 
'Не используется';

COMMENT ON COLUMN PRICELIST_PRICETYPE_LINK.ALG_ID IS 
'Идентификатор алгоритма расчета';

COMMENT ON COLUMN PRICETYPE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN PRICETYPE.CODE IS 
'Код типа цены';

COMMENT ON COLUMN PRICETYPE.PNAME IS 
'Наименование типа цены';

COMMENT ON COLUMN PRICETYPE.USE_RELATIVE_PERCENT IS 
'Не используется';

COMMENT ON COLUMN PRICETYPE.RELATIVE_PERCENT IS 
'Не используется';

COMMENT ON COLUMN PRICETYPE.ROUND_IN_GREATER IS 
'Округлять в большую сторону';

COMMENT ON COLUMN PRICETYPE.FORMULA IS 
'Алгоритм расчета цены';

COMMENT ON COLUMN PR_CONTACT_HIST.ID IS 
'Идентификатор';

COMMENT ON COLUMN PR_CONTACT_HIST.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN PR_CONTACT_HIST.CONTACTKIND_ID IS 
'Идентификатор вида контакта';

COMMENT ON COLUMN PR_CONTACT_HIST.CDATE IS 
'Дата контакта';

COMMENT ON COLUMN PR_CONTACT_HIST.CDESCRIPTION IS 
'Описание контакта';

COMMENT ON COLUMN PR_CONTACT_HIST.PARTNER_ID IS 
'Идентификатор партнера';

COMMENT ON COLUMN PR_CONTACT_HIST.PARTNEMPL_ID IS 
'Идентификатор сотрудника партнера';

COMMENT ON COLUMN PR_CONTACT_HIST.PARTNEMPLPHONE_ID IS 
'Идентификатор телефона сотрудника партнера';

COMMENT ON COLUMN PR_CONTACT_HIST.PARTNEMPLEMAIL_ID IS 
'Идентификатор адреса электронной почты сотрудника партнера';

COMMENT ON COLUMN PR_CONTACT_HIST.ACCEPT_EMPL_ID IS 
'Идентификатор сотрудника, принявшего контакт';

COMMENT ON COLUMN PR_CONTACT_HIST.TO_EMPL_ID IS 
'Идентификатор сотрудника, в адрес которого направляется контакт';

COMMENT ON COLUMN PR_CONTACT_HIST.POSSIBLERESULT_ID IS 
'Идентификатор результата контакта';

COMMENT ON COLUMN PR_CONTACT_HIST.RESULT_COMMENT IS 
'Комментарий к результату';

COMMENT ON COLUMN PR_CONTACT_HIST.NEXTCDATE IS 
'Дата следующего контакта';

COMMENT ON COLUMN PR_CONTACT_HIST.PRIORITY IS 
'Приоритет контакта';

COMMENT ON COLUMN PR_CONTACT_HIST.UNID IS 
'Иникальный код';

COMMENT ON COLUMN PR_CONTACT_HIST_FILES.ID IS 
'Идентификатор';

COMMENT ON COLUMN PR_CONTACT_HIST_FILES.CONTACTHIST_ID IS 
'Идентификатор контакта';

COMMENT ON COLUMN PR_CONTACT_HIST_FILES.FILEDOC IS 
'Двоичный образ приложенного файла (хранится в базе)';

COMMENT ON COLUMN PR_CONTACT_HIST_FILES.FILENAME IS 
'Имя файла';

COMMENT ON COLUMN PR_CONTACT_HIST_FILES.FDESCRIPTION IS 
'Описание файла';

COMMENT ON COLUMN PR_CONTACT_HIST_FILES.FILEDATE IS 
'Дата';

COMMENT ON COLUMN PR_CONTACT_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN PR_CONTACT_KIND.KNAME IS 
'Наименование вида контакта';

COMMENT ON COLUMN PR_POSSIBLE_RESULT.ID IS 
'Идентификатор';

COMMENT ON COLUMN PR_POSSIBLE_RESULT.RNAME IS 
'Наименование результата контакта';

COMMENT ON COLUMN QC_SCRAP_REASON.ID IS 
'Идентификатор';

COMMENT ON COLUMN QC_SCRAP_REASON.CODE IS 
'Код';

COMMENT ON COLUMN QC_SCRAP_REASON.NAME IS 
'Наименование';

COMMENT ON COLUMN QC_SCRAP_TYPE.ID IS 
'Идентификатор';

COMMENT ON COLUMN QC_SCRAP_TYPE.CODE IS 
'Код';

COMMENT ON COLUMN QC_SCRAP_TYPE.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_BANK.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_BANK.BIK IS 
'БИК';

COMMENT ON COLUMN REF_BANK.BIK_UNIQUE IS 
'Уникальность БИК';

COMMENT ON COLUMN REF_BANK.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_BANK.BRANCH IS 
'Отделение';

COMMENT ON COLUMN REF_BANK.COUNTRY_ID IS 
'Идентификатор страны';

COMMENT ON COLUMN REF_BANK.CITY_TYPE IS 
'Тип населенного пункта';

COMMENT ON COLUMN REF_BANK.CITY IS 
'Населенный пункт';

COMMENT ON COLUMN REF_BANK.ADDRESS IS 
'Адрес';

COMMENT ON COLUMN REF_BANK.ZIP IS 
'Индекс';

COMMENT ON COLUMN REF_BANK.CORR_ACC IS 
'Корреспондирующий счет';

COMMENT ON COLUMN REF_BANK.CORR_ACC_CURRENCY IS 
'Код валюты корр.счета';

COMMENT ON COLUMN REF_BANK.CORR_NAME IS 
'Наименование корреспондента';

COMMENT ON COLUMN REF_BANK.CORR_ADDRESS IS 
'Адрес корреспондента';

COMMENT ON COLUMN REF_BANK.SWIFT IS 
'SWIFT';

COMMENT ON COLUMN REF_BANK.IBAN IS 
'IBAN';

COMMENT ON COLUMN REF_BANK.BSC IS 
'BSC';

COMMENT ON COLUMN REF_BANK.PHONE IS 
'Телефон';

COMMENT ON COLUMN REF_BANK.FAX IS 
'Факс';

COMMENT ON COLUMN REF_BANK.EMAIL IS 
'E-mail';

COMMENT ON COLUMN REF_BANK.WWW IS 
'WWW';

COMMENT ON COLUMN REF_BANK.COMMENTS IS 
'Примечание';

COMMENT ON COLUMN REF_BANK_ACCOUNT.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_BANK_ACCOUNT.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN REF_BANK_ACCOUNT.BANK_ID IS 
'Идентификатор банка';

COMMENT ON COLUMN REF_BANK_ACCOUNT.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_BANK_ACCOUNT.ACCOUNT_TYPE_ID IS 
'Тип счета';

COMMENT ON COLUMN REF_BANK_ACCOUNT.CURCODE IS 
'Валюта счета';

COMMENT ON COLUMN REF_BANK_ACCOUNT.ACCOUNT IS 
'Номер счета';

COMMENT ON COLUMN REF_BANK_ACCOUNT.IS_DEFAULT IS 
'Флаг по умолчанию';

COMMENT ON COLUMN REF_BANK_ACCOUNT.UNID IS 
'Уникальный код';

COMMENT ON COLUMN REF_BANK_ACCOUNT_TYPE.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_BANK_ACCOUNT_TYPE.CODE IS 
'Код';

COMMENT ON COLUMN REF_BANK_ACCOUNT_TYPE.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_CONFIDENTIAL_DATA.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_CONFIDENTIAL_DATA.PARTNER_ID IS 
'Идентификатор партнера';

COMMENT ON COLUMN REF_CONFIDENTIAL_DATA.DNAME IS 
'Наименование';

COMMENT ON COLUMN REF_CONFIDENTIAL_DATA.CONFDATA IS 
'Информация';

COMMENT ON COLUMN REF_CONTRACTOR_EADDRESS.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_CONTRACTOR_EADDRESS.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN REF_CONTRACTOR_EADDRESS.KIND_ID IS 
'Идентификатор типа эл.адреса';

COMMENT ON COLUMN REF_CONTRACTOR_EADDRESS.PROTOCOL IS 
'Протокол';

COMMENT ON COLUMN REF_CONTRACTOR_EADDRESS.ADDRESS IS 
'Адрес';

COMMENT ON COLUMN REF_CONTRACTOR_EADDRESS.IS_ACTIVE IS 
'Признак действующего флага';

COMMENT ON COLUMN REF_CONTRACTOR_PHONE.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_CONTRACTOR_PHONE.CONTRACTOR_ID IS 
'Идентификатор контрагента';

COMMENT ON COLUMN REF_CONTRACTOR_PHONE.AREA_CODE IS 
'Код';

COMMENT ON COLUMN REF_CONTRACTOR_PHONE.PHONE IS 
'Номер';

COMMENT ON COLUMN REF_CONTRACTOR_PHONE.PHONE_KIND_ID IS 
'Идентификатор вида телефона';

COMMENT ON COLUMN REF_COUNTRY.ID IS 
'Идентификтаор';

COMMENT ON COLUMN REF_COUNTRY.CCODE IS 
'Код';

COMMENT ON COLUMN REF_COUNTRY.CNAME IS 
'Наименование';

COMMENT ON COLUMN REF_COUNTRY.UNIVERSAL_CODE IS 
'Код Альфа - 2';

COMMENT ON COLUMN REF_COUNTRY.UNIVERSAL_ABBR IS 
'Код Альфа - 3';

COMMENT ON COLUMN REF_COUNTRY.UNIVERSAL_NUMBER IS 
'Международный номер';

COMMENT ON COLUMN REF_COUNTRY.CAPITAL IS 
'Столица';

COMMENT ON COLUMN REF_COUNTRY.PHONE_CODE IS 
'Телефонный код';

COMMENT ON COLUMN REF_COUNTRY.FULL_NAME IS 
'Полное наименование';

COMMENT ON COLUMN REF_COUNTRY.ADDRESS_RULE IS 
'Правило формирования строки адреса';

COMMENT ON COLUMN REF_COUNTRY.ADDRESS_DLM IS 
'Раздельтель строки адреса';

COMMENT ON COLUMN REF_CURRENCY_RATE.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_CURRENCY_RATE.CURRENCY_CODE1 IS 
'Код валюты 1';

COMMENT ON COLUMN REF_CURRENCY_RATE.CURRENCY_CODE2 IS 
'Код валюты 2';

COMMENT ON COLUMN REF_CURRENCY_RATE.RATE IS 
'Курс (= сумма_в_валюте1 / сумма_в_валюте2)';

COMMENT ON COLUMN REF_CURRENCY_RATE.RATE_AUTHORITY_ID IS 
'Источник курса';

COMMENT ON COLUMN REF_CURRENCY_RATE.RATE_TYPE_ID IS 
'Тип курса';

COMMENT ON COLUMN REF_CURRENCY_RATE.EFFECTIVE_DATE IS 
'Дата курса';

COMMENT ON COLUMN REF_CURRENCY_RATE_AUTHORITY.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_CURRENCY_RATE_AUTHORITY.CODE IS 
'Код';

COMMENT ON COLUMN REF_CURRENCY_RATE_AUTHORITY.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_CURRENCY_RATE_TYPE.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_CURRENCY_RATE_TYPE.CODE IS 
'Код';

COMMENT ON COLUMN REF_CURRENCY_RATE_TYPE.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_DISTRICT.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_DISTRICT.REGION_ID IS 
'Идентификатор района';

COMMENT ON COLUMN REF_DISTRICT.PREFIX IS 
'Префикс';

COMMENT ON COLUMN REF_DISTRICT.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_EADDRESS_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_EADDRESS_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_FAMILY_MEMBER.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_FAMILY_MEMBER.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN REF_FAMILY_MEMBER.FNAME IS 
'Имя';

COMMENT ON COLUMN REF_FAMILY_MEMBER.PATRONYMIC IS 
'Отчетство';

COMMENT ON COLUMN REF_FAMILY_MEMBER.SURNAME IS 
'Фамилия';

COMMENT ON COLUMN REF_FAMILY_MEMBER.RELATION_ID IS 
'Идентификатор степень родства';

COMMENT ON COLUMN REF_FAMILY_MEMBER.BIRTHDATE IS 
'Дата рождения';

COMMENT ON COLUMN REF_FAMILY_RELATION.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_FAMILY_RELATION.RCODE IS 
'Код';

COMMENT ON COLUMN REF_FAMILY_RELATION.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN REF_FAMILY_RELATION.OKIN IS 
'Код ОКИН';

COMMENT ON COLUMN REF_FAMILY_STATUS.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN REF_FAMILY_STATUS.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN REF_FAMILY_STATUS.STATUSKIND_ID IS 
'Идентификатор вида семейного положения';

COMMENT ON COLUMN REF_FAMILY_STATUS.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN REF_FAMILY_STATUS_KIND.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN REF_FAMILY_STATUS_KIND.KCODE IS 
'Код типа';

COMMENT ON COLUMN REF_FAMILY_STATUS_KIND.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN REF_FAMILY_STATUS_KIND.OKIN IS 
'Код ОКИН';

COMMENT ON COLUMN REF_HOLIDAYS.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_HOLIDAYS.HNAME IS 
'Наименование';

COMMENT ON COLUMN REF_HOLIDAYS.HDATE IS 
'Дата';

COMMENT ON COLUMN REF_HOLIDAYS.HDAY IS 
'День';

COMMENT ON COLUMN REF_HOLIDAYS.HMONTH IS 
'Месяц';

COMMENT ON COLUMN REF_HOLIDAYS.HYEAR IS 
'Год';

COMMENT ON COLUMN REF_IDENT_DOC.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_IDENT_DOC.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN REF_IDENT_DOC.IDENTDOCKIND_ID IS 
'Идентификатор вида документа';

COMMENT ON COLUMN REF_IDENT_DOC.IS_BASIC IS 
'Базовый';

COMMENT ON COLUMN REF_IDENT_DOC.SERIES_LEFT IS 
'Левая часть серии';

COMMENT ON COLUMN REF_IDENT_DOC.SERIES_DIVIDER IS 
'Разделитель серии';

COMMENT ON COLUMN REF_IDENT_DOC.SERIES_RIGHT IS 
'Правая часть серии';

COMMENT ON COLUMN REF_IDENT_DOC.DOCNUMBER IS 
'Номер документа';

COMMENT ON COLUMN REF_IDENT_DOC.WHO_ISSUED IS 
'Кем выдан';

COMMENT ON COLUMN REF_IDENT_DOC.WHEN_ISSUED IS 
'Когда выдан';

COMMENT ON COLUMN REF_IDENT_DOC.ACTIVE_TILL IS 
'Действует до';

COMMENT ON COLUMN REF_IDENT_DOC.CITIZENSHIP IS 
'Гражданство';

COMMENT ON COLUMN REF_IDENT_DOC.ADDRESS_ID IS 
'Идентификатор адреса';

COMMENT ON COLUMN REF_IDENT_DOC.BIRTHDATE IS 
'Дата рождения';

COMMENT ON COLUMN REF_IDENT_DOC.NATIONALITY_ID IS 
'Идентификатор национальности';

COMMENT ON COLUMN REF_IDENT_DOC.BIRTHPLACE_COUNTRY IS 
'Старан рождения';

COMMENT ON COLUMN REF_IDENT_DOC.BIRTHPLACE_REGION IS 
'Регион рождения';

COMMENT ON COLUMN REF_IDENT_DOC.BIRTHPLACE_DISTRICT IS 
'Район рождения';

COMMENT ON COLUMN REF_IDENT_DOC.BIRTHPLACE_CITY IS 
'Город рождения';

COMMENT ON COLUMN REF_IDENT_DOC.BIRTHPLACE_OKATO IS 
'Код по ОКАТО местности рождения';

COMMENT ON COLUMN REF_IDENT_DOC_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_IDENT_DOC_KIND.KCODE IS 
'Код';

COMMENT ON COLUMN REF_IDENT_DOC_KIND.KNAME IS 
'Наименование';

COMMENT ON COLUMN REF_IDENT_DOC_KIND.LSERIES_LENGTH IS 
'Длина левой части серии';

COMMENT ON COLUMN REF_IDENT_DOC_KIND.RSERIES_LENGTH IS 
'Длина правой части серии';

COMMENT ON COLUMN REF_IDENT_DOC_KIND.SERIES_DIVIDER IS 
'Разделитель серии';

COMMENT ON COLUMN REF_IDENT_DOC_KIND.NUMBER_LENGTH IS 
'Длина номера';

COMMENT ON COLUMN REF_KBK.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_KBK.CODE IS 
'Код';

COMMENT ON COLUMN REF_KBK.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_MEASURE_CONV.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_MEASURE_CONV.MEASURE_FROM_ID IS 
'Первая ЕИ';

COMMENT ON COLUMN REF_MEASURE_CONV.MEASURE_TO_ID IS 
'Вторая ЕИ';

COMMENT ON COLUMN REF_MEASURE_CONV.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN REF_MEASURE_CONV.CONV_ALGORITHM_ID IS 
'Идентификатор алгоритма';

COMMENT ON COLUMN REF_NATIONALITY.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_NATIONALITY.NNAME IS 
'Наименование';

COMMENT ON COLUMN REF_NATURAL_PERSON.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_NATURAL_PERSON.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN REF_NATURAL_PERSON.ACT_DATE IS 
'Дата начала дейтсвия';

COMMENT ON COLUMN REF_NATURAL_PERSON.SURNAME IS 
'Фамилия';

COMMENT ON COLUMN REF_NATURAL_PERSON.NAME IS 
'Имя';

COMMENT ON COLUMN REF_NATURAL_PERSON.PATRONYMIC IS 
'Отчество';

COMMENT ON COLUMN REF_NATURAL_PERSON.BORNDATE IS 
'Дата рождения';

COMMENT ON COLUMN REF_NATURAL_PERSON.SEX IS 
'Пол';

COMMENT ON COLUMN REF_NATURAL_PERSON.PHOTO IS 
'Фотография';

COMMENT ON COLUMN REF_NATURAL_PERSON.INN IS 
'ИНН';

COMMENT ON COLUMN REF_NATURAL_PERSON.ADDITIONAL_INFO IS 
'Дополнительные сведения';

COMMENT ON COLUMN REF_NATURAL_PERSON.CODE IS 
'Полное имя';

COMMENT ON COLUMN REF_NATURAL_PERSON.USER_ID IS 
'Идентификатор пользователя';

COMMENT ON COLUMN REF_NATURAL_PERSON_HIST.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_NATURAL_PERSON_HIST.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN REF_NATURAL_PERSON_HIST.ACT_DATE IS 
'Дата';

COMMENT ON COLUMN REF_NATURAL_PERSON_HIST.SURNAME IS 
'Фамилия';

COMMENT ON COLUMN REF_NATURAL_PERSON_HIST.NAME IS 
'Имя';

COMMENT ON COLUMN REF_NATURAL_PERSON_HIST.PATRONYMIC IS 
'Отчетство';

COMMENT ON COLUMN REF_NATURAL_PERSON_HIST.INN IS 
'ИНН';

COMMENT ON COLUMN REF_OKATO.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_OKATO.CODE IS 
'Код';

COMMENT ON COLUMN REF_OKATO.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_OKP.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_OKP.CODE IS 
'Код';

COMMENT ON COLUMN REF_OKP.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_ORIGINAL_DOCUMENT.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_ORIGINAL_DOCUMENT.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN REF_ORIGINAL_DOCUMENT.DOCNUMBER IS 
'Номер';

COMMENT ON COLUMN REF_ORIGINAL_DOCUMENT.DOCDATE IS 
'Дата';

COMMENT ON COLUMN REF_ORIGINAL_DOCUMENT.DOCNAME IS 
'Наименование';

COMMENT ON COLUMN REF_ORIGINAL_DOCUMENT.CREATEDATE IS 
'Дата создания';

COMMENT ON COLUMN REF_ORIGINAL_DOCUMENT.COMMENTS IS 
'Комментарии';

COMMENT ON COLUMN REF_ORIGINAL_DOCUMENT.ORIGINAL IS 
'Оригинал документа';

COMMENT ON COLUMN REF_PARTN_EMPL_EMAIL.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_PARTN_EMPL_EMAIL.PARTNEMPL_ID IS 
'Идентификатор сотрудника партнера';

COMMENT ON COLUMN REF_PARTN_EMPL_EMAIL.EMAIL IS 
'Электронный адрес';

COMMENT ON COLUMN REF_PARTN_EMPL_EMAIL.IS_ACTIVE IS 
'Активность';

COMMENT ON COLUMN REF_PARTN_EMPL_LINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_PARTN_EMPL_LINK.PARTNER_ID IS 
'Идентификатор партнера';

COMMENT ON COLUMN REF_PARTN_EMPL_LINK.EMPLOYEES_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN REF_PARTN_EMPL_LINK.DATEBEGIN IS 
'Дата начала действия';

COMMENT ON COLUMN REF_PARTN_EMPL_LINK.DATEEND IS 
'Дата окончания действия';

COMMENT ON COLUMN REF_PARTN_EMPL_PHONE.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_PARTN_EMPL_PHONE.PARTNEMPL_ID IS 
'Идентификатор сотрудника партнера';

COMMENT ON COLUMN REF_PARTN_EMPL_PHONE.TOWNCODE IS 
'Код';

COMMENT ON COLUMN REF_PARTN_EMPL_PHONE.PHONE IS 
'Телефон';

COMMENT ON COLUMN REF_PARTN_EMPL_PHONE.PHONEKIND_ID IS 
'Идентификатор вида телефона';

COMMENT ON COLUMN REF_PARTN_EMPL_PHONE.IS_ACTIVE IS 
'Актуальность';

COMMENT ON COLUMN REF_PERSON_ADDRESS.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_PERSON_ADDRESS.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN REF_PERSON_ADDRESS.ADDRESS_KIND IS 
'Тип адреса
0 - фактический
1 - прописка';

COMMENT ON COLUMN REF_PERSON_ADDRESS.BEGINDATE IS 
'Дата начала дейсткия';

COMMENT ON COLUMN REF_PERSON_ADDRESS.POST_INDEX IS 
'Индекс';

COMMENT ON COLUMN REF_PERSON_ADDRESS.COUNTRY_ID IS 
'Идентификатор страны';

COMMENT ON COLUMN REF_PERSON_ADDRESS.REGION IS 
'Регион';

COMMENT ON COLUMN REF_PERSON_ADDRESS.CITY IS 
'Город';

COMMENT ON COLUMN REF_PERSON_ADDRESS.STREET IS 
'Улица';

COMMENT ON COLUMN REF_PERSON_ADDRESS.HOUSE IS 
'Дом';

COMMENT ON COLUMN REF_PERSON_ADDRESS.FULL_ADDRESS IS 
'Молный адрес';

COMMENT ON COLUMN REF_PERSON_ADDRESS.REGION_ID IS 
'Идентификатор региона';

COMMENT ON COLUMN REF_PERSON_ADDRESS.DISTRICT_ID IS 
'Идентификатор района';

COMMENT ON COLUMN REF_PERSON_ADDRESS.PLACE_ID IS 
'Идентификатор населенного пункта';

COMMENT ON COLUMN REF_PERSON_ADDRESS.BUILDING IS 
'Корпус';

COMMENT ON COLUMN REF_PERSON_ADDRESS.ROOM IS 
'Квартира';

COMMENT ON COLUMN REF_PERSON_ADDRESS.ZIPCODE_ID IS 
'Идентификатор индекса';

COMMENT ON COLUMN REF_PERSON_EADDRESS.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_PERSON_EADDRESS.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN REF_PERSON_EADDRESS.KIND_ID IS 
'Идентификатор типа эл.адреса';

COMMENT ON COLUMN REF_PERSON_EADDRESS.PROTOCOL IS 
'Протокол';

COMMENT ON COLUMN REF_PERSON_EADDRESS.ADDRESS IS 
'Адрес';

COMMENT ON COLUMN REF_PERSON_EADDRESS.IS_ACTIVE IS 
'Признак действующего флага';

COMMENT ON COLUMN REF_PERSON_PHONE.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_PERSON_PHONE.PERSON_ID IS 
'Идентификатор физического лица';

COMMENT ON COLUMN REF_PERSON_PHONE.PHONE IS 
'Телефон';

COMMENT ON COLUMN REF_PERSON_PHONE.PHONE_KIND_ID IS 
'Идентификатор вида телефона';

COMMENT ON COLUMN REF_PERSON_PHONE.AREA_CODE IS 
'Код';

COMMENT ON COLUMN REF_PHONE_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_PHONE_KIND.KNAME IS 
'Наименование';

COMMENT ON COLUMN REF_PLACE.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_PLACE.DISTRICT_ID IS 
'Идентификатор района';

COMMENT ON COLUMN REF_PLACE.PREFIX IS 
'Префикс';

COMMENT ON COLUMN REF_PLACE.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_REGION.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_REGION.COUNTRY_ID IS 
'Идентификатор страны';

COMMENT ON COLUMN REF_REGION.PREFIX IS 
'Префикс';

COMMENT ON COLUMN REF_REGION.NAME IS 
'Наименование';

COMMENT ON COLUMN REF_ZIPCODE.ID IS 
'Идентификатор';

COMMENT ON COLUMN REF_ZIPCODE.CODE IS 
'Код';

COMMENT ON COLUMN REF_ZIPCODE.COUNTRY_ID IS 
'Идентификатор страны';

COMMENT ON COLUMN REF_ZIPCODE.REGION_ID IS 
'Идентификатор региона';

COMMENT ON COLUMN REF_ZIPCODE.DISTRICT_ID IS 
'Идентификатор района';

COMMENT ON COLUMN REF_ZIPCODE.PLACE_ID IS 
'Идентификатор населенного пункта';

COMMENT ON COLUMN REMNACC.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN REMNACC.PERIOD_ID IS 
'Идентификатор учетного периода';

COMMENT ON COLUMN REMNACC.ACC_ID IS 
'Счет';

COMMENT ON COLUMN REMNACC.REMNBEGINNATDB IS 
'Сумма остатка на начало периода по дебету в НДЕ';

COMMENT ON COLUMN REMNACC.REMNBEGINNATKT IS 
'Сумма остатка на начало периода по кредиту в НДЕ';

COMMENT ON COLUMN REMNACC.REMNBEGINCURDB IS 
'Сумма остатка на начало периода по дебету в валюте';

COMMENT ON COLUMN REMNACC.REMNBEGINCURKT IS 
'Сумма остатка на начало периода по кредиту в валюте';

COMMENT ON COLUMN REMNANL.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN REMNANL.PERIOD_ID IS 
'Идентификатор учетного периода';

COMMENT ON COLUMN REMNANL.ACC_ID IS 
'Счет';

COMMENT ON COLUMN REMNANL.REMNBEGINNATDB IS 
'Сумма остатка на начало периода по дебету в НДЕ';

COMMENT ON COLUMN REMNANL.REMNBEGINNATKT IS 
'Сумма остатка на начало периода по кредиту в НДЕ';

COMMENT ON COLUMN REMNANL.REMNBEGINCURDB IS 
'Сумма остатка на начало периода по дебету в валюте';

COMMENT ON COLUMN REMNANL.REMNBEGINCURKT IS 
'Сумма остатка на начало периода по кредиту в валюте';

COMMENT ON COLUMN REMNANL.ANLPLAN1_ID IS 
'Идентификатор аналитического счета 1-го уровня';

COMMENT ON COLUMN REMNANL.ANLPLAN2_ID IS 
'Идентификатор аналитического счета 2-го уровня';

COMMENT ON COLUMN REMNANL.ANLPLAN3_ID IS 
'Идентификатор аналитического счета 3-го уровня';

COMMENT ON COLUMN REMNANL.ANLPLAN4_ID IS 
'Идентификатор аналитического счета 4-го уровня';

COMMENT ON COLUMN REMNANL.ANLPLAN5_ID IS 
'Идентификатор аналитического счета 5-го уровня';

COMMENT ON COLUMN REMNDBKT.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN REMNDBKT.PERIOD_ID IS 
'Идентификатор учетного периода';

COMMENT ON COLUMN REMNDBKT.ACC_ID IS 
'Счет';

COMMENT ON COLUMN REMNDBKT.ANLPLAN1_ID IS 
'Идентификатор аналитического счета 1-го уровня';

COMMENT ON COLUMN REMNDBKT.ANLPLAN2_ID IS 
'Идентификатор аналитического счета 2-го уровня';

COMMENT ON COLUMN REMNDBKT.ANLPLAN3_ID IS 
'Идентификатор аналитического счета 3-го уровня';

COMMENT ON COLUMN REMNDBKT.ANLPLAN4_ID IS 
'Идентификатор аналитического счета 4-го уровня';

COMMENT ON COLUMN REMNDBKT.ANLPLAN5_ID IS 
'Идентификатор аналитического счета 5-го уровня';

COMMENT ON COLUMN REMNDBKT.REMNBEGINNATDB IS 
'Сумма остатка на начало периода по дебету в НДЕ';

COMMENT ON COLUMN REMNDBKT.REMNBEGINNATKT IS 
'Сумма остатка на начало периода по кредиту в НДЕ';

COMMENT ON COLUMN REMNDBKT.REMNBEGINCURDB IS 
'Сумма остатка на начало периода по дебету в валюте';

COMMENT ON COLUMN REMNDBKT.REMNBEGINCURKT IS 
'Сумма остатка на начало периода по кредиту в валюте';

COMMENT ON COLUMN REMNDBKT.RISEDEBTS IS 
'Не используется';

COMMENT ON COLUMN REMNDBKT.CLEARDEBTS IS 
'Не используется';

COMMENT ON COLUMN REMNDBKT.COMMENT IS 
'Примечание';

COMMENT ON COLUMN REMNDBKT.DOCBASETYPE IS 
'Тип документа-основания';

COMMENT ON COLUMN REMNDBKT.DOCBASENUMBER IS 
'Номер документа-основания';

COMMENT ON COLUMN REMNDBKT.DOCBASEDATE IS 
'Дата документа-основания';

COMMENT ON COLUMN REMNDBKT.DOCTYPE IS 
'Тип договора';

COMMENT ON COLUMN REMNDBKT.DOCNUMBER IS 
'Номер договора';

COMMENT ON COLUMN REMNDBKT.DOCDATE IS 
'Дата договора';

COMMENT ON COLUMN REMNDBKT.CONTRACTOR_ID IS 
'Контрагент';

COMMENT ON COLUMN REMNVAL.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN REMNVAL.PERIOD_ID IS 
'Идентификатор учетного периода';

COMMENT ON COLUMN REMNVAL.ACC_ID IS 
'Счет';

COMMENT ON COLUMN REMNVAL.CATALOG_ID IS 
'Идентификатор позиции КТУ';

COMMENT ON COLUMN REMNVAL.ANLPLAN1_ID IS 
'Идентификатор аналитического счета 1-го уровня';

COMMENT ON COLUMN REMNVAL.ANLPLAN2_ID IS 
'Идентификатор аналитического счета 2-го уровня';

COMMENT ON COLUMN REMNVAL.ANLPLAN3_ID IS 
'Идентификатор аналитического счета 3-го уровня';

COMMENT ON COLUMN REMNVAL.ANLPLAN4_ID IS 
'Идентификатор аналитического счета 4-го уровня';

COMMENT ON COLUMN REMNVAL.ANLPLAN5_ID IS 
'Идентификатор аналитического счета 5-го уровня';

COMMENT ON COLUMN REMNVAL.BEGINQUAN IS 
'Количество на начало периода';

COMMENT ON COLUMN REMNVAL.REMNBEGINNAT IS 
'Сумма остатка на начало периода в НДЕ';

COMMENT ON COLUMN REMNVAL.REMNBEGINCUR IS 
'Сумма остатка на начало периода в валюте';

COMMENT ON COLUMN REMNVAL.BATCH_ID IS 
'Идентификатор партии товара (только при партионном учете)';

COMMENT ON COLUMN REMNVAL.ISREMOVE IS 
'Не используется';

COMMENT ON COLUMN REMNVAL.CONTRACTOR_ID IS 
'Контрагент';

COMMENT ON COLUMN RPT_CLASS_LINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN RPT_CLASS_LINK.RPT_ID IS 
'Ид. отчета';

COMMENT ON COLUMN RPT_CLASS_LINK.CLASS_ID IS 
'Класс бизнес-компонента';

COMMENT ON COLUMN RPT_MAIN.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN RPT_MAIN.CODE IS 
'Имя шаблона (код отчета)';

COMMENT ON COLUMN RPT_MAIN.RPTNAME IS 
'Полное наименование отчета';

COMMENT ON COLUMN RPT_MAIN.ASKPARAMS IS 
'Запрашивать недостающие параметры:0 - не запрашивать1 - запрашивать';

COMMENT ON COLUMN RPT_MAIN.DIRECT_PRINT IS 
'Признак:0 - выводить на экран1 - выводить сразу на принтер';

COMMENT ON COLUMN RPT_MAIN.COMMENT IS 
'Комментарии';

COMMENT ON COLUMN RPT_MAIN.INVOKE_FROM_EDIT IS 
'Не используется';

COMMENT ON COLUMN RPT_MAIN.PRIORITY IS 
'Приоритет отчёта';

COMMENT ON COLUMN RPT_MAIN.SYS_VERSION IS 
'Поле контроля версии записи';

COMMENT ON COLUMN RPT_MAIN.TEMPLATE IS 
'Шаблон отчёта';

COMMENT ON COLUMN RPT_MAIN.PARAMS_FORM_NAME IS 
'Путь к форме запроса параметров отчёта';

COMMENT ON COLUMN RPT_RIGHTS.ID IS 
'Идентификатор
';

COMMENT ON COLUMN RPT_RIGHTS.RPT_ID IS 
'Идентификатор отчета
';

COMMENT ON COLUMN RPT_RIGHTS.GROUP_ID IS 
'Идентификатор группы пользователей
';

COMMENT ON COLUMN RPT_RIGHTS.RIGHTS IS 
'Права:
0 - нет
1 - есть';

COMMENT ON COLUMN RTL_INVOICEHEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN RTL_INVOICEHEAD.SUMCUR_DISCOUNT IS 
'Сумма без скидки/наценки в валюте';

COMMENT ON COLUMN RTL_INVOICEHEAD.SUMNAT_DISCOUNT IS 
'Сумма без скидки/наценки';

COMMENT ON COLUMN RTL_INVOICEHEAD.DISCOUNT_ON_DOC IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN RTL_INVOICEHEAD.DISCOUNT_ON_LINE IS 
'Скидка/наценка по строкам спецификации';

COMMENT ON COLUMN RTL_INVOICEHEAD.DISCOUNTCARD_ID IS 
'Дисконтная карта';

COMMENT ON COLUMN RTL_INVOICEHEAD.EXTRADISCOUNT_ID IS 
'Дополнительная скидка';

COMMENT ON COLUMN RTL_INVOICEHEAD.COMMENTS IS 
'Комментарии';

COMMENT ON COLUMN RTL_INVOICEHEAD.SHIPPER IS 
'Грузоотправитель';

COMMENT ON COLUMN RTL_INVOICEHEAD.CONSIGNEE IS 
'Грузополучатель';

COMMENT ON COLUMN RTL_INVOICEHEAD.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN RTL_INVOICEHEAD.CONSUMER IS 
'Потребитель';

COMMENT ON COLUMN RTL_INVOICEHEAD.PLANPAYDATE IS 
'Плановая дата оплаты';

COMMENT ON COLUMN RTL_INVOICEHEAD.PAYDATE IS 
'Дата оплаты';

COMMENT ON COLUMN RTL_INVOICEHEAD.PAYSUM IS 
'Сумма оплаты';

COMMENT ON COLUMN RTL_INVOICEHEAD.BASE_DISCOUNT IS 
'Базовая скидка';

COMMENT ON COLUMN RTL_INVOICEHEAD.PLANSHIPDATE IS 
'Плановая дата отгрузки';

COMMENT ON COLUMN RTL_INVOICEHEAD.APPLY_DIS_KIND IS 
'Признак "Применять скидку/наценку в процессе добавления спецификаций": 0 - нет, 1 - да';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.SUMCUR_DISCOUNT IS 
'Сумма без скидки/наценки в валюте';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.SUMNAT_DISCOUNT IS 
'Сумма без скидки/наценки';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.DISCOUNT_ON_DOC IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.DISCOUNT_ON_LINE IS 
'Скидка/наценка по строкам спецификации';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.DISCOUNTCARD_ID IS 
'Дисконтная карта';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.EXTRADISCOUNT_ID IS 
'Дополнительная скидка';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.COMMENTS IS 
'Комментарии';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.SHIPPER IS 
'Грузоотправитель';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.CONSIGNEE IS 
'Грузополучатель';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.RESPONSIBLE IS 
'Ответственный';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.CONSUMER IS 
'Потребитель';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.PLANPAYDATE IS 
'Плановая дата оплаты';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.PAYDATE IS 
'Дата оплаты';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.PAYSUM IS 
'Сумма оплаты';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.BASE_DISCOUNT IS 
'Базовая скидка';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.PLANSHIPDATE IS 
'Плановая дата отгрузки';

COMMENT ON COLUMN RTL_INVOICEHEADMODEL.APPLY_DIS_KIND IS 
'Признак "Применять скидку/наценку в процессе добавления спецификаций": 0 - нет, 1 - да';

COMMENT ON COLUMN RTL_INVOICESPEC.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN RTL_INVOICESPEC.DISCOUNT IS 
'Скидка/наценка по строке';

COMMENT ON COLUMN RTL_INVOICESPEC.PRICE_DISCOUNT IS 
'Цена с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN RTL_INVOICESPEC.SUM_DISCOUNT IS 
'Сумма с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN RTL_INVOICESPEC.DOC_DISCOUNT IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN SALEBOOK.ID IS 
'Идентификатор записи
';

COMMENT ON COLUMN SALEBOOK.FOLDER_ID IS 
'Идентификатор папки
';

COMMENT ON COLUMN SALEBOOK.DOCUMENT_ID IS 
'Идентификатор документа
';

COMMENT ON COLUMN SALEBOOK.DOCTYPE IS 
'Тип документа
';

COMMENT ON COLUMN SALEBOOK.DOCNUMBER IS 
'Номер документа
';

COMMENT ON COLUMN SALEBOOK.DOCDATE IS 
'Дата документа
';

COMMENT ON COLUMN SALEBOOK.INSERTDATE IS 
'Дата регистрации в книге продаж
';

COMMENT ON COLUMN SALEBOOK.PAYDATE IS 
'Дата оплаты
';

COMMENT ON COLUMN SALEBOOK.TOTALSUM IS 
'Всего продаж, включая НДС
';

COMMENT ON COLUMN SALEBOOK.SUM_WITHOUT_NDS1 IS 
'Сумма без НДС 10%
';

COMMENT ON COLUMN SALEBOOK.SUM_WITHOUT_NDS2 IS 
'Сумма без НДС 20%
';

COMMENT ON COLUMN SALEBOOK.NDS1_SUM IS 
'Сумма НДС 10%
';

COMMENT ON COLUMN SALEBOOK.NDS2_SUM IS 
'Сумма НДС 20%
';

COMMENT ON COLUMN SALEBOOK.NOT_TAXABLE_SUM IS 
'Сумма, не облагаемая налогом
';

COMMENT ON COLUMN SALEBOOK.NOT_TAXABLE_EXPORT_SUM IS 
'Сумма, не облагаемая налогом, из них на экспорт
';

COMMENT ON COLUMN SALEBOOK.NSP_SUM IS 
'Сумма НСП
';

COMMENT ON COLUMN SALEBOOK.CUSTOMER_ID IS 
'Покупатель';

COMMENT ON COLUMN SALEBOOK.ORGUNIT_ID IS 
'Подразделение';

COMMENT ON COLUMN SALEBOOK.SUM_WITHOUT_NDS3 IS 
'Сумма без НДС 18%';

COMMENT ON COLUMN SALEBOOK.NDS3_SUM IS 
'Сумма НДС 18%';

COMMENT ON COLUMN SAL_CALC_LIST.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_CALC_LIST.PAY_ROLL_ID IS 
'Идентификатор расчетной ведомости';

COMMENT ON COLUMN SAL_CALC_LIST.POSITION_FILL_ID IS 
'Идентификатор исполнения должности сотрудником';

COMMENT ON COLUMN SAL_CALC_LIST.NEED_PARAMS IS 
'Признак - для расчета требуется задать параметры в одном или нескольких начислениях/удержаниях';

COMMENT ON COLUMN SAL_CALC_LIST.IS_CALCULATED IS 
'Признак - листок рассчитан';

COMMENT ON COLUMN SAL_CALC_LIST.TOTAL_SUMMA IS 
'Итого к выдаче';

COMMENT ON COLUMN SAL_CALC_LIST.POSITIVE_SUMMA IS 
'Сумма начислений';

COMMENT ON COLUMN SAL_CALC_LIST.NEGATIVE_SUMMA IS 
'Сумма удержаний';

COMMENT ON COLUMN SAL_CALC_LIST.NEUTRAL_SUMMA IS 
'Сумма отчислений';

COMMENT ON COLUMN SAL_CALC_LIST.IS_CLOSED IS 
'Расчитан и закрыт';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.CALC_LIST_SECTION_ID IS 
'Идентификатор раздела расчетного листка';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.FEE_MODEL_ID IS 
'Идентификатор образца начисления/удержания из лицевого счета сотрудника';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.BEGINDATE IS 
'Начислено с';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.ENDDATE IS 
'Начислено по';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.PERIOD_BEGINDATE IS 
'За период с';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.PERIOD_ENDDATE IS 
'За период по';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.SUMMA IS 
'Итоговая сумма начисления/удержания';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.NEED_PARAMS IS 
'Признак - требуется задать один или несколько параметров';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.COSTS_ANL1_ID IS 
'Идентификатор аналитики состава затрат 1-го уровня';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.COSTS_ANL2_ID IS 
'Идентификатор аналитики состава затрат 2-го уровня';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.COSTS_ANL3_ID IS 
'Идентификатор аналитики состава затрат 3-го уровня';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.COSTS_ANL4_ID IS 
'Идентификатор аналитики состава затрат 4-го уровня';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.COSTS_ANL5_ID IS 
'Идентификатор аналитики состава затрат 5-го уровня';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.IS_CALCULATED IS 
'Признак: расчитан';

COMMENT ON COLUMN SAL_CALC_LIST_FEE.DONT_RECALC IS 
'Признак: не пересчитывать';

COMMENT ON COLUMN SAL_CALC_LIST_FEE_PARAM.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_CALC_LIST_FEE_PARAM.CALC_LIST_FEE_ID IS 
'Идентификатор начисления/удержания в расчетном листке';

COMMENT ON COLUMN SAL_CALC_LIST_FEE_PARAM.FEE_REF_PARAM_ID IS 
'Идентификатор параметра из справочника начислений/удержаний';

COMMENT ON COLUMN SAL_CALC_LIST_FEE_PARAM.PARAM_VALUE IS 
'Значение параметра';

COMMENT ON COLUMN SAL_CALC_LIST_SECTION.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_CALC_LIST_SECTION.CALC_LIST_ID IS 
'Идентификатор расчетного листка';

COMMENT ON COLUMN SAL_CALC_LIST_SECTION.CALC_LIST_SECTION_REF_ID IS 
'Идентификатор раздела расчетного листка из справочника';

COMMENT ON COLUMN SAL_CALC_LIST_SECTION.TOTAL_SUMMA IS 
'Итоговая сумма раздела';

COMMENT ON COLUMN SAL_CALC_LIST_SECTION_REF.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_CALC_LIST_SECTION_REF.SNAME IS 
'Наименование раздела';

COMMENT ON COLUMN SAL_CALC_LIST_SECTION_REF.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN SAL_CALC_LIST_SECTION_REF.SUM_SIGN IS 
'Влияние суммы раздела на общую сумму расчетного листка:
0 - не влияет
1 - плюс
2 - минус';

COMMENT ON COLUMN SAL_DISCOUNTKIND.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_DISCOUNTKIND.DCODE IS 
'Код';

COMMENT ON COLUMN SAL_DISCOUNTKIND.DNAME IS 
'Наименование';

COMMENT ON COLUMN SAL_DISCOUNTKIND.MINSALARYNUMBER IS 
'Число минимальных зарплат';

COMMENT ON COLUMN SAL_DISCOUNTKIND.FIXEDSUM IS 
'Фиксированная сумма';

COMMENT ON COLUMN SAL_DISCOUNTKIND.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN SAL_DISCOUNTKIND.ACTIONPERIOD IS 
'Период действия в месяцах';

COMMENT ON COLUMN SAL_DISCOUNTKIND.IS_ACCUMULATING IS 
'Признак - учет нарастающим итогом';

COMMENT ON COLUMN SAL_FEE_MODEL.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_FEE_MODEL.FEE_REF_ID IS 
'Идентификатор начисления/удержания из справочника';

COMMENT ON COLUMN SAL_FEE_MODEL.PERSONALACCOUNT_ID IS 
'Идентификатор лицевого счета сотрудника';

COMMENT ON COLUMN SAL_FEE_MODEL.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN SAL_FEE_MODEL.ENDDATE IS 
'Дата окончания действия';

COMMENT ON COLUMN SAL_FEE_MODEL.SUMMA IS 
'Сумма начисления/удержания';

COMMENT ON COLUMN SAL_FEE_MODEL.ROLL_KIND_ID IS 
'Идентификатор вида ведомости';

COMMENT ON COLUMN SAL_FEE_MODEL.POSITIONFILL_ID IS 
'Идентификатор исполняемой сотрудником должности';

COMMENT ON COLUMN SAL_FEE_MODEL.USE_BASIC_POSITION IS 
'Признак - считать только для базовой должности';

COMMENT ON COLUMN SAL_FEE_MODEL.COSTS_ANL1_ID IS 
'Идентификатор аналитики состава затрат 1-го уровня';

COMMENT ON COLUMN SAL_FEE_MODEL.COSTS_ANL2_ID IS 
'Идентификатор аналитики состава затрат 2-го уровня';

COMMENT ON COLUMN SAL_FEE_MODEL.COSTS_ANL3_ID IS 
'Идентификатор аналитики состава затрат 3-го уровня';

COMMENT ON COLUMN SAL_FEE_MODEL.COSTS_ANL4_ID IS 
'Идентификатор аналитики состава затрат 4-го уровня';

COMMENT ON COLUMN SAL_FEE_MODEL.COSTS_ANL5_ID IS 
'Идентификатор аналитики состава затрат 5-го уровня';

COMMENT ON COLUMN SAL_FEE_MODEL.CALC_PERIOD_ID IS 
'Идентификатор расчетного периода';

COMMENT ON COLUMN SAL_FEE_MODEL_PARAM.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_FEE_MODEL_PARAM.FEE_MODEL_ID IS 
'Идентификатор образца начисления/удержания';

COMMENT ON COLUMN SAL_FEE_MODEL_PARAM.FEE_REF_PARAM_ID IS 
'Идентификатор параметра из справочника начислений/удержаний';

COMMENT ON COLUMN SAL_FEE_MODEL_PARAM.PARAM_VALUE IS 
'Значение параметра';

COMMENT ON COLUMN SAL_FEE_REF.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_FEE_REF.CALCLISTSECTIONREF_ID IS 
'Идентификатор раздела расчетного листка из справочника';

COMMENT ON COLUMN SAL_FEE_REF.GNSCODE_ID IS 
'Идентификатор кода ГНС вида оплаты';

COMMENT ON COLUMN SAL_FEE_REF.CALC_ALG_ID IS 
'Идентификатор алгоритма расчета';

COMMENT ON COLUMN SAL_FEE_REF.FEE_TYPE IS 
'Тип начисления/удержания:
0 - основное
1 - скрытое
2 - системное';

COMMENT ON COLUMN SAL_FEE_REF.FCODE IS 
'Код начисления/удержания';

COMMENT ON COLUMN SAL_FEE_REF.FNAME IS 
'Наименование начисления/удержания';

COMMENT ON COLUMN SAL_FEE_REF.PRIORITY IS 
'Приоритет / порядок расчета';

COMMENT ON COLUMN SAL_FEE_REF.SUM_SIGN IS 
'Влияние на сумму раздела:
0 - не влияет
1 - плюс
2 - минус';

COMMENT ON COLUMN SAL_FEE_REF.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN SAL_FEE_REF.ENDDATE IS 
'Дата окончания действия';

COMMENT ON COLUMN SAL_FEE_REF.PERIODICITY IS 
'Периодичность
0 - постоянное
1 - ежеквартельное
2 - ежегодное';

COMMENT ON COLUMN SAL_FEE_REF.COSTS_ANL1_ID IS 
'Идентификатор аналитики состава затрат 1-го уровня';

COMMENT ON COLUMN SAL_FEE_REF.COSTS_ANL2_ID IS 
'Идентификатор аналитики состава затрат 2-го уровня';

COMMENT ON COLUMN SAL_FEE_REF.COSTS_ANL3_ID IS 
'Идентификатор аналитики состава затрат 3-го уровня';

COMMENT ON COLUMN SAL_FEE_REF.COSTS_ANL4_ID IS 
'Идентификатор аналитики состава затрат 4-го уровня';

COMMENT ON COLUMN SAL_FEE_REF.COSTS_ANL5_ID IS 
'Идентификатор аналитики состава затрат 5-го уровня';

COMMENT ON COLUMN SAL_FEE_REF.ROLL_KIND_ID IS 
'Идентификатор вида ведомости';

COMMENT ON COLUMN SAL_FEE_REF.INCOME_KIND_ID IS 
'Идентификатор вида дохода';

COMMENT ON COLUMN SAL_FEE_REF.IS_ZERO_INCLUDED IS 
'Признак включения в РЛ при нулевом результате';

COMMENT ON COLUMN SAL_FEE_REF_PARAM.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_FEE_REF_PARAM.FEE_REF_ID IS 
'Идентификатор начисления/удержания из справочника';

COMMENT ON COLUMN SAL_FEE_REF_PARAM.PCODE IS 
'Код параметра';

COMMENT ON COLUMN SAL_FEE_REF_PARAM.PNAME IS 
'Наименование параметра';

COMMENT ON COLUMN SAL_FEE_REF_PARAM.CALC_ALG_ID IS 
'Идентификатор алгоритма расчета';

COMMENT ON COLUMN SAL_FEE_REF_PARAM.PRIORITY IS 
'Приоритет / порядок расчета';

COMMENT ON COLUMN SAL_FEE_REF_PARAM.PARAM_TYPE IS 
'Тип параметра:
0 - число
1 - дата
2 - строка';

COMMENT ON COLUMN SAL_FEE_REF_PARAM.CALC_ONCE IS 
'Признак - параметр рассчитывается один раз, при первом расчете листка';

COMMENT ON COLUMN SAL_FEE_SUMMARY_HEAD.DOCHEAD_ID IS 
'Идентификатор заголовка документа';

COMMENT ON COLUMN SAL_FEE_SUMMARY_HEAD.PAY_ROLL_ID IS 
'Идентификатор расчетной ведомости, по которой сформирован свод';

COMMENT ON COLUMN SAL_FEE_SUMMARY_SPEC.DOCSPEC_ID IS 
'Идентификатор позиции спецификации документа';

COMMENT ON COLUMN SAL_FEE_SUMMARY_SPEC.COSTS_ANL1_ID IS 
'Идентификатор аналитики состава затрат 1-го уровня';

COMMENT ON COLUMN SAL_FEE_SUMMARY_SPEC.COSTS_ANL2_ID IS 
'Идентификатор аналитики состава затрат 2-го уровня';

COMMENT ON COLUMN SAL_FEE_SUMMARY_SPEC.COSTS_ANL3_ID IS 
'Идентификатор аналитики состава затрат 3-го уровня';

COMMENT ON COLUMN SAL_FEE_SUMMARY_SPEC.COSTS_ANL4_ID IS 
'Идентификатор аналитики состава затрат 4-го уровня';

COMMENT ON COLUMN SAL_FEE_SUMMARY_SPEC.COSTS_ANL5_ID IS 
'Идентификатор аналитики состава затрат 5-го уровня';

COMMENT ON COLUMN SAL_GNS_CODE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_GNS_CODE.CODE IS 
'Код';

COMMENT ON COLUMN SAL_GNS_CODE.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN SAL_INCLUDED_FEE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_INCLUDED_FEE.FEE_REF_ID IS 
'Идентификатор начисления/удержания';

COMMENT ON COLUMN SAL_INCLUDED_FEE.INCLUDED_FEE_ID IS 
'Идентификатор входящего начисления/удержания';

COMMENT ON COLUMN SAL_INCLUDED_FEE.SUM_SIGN IS 
'Знак, с которым входит начисление/удержание:
0 - плюс
1 - минус';

COMMENT ON COLUMN SAL_INCOMEKIND.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_INCOMEKIND.ICODE IS 
'Код дохода';

COMMENT ON COLUMN SAL_INCOMEKIND.INAME IS 
'Наименование дохода';

COMMENT ON COLUMN SAL_INCOMEKIND.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN SAL_MINSALARY.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_MINSALARY.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN SAL_MINSALARY.MINSALARY IS 
'Размер минимальной зарплаты';

COMMENT ON COLUMN SAL_PAY_ROLL.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_PAY_ROLL.ROLL_KIND_ID IS 
'Идентификатор типа ведомости';

COMMENT ON COLUMN SAL_PAY_ROLL.CALC_PERIOD_ID IS 
'Идентификатор расчетного периода';

COMMENT ON COLUMN SAL_PAY_ROLL.RNUMBER IS 
'Номер ведомости';

COMMENT ON COLUMN SAL_PAY_ROLL.RNAME IS 
'Наименование ведомости';

COMMENT ON COLUMN SAL_PAY_ROLL.DOCTYPE IS 
'Тип документа';

COMMENT ON COLUMN SAL_PAY_ROLL.DOCNUMBER IS 
'Номер документа';

COMMENT ON COLUMN SAL_PAY_ROLL.DOCDATE IS 
'Дата документа';

COMMENT ON COLUMN SAL_PAY_ROLL.COMMENTS IS 
'Комментарий';

COMMENT ON COLUMN SAL_PAY_ROLL.CALC_BEGINDATE IS 
'Дата начала расчета';

COMMENT ON COLUMN SAL_PAY_ROLL.CALC_ENDDATE IS 
'Дата окончания расчета';

COMMENT ON COLUMN SAL_PAY_SHEET.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_PAY_SHEET.PAY_ROLL_ID IS 
'Идентификатор расчетной ведомости, на основе которой сформирована платежная';

COMMENT ON COLUMN SAL_PAY_SHEET.SNUMBER IS 
'Номер ведомости';

COMMENT ON COLUMN SAL_PAY_SHEET.BEGINDATE IS 
'Оплата в срок с';

COMMENT ON COLUMN SAL_PAY_SHEET.ENDDATE IS 
'Оплата в срок по';

COMMENT ON COLUMN SAL_PAY_SHEET.DOCHEAD_ID IS 
'Идентификатор расходного кассового ордера';

COMMENT ON COLUMN SAL_PAY_SHEET.CHIEF_ID IS 
'Идентификатор руководителя';

COMMENT ON COLUMN SAL_PAY_SHEET.BOOKKEEPER_ID IS 
'Идентификатор бухгалтера';

COMMENT ON COLUMN SAL_PAY_SHEET.CASHIER_ID IS 
'Идентификатор кассира';

COMMENT ON COLUMN SAL_PAY_SHEET.SUMMA_FULL IS 
'Сумма к выдаче';

COMMENT ON COLUMN SAL_PAY_SHEET.INDOCHEAD_ID IS 
'Идентификатор приходного кассового ордера';

COMMENT ON COLUMN SAL_PAY_SHEET_SPEC.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_PAY_SHEET_SPEC.PAY_SHEET_ID IS 
'Идентификатор платежной ведомости';

COMMENT ON COLUMN SAL_PAY_SHEET_SPEC.POSITION_FILL_ID IS 
'Идентификатор исполняемой сотрудником должности';

COMMENT ON COLUMN SAL_PAY_SHEET_SPEC.SUMMA_FULL IS 
'Сумма к выдаче';

COMMENT ON COLUMN SAL_PAY_SHEET_SPEC.SUMMA_PAID_OUT IS 
'Выданная сумма';

COMMENT ON COLUMN SAL_PAY_SHEET_SPEC.SUMMA_DEPOSITED IS 
'Депонированная сумма';

COMMENT ON COLUMN SAL_PAY_SHEET_SPEC.SUMMA_REST IS 
'Остаток';

COMMENT ON COLUMN SAL_PERSONAL_ACCOUNT.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_PERSONAL_ACCOUNT.PERSONNEL_ID IS 
'Идентификатор сотрудника';

COMMENT ON COLUMN SAL_PERSONAL_ACCOUNT.ANUMBER IS 
'Номер лицевого счета';

COMMENT ON COLUMN SAL_PERSONAL_ACCOUNT.BEGINDATE IS 
'Период непрерывного стажа работы в компании - с';

COMMENT ON COLUMN SAL_PERSONAL_ACCOUNT.ENDDATE IS 
'Период непрерывного стажа работы в компании - по';

COMMENT ON COLUMN SAL_POSITION_FILL.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_POSITION_FILL.PERSONALACCOUNT_ID IS 
'Идентификатор лицевого счета';

COMMENT ON COLUMN SAL_POSITION_FILL.POSITION_ID IS 
'Идентификатор должности';

COMMENT ON COLUMN SAL_POSITION_FILL.SL_POSITION_UNIQUE_ID IS 
'Уникальный код должности из штатного расписания';

COMMENT ON COLUMN SAL_POSITION_FILL.POSITIONFILLKIND_ID IS 
'Идентификатор вида исполнения должности';

COMMENT ON COLUMN SAL_POSITION_FILL.BEGINDATE IS 
'Дата начала исполнения должности';

COMMENT ON COLUMN SAL_POSITION_FILL.ENDDATE IS 
'Дата окончания исполнения должности';

COMMENT ON COLUMN SAL_POSITION_FILL.DOCTYPE IS 
'Тип документа';

COMMENT ON COLUMN SAL_POSITION_FILL.DOCNUMBER IS 
'Номер документа';

COMMENT ON COLUMN SAL_POSITION_FILL.DOCDATE IS 
'Дата документа';

COMMENT ON COLUMN SAL_POSITION_FILL.RATE_NUMBER IS 
'Количество занимаемых ставок';

COMMENT ON COLUMN SAL_POSITION_FILL.IS_BASIC IS 
'Признак - базовая исполняемая должность';

COMMENT ON COLUMN SAL_REPLACED_FEE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_REPLACED_FEE.FEE_REF_ID IS 
'Идентификатор начисления/удержания';

COMMENT ON COLUMN SAL_REPLACED_FEE.REPLACED_FEE_ID IS 
'Идентификатор вытесняемого начисления/удержания';

COMMENT ON COLUMN SAL_ROLL_KIND.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_ROLL_KIND.KNAME IS 
'Наименование типа';

COMMENT ON COLUMN SAL_TARIFFING_IN_FEE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_TARIFFING_IN_FEE.FEE_REF_ID IS 
'Идентификатор начисления/удержания из справочника';

COMMENT ON COLUMN SAL_TARIFFING_IN_FEE.TARIFFING_CATEGORY_ID IS 
'Идентификатор категории тарификации должности';

COMMENT ON COLUMN SAL_TAXHEAD.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_TAXHEAD.TNAME IS 
'Нименование налога';

COMMENT ON COLUMN SAL_TAXHEAD.TCODE IS 
'Код налога';

COMMENT ON COLUMN SAL_TAXRATE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_TAXRATE.TAXSCALE_ID IS 
'Идентификатор налоговой шкалы';

COMMENT ON COLUMN SAL_TAXRATE.RNUMBER IS 
'Номер ставки';

COMMENT ON COLUMN SAL_TAXRATE.MININCOME IS 
'Минимальный доход';

COMMENT ON COLUMN SAL_TAXRATE.MAXINCOME IS 
'Максимальный доход';

COMMENT ON COLUMN SAL_TAXRATE.TAX_PERCENT IS 
'Процент';

COMMENT ON COLUMN SAL_TAXRATE.CONSTVALUE IS 
'Постоянная величина';

COMMENT ON COLUMN SAL_TAXRATE.PRIVILEGERATIO IS 
'Коэффициент для льгот';

COMMENT ON COLUMN SAL_TAXSCALE.ID IS 
'Идентификатор записи';

COMMENT ON COLUMN SAL_TAXSCALE.TAXHEAD_ID IS 
'Идентификатор заголовка налога';

COMMENT ON COLUMN SAL_TAXSCALE.SNUMBER IS 
'Номер шкалы';

COMMENT ON COLUMN SAL_TAXSCALE.BEGINDATE IS 
'Дата начала действия';

COMMENT ON COLUMN SAL_TAXSCALE.TAXPAYER IS 
'Объект налогообложения
0 - сотрудник
1 - предприятие';

COMMENT ON COLUMN SAL_TAXSCALE.SNAME IS 
'Наименование шкалы';

COMMENT ON COLUMN SCH_TASK.ID IS 
'Идентификатор';

COMMENT ON COLUMN SCH_TASK.FOLDER_ID IS 
'Идентификатор папки';

COMMENT ON COLUMN SCH_TASK.CODE IS 
'Код';

COMMENT ON COLUMN SCH_TASK.NAME IS 
'Наименование';

COMMENT ON COLUMN SCH_TASK.ALGORITHM_ID IS 
'Идентификатор алгоритма';

COMMENT ON COLUMN SCH_TASK.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN SEC_GROUPS.ID IS 
'Идентификатор';

COMMENT ON COLUMN SEC_GROUPS.NAME IS 
'Наименование';

COMMENT ON COLUMN SEC_LINK_USERS_GROUPS.ID IS 
'Идентификатор';

COMMENT ON COLUMN SEC_LINK_USERS_GROUPS.USER_ID IS 
'Пользователь';

COMMENT ON COLUMN SEC_LINK_USERS_GROUPS.GROUP_ID IS 
'Группа';

COMMENT ON COLUMN SEC_METHOD_ACCESS.ID IS 
'Идентификатор';

COMMENT ON COLUMN SEC_METHOD_ACCESS.GROUP_ID IS 
'Группа';

COMMENT ON COLUMN SEC_METHOD_ACCESS.METHOD_ID IS 
'Метод';

COMMENT ON COLUMN SEC_METHOD_ACCESS.PERMISSION IS 
'Доступ: 0 - нет; 1 - есть';

COMMENT ON COLUMN SEC_MODULE_ACCESS.ID IS 
'Идентификатор';

COMMENT ON COLUMN SEC_MODULE_ACCESS.MODULE_ID IS 
'Модуль';

COMMENT ON COLUMN SEC_MODULE_ACCESS.GROUP_ID IS 
'Группа';

COMMENT ON COLUMN SEC_USERS.ID IS 
'Идентификатор';

COMMENT ON COLUMN SEC_USERS.NAME IS 
'Имя';

COMMENT ON COLUMN SEC_USERS.FULLNAME IS 
'Полное имя';

COMMENT ON COLUMN SEC_USERS.PASSW IS 
'Пароль (зашифрован)';

COMMENT ON COLUMN SEC_USERS.ACTIVE_FLAG IS 
'Признак активности пользователя';

COMMENT ON COLUMN SEC_USERS.SMART_CARD_ONLY IS 
'Признак подключения только с помощью SMART-карты';

COMMENT ON COLUMN SEC_USERS.EMAIL IS 
'E-mail';

COMMENT ON COLUMN SEC_USERS.MOBILE IS 
'Мобильный';

COMMENT ON COLUMN SEC_USERS.PAGER IS 
'Пейджер';

COMMENT ON COLUMN SEC_USERS.USE_REMOTE_PROFILE IS 
'Признак использования удаленного профайла';

COMMENT ON COLUMN SEC_USERS.USER_TYPE IS 
'Тип пользователя';

COMMENT ON COLUMN SEC_USER_PROFILE.ID IS 
'Идентификатор';

COMMENT ON COLUMN SEC_USER_PROFILE.USER_ID IS 
'Идентификатор пользователя';

COMMENT ON COLUMN SEC_USER_PROFILE.PROFILE_TYPE IS 
'Тип профайла';

COMMENT ON COLUMN SEC_USER_PROFILE_ITEM.ID IS 
'Идентификатор';

COMMENT ON COLUMN SEC_USER_PROFILE_ITEM.PROFILE_ID IS 
'Идентификатор профайла';

COMMENT ON COLUMN SEC_USER_PROFILE_ITEM.CODE IS 
'Код';

COMMENT ON COLUMN SEC_USER_PROFILE_ITEM.CHECK_SUM IS 
'Контрольная сумма';

COMMENT ON COLUMN SEC_USER_PROFILE_ITEM.DATA IS 
'Описание';

COMMENT ON COLUMN SETOFGOOD.ID IS 
'Идентификатор';

COMMENT ON COLUMN SETOFGOOD.GOOD_ID IS 
'Идентификатор комплекта в КТУ';

COMMENT ON COLUMN SETOFGOOD.COMPONENT_ID IS 
'Идентификатор позиции КТУ, входящей в комплект';

COMMENT ON COLUMN SETOFGOOD.QUANTITY IS 
'Количество в комплекте';

COMMENT ON COLUMN SETOFGOOD.PRICERELATE IS 
'Процент от общей стоимости комплекта';

COMMENT ON COLUMN SPECMARK.UPCODE IS 
'Код особой отметки в верхнем регистре';

COMMENT ON COLUMN SPECMARK.CODE IS 
'Код особой отметки';

COMMENT ON COLUMN SPECMARK.SMNAME IS 
'Наименование особой отметки';

COMMENT ON COLUMN STL_CONFIG.BASE_CURRENCY IS 
'Базовая валюта';

COMMENT ON COLUMN STL_CONFIG.NAT_CURRENCY IS 
'Национальная валюта';

COMMENT ON COLUMN STL_CONFIG.CURRENCY_PREC IS 
'Точность округления денежных величин, знаков после запятой';

COMMENT ON COLUMN STL_CONFIG.CUR_RATE_TYPE_ID IS 
'Тип курса валюты';

COMMENT ON COLUMN STL_CONFIG.CUR_RATE_AUTHORITY_ID IS 
'Источник курса валюты';

COMMENT ON COLUMN STOCKBATCH.ID IS 
'Идентификатор';

COMMENT ON COLUMN STOCKBATCH.STOCKCARD_ID IS 
'КСУ';

COMMENT ON COLUMN STOCKBATCH.BEGINQUAN IS 
'Начальное количество партии';

COMMENT ON COLUMN STOCKBATCH.ENDQUAN IS 
'Конечное количество партии';

COMMENT ON COLUMN STOCKBATCH.PRICENAT IS 
'Цена ';

COMMENT ON COLUMN STOCKBATCH.PRICECUR IS 
'Цена в валюте';

COMMENT ON COLUMN STOCKBATCH.CURRENCY_CODE IS 
'Код валюты';

COMMENT ON COLUMN STOCKBATCH.DOCTYPE IS 
'Тип  приходного документа';

COMMENT ON COLUMN STOCKBATCH.DOCNUMBER IS 
'Номер приходного документа';

COMMENT ON COLUMN STOCKBATCH.DOCDATE IS 
'Дата приходного документа';

COMMENT ON COLUMN STOCKBATCH.CREATEDATE IS 
'Дата создания партии';

COMMENT ON COLUMN STOCKBATCH.BESTBEFORE IS 
'Годен до, дата';

COMMENT ON COLUMN STOCKBATCH.CONTRACTOR_ID IS 
'Контрагент, от которого получена партия';

COMMENT ON COLUMN STOCKBATCH.NUMBER_LOT IS 
'Номер партии';

COMMENT ON COLUMN STOCKBATCH.VENDOR_LOT IS 
'Номер партии поставщика';

COMMENT ON COLUMN STOCKBATCH.CERTIFICATE IS 
'Сертификат';

COMMENT ON COLUMN STOCKBATCH.COMMENT IS 
'Комментарии';

COMMENT ON COLUMN STOCKBATCH.BEGINQUAN2 IS 
'Начальное количество партии в дополнительной ЕИ';

COMMENT ON COLUMN STOCKBATCH.ENDQUAN2 IS 
'Конечное количество партии в дополнительной ЕИ';

COMMENT ON COLUMN STOCKBATCH.OWNER_ID IS 
'Идентификатор правообладателя';

COMMENT ON COLUMN STOCKBATCH.STOCK_KIND_ID IS 
'Идентификатор вида запаса';

COMMENT ON COLUMN STOCKBATCH.CUSTOMS_DECLARATION_ID IS 
'Идентификатор грузовой таможенной декларации';

COMMENT ON COLUMN STOCKBATCH.COUNTRY_OF_ORIGIN_ID IS 
'Идентификатор страны происхождения';

COMMENT ON COLUMN STOCKBATCHHISTORY.ID IS 
'Идентификатор';

COMMENT ON COLUMN STOCKBATCHHISTORY.STOCKBATCH_ID IS 
'Идентификатор партии';

COMMENT ON COLUMN STOCKBATCHHISTORY.DATETIME IS 
'Системная дата/время создания записи истории';

COMMENT ON COLUMN STOCKBATCHHISTORY.KIND IS 
'Тип движения:
0 - приход
1 - расход';

COMMENT ON COLUMN STOCKBATCHHISTORY.DOCUMENT_ID IS 
'Документ, по которому сформирована запись истории';

COMMENT ON COLUMN STOCKBATCHHISTORY.DOCUMENTSPEC_ID IS 
'Спецификация документа, по которой сформирована запись истории';

COMMENT ON COLUMN STOCKBATCHHISTORY.QUANTITY IS 
'Количество';

COMMENT ON COLUMN STOCKBATCHHISTORY.PREV_STOCKBATCHHIST_ID IS 
'Идентификатор предыдущей записи истории';

COMMENT ON COLUMN STOCKBATCHHISTORY.PROCESSDATE IS 
'Дата отработки';

COMMENT ON COLUMN STOCKBATCHHISTORY.QUANTITY2 IS 
'Количество в дополнительной ЕИ';

COMMENT ON COLUMN STOCKCARD.ID IS 
'Идентификатор';

COMMENT ON COLUMN STOCKCARD.STOCK_ID IS 
'Склад';

COMMENT ON COLUMN STOCKCARD.MOL_ID IS 
'Материально-ответственное лицо (МОЛ)';

COMMENT ON COLUMN STOCKCARD.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN STOCKCARD.CARDNUMBER IS 
'Номер карточки';

COMMENT ON COLUMN STOCKCARD.SUPPLYNORM IS 
'Норма запаса';

COMMENT ON COLUMN STOCKCARD.RESERVE IS 
'Зарезервировано';

COMMENT ON COLUMN STOCKCARD.QUANTITY IS 
'Количество';

COMMENT ON COLUMN STOCKCARD.PLAN_IN IS 
'Планируемый приход';

COMMENT ON COLUMN STOCKCARD.PLAN_OUT IS 
'Планируемый расход';

COMMENT ON COLUMN STOCKCARD.SUPPLYNORM2 IS 
'Норма запаса в дополнительной ЕИ';

COMMENT ON COLUMN STOCKCARD.RESERVE2 IS 
'Зарезервировано в дополнительной ЕИ';

COMMENT ON COLUMN STOCKCARD.QUANTITY2 IS 
'Количество в дополнительной ЕИ';

COMMENT ON COLUMN STOCKCARD.PLAN_IN2 IS 
'Планируемый приход в дополнительной ЕИ';

COMMENT ON COLUMN STOCKCARD.PLAN_OUT2 IS 
'Планируемый расход в дополнительной ЕИ';

COMMENT ON COLUMN STOCKDOCUMENTHEAD.SUMMACUR_WITH_DISCOUNT IS 
'Сумма без скидки/наценки в валюте';

COMMENT ON COLUMN STOCKDOCUMENTHEAD.SUMMANAT_WITH_DISCOUNT IS 
'Сумма без скидки/наценки';

COMMENT ON COLUMN STOCKDOCUMENTHEAD.ADD_EXPENSES IS 
'Сумма дополнительных расходов';

COMMENT ON COLUMN STOCKDOCUMENTHEAD.DISCOUNT_ON_DOC IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN STOCKDOCUMENTHEAD.DISCOUNT_ON_LINE IS 
'Скидка/наценка по строкам спецификации';

COMMENT ON COLUMN STOCKDOCUMENTHEAD.DOCHEAD_ID IS 
'Идентификатор документа';

COMMENT ON COLUMN STOCKDOCUMENTHEADMODEL.SUMMACUR_WITH_DISCOUNT IS 
'Сумма без скидки/наценки в валюте';

COMMENT ON COLUMN STOCKDOCUMENTHEADMODEL.SUMMANAT_WITH_DISCOUNT IS 
'Сумма без скидки/наценки';

COMMENT ON COLUMN STOCKDOCUMENTHEADMODEL.ADD_EXPENSES IS 
'Сумма дополнительных расходов';

COMMENT ON COLUMN STOCKDOCUMENTHEADMODEL.DISCOUNT_ON_DOC IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN STOCKDOCUMENTHEADMODEL.DISCOUNT_ON_LINE IS 
'Скидка/наценка по строкам спецификации';

COMMENT ON COLUMN STOCKDOCUMENTHEADMODEL.DOCHEADMODEL_ID IS 
'Идентификатор образца документа';

COMMENT ON COLUMN STOCKDOCUMENTSPEC.COST IS 
'Себестоимость (учитывает дополнительные расходы)';

COMMENT ON COLUMN STOCKDOCUMENTSPEC.DISCOUNT IS 
'Скидка/наценка по строке';

COMMENT ON COLUMN STOCKDOCUMENTSPEC.PRICE_WITH_DISCOUNT IS 
'Цена с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN STOCKDOCUMENTSPEC.SUMMA_WITH_DISCOUNT IS 
'Сумма с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN STOCKDOCUMENTSPEC.DOCSPEC_ID IS 
'Идентификатор спецификации документа';

COMMENT ON COLUMN STOCKDOCUMENTSPEC.DOC_DISCOUNT IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN STOCKDOCUMENTSPECMODEL.COST IS 
'Себестоимость (учитывает дополнительные расходы)';

COMMENT ON COLUMN STOCKDOCUMENTSPECMODEL.DISCOUNT IS 
'Скидка/наценка';

COMMENT ON COLUMN STOCKDOCUMENTSPECMODEL.DOCSPEC_ID IS 
'Идентификатор спецификации образца документа';

COMMENT ON COLUMN STOCKDOCUMENTSPECMODEL.PRICE_WITH_DISCOUNT IS 
'Цена с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN STOCKDOCUMENTSPECMODEL.SUMMA_WITH_DISCOUNT IS 
'Сумма с включёнными налогами и со скидкой/наценкой';

COMMENT ON COLUMN STOCKDOCUMENTSPECMODEL.DOC_DISCOUNT IS 
'Скидка/наценка на документ';

COMMENT ON COLUMN STOCKPLANHISTORY.ID IS 
'Идентификатор';

COMMENT ON COLUMN STOCKPLANHISTORY.STOCKCARD_ID IS 
'Идентификатор партии';

COMMENT ON COLUMN STOCKPLANHISTORY.KIND IS 
'Признак:
0 - постановка в план
1 - снятие с плана
2 - постановка в резерв
3 - снятие с резерва';

COMMENT ON COLUMN STOCKPLANHISTORY.DIRECTION IS 
'Тип движения:
0 - приход/резервирование
1 - расход';

COMMENT ON COLUMN STOCKPLANHISTORY.PROCESSDATE IS 
'Дата отработки';

COMMENT ON COLUMN STOCKPLANHISTORY.SYSDATETIME IS 
'Системная дата/время создания записи истории';

COMMENT ON COLUMN STOCKPLANHISTORY.QUANTITY IS 
'Количество';

COMMENT ON COLUMN STOCKPLANHISTORY.DOCHEAD_ID IS 
'Документ, по которому сформирована запись истории';

COMMENT ON COLUMN STOCKPLANHISTORY.DOCSPEC_ID IS 
'Спецификация документа, по которой сформирована запись истории';

COMMENT ON COLUMN STOCKPLANHISTORY.QUANTITY2 IS 
'Количество во второй единице';

COMMENT ON COLUMN STRINGS.SECTION IS 
'Раздел информации:
1 - вид оплаты (платежные документы)
2 - действия с ОС и НА
3 - зарегестрированные этапы документооборота (вер.1, для вер.2 см. табл. DP_STAGE_ACTION)
4 - типы пунктов плана и факта на договорах
5 - разделы документов (вер.1, для вер.2 см. табл. DOCSECTION)
6 - значения поля KIND в таблице STOCKPLANHISTORY
7 - значения поля DIRECTION в таблице STOCKPLANHISTORY ';

COMMENT ON COLUMN STRINGS.VAL IS 
'Идентификатор описываемого значения';

COMMENT ON COLUMN STRINGS.TEXT IS 
'Описание';

COMMENT ON COLUMN SYSTEMCONFIG.MAJOR_VERSION IS 
'Версия БД: старший номер';

COMMENT ON COLUMN SYSTEMCONFIG.MINOR_VERSION IS 
'Версия БД: младший номер';

COMMENT ON COLUMN SYSTEMCONFIG."RELEASE" IS 
'Версия БД: номер релиза';

COMMENT ON COLUMN SYSTEMCONFIG.BASE_CURRENCY IS 
'Базовая валюта';

COMMENT ON COLUMN SYSTEMCONFIG.NATIONAL_CURRENCY IS 
'Национальная валюта';

COMMENT ON COLUMN SYSTEMCONFIG.USE_ANALITIC_LINK IS 
'Не используется';

COMMENT ON COLUMN SYSTEMCONFIG.RECURSE_FOLDER IS 
'Признак рекурсивного извлечения папок:
0 - нет
1 - да';

COMMENT ON COLUMN SYSTEMCONFIG.RECURSE_CATFOLDER IS 
'Признак рекурсивного извлечения папок каталога:
0 - нет
1 - да';

COMMENT ON COLUMN SYSTEMCONFIG.RECURSE_ORGUNIT IS 
'Не используется';

COMMENT ON COLUMN SYSTEMCONFIG.DELAYS_ON IS 
'Не используется';

COMMENT ON COLUMN SYSTEMCONFIG.CURRENCY_PREC IS 
'Не используется';

COMMENT ON COLUMN SYSTEMCONFIG.DEFER_REMNACC IS 
'Не используется';

COMMENT ON COLUMN SYSTEMCONFIG.LOG_V1_DOC_DEL IS 
'Не используется';

COMMENT ON COLUMN SYSTEMCONFIG.LOG_V1_ROLLBACK IS 
'Не используется';

COMMENT ON COLUMN SYSTEMCONFIG.LOG_V1_PARTNER IS 
'Не используется';

COMMENT ON COLUMN SYSTEMCONFIG.LOG_V1_CATALOG IS 
'Не используется';

COMMENT ON COLUMN SYS_AUDIT.ID IS 
'Идентификатор';

COMMENT ON COLUMN SYS_AUDIT.USER_NAME IS 
'Имя пользователя';

COMMENT ON COLUMN SYS_AUDIT.EVENT_DATETIME IS 
'Дата/время события';

COMMENT ON COLUMN SYS_AUDIT.AUDIT_BEAN IS 
'Источник события';

COMMENT ON COLUMN SYS_AUDIT.OPERATION IS 
'Операция';

COMMENT ON COLUMN SYS_AUDIT.DETAILS IS 
'Описание события';

COMMENT ON COLUMN SYS_CLASS.ID IS 
'Идентификатор';

COMMENT ON COLUMN SYS_CLASS.MODULE_ID IS 
'Ид. модуля';

COMMENT ON COLUMN SYS_CLASS.BEAN_NAME IS 
'Имя бизнес-компонента';

COMMENT ON COLUMN SYS_CLASS.DESCRIPTION IS 
'Описание бизнес-компонента';

COMMENT ON COLUMN SYS_CLASS.TRG_INIT IS 
'Триггер "на инициализацию" ';

COMMENT ON COLUMN SYS_CLASS.TRG_CREATE IS 
'Триггер "на добавление"';

COMMENT ON COLUMN SYS_CLASS.TRG_STORE IS 
'Триггер "на изменение"';

COMMENT ON COLUMN SYS_CLASS.TRG_REMOVE IS 
'Триггер "на удаление"';

COMMENT ON COLUMN SYS_DB_AUDIT.ID IS 
'Идентификатор';

COMMENT ON COLUMN SYS_DB_AUDIT.USER_NAME IS 
'Имя пользователя';

COMMENT ON COLUMN SYS_DB_AUDIT.EVENT_DATETIME IS 
'Дата/время события';

COMMENT ON COLUMN SYS_DB_AUDIT.AUDIT_TYPE IS 
'Тип события';

COMMENT ON COLUMN SYS_DB_AUDIT.ENTITY_NAME IS 
'Имя сущности';

COMMENT ON COLUMN SYS_DB_AUDIT_DETAIL.ID IS 
'Идентификатор';

COMMENT ON COLUMN SYS_DB_AUDIT_DETAIL.DB_AUDIT_ID IS 
'событие аудита';

COMMENT ON COLUMN SYS_DB_AUDIT_DETAIL.PROPERTY_NAME IS 
'Имя атрибута сущности';

COMMENT ON COLUMN SYS_DB_AUDIT_DETAIL.STATE IS 
'Состояние атрибута';

COMMENT ON COLUMN SYS_DB_AUDIT_DETAIL.OLD_STATE IS 
'Старое состояние атрибута';

COMMENT ON COLUMN SYS_DB_AUDIT_SETUP.ID IS 
'Идентификатор';

COMMENT ON COLUMN SYS_DB_AUDIT_SETUP.ENTITY_NAME IS 
'Имя сущности';

COMMENT ON COLUMN SYS_DB_AUDIT_SETUP.PROPERTY_NAME IS 
'Имя атрибута сущности';

COMMENT ON COLUMN SYS_DB_AUDIT_SETUP.AUDIT_CREATE IS 
'Признак аудита создания сущности';

COMMENT ON COLUMN SYS_DB_AUDIT_SETUP.AUDIT_MODIFY IS 
'Признак аудита изменения сущности';

COMMENT ON COLUMN SYS_DB_AUDIT_SETUP.AUDIT_REMOVE IS 
'Признак аудита удаления сущности';

COMMENT ON COLUMN SYS_METHOD.ID IS 
'Идентификатор';

COMMENT ON COLUMN SYS_METHOD.CLASS_ID IS 
'Ид. класса бизнес-компонента, к которому принадлежит метод';

COMMENT ON COLUMN SYS_METHOD.CORBA_NAME IS 
'Имя метода в IDL';

COMMENT ON COLUMN SYS_METHOD.DESCRIPTION IS 
'Описание метода';

COMMENT ON COLUMN SYS_MODULE.ID IS 
'Идентификатор';

COMMENT ON COLUMN SYS_MODULE.NAME IS 
'Наименование';

COMMENT ON COLUMN SYS_MODULE.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN SYS_MODULE.MAJOR_VERSION IS 
'Версия БД модуля: старший номер';

COMMENT ON COLUMN SYS_MODULE.MINOR_VERSION IS 
'Версия БД модуля: младший номер';

COMMENT ON COLUMN SYS_MODULE."RELEASE" IS 
'Версия БД модуля: номер релиза';

COMMENT ON COLUMN SYS_SECURITY_AUDIT.ID IS 
'Идентификатор';

COMMENT ON COLUMN SYS_SECURITY_AUDIT.USER_NAME IS 
'Имя пользователя';

COMMENT ON COLUMN SYS_SECURITY_AUDIT.EVENT_DATETIME IS 
'Дата/время события';

COMMENT ON COLUMN SYS_SECURITY_AUDIT.AUDIT_TYPE IS 
'Тип аудита';

COMMENT ON COLUMN SYS_SECURITY_AUDIT.AUDIT_BEAN IS 
'Источник события';

COMMENT ON COLUMN SYS_SECURITY_AUDIT.DETAILS IS 
'Описание события';

COMMENT ON COLUMN TAB_CONFIG.WORK_TIME_KIND_ID IS 
'Идентификатор типа времени для рабочих дней';

COMMENT ON COLUMN TAB_CONFIG.HOLIDAY_TIME_KIND_ID IS 
'Идентификатор типа времени для выходный дней';

COMMENT ON COLUMN TAB_PATTERN_HEAD.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAB_PATTERN_HEAD.PCODE IS 
'Код';

COMMENT ON COLUMN TAB_PATTERN_HEAD.PNAME IS 
'Наименование';

COMMENT ON COLUMN TAB_PATTERN_HEAD.DURATION IS 
'Длительность в днях';

COMMENT ON COLUMN TAB_PATTERN_HEAD.PATTERN_KIND IS 
'Тип шаблона
0 - недельный
1 - сменный';

COMMENT ON COLUMN TAB_PATTERN_SPEC.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAB_PATTERN_SPEC.PATTERN_HEAD_ID IS 
'Идентификатор шаблона';

COMMENT ON COLUMN TAB_PATTERN_SPEC.TIME_KIND_ID IS 
'Идентификатор типа времени';

COMMENT ON COLUMN TAB_PATTERN_SPEC.DAY_NUMBER IS 
'Номер дня';

COMMENT ON COLUMN TAB_PATTERN_SPEC.HOURS_QUANTITY IS 
'Количество часов';

COMMENT ON COLUMN TAB_SCHEDULE_HEAD.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAB_SCHEDULE_HEAD.WORK_SCHEDULE_ID IS 
'Идентификатор графика';

COMMENT ON COLUMN TAB_SCHEDULE_HEAD.DEFAULT_PATTERN_HEAD_ID IS 
'Идентификатор шаблона графика';

COMMENT ON COLUMN TAB_SCHEDULE_HEAD.HOLIDAY_ACCOUNT_KIND IS 
'Тип учета праздничных дней
0 - не учитывать
1 - учитывать как выходной
2 - учитывать другим типом времени';

COMMENT ON COLUMN TAB_SCHEDULE_HEAD.HOLIDAY_WORK_TIME_KIND_ID IS 
'Идентификатор типа времени учета праздников';

COMMENT ON COLUMN TAB_SCHEDULE_HEAD.PREHOLIDAY_REDUCTION IS 
'Сокращение предпраздничных дней';

COMMENT ON COLUMN TAB_SCHEDULE_SPEC.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAB_SCHEDULE_SPEC.SCHEDULE_HEAD_ID IS 
'Идентификатор графика';

COMMENT ON COLUMN TAB_SCHEDULE_SPEC.TIME_KIND_ID IS 
'Идентификатор типа времени';

COMMENT ON COLUMN TAB_SCHEDULE_SPEC.HOURS_QUANTITY IS 
'Количество часов';

COMMENT ON COLUMN TAB_SCHEDULE_SPEC.SCHEDULE_DATE IS 
'Дата';

COMMENT ON COLUMN TAB_TIME_BOARD_HEAD.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAB_TIME_BOARD_HEAD.CALC_PERIOD_ID IS 
'Идентификатор расчетного периода';

COMMENT ON COLUMN TAB_TIME_BOARD_HEAD.BNUMBER IS 
'Номер';

COMMENT ON COLUMN TAB_TIME_BOARD_HEAD.COMMENTS IS 
'Комментарий';

COMMENT ON COLUMN TAB_TIME_BOARD_POSITION.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAB_TIME_BOARD_POSITION.TIME_BOARD_HEAD_ID IS 
'Идентификатор заголовка табеля';

COMMENT ON COLUMN TAB_TIME_BOARD_POSITION.STAFF_LIST_UNIT_ID IS 
'Идентификатор подразделения штатного расписания';

COMMENT ON COLUMN TAB_TIME_BOARD_POSITION.POSITION_FILL_ID IS 
'Идентификатор исполняемой должности';

COMMENT ON COLUMN TAB_TIME_BOARD_SPEC.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAB_TIME_BOARD_SPEC.TIME_BOARD_POSITION_ID IS 
'Идентификатор заголовка табеля';

COMMENT ON COLUMN TAB_TIME_BOARD_SPEC.TIME_KIND_ID IS 
'Идентификатор типа времени';

COMMENT ON COLUMN TAB_TIME_BOARD_SPEC.HOURS_QUANTITY IS 
'Количество часов';

COMMENT ON COLUMN TAB_TIME_BOARD_SPEC.TIME_BOARD_DATE IS 
'Дата';

COMMENT ON COLUMN TAB_TIME_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAB_TIME_KIND.KCODE IS 
'Код';

COMMENT ON COLUMN TAB_TIME_KIND.KNAME IS 
'Наименование';

COMMENT ON COLUMN TAB_TIME_KIND.PRIORITY IS 
'Приоритет';

COMMENT ON COLUMN TAB_TIME_KIND.IS_WHOLE_DAY IS 
'Учитывать по дням';

COMMENT ON COLUMN TAB_TIME_KIND.MNEMOCODE IS 
'Мнемокод';

COMMENT ON COLUMN TAB_TIME_KIND.FONT_COLOR IS 
'Цвет шрифта';

COMMENT ON COLUMN TAB_TIME_KIND.BACKGROUND_COLOR IS 
'Цвет фона';

COMMENT ON COLUMN TAX.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAX.UPCODE IS 
'Код налога в верхнем регистре';

COMMENT ON COLUMN TAX.CODE IS 
'Код налога';

COMMENT ON COLUMN TAX.TNAME IS 
'Наименование налога';

COMMENT ON COLUMN TAX.ACTIVEDATE IS 
'Дата начала действия';

COMMENT ON COLUMN TAX.TAXTYPE IS 
'Тип налога
0 - процентный
1 - суммовой';

COMMENT ON COLUMN TAX.TAXFORM IS 
'Вид налога
0 - НДС
1 - ГСМ
2 - Акциз
3 - Прочие';

COMMENT ON COLUMN TAX.INCLUDED IS 
'Включен в цену
0 - нет
1 - да';

COMMENT ON COLUMN TAX.DIRECTRATE IS 
'Прямая ставка (процент)';

COMMENT ON COLUMN TAX.INVERSERATE IS 
'Обратная ставка (процент)';

COMMENT ON COLUMN TAX.SUMM IS 
'Сумма налога';

COMMENT ON COLUMN TAX.DEACTIVATEDATE IS 
'Дата окончания действия';

COMMENT ON COLUMN TAXGROUP.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAXGROUP.CODE IS 
'Код группы налогов';

COMMENT ON COLUMN TAXGROUP.TGNAME IS 
'Наименование группы налогов';

COMMENT ON COLUMN TAXLINK.TAXGROUP_ID IS 
'Группа налогов';

COMMENT ON COLUMN TAXLINK.TAX_ID IS 
'Налог';

COMMENT ON COLUMN TAXLINK.FEEORDER IS 
'Порядок начисления';

COMMENT ON COLUMN TAXLINK.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAXSUMM.ID IS 
'Идентификатор';

COMMENT ON COLUMN TAXSUMM.SECTIONDOC IS 
'Не используется';

COMMENT ON COLUMN TAXSUMM.SPECIFICATION_ID IS 
'Спецификация документа';

COMMENT ON COLUMN TAXSUMM.TAX_ID IS 
'Налог';

COMMENT ON COLUMN TAXSUMM.SUMM IS 
'Сумма налога в сумме спецификации';

COMMENT ON COLUMN TAXSUMM.PRICE IS 
'Сумма налога в цене спецификации';

COMMENT ON COLUMN TAXSUM_BUF.SPECIFICATION_ID IS 
'Не используется';

COMMENT ON COLUMN TAXSUM_BUF.TAX_ID IS 
'Не используется';

COMMENT ON COLUMN TAXSUM_BUF.SUMM IS 
'Не используется';

COMMENT ON COLUMN TYPEDOC.ID IS 
'Идентификатор';

COMMENT ON COLUMN TYPEDOC.UPCODE IS 
'Код типа документа в верхнем регистре';

COMMENT ON COLUMN TYPEDOC.CODE IS 
'Код типа документа';

COMMENT ON COLUMN TYPEDOC.TDNAME IS 
'Наименование типа документа';

COMMENT ON COLUMN TYPEDOC.NUMBERING_ALG_ID IS 
'Алгоритм формирования номера документа';

COMMENT ON COLUMN TYPEDOC.DOC_PROCESS_GRAPH IS 
'Схума документооборота';

COMMENT ON COLUMN TYPEDOC.SOLID_DOC_PROCESS IS 
'Признак выполнения документооборота непрерывно';

COMMENT ON COLUMN TYPEDOC.RPT_ID IS 
'Идентификатор шаблона отчета по умолчанию';

COMMENT ON COLUMN WH_BIN_LOCATION.ID IS 
'Идентификатор';

COMMENT ON COLUMN WH_BIN_LOCATION.WAREHOUSE_ID IS 
'Склад';

COMMENT ON COLUMN WH_BIN_LOCATION.CODE IS 
'Код';

COMMENT ON COLUMN WH_BIN_LOCATION.DESCRIPTION IS 
'Описание';

COMMENT ON COLUMN WH_BIN_LOCATION.TYPE_ID IS 
'Тип секции хранения';

COMMENT ON COLUMN WH_BIN_LOCATION.ZONE_ID IS 
'Зона хранения';

COMMENT ON COLUMN WH_BIN_LOCATION.INFINITE_VOLUME IS 
'Объем не ограничен';

COMMENT ON COLUMN WH_BIN_LOCATION.MAXIMUM_VOLUME IS 
'Максимальный объем';

COMMENT ON COLUMN WH_BIN_LOCATION.VOLUME_MEASURE_ID IS 
'ЕИ объема';

COMMENT ON COLUMN WH_BIN_LOCATION.INFINITE_WEIGHT IS 
'Вес не ограничен';

COMMENT ON COLUMN WH_BIN_LOCATION.MAXIMUM_WEIGHT IS 
'Максимальный вес';

COMMENT ON COLUMN WH_BIN_LOCATION.WEIGHT_MEASURE_ID IS 
'ЕИ веса';

COMMENT ON COLUMN WH_BIN_LOCATION.INFINITE_QUAN IS 
'Количество не ограничено';

COMMENT ON COLUMN WH_BIN_LOCATION.MAXIMUM_QUAN IS 
'Максимальное количество';

COMMENT ON COLUMN WH_BIN_LOCATION.QUAN_MEASURE_ID IS 
'ЕИ количества';

COMMENT ON COLUMN WH_BIN_LOCATION_DETAIL.ID IS 
'Идентификатор';

COMMENT ON COLUMN WH_BIN_LOCATION_DETAIL.BIN_LOCATION_ID IS 
'Идентификатор секции хранения склада';

COMMENT ON COLUMN WH_BIN_LOCATION_DETAIL.STOCKBATCH_ID IS 
'Идентификатор партии';

COMMENT ON COLUMN WH_BIN_LOCATION_DETAIL.QUANTITY IS 
'Количество';

COMMENT ON COLUMN WH_BIN_LOCATION_DETAIL.DOCSPEC_ID IS 
'Спецификация документа';

COMMENT ON COLUMN WH_BIN_LOCATION_DETAIL.KIND IS 
'Тип движения:
0 - приход
1 - расход';

COMMENT ON COLUMN WH_BIN_LOCATION_TYPE.ID IS 
'Идентификатор';

COMMENT ON COLUMN WH_BIN_LOCATION_TYPE.CODE IS 
'Код';

COMMENT ON COLUMN WH_BIN_LOCATION_TYPE.NAME IS 
'Наименование';

COMMENT ON COLUMN WH_BIN_TYPE_CAP_BY_PROD.ID IS 
'Идентификатор';

COMMENT ON COLUMN WH_BIN_TYPE_CAP_BY_PROD.TYPE_ID IS 
'Тип секции хранения';

COMMENT ON COLUMN WH_BIN_TYPE_CAP_BY_PROD.CATALOG_ID IS 
'Позиция каталога';

COMMENT ON COLUMN WH_BIN_TYPE_CAP_BY_PROD.MEASURE_ID IS 
'ЕИ';

COMMENT ON COLUMN WH_BIN_TYPE_CAP_BY_PROD.MAX_QUANTITY IS 
'Максимальное количество';

COMMENT ON COLUMN WH_CONFIG.BASE_CURRENCY IS 
'Базовая валюта';

COMMENT ON COLUMN WH_CONFIG.NAT_CURRENCY IS 
'Национальная валюта';

COMMENT ON COLUMN WH_CONFIG.CURRENCY_PREC IS 
'Точность денежных величин, знаков после запятой';

COMMENT ON COLUMN WH_CONFIG.CUR_RATE_TYPE_ID IS 
'Тип валюты';

COMMENT ON COLUMN WH_CONFIG.CUR_RATE_AUTHORITY_ID IS 
'Источник валюты';

COMMENT ON COLUMN WH_INVACT_COMMISSION.ID IS 
'Идентификатор';

COMMENT ON COLUMN WH_INVACT_COMMISSION.INVENTORYACT_ID IS 
'Идентификатор акта инвентаризации';

COMMENT ON COLUMN WH_INVACT_COMMISSION.CONTRACTOR_ID IS 
'Член комиссии (контрагент)';

COMMENT ON COLUMN WH_SECURITY.ID IS 
'Идентификатор';

COMMENT ON COLUMN WH_SECURITY.GROUP_ID IS 
'Группа пользователей';

COMMENT ON COLUMN WH_SECURITY.DISABLE_SPEC_PRICE IS 
'Запретить редактирование цен в спецификациях документов
0 - не запрещать
1 - запретить';

COMMENT ON COLUMN WH_SECURITY.DISABLE_DISCOUNT IS 
'Запретить применение скидок/наценок в документах
0 - не запрещать
1 - запретить';

COMMENT ON COLUMN WH_SECURITY.DISABLE_EXCEED_QUANT IS 
'Количество товара при выборе из каталога или прайс-листа:
0 - любое
1 - не более фактического
2 - не более доступного';

COMMENT ON COLUMN WH_SERIAL_NUM.ID IS 
'Идентификатор';

COMMENT ON COLUMN WH_SERIAL_NUM.BATCH_ID IS 
'Партия';

COMMENT ON COLUMN WH_SERIAL_NUM.SERIAL_NUM IS 
'Серийный номер';

COMMENT ON COLUMN WH_SERIAL_NUM.INCOME_DOCSPEC_ID IS 
'Спецификация документа прихода';

COMMENT ON COLUMN WH_SERIAL_NUM.OUTCOME_DOCSPEC_ID IS 
'Спецификация документа расхода';

COMMENT ON COLUMN WH_STOCK_KIND.ID IS 
'Идентификатор';

COMMENT ON COLUMN WH_STOCK_KIND.CODE IS 
'Код';

COMMENT ON COLUMN WH_STOCK_KIND.NAME IS 
'Наименование';

COMMENT ON COLUMN WH_WAREHOUSE.ID IS 
'Идентификатор';

COMMENT ON COLUMN WH_WAREHOUSE.CONTRACTOR_ID IS 
'Контрагент';

COMMENT ON COLUMN WH_WAREHOUSE.STOCKPOLICY IS 
'Политика списания:
0 - FIFO
1 - LIFO
2 - партионный';

COMMENT ON COLUMN WH_WAREHOUSE.CALC_FACT IS 
'Расчет доступного количества: учитывать фактическое количество
0 - нет
1 - да
';

COMMENT ON COLUMN WH_WAREHOUSE.CALC_FACT_SIGN IS 
'При расчете доступного количества учитывать фактическое количество со знаком:
0 - плюс
1 - минус';

COMMENT ON COLUMN WH_WAREHOUSE.CALC_PLAN_IN IS 
'Расчет доступного количества: учитывать планируемый приход
0 - нет
1 - да
';

COMMENT ON COLUMN WH_WAREHOUSE.CALC_PLAN_IN_SIGN IS 
'При расчете доступного количества учитывать планируемый приход со знаком:
0 - плюс
1 - минус';

COMMENT ON COLUMN WH_WAREHOUSE.CALC_PLAN_OUT IS 
'Расчет доступного количества: учитывать планируемый расход
0 - нет
1 - да
';

COMMENT ON COLUMN WH_WAREHOUSE.CALC_PLAN_OUT_SIGN IS 
'При расчете доступного количества учитывать планируемый расход со знаком:
0 - плюс
1 - минус';

COMMENT ON COLUMN WH_WAREHOUSE.CALC_RESERVE IS 
'Расчет доступного количества: учитывать резерв
0 - нет
1 - да
';

COMMENT ON COLUMN WH_WAREHOUSE.CALC_RESERVE_SIGN IS 
'При расчете доступного количества учитывать резерв со знаком:
0 - плюс
1 - минус';

COMMENT ON COLUMN WH_WAREHOUSE.USE_BIN_LOCATION IS 
'Использовать секции хранения:
0 - нет
1 - да';

COMMENT ON COLUMN WH_WAREHOUSE.BIN_SIZING IS 
'Использовать размеры секций хранения:
0 - нет
1 - да';

COMMENT ON COLUMN WH_WAREHOUSE.ALGORITHM_ID IS 
'Идентификатор алгоритма расчета';

COMMENT ON COLUMN WH_WAREHOUSE.WAREHOUSE_TYPE_ID IS 
'Тип склада';

COMMENT ON COLUMN WH_WAREHOUSE_TRANSACTION_DAY.ID IS 
' Идентификатор';

COMMENT ON COLUMN WH_WAREHOUSE_TRANSACTION_DAY.STOCK IS 
' Склад';

COMMENT ON COLUMN WH_WAREHOUSE_TRANSACTION_DAY.CLOSED_DAY IS 
' Закрытый день';

COMMENT ON COLUMN WH_WAREHOUSE_TRANSACTION_DAY.USER_STOCK_CLOSED IS 
' Сотрудник кто закрыл';

COMMENT ON COLUMN WH_WAREHOUSE_TRANSACTION_DAY.OPERATION_DATE IS 
' Дата закрытия';

COMMENT ON COLUMN WH_WAREHOUSE_TYPE.ID IS 
'Идентификатор';

COMMENT ON COLUMN WH_WAREHOUSE_TYPE.CODE IS 
'Код';

COMMENT ON COLUMN WH_WAREHOUSE_TYPE.NAME IS 
'Наименование типа склада';

COMMENT ON COLUMN WH_ZONE.ID IS 
'Идентификатор';

COMMENT ON COLUMN WH_ZONE.WAREHOUSE_ID IS 
'Склад';

COMMENT ON COLUMN WH_ZONE.CODE IS 
'Код';

COMMENT ON COLUMN WH_ZONE.NAME IS 
'Наименование';

