package com.mg.merp.overall.model;
// Generated Sep 28, 2015 11:47:52 PM by Hibernate Tools 3.6.0.Final


import com.mg.merp.core.model.SysClient;
import com.mg.merp.document.model.DocSpec;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * NormSpecDocSpecLink generated by hbm2java
 */
@Entity
@Table(name="OVR_NORM_SPEC_DOC_SPEC_LINK"
)
public class NormSpecDocSpecLink extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {


     private int Id;
     private NormSpec OvrNormSpec;
     private DocSpec DocSpec;
     private SysClient SysClient;

    public NormSpecDocSpecLink() {
    }

	
    public NormSpecDocSpecLink(int Id) {
        this.Id = Id;
    }
    public NormSpecDocSpecLink(int Id, NormSpec OvrNormSpec, DocSpec DocSpec, SysClient SysClient) {
       this.Id = Id;
       this.OvrNormSpec = OvrNormSpec;
       this.DocSpec = DocSpec;
       this.SysClient = SysClient;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false, columnDefinition="INTEGER")
    public int getId() {
        return this.Id;
    }
    
    public void setId(int Id) {
        this.Id = Id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OVR_NORM_SPEC_ID")
    public NormSpec getOvrNormSpec() {
        return this.OvrNormSpec;
    }
    
    public void setOvrNormSpec(NormSpec OvrNormSpec) {
        this.OvrNormSpec = OvrNormSpec;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DOCSPEC_ID")
    public DocSpec getDocSpec() {
        return this.DocSpec;
    }
    
    public void setDocSpec(DocSpec DocSpec) {
        this.DocSpec = DocSpec;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }
    
    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }




}


