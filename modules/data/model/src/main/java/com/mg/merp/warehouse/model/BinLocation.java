package com.mg.merp.warehouse.model;
// Generated Oct 4, 2015 2:18:05 AM by Hibernate Tools 3.6.0.Final


import com.mg.merp.core.model.SysClient;
import com.mg.merp.reference.model.Measure;
import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * BinLocation generated by hbm2java
 */
@Entity
@Table(name="WH_BIN_LOCATION"
)
public class BinLocation extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {


     private int Id;
     private Measure VolumeMeasure;
     private WarehouseZone Zone;
     private Warehouse Warehouse;
     private SysClient SysClient;
     private Measure WeightMeasure;
     private Measure QuanMeasure;
     private BinLocationType Type;
     private String Code;
     private String Description;
     private boolean InfiniteVolume;
     private BigDecimal MaximumVolume;
     private boolean InfiniteWeight;
     private BigDecimal MaximumWeight;
     private boolean InfiniteQuan;
     private BigDecimal MaximumQuan;
     private Set<BinLocationDetail> BinLocationDetails = new HashSet<BinLocationDetail>(0);

    public BinLocation() {
    }

	
    public BinLocation(Warehouse Warehouse, String Code) {
        this.Warehouse = Warehouse;
        this.Code = Code;
    }
    public BinLocation(Measure VolumeMeasure, WarehouseZone Zone, Warehouse Warehouse, SysClient SysClient, Measure WeightMeasure, Measure QuanMeasure, BinLocationType Type, String Code, String Description, boolean InfiniteVolume, BigDecimal MaximumVolume, boolean InfiniteWeight, BigDecimal MaximumWeight, boolean InfiniteQuan, BigDecimal MaximumQuan, Set<BinLocationDetail> BinLocationDetails) {
       this.VolumeMeasure = VolumeMeasure;
       this.Zone = Zone;
       this.Warehouse = Warehouse;
       this.SysClient = SysClient;
       this.WeightMeasure = WeightMeasure;
       this.QuanMeasure = QuanMeasure;
       this.Type = Type;
       this.Code = Code;
       this.Description = Description;
       this.InfiniteVolume = InfiniteVolume;
       this.MaximumVolume = MaximumVolume;
       this.InfiniteWeight = InfiniteWeight;
       this.MaximumWeight = MaximumWeight;
       this.InfiniteQuan = InfiniteQuan;
       this.MaximumQuan = MaximumQuan;
       this.BinLocationDetails = BinLocationDetails;
    }
   
     @SequenceGenerator(name="generator", sequenceName="WH_BIN_LOCATION_ID_GEN")@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")

    
    @Column(name="ID", unique=true, nullable=false, columnDefinition="INTEGER")
    public int getId() {
        return this.Id;
    }
    
    public void setId(int Id) {
        this.Id = Id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="VOLUME_MEASURE_ID")
    public Measure getVolumeMeasure() {
        return this.VolumeMeasure;
    }
    
    public void setVolumeMeasure(Measure VolumeMeasure) {
        this.VolumeMeasure = VolumeMeasure;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ZONE_ID")
    public WarehouseZone getZone() {
        return this.Zone;
    }
    
    public void setZone(WarehouseZone Zone) {
        this.Zone = Zone;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="WAREHOUSE_ID", nullable=false)
    public Warehouse getWarehouse() {
        return this.Warehouse;
    }
    
    public void setWarehouse(Warehouse Warehouse) {
        this.Warehouse = Warehouse;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }
    
    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="WEIGHT_MEASURE_ID")
    public Measure getWeightMeasure() {
        return this.WeightMeasure;
    }
    
    public void setWeightMeasure(Measure WeightMeasure) {
        this.WeightMeasure = WeightMeasure;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="QUAN_MEASURE_ID")
    public Measure getQuanMeasure() {
        return this.QuanMeasure;
    }
    
    public void setQuanMeasure(Measure QuanMeasure) {
        this.QuanMeasure = QuanMeasure;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TYPE_ID")
    public BinLocationType getType() {
        return this.Type;
    }
    
    public void setType(BinLocationType Type) {
        this.Type = Type;
    }

    
    @Column(name="CODE", unique=true, nullable=false, columnDefinition="CHAR", length=20)
    public String getCode() {
        return this.Code;
    }
    
    public void setCode(String Code) {
        this.Code = Code;
    }

    
    @Column(name="DESCRIPTION", columnDefinition="VARCHAR", length=80)
    public String getDescription() {
        return this.Description;
    }
    
    public void setDescription(String Description) {
        this.Description = Description;
    }

    
    @Column(name="INFINITE_VOLUME", columnDefinition="SMALLINT")
    public boolean isInfiniteVolume() {
        return this.InfiniteVolume;
    }
    
    public void setInfiniteVolume(boolean InfiniteVolume) {
        this.InfiniteVolume = InfiniteVolume;
    }

    
    @Column(name="MAXIMUM_VOLUME", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getMaximumVolume() {
        return this.MaximumVolume;
    }
    
    public void setMaximumVolume(BigDecimal MaximumVolume) {
        this.MaximumVolume = MaximumVolume;
    }

    
    @Column(name="INFINITE_WEIGHT", columnDefinition="SMALLINT")
    public boolean isInfiniteWeight() {
        return this.InfiniteWeight;
    }
    
    public void setInfiniteWeight(boolean InfiniteWeight) {
        this.InfiniteWeight = InfiniteWeight;
    }

    
    @Column(name="MAXIMUM_WEIGHT", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getMaximumWeight() {
        return this.MaximumWeight;
    }
    
    public void setMaximumWeight(BigDecimal MaximumWeight) {
        this.MaximumWeight = MaximumWeight;
    }

    
    @Column(name="INFINITE_QUAN", columnDefinition="SMALLINT")
    public boolean isInfiniteQuan() {
        return this.InfiniteQuan;
    }
    
    public void setInfiniteQuan(boolean InfiniteQuan) {
        this.InfiniteQuan = InfiniteQuan;
    }

    
    @Column(name="MAXIMUM_QUAN", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getMaximumQuan() {
        return this.MaximumQuan;
    }
    
    public void setMaximumQuan(BigDecimal MaximumQuan) {
        this.MaximumQuan = MaximumQuan;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="BinLocation")
    public Set<BinLocationDetail> getBinLocationDetails() {
        return this.BinLocationDetails;
    }
    
    public void setBinLocationDetails(Set<BinLocationDetail> BinLocationDetails) {
        this.BinLocationDetails = BinLocationDetails;
    }




}


