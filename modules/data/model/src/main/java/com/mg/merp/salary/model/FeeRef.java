package com.mg.merp.salary.model;
// Generated Sep 28, 2015 11:36:59 PM by Hibernate Tools 3.6.0.Final


import com.mg.framework.support.orm.EnumUserType;
import com.mg.merp.baiengine.model.Repository;
import com.mg.merp.core.model.SysClient;
import com.mg.merp.personnelref.model.CostsAnl;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * FeeRef generated by hbm2java
 */
@Entity
@Table(name="SAL_FEE_REF"
)
public class FeeRef extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {


     private Integer Id;
     private GnsCode GnsCode;
     private CostsAnl CostsAnl1;
     private CostsAnl CostsAnl3;
     private CostsAnl CostsAnl2;
     private IncomeKind IncomeKind;
     private CostsAnl CostsAnl4;
     private Repository CalcAlg;
     private SysClient SysClient;
     private CostsAnl CostsAnl5;
     private CalcListSectionRef CalcListSectionRef;
     private RollKind RollKind;
     private EnumUserType FeeType;
     private String FCode;
     private String FName;
     private Integer Priority;
     private EnumUserType SumSign;
     private Date BeginDate;
     private Date EndDate;
     private EnumUserType PeriodiCity;
     private boolean IsZeroIncluded;
     private Set<FeeRefParam> FeeRefParams = new HashSet<FeeRefParam>(0);
     private Set<TariffingInFee> SetOfSalTariffingInFee = new HashSet<TariffingInFee>(0);
     private Set<IncludedFee> SetOfSalIncludedFee = new HashSet<IncludedFee>(0);
     private Set<ReplacedFee> SetOfSalReplacedFee = new HashSet<ReplacedFee>(0);
     private Set<ReplacedFee> SetOfSalReplacedFee1 = new HashSet<ReplacedFee>(0);
     private Set<IncludedFee> SetOfSalIncludedFee1 = new HashSet<IncludedFee>(0);

    public FeeRef() {
    }

	
    public FeeRef(String FCode) {
        this.FCode = FCode;
    }
    public FeeRef(GnsCode GnsCode, CostsAnl CostsAnl1, CostsAnl CostsAnl3, CostsAnl CostsAnl2, IncomeKind IncomeKind, CostsAnl CostsAnl4, Repository CalcAlg, SysClient SysClient, CostsAnl CostsAnl5, CalcListSectionRef CalcListSectionRef, RollKind RollKind, EnumUserType FeeType, String FCode, String FName, Integer Priority, EnumUserType SumSign, Date BeginDate, Date EndDate, EnumUserType PeriodiCity, boolean IsZeroIncluded, Set<FeeRefParam> FeeRefParams, Set<TariffingInFee> SetOfSalTariffingInFee, Set<IncludedFee> SetOfSalIncludedFee, Set<ReplacedFee> SetOfSalReplacedFee, Set<ReplacedFee> SetOfSalReplacedFee1, Set<IncludedFee> SetOfSalIncludedFee1) {
       this.GnsCode = GnsCode;
       this.CostsAnl1 = CostsAnl1;
       this.CostsAnl3 = CostsAnl3;
       this.CostsAnl2 = CostsAnl2;
       this.IncomeKind = IncomeKind;
       this.CostsAnl4 = CostsAnl4;
       this.CalcAlg = CalcAlg;
       this.SysClient = SysClient;
       this.CostsAnl5 = CostsAnl5;
       this.CalcListSectionRef = CalcListSectionRef;
       this.RollKind = RollKind;
       this.FeeType = FeeType;
       this.FCode = FCode;
       this.FName = FName;
       this.Priority = Priority;
       this.SumSign = SumSign;
       this.BeginDate = BeginDate;
       this.EndDate = EndDate;
       this.PeriodiCity = PeriodiCity;
       this.IsZeroIncluded = IsZeroIncluded;
       this.FeeRefParams = FeeRefParams;
       this.SetOfSalTariffingInFee = SetOfSalTariffingInFee;
       this.SetOfSalIncludedFee = SetOfSalIncludedFee;
       this.SetOfSalReplacedFee = SetOfSalReplacedFee;
       this.SetOfSalReplacedFee1 = SetOfSalReplacedFee1;
       this.SetOfSalIncludedFee1 = SetOfSalIncludedFee1;
    }
   
     @SequenceGenerator(name="generator", sequenceName="SAL_FEE_REF_ID_GEN")@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")

    
    @Column(name="ID", unique=true, columnDefinition="INTEGER")
    public Integer getId() {
        return this.Id;
    }
    
    public void setId(Integer Id) {
        this.Id = Id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="GNSCODE_ID")
    public GnsCode getGnsCode() {
        return this.GnsCode;
    }
    
    public void setGnsCode(GnsCode GnsCode) {
        this.GnsCode = GnsCode;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COSTS_ANL1_ID")
    public CostsAnl getCostsAnl1() {
        return this.CostsAnl1;
    }
    
    public void setCostsAnl1(CostsAnl CostsAnl1) {
        this.CostsAnl1 = CostsAnl1;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COSTS_ANL3_ID")
    public CostsAnl getCostsAnl3() {
        return this.CostsAnl3;
    }
    
    public void setCostsAnl3(CostsAnl CostsAnl3) {
        this.CostsAnl3 = CostsAnl3;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COSTS_ANL2_ID")
    public CostsAnl getCostsAnl2() {
        return this.CostsAnl2;
    }
    
    public void setCostsAnl2(CostsAnl CostsAnl2) {
        this.CostsAnl2 = CostsAnl2;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="INCOME_KIND_ID")
    public IncomeKind getIncomeKind() {
        return this.IncomeKind;
    }
    
    public void setIncomeKind(IncomeKind IncomeKind) {
        this.IncomeKind = IncomeKind;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COSTS_ANL4_ID")
    public CostsAnl getCostsAnl4() {
        return this.CostsAnl4;
    }
    
    public void setCostsAnl4(CostsAnl CostsAnl4) {
        this.CostsAnl4 = CostsAnl4;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CALC_ALG_ID")
    public Repository getCalcAlg() {
        return this.CalcAlg;
    }
    
    public void setCalcAlg(Repository CalcAlg) {
        this.CalcAlg = CalcAlg;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }
    
    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COSTS_ANL5_ID")
    public CostsAnl getCostsAnl5() {
        return this.CostsAnl5;
    }
    
    public void setCostsAnl5(CostsAnl CostsAnl5) {
        this.CostsAnl5 = CostsAnl5;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CALCLISTSECTIONREF_ID")
    public CalcListSectionRef getCalcListSectionRef() {
        return this.CalcListSectionRef;
    }
    
    public void setCalcListSectionRef(CalcListSectionRef CalcListSectionRef) {
        this.CalcListSectionRef = CalcListSectionRef;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ROLL_KIND_ID")
    public RollKind getRollKind() {
        return this.RollKind;
    }
    
    public void setRollKind(RollKind RollKind) {
        this.RollKind = RollKind;
    }

    
    @Column(name="FEE_TYPE", columnDefinition="SMALLINT")
    public EnumUserType getFeeType() {
        return this.FeeType;
    }
    
    public void setFeeType(EnumUserType FeeType) {
        this.FeeType = FeeType;
    }

    
    @Column(name="FCODE", unique=true, nullable=false, columnDefinition="CHAR", length=20)
    public String getFCode() {
        return this.FCode;
    }
    
    public void setFCode(String FCode) {
        this.FCode = FCode;
    }

    
    @Column(name="FNAME", columnDefinition="VARCHAR", length=80)
    public String getFName() {
        return this.FName;
    }
    
    public void setFName(String FName) {
        this.FName = FName;
    }

    
    @Column(name="PRIORITY", columnDefinition="INTEGER")
    public Integer getPriority() {
        return this.Priority;
    }
    
    public void setPriority(Integer Priority) {
        this.Priority = Priority;
    }

    
    @Column(name="SUM_SIGN", columnDefinition="SMALLINT")
    public EnumUserType getSumSign() {
        return this.SumSign;
    }
    
    public void setSumSign(EnumUserType SumSign) {
        this.SumSign = SumSign;
    }

    
    @Column(name="BEGINDATE", columnDefinition="TIMESTAMP")
    public Date getBeginDate() {
        return this.BeginDate;
    }
    
    public void setBeginDate(Date BeginDate) {
        this.BeginDate = BeginDate;
    }

    
    @Column(name="ENDDATE", columnDefinition="TIMESTAMP")
    public Date getEndDate() {
        return this.EndDate;
    }
    
    public void setEndDate(Date EndDate) {
        this.EndDate = EndDate;
    }

    
    @Column(name="PERIODICITY", columnDefinition="SMALLINT")
    public EnumUserType getPeriodiCity() {
        return this.PeriodiCity;
    }
    
    public void setPeriodiCity(EnumUserType PeriodiCity) {
        this.PeriodiCity = PeriodiCity;
    }

    
    @Column(name="IS_ZERO_INCLUDED", columnDefinition="SMALLINT")
    public boolean isIsZeroIncluded() {
        return this.IsZeroIncluded;
    }
    
    public void setIsZeroIncluded(boolean IsZeroIncluded) {
        this.IsZeroIncluded = IsZeroIncluded;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="FeeRef")
    public Set<FeeRefParam> getFeeRefParams() {
        return this.FeeRefParams;
    }
    
    public void setFeeRefParams(Set<FeeRefParam> FeeRefParams) {
        this.FeeRefParams = FeeRefParams;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="FeeRef")
    public Set<TariffingInFee> getSetOfSalTariffingInFee() {
        return this.SetOfSalTariffingInFee;
    }
    
    public void setSetOfSalTariffingInFee(Set<TariffingInFee> SetOfSalTariffingInFee) {
        this.SetOfSalTariffingInFee = SetOfSalTariffingInFee;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="IncludedFee")
    public Set<IncludedFee> getSetOfSalIncludedFee() {
        return this.SetOfSalIncludedFee;
    }
    
    public void setSetOfSalIncludedFee(Set<IncludedFee> SetOfSalIncludedFee) {
        this.SetOfSalIncludedFee = SetOfSalIncludedFee;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="ReplacedFee")
    public Set<ReplacedFee> getSetOfSalReplacedFee() {
        return this.SetOfSalReplacedFee;
    }
    
    public void setSetOfSalReplacedFee(Set<ReplacedFee> SetOfSalReplacedFee) {
        this.SetOfSalReplacedFee = SetOfSalReplacedFee;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="FeeRef")
    public Set<ReplacedFee> getSetOfSalReplacedFee1() {
        return this.SetOfSalReplacedFee1;
    }
    
    public void setSetOfSalReplacedFee1(Set<ReplacedFee> SetOfSalReplacedFee1) {
        this.SetOfSalReplacedFee1 = SetOfSalReplacedFee1;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="FeeRef")
    public Set<IncludedFee> getSetOfSalIncludedFee1() {
        return this.SetOfSalIncludedFee1;
    }
    
    public void setSetOfSalIncludedFee1(Set<IncludedFee> SetOfSalIncludedFee1) {
        this.SetOfSalIncludedFee1 = SetOfSalIncludedFee1;
    }




}


