package com.mg.merp.salary.model;

import com.mg.merp.core.model.SysClient;
import com.mg.merp.document.model.DocHead;
import com.mg.merp.document.model.DocSpec;
import com.mg.merp.document.model.DocumentSpecSerialNum;
import com.mg.merp.document.model.DocumentSpecTax;
import com.mg.merp.personnelref.model.CostsAnl;
import com.mg.merp.reference.model.Catalog;
import com.mg.merp.reference.model.Contractor;
import com.mg.merp.reference.model.Country;
import com.mg.merp.reference.model.CustomsDeclaration;
import com.mg.merp.reference.model.Measure;
import com.mg.merp.reference.model.PriceListSpec;
import com.mg.merp.reference.model.TaxGroup;
import com.mg.merp.reference.model.TimePeriodKind;
import java.math.BigDecimal;
import java.util.Date;
import java.util.Set;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * FeeSummarySpec generated by hbm2java
 */
@Entity
@Table(name = "SAL_FEE_SUMMARY_SPEC")
public class FeeSummarySpec extends com.mg.merp.document.model.DocSpec implements java.io.Serializable {

    private CostsAnl CostsAnl1;

    private CostsAnl CostsAnl2;

    private CostsAnl CostsAnl3;

    private CostsAnl CostsAnl4;

    private CostsAnl CostsAnl5;

    public FeeSummarySpec() {
    }

    public FeeSummarySpec(TimePeriodKind ShelfLifeMeas) {
        super(ShelfLifeMeas);
    }

    public FeeSummarySpec(DocSpec OrderSpec, Catalog Catalog, TaxGroup TaxGroup, Contractor DstMol, Contractor SrcMol, PriceListSpec PriceListSpec, DocHead DocHead, Measure Measure2, SysClient SysClient, Contractor DstStock, Measure Measure1, Contractor SrcStock, BigDecimal Quantity, BigDecimal Price, BigDecimal Summa, BigDecimal Price1, BigDecimal Summa1, BigDecimal Weight, BigDecimal Volume, Date BestBefore, BigDecimal ShelfLife, TimePeriodKind ShelfLifeMeas, Date ProductionDate, BigDecimal Quantity2, String Comment, Contractor Contractor, String UNID, CustomsDeclaration CustomsDeclaration, Country CountryOfOrigin, Set<DocumentSpecTax> Taxes, Set<DocumentSpecSerialNum> SerialNumbers, CostsAnl CostsAnl1, CostsAnl CostsAnl2, CostsAnl CostsAnl3, CostsAnl CostsAnl4, CostsAnl CostsAnl5) {
        super(OrderSpec, Catalog, TaxGroup, DstMol, SrcMol, PriceListSpec, DocHead, Measure2, SysClient, DstStock, Measure1, SrcStock, Quantity, Price, Summa, Price1, Summa1, Weight, Volume, BestBefore, ShelfLife, ShelfLifeMeas, ProductionDate, Quantity2, Comment, Contractor, UNID, CustomsDeclaration, CountryOfOrigin, Taxes, SerialNumbers);
        this.CostsAnl1 = CostsAnl1;
        this.CostsAnl2 = CostsAnl2;
        this.CostsAnl3 = CostsAnl3;
        this.CostsAnl4 = CostsAnl4;
        this.CostsAnl5 = CostsAnl5;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COSTS_ANL1_ID")
    public CostsAnl getCostsAnl1() {
        return this.CostsAnl1;
    }

    public void setCostsAnl1(CostsAnl CostsAnl1) {
        this.CostsAnl1 = CostsAnl1;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COSTS_ANL2_ID")
    public CostsAnl getCostsAnl2() {
        return this.CostsAnl2;
    }

    public void setCostsAnl2(CostsAnl CostsAnl2) {
        this.CostsAnl2 = CostsAnl2;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COSTS_ANL3_ID")
    public CostsAnl getCostsAnl3() {
        return this.CostsAnl3;
    }

    public void setCostsAnl3(CostsAnl CostsAnl3) {
        this.CostsAnl3 = CostsAnl3;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COSTS_ANL4_ID")
    public CostsAnl getCostsAnl4() {
        return this.CostsAnl4;
    }

    public void setCostsAnl4(CostsAnl CostsAnl4) {
        this.CostsAnl4 = CostsAnl4;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COSTS_ANL5_ID")
    public CostsAnl getCostsAnl5() {
        return this.CostsAnl5;
    }

    public void setCostsAnl5(CostsAnl CostsAnl5) {
        this.CostsAnl5 = CostsAnl5;
    }
}

