package com.mg.merp.paymentcontrol.model;

import com.mg.merp.core.model.Folder;
import com.mg.merp.core.model.SysClient;
import com.mg.merp.document.model.DocHead;
import com.mg.merp.paymentalloc.model.Payment;
import com.mg.merp.reference.model.Currency;
import com.mg.merp.reference.model.CurrencyRateAuthority;
import com.mg.merp.reference.model.CurrencyRateType;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import com.mg.framework.api.annotations.DataItemName;

/**
 * Execution generated by hbm2java
 */
@Entity
@Table(name = "PMC_EXECUTION")
public class Execution extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {

    private Integer Id;

    private CurrencyRateAuthority CurRateAuthority;

    private Folder ResourceFolder;

    private DocHead DocHead;

    private VersionStatus VerStatus;

    private Liability Liability;

    private SysClient SysClient;

    private CurrencyRateType CurRateType;

    private Payment Payment;

    private Currency CurCode;

    private Version Version;

    private PmcResource Resource;

    private boolean Receivable;

    private Date PlanDate;

    private Date FactDate;

    private BigDecimal SumCur;

    private BigDecimal SumNat;

    private Short TransferKind;

    private Short FixedPeriod;

    private boolean DocCreated;

    private boolean DocProcessed;

    private boolean Approved;

    public Execution() {
    }

    public Execution(CurrencyRateAuthority CurRateAuthority, Folder ResourceFolder, DocHead DocHead, VersionStatus VerStatus, Liability Liability, SysClient SysClient, CurrencyRateType CurRateType, Payment Payment, Currency CurCode, Version Version, PmcResource Resource, boolean Receivable, Date PlanDate, Date FactDate, BigDecimal SumCur, BigDecimal SumNat, Short TransferKind, Short FixedPeriod, boolean DocCreated, boolean DocProcessed, boolean Approved) {
        this.CurRateAuthority = CurRateAuthority;
        this.ResourceFolder = ResourceFolder;
        this.DocHead = DocHead;
        this.VerStatus = VerStatus;
        this.Liability = Liability;
        this.SysClient = SysClient;
        this.CurRateType = CurRateType;
        this.Payment = Payment;
        this.CurCode = CurCode;
        this.Version = Version;
        this.Resource = Resource;
        this.Receivable = Receivable;
        this.PlanDate = PlanDate;
        this.FactDate = FactDate;
        this.SumCur = SumCur;
        this.SumNat = SumNat;
        this.TransferKind = TransferKind;
        this.FixedPeriod = FixedPeriod;
        this.DocCreated = DocCreated;
        this.DocProcessed = DocProcessed;
        this.Approved = Approved;
    }

    @SequenceGenerator(name = "generator", sequenceName = "PMC_EXECUTION_ID_GEN")
    @Id
    @GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @Column(name = "ID", unique = true, columnDefinition = "INTEGER")
    //$NON-NLS-1$
    @DataItemName("ID")
    public Integer getId() {
        return this.Id;
    }

    public void setId(Integer Id) {
        this.Id = Id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CURRATEAUTHORITY_ID")
    public CurrencyRateAuthority getCurRateAuthority() {
        return this.CurRateAuthority;
    }

    public void setCurRateAuthority(CurrencyRateAuthority CurRateAuthority) {
        this.CurRateAuthority = CurRateAuthority;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "RESOURCEFOLDER_ID")
    //$NON-NLS-1$
    @DataItemName("PaymentControl.Execution.ResourceFolder")
    public Folder getResourceFolder() {
        return this.ResourceFolder;
    }

    public void setResourceFolder(Folder ResourceFolder) {
        this.ResourceFolder = ResourceFolder;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "DOC_ID")
    public DocHead getDocHead() {
        return this.DocHead;
    }

    public void setDocHead(DocHead DocHead) {
        this.DocHead = DocHead;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "VERSTATUS_ID")
    public VersionStatus getVerStatus() {
        return this.VerStatus;
    }

    public void setVerStatus(VersionStatus VerStatus) {
        this.VerStatus = VerStatus;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "LIABILITY_ID")
    public Liability getLiability() {
        return this.Liability;
    }

    public void setLiability(Liability Liability) {
        this.Liability = Liability;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }

    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CURRATETYPE_ID")
    public CurrencyRateType getCurRateType() {
        return this.CurRateType;
    }

    public void setCurRateType(CurrencyRateType CurRateType) {
        this.CurRateType = CurRateType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PAYMENT_ID")
    public Payment getPayment() {
        return this.Payment;
    }

    public void setPayment(Payment Payment) {
        this.Payment = Payment;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CURCODE")
    public Currency getCurCode() {
        return this.CurCode;
    }

    public void setCurCode(Currency CurCode) {
        this.CurCode = CurCode;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "VERSION_ID")
    public Version getVersion() {
        return this.Version;
    }

    public void setVersion(Version Version) {
        this.Version = Version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "RESOURCE_ID")
    public PmcResource getResource() {
        return this.Resource;
    }

    public void setResource(PmcResource Resource) {
        this.Resource = Resource;
    }

    @Column(name = "RECEIVABLE", columnDefinition = "SMALLINT")
    //$NON-NLS-1$
    @DataItemName("PaymentControl.Execution.Receivable")
    public boolean isReceivable() {
        return this.Receivable;
    }

    public void setReceivable(boolean Receivable) {
        this.Receivable = Receivable;
    }

    @Column(name = "PLANDATE", columnDefinition = "TIMESTAMP")
    //$NON-NLS-1$
    @DataItemName("PaymentControl.Execution.PlanDate")
    public Date getPlanDate() {
        return this.PlanDate;
    }

    public void setPlanDate(Date PlanDate) {
        this.PlanDate = PlanDate;
    }

    @Column(name = "FACTDATE", columnDefinition = "TIMESTAMP")
    //$NON-NLS-1$
    @DataItemName("PaymentControl.Execution.FactDate")
    public Date getFactDate() {
        return this.FactDate;
    }

    public void setFactDate(Date FactDate) {
        this.FactDate = FactDate;
    }

    @Column(name = "SUMCUR", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    //$NON-NLS-1$
    @DataItemName("PaymentControl.Execution.SumCur")
    public BigDecimal getSumCur() {
        return this.SumCur;
    }

    public void setSumCur(BigDecimal SumCur) {
        this.SumCur = SumCur;
    }

    @Column(name = "SUMNAT", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    //$NON-NLS-1$
    @DataItemName("PaymentControl.Execution.SumNat")
    public BigDecimal getSumNat() {
        return this.SumNat;
    }

    public void setSumNat(BigDecimal SumNat) {
        this.SumNat = SumNat;
    }

    @Column(name = "TRANSFERKIND", columnDefinition = "SMALLINT")
    public Short getTransferKind() {
        return this.TransferKind;
    }

    public void setTransferKind(Short TransferKind) {
        this.TransferKind = TransferKind;
    }

    @Column(name = "FIXEDPERIOD", columnDefinition = "SMALLINT")
    public Short getFixedPeriod() {
        return this.FixedPeriod;
    }

    public void setFixedPeriod(Short FixedPeriod) {
        this.FixedPeriod = FixedPeriod;
    }

    @Column(name = "DOCCREATED", columnDefinition = "SMALLINT")
    //$NON-NLS-1$
    @DataItemName("PaymentControl.Execution.DocCreated")
    public boolean isDocCreated() {
        return this.DocCreated;
    }

    public void setDocCreated(boolean DocCreated) {
        this.DocCreated = DocCreated;
    }

    @Column(name = "DOCPROCESSED", columnDefinition = "SMALLINT")
    //$NON-NLS-1$
    @DataItemName("PaymentControl.Execution.DocProcessed")
    public boolean isDocProcessed() {
        return this.DocProcessed;
    }

    public void setDocProcessed(boolean DocProcessed) {
        this.DocProcessed = DocProcessed;
    }

    @Column(name = "APPROVED", columnDefinition = "SMALLINT")
    //$NON-NLS-1$
    @DataItemName("PaymentControl.Execution.Approved")
    public boolean isApproved() {
        return this.Approved;
    }

    public void setApproved(boolean Approved) {
        this.Approved = Approved;
    }
}

