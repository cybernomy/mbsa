package com.mg.merp.warehouse.model;
// Generated Sep 28, 2015 11:47:52 PM by Hibernate Tools 3.6.0.Final


import com.mg.framework.support.orm.EnumUserType;
import com.mg.merp.core.model.SysClient;
import com.mg.merp.document.model.DocHead;
import com.mg.merp.document.model.DocSpec;
import com.mg.merp.document.model.DocumentSpecSerialNum;
import com.mg.merp.document.model.DocumentSpecTax;
import com.mg.merp.reference.model.Catalog;
import com.mg.merp.reference.model.Contractor;
import com.mg.merp.reference.model.Country;
import com.mg.merp.reference.model.CustomsDeclaration;
import com.mg.merp.reference.model.Measure;
import com.mg.merp.reference.model.PriceListSpec;
import com.mg.merp.reference.model.TaxGroup;
import java.math.BigDecimal;
import java.util.Date;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * OrderSpec generated by hbm2java
 */
@Entity
@Table(name="ORDERSPEC"
)
public class OrderSpec extends com.mg.merp.document.model.DocSpec implements java.io.Serializable {


     private Contractor Warehouse;
     private BigDecimal Discount;
     private BigDecimal PriceWithDiscount;
     private BigDecimal SummaWithDiscount;
     private BigDecimal Cost;
     private Date RequiredDate;
     private Date PromisedDate;
     private String VendorItemCode;
     private BigDecimal QtyAccepted;
     private BigDecimal QtyInvoiced;
     private BigDecimal QtyReturned;
     private BigDecimal QtyShipped;
     private BigDecimal QtyPicked;
     private BigDecimal QtyOutstanding;
     private boolean ClosedForPlanning;
     private EnumUserType Status;
     private BigDecimal DocDiscount;

    public OrderSpec() {
    }

	
    public OrderSpec(EnumUserType ShelfLifeMeas) {
        super(ShelfLifeMeas);        
    }
    public OrderSpec(DocSpec OrderSpec, Catalog Catalog, TaxGroup TaxGroup, Contractor DstMol, Contractor SrcMol, PriceListSpec PriceListSpec, DocHead DocHead, Measure Measure2, SysClient SysClient, Contractor DstStock, Measure Measure1, Contractor SrcStock, BigDecimal Quantity, BigDecimal Price, BigDecimal Summa, BigDecimal Price1, BigDecimal Summa1, BigDecimal Weight, BigDecimal Volume, Date BestBefore, BigDecimal ShelfLife, EnumUserType ShelfLifeMeas, Date ProductionDate, BigDecimal Quantity2, String Comment, Contractor Contractor, String UNID, CustomsDeclaration CustomsDeclaration, Country CountryOfOrigin, Set<DocumentSpecTax> Taxes, Set<DocumentSpecSerialNum> SerialNumbers, Contractor Warehouse, BigDecimal Discount, BigDecimal PriceWithDiscount, BigDecimal SummaWithDiscount, BigDecimal Cost, Date RequiredDate, Date PromisedDate, String VendorItemCode, BigDecimal QtyAccepted, BigDecimal QtyInvoiced, BigDecimal QtyReturned, BigDecimal QtyShipped, BigDecimal QtyPicked, BigDecimal QtyOutstanding, boolean ClosedForPlanning, EnumUserType Status, BigDecimal DocDiscount) {
        super(OrderSpec, Catalog, TaxGroup, DstMol, SrcMol, PriceListSpec, DocHead, Measure2, SysClient, DstStock, Measure1, SrcStock, Quantity, Price, Summa, Price1, Summa1, Weight, Volume, BestBefore, ShelfLife, ShelfLifeMeas, ProductionDate, Quantity2, Comment, Contractor, UNID, CustomsDeclaration, CountryOfOrigin, Taxes, SerialNumbers);        
       this.Warehouse = Warehouse;
       this.Discount = Discount;
       this.PriceWithDiscount = PriceWithDiscount;
       this.SummaWithDiscount = SummaWithDiscount;
       this.Cost = Cost;
       this.RequiredDate = RequiredDate;
       this.PromisedDate = PromisedDate;
       this.VendorItemCode = VendorItemCode;
       this.QtyAccepted = QtyAccepted;
       this.QtyInvoiced = QtyInvoiced;
       this.QtyReturned = QtyReturned;
       this.QtyShipped = QtyShipped;
       this.QtyPicked = QtyPicked;
       this.QtyOutstanding = QtyOutstanding;
       this.ClosedForPlanning = ClosedForPlanning;
       this.Status = Status;
       this.DocDiscount = DocDiscount;
    }
   

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="WAREHOUSE_ID")
    public Contractor getWarehouse() {
        return this.Warehouse;
    }
    
    public void setWarehouse(Contractor Warehouse) {
        this.Warehouse = Warehouse;
    }

    
    @Column(name="DISCOUNT", columnDefinition="NUMERIC", precision=18, scale=6)
    public BigDecimal getDiscount() {
        return this.Discount;
    }
    
    public void setDiscount(BigDecimal Discount) {
        this.Discount = Discount;
    }

    
    @Column(name="PRICE_WITH_DISCOUNT", columnDefinition="NUMERIC", precision=15, scale=4)
    public BigDecimal getPriceWithDiscount() {
        return this.PriceWithDiscount;
    }
    
    public void setPriceWithDiscount(BigDecimal PriceWithDiscount) {
        this.PriceWithDiscount = PriceWithDiscount;
    }

    
    @Column(name="SUMMA_WITH_DISCOUNT", columnDefinition="NUMERIC", precision=15, scale=4)
    public BigDecimal getSummaWithDiscount() {
        return this.SummaWithDiscount;
    }
    
    public void setSummaWithDiscount(BigDecimal SummaWithDiscount) {
        this.SummaWithDiscount = SummaWithDiscount;
    }

    
    @Column(name="COST", columnDefinition="NUMERIC", precision=15, scale=4)
    public BigDecimal getCost() {
        return this.Cost;
    }
    
    public void setCost(BigDecimal Cost) {
        this.Cost = Cost;
    }

    
    @Column(name="REQUIRED_DATE", columnDefinition="TIMESTAMP")
    public Date getRequiredDate() {
        return this.RequiredDate;
    }
    
    public void setRequiredDate(Date RequiredDate) {
        this.RequiredDate = RequiredDate;
    }

    
    @Column(name="PROMISED_DATE", columnDefinition="TIMESTAMP")
    public Date getPromisedDate() {
        return this.PromisedDate;
    }
    
    public void setPromisedDate(Date PromisedDate) {
        this.PromisedDate = PromisedDate;
    }

    
    @Column(name="VENDOR_ITEM_CODE", columnDefinition="CHAR", length=20)
    public String getVendorItemCode() {
        return this.VendorItemCode;
    }
    
    public void setVendorItemCode(String VendorItemCode) {
        this.VendorItemCode = VendorItemCode;
    }

    
    @Column(name="QTY_ACCEPTED", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getQtyAccepted() {
        return this.QtyAccepted;
    }
    
    public void setQtyAccepted(BigDecimal QtyAccepted) {
        this.QtyAccepted = QtyAccepted;
    }

    
    @Column(name="QTY_INVOICED", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getQtyInvoiced() {
        return this.QtyInvoiced;
    }
    
    public void setQtyInvoiced(BigDecimal QtyInvoiced) {
        this.QtyInvoiced = QtyInvoiced;
    }

    
    @Column(name="QTY_RETURNED", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getQtyReturned() {
        return this.QtyReturned;
    }
    
    public void setQtyReturned(BigDecimal QtyReturned) {
        this.QtyReturned = QtyReturned;
    }

    
    @Column(name="QTY_SHIPPED", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getQtyShipped() {
        return this.QtyShipped;
    }
    
    public void setQtyShipped(BigDecimal QtyShipped) {
        this.QtyShipped = QtyShipped;
    }

    
    @Column(name="QTY_PICKED", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getQtyPicked() {
        return this.QtyPicked;
    }
    
    public void setQtyPicked(BigDecimal QtyPicked) {
        this.QtyPicked = QtyPicked;
    }

    
    @Column(name="QTY_OUTSTANDING", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getQtyOutstanding() {
        return this.QtyOutstanding;
    }
    
    public void setQtyOutstanding(BigDecimal QtyOutstanding) {
        this.QtyOutstanding = QtyOutstanding;
    }

    
    @Column(name="CLOSED_FOR_PLANNING", columnDefinition="SMALLINT")
    public boolean isClosedForPlanning() {
        return this.ClosedForPlanning;
    }
    
    public void setClosedForPlanning(boolean ClosedForPlanning) {
        this.ClosedForPlanning = ClosedForPlanning;
    }

    
    @Column(name="STATUS", columnDefinition="SMALLINT")
    public EnumUserType getStatus() {
        return this.Status;
    }
    
    public void setStatus(EnumUserType Status) {
        this.Status = Status;
    }

    
    @Column(name="DOC_DISCOUNT", columnDefinition="NUMERIC", precision=18, scale=6)
    public BigDecimal getDocDiscount() {
        return this.DocDiscount;
    }
    
    public void setDocDiscount(BigDecimal DocDiscount) {
        this.DocDiscount = DocDiscount;
    }




}


