package com.mg.merp.manufacture.model;
// Generated Sep 28, 2015 11:36:59 PM by Hibernate Tools 3.6.0.Final


import com.mg.merp.core.model.Folder;
import com.mg.merp.core.model.SysClient;
import com.mg.merp.core.model.SysCompany;
import com.mg.merp.document.model.DocHead;
import com.mg.merp.document.model.DocSection;
import com.mg.merp.document.model.DocType;
import com.mg.merp.mfreference.model.Crew;
import com.mg.merp.mfreference.model.WorkCenter;
import com.mg.merp.reference.model.CalcTaxesKind;
import com.mg.merp.reference.model.Contractor;
import com.mg.merp.reference.model.Currency;
import com.mg.merp.reference.model.CurrencyRateAuthority;
import com.mg.merp.reference.model.CurrencyRateType;
import com.mg.merp.reference.model.PriceListHead;
import com.mg.merp.reference.model.PriceType;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * InputDocumentModel generated by hbm2java
 */
@Entity
@Table(name="MF_INPUT_DOC_HEAD_MODEL"
)
public class InputDocumentModel extends com.mg.merp.document.model.DocHeadModel implements java.io.Serializable {


     private Contractor Employee;
     private DocHead OutputDocHead;
     private WorkCenter WC;
     private Crew Crew;
     private Contractor Contractor;
     private JobRoute Oper;
     private Job Job;
     private boolean BackFlushFlag;

    public InputDocumentModel() {
    }

	
    public InputDocumentModel(DocSection DocSection, boolean ManualDocNumber) {
        super(DocSection, ManualDocNumber);        
    }
    public InputDocumentModel(SysCompany SysCompany, Contractor Through, Folder ModelDestFolder, Contractor From, Contractor To, Contractor DstMol, CurrencyRateAuthority CurrencyRateAuthority, Contractor SrcMol, Folder Folder, SysClient SysClient, Contractor DstStock, CurrencyRateType CurrencyRateType, Contractor SrcStock, DocSection DocSection, String ModelName, DocType DocType, String DocNumber, Date DocDate, Currency Currency, BigDecimal CurCource, BigDecimal SumCur, BigDecimal SumNat, DocHead BaseDocument, DocType BaseDocType, String BaseDocNumber, Date BaseDocDate, DocHead Contract, DocType ContractType, String ContractNumber, Date ContractDate, BigDecimal Weight, BigDecimal Volume, PriceListHead PriceList, PriceType PriceType, CalcTaxesKind CalcTaxesKind, Folder DiscountFolder, boolean ManualDocNumber, String Description, Contractor Employee, DocHead OutputDocHead, WorkCenter WC, Crew Crew, Contractor Contractor, JobRoute Oper, Job Job, boolean BackFlushFlag) {
        super(SysCompany, Through, ModelDestFolder, From, To, DstMol, CurrencyRateAuthority, SrcMol, Folder, SysClient, DstStock, CurrencyRateType, SrcStock, DocSection, ModelName, DocType, DocNumber, DocDate, Currency, CurCource, SumCur, SumNat, BaseDocument, BaseDocType, BaseDocNumber, BaseDocDate, Contract, ContractType, ContractNumber, ContractDate, Weight, Volume, PriceList, PriceType, CalcTaxesKind, DiscountFolder, ManualDocNumber, Description);        
       this.Employee = Employee;
       this.OutputDocHead = OutputDocHead;
       this.WC = WC;
       this.Crew = Crew;
       this.Contractor = Contractor;
       this.Oper = Oper;
       this.Job = Job;
       this.BackFlushFlag = BackFlushFlag;
    }
   

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMPLOYEE_ID")
    public Contractor getEmployee() {
        return this.Employee;
    }
    
    public void setEmployee(Contractor Employee) {
        this.Employee = Employee;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OUTPUT_DOC_HEAD_ID")
    public DocHead getOutputDocHead() {
        return this.OutputDocHead;
    }
    
    public void setOutputDocHead(DocHead OutputDocHead) {
        this.OutputDocHead = OutputDocHead;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="WC_ID")
    public WorkCenter getWC() {
        return this.WC;
    }
    
    public void setWC(WorkCenter WC) {
        this.WC = WC;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CREW_ID")
    public Crew getCrew() {
        return this.Crew;
    }
    
    public void setCrew(Crew Crew) {
        this.Crew = Crew;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTRACTOR_ID")
    public Contractor getContractor() {
        return this.Contractor;
    }
    
    public void setContractor(Contractor Contractor) {
        this.Contractor = Contractor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="OPER_ID")
    public JobRoute getOper() {
        return this.Oper;
    }
    
    public void setOper(JobRoute Oper) {
        this.Oper = Oper;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="JOB_ID")
    public Job getJob() {
        return this.Job;
    }
    
    public void setJob(Job Job) {
        this.Job = Job;
    }

    
    @Column(name="BACKFLUSH_FLAG", columnDefinition="SMALLINT")
    public boolean isBackFlushFlag() {
        return this.BackFlushFlag;
    }
    
    public void setBackFlushFlag(boolean BackFlushFlag) {
        this.BackFlushFlag = BackFlushFlag;
    }




}


