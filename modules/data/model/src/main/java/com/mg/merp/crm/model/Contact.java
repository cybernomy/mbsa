package com.mg.merp.crm.model;
// Generated Sep 28, 2015 11:47:52 PM by Hibernate Tools 3.6.0.Final


import com.mg.framework.support.orm.EnumUserType;
import com.mg.merp.core.model.SysClient;
import com.mg.merp.reference.model.Contractor;
import com.mg.merp.reference.model.NaturalPerson;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Contact generated by hbm2java
 */
@Entity
@Table(name="CRM_CONTACT"
)
public class Contact extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {


     private Integer Id;
     private User Curator;
     private NaturalPerson Person;
     private User Responsible;
     private SysClient SysClient;
     private PersonTitle PersonTitle;
     private Contractor Contractor;
     private Integer Priority;
     private boolean IsDefault;
     private Position ThePosition;
     private boolean IsRetired;
     private String NickName;
     private EnumUserType AddressSource;
     private String Comments;
     private Set<Operation> Operations = new HashSet<Operation>(0);
     private Set<Offer> Offers = new HashSet<Offer>(0);
     private Set<LinkedDocument> LinkedDocs = new HashSet<LinkedDocument>(0);
     private Set<ContactLink> ContactLinks = new HashSet<ContactLink>(0);

    public Contact() {
    }

    public Contact(User Curator, NaturalPerson Person, User Responsible, SysClient SysClient, PersonTitle PersonTitle, Contractor Contractor, Integer Priority, boolean IsDefault, Position ThePosition, boolean IsRetired, String NickName, EnumUserType AddressSource, String Comments, Set<Operation> Operations, Set<Offer> Offers, Set<LinkedDocument> LinkedDocs, Set<ContactLink> ContactLinks) {
       this.Curator = Curator;
       this.Person = Person;
       this.Responsible = Responsible;
       this.SysClient = SysClient;
       this.PersonTitle = PersonTitle;
       this.Contractor = Contractor;
       this.Priority = Priority;
       this.IsDefault = IsDefault;
       this.ThePosition = ThePosition;
       this.IsRetired = IsRetired;
       this.NickName = NickName;
       this.AddressSource = AddressSource;
       this.Comments = Comments;
       this.Operations = Operations;
       this.Offers = Offers;
       this.LinkedDocs = LinkedDocs;
       this.ContactLinks = ContactLinks;
    }
   
     @SequenceGenerator(name="generator", sequenceName="CRM_CONTACT_ID_GEN")@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")

    
    @Column(name="ID", unique=true, columnDefinition="INTEGER")
    public Integer getId() {
        return this.Id;
    }
    
    public void setId(Integer Id) {
        this.Id = Id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CURATOR_ID")
    public User getCurator() {
        return this.Curator;
    }
    
    public void setCurator(User Curator) {
        this.Curator = Curator;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PERSON_ID")
    public NaturalPerson getPerson() {
        return this.Person;
    }
    
    public void setPerson(NaturalPerson Person) {
        this.Person = Person;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="RESPONSIBLE_ID")
    public User getResponsible() {
        return this.Responsible;
    }
    
    public void setResponsible(User Responsible) {
        this.Responsible = Responsible;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }
    
    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PERSON_TITLE_ID")
    public PersonTitle getPersonTitle() {
        return this.PersonTitle;
    }
    
    public void setPersonTitle(PersonTitle PersonTitle) {
        this.PersonTitle = PersonTitle;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTRACTOR_ID")
    public Contractor getContractor() {
        return this.Contractor;
    }
    
    public void setContractor(Contractor Contractor) {
        this.Contractor = Contractor;
    }

    
    @Column(name="PRIORITY", columnDefinition="INTEGER")
    public Integer getPriority() {
        return this.Priority;
    }
    
    public void setPriority(Integer Priority) {
        this.Priority = Priority;
    }

    
    @Column(name="IS_DEFAULT", columnDefinition="SMALLINT")
    public boolean isIsDefault() {
        return this.IsDefault;
    }
    
    public void setIsDefault(boolean IsDefault) {
        this.IsDefault = IsDefault;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="THE_POSITION")
    public Position getThePosition() {
        return this.ThePosition;
    }
    
    public void setThePosition(Position ThePosition) {
        this.ThePosition = ThePosition;
    }

    
    @Column(name="IS_RETIRED", columnDefinition="SMALLINT")
    public boolean isIsRetired() {
        return this.IsRetired;
    }
    
    public void setIsRetired(boolean IsRetired) {
        this.IsRetired = IsRetired;
    }

    
    @Column(name="NICKNAME", columnDefinition="VARCHAR", length=80)
    public String getNickName() {
        return this.NickName;
    }
    
    public void setNickName(String NickName) {
        this.NickName = NickName;
    }

    
    @Column(name="ADDRESS_SOURCE", columnDefinition="SMALLINT")
    public EnumUserType getAddressSource() {
        return this.AddressSource;
    }
    
    public void setAddressSource(EnumUserType AddressSource) {
        this.AddressSource = AddressSource;
    }

    
    @Column(name="COMMENTS", columnDefinition="VARCHAR", length=256)
    public String getComments() {
        return this.Comments;
    }
    
    public void setComments(String Comments) {
        this.Comments = Comments;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="Contact")
    public Set<Operation> getOperations() {
        return this.Operations;
    }
    
    public void setOperations(Set<Operation> Operations) {
        this.Operations = Operations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="Contact")
    public Set<Offer> getOffers() {
        return this.Offers;
    }
    
    public void setOffers(Set<Offer> Offers) {
        this.Offers = Offers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="Contact")
    public Set<LinkedDocument> getLinkedDocs() {
        return this.LinkedDocs;
    }
    
    public void setLinkedDocs(Set<LinkedDocument> LinkedDocs) {
        this.LinkedDocs = LinkedDocs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="unresolved")
    public Set<ContactLink> getContactLinks() {
        return this.ContactLinks;
    }
    
    public void setContactLinks(Set<ContactLink> ContactLinks) {
        this.ContactLinks = ContactLinks;
    }




}


