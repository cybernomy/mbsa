package com.mg.merp.paymentalloc.model;

import com.mg.merp.core.model.SysClient;
import com.mg.merp.document.model.DocHead;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * TransactHead generated by hbm2java
 */
@Entity
@Table(name = "PMA_TRHEAD")
public class TransactHead extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {

    private Integer Id;

    private DocHead DocHead;

    private SysClient SysClient;

    private Payment Payment;

    private Date PDate;

    private BigDecimal TotalSumCur;

    private BigDecimal TotalSumNat;

    private BigDecimal AllocSumCur;

    private BigDecimal AllocSumNat;

    private Set<TransactSpec> SetOfPmaTrspec = new HashSet<TransactSpec>(0);

    public TransactHead() {
    }

    public TransactHead(DocHead DocHead, SysClient SysClient, Payment Payment, Date PDate, BigDecimal TotalSumCur, BigDecimal TotalSumNat, BigDecimal AllocSumCur, BigDecimal AllocSumNat, Set<TransactSpec> SetOfPmaTrspec) {
        this.DocHead = DocHead;
        this.SysClient = SysClient;
        this.Payment = Payment;
        this.PDate = PDate;
        this.TotalSumCur = TotalSumCur;
        this.TotalSumNat = TotalSumNat;
        this.AllocSumCur = AllocSumCur;
        this.AllocSumNat = AllocSumNat;
        this.SetOfPmaTrspec = SetOfPmaTrspec;
    }

    @SequenceGenerator(name = "generator", sequenceName = "PMA_TRHEAD_ID_GEN")
    @Id
    @GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @Column(name = "ID", unique = true, columnDefinition = "INTEGER")
    @DataItemName("ID")
    public Integer getId() {
        return this.Id;
    }

    public void setId(Integer Id) {
        this.Id = Id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "DOCHEAD_ID")
    public DocHead getDocHead() {
        return this.DocHead;
    }

    public void setDocHead(DocHead DocHead) {
        this.DocHead = DocHead;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }

    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PAYMENT_ID")
    public Payment getPayment() {
        return this.Payment;
    }

    public void setPayment(Payment Payment) {
        this.Payment = Payment;
    }

    @Column(name = "PDATE", columnDefinition = "TIMESTAMP")
    @DataItemName("PaymentAlloc.TransactHead.PDate")
    public Date getPDate() {
        return this.PDate;
    }

    public void setPDate(Date PDate) {
        this.PDate = PDate;
    }

    @Column(name = "TOTALSUMCUR", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("PaymentAlloc.TransactHead.TotalSumCur")
    public BigDecimal getTotalSumCur() {
        return this.TotalSumCur;
    }

    public void setTotalSumCur(BigDecimal TotalSumCur) {
        this.TotalSumCur = TotalSumCur;
    }

    @Column(name = "TOTALSUMNAT", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("PaymentAlloc.TransactHead.TotalSumNat")
    public BigDecimal getTotalSumNat() {
        return this.TotalSumNat;
    }

    public void setTotalSumNat(BigDecimal TotalSumNat) {
        this.TotalSumNat = TotalSumNat;
    }

    @Column(name = "ALLOCSUMCUR", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("PaymentAlloc.TransactHead.AllocSumCur")
    public BigDecimal getAllocSumCur() {
        return this.AllocSumCur;
    }

    public void setAllocSumCur(BigDecimal AllocSumCur) {
        this.AllocSumCur = AllocSumCur;
    }

    @Column(name = "ALLOCSUMNAT", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("PaymentAlloc.TransactHead.AllocSumNat")
    public BigDecimal getAllocSumNat() {
        return this.AllocSumNat;
    }

    public void setAllocSumNat(BigDecimal AllocSumNat) {
        this.AllocSumNat = AllocSumNat;
    }

    @OneToMany(fetch = FetchType.LAZY)
    @JoinColumn(name = "TRHEAD_ID", updatable = false)
    public Set<TransactSpec> getSetOfPmaTrspec() {
        return this.SetOfPmaTrspec;
    }

    public void setSetOfPmaTrspec(Set<TransactSpec> SetOfPmaTrspec) {
        this.SetOfPmaTrspec = SetOfPmaTrspec;
    }
}

