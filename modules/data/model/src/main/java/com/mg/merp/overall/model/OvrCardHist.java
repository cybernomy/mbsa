package com.mg.merp.overall.model;

import com.mg.merp.core.model.SysClient;
import com.mg.merp.document.model.DocType;
import com.mg.merp.reference.model.Catalog;
import com.mg.merp.reference.model.Measure;
import com.mg.merp.reference.model.TimePeriodKind;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Enumerated;
import javax.persistence.EnumType;

/**
 * OvrCardHist generated by hbm2java
 */
@Entity
@Table(name = "OVR_CARD_HIST")
public class OvrCardHist extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {

    private int Id;

    private OvrCard OvrCard;

    private SysClient SysClient;

    private Measure MeasureUpCode;

    private Catalog Catalog;

    private NormSpec OvrNormSpec;

    private NormHead OvrNormHead;

    private CatalogGroupsType CatalogGroupsType;

    private BasicNormKind IsBasic;

    private PeriodicNormKind IsPeriodic;

    private boolean Returnable;

    private Date GiveDate;

    private Date ReadOutDate;

    private BigDecimal ShelfLife;

    private TimePeriodKind ShelfLifeMeas;

    private BigDecimal Quantity;

    private BigDecimal NdeCost;

    private BigDecimal NdeSumma;

    private Integer Deterioration;

    private BigDecimal DepreciableValue;

    private BigDecimal CommonSummaForDinch;

    private BigDecimal DinchedSumma;

    private BigDecimal RestOfDinchSumma;

    private BigDecimal ArrearSumma;

    private Integer GiveDocHeadId;

    private Integer GiveDocSpecId;

    private DocType GiveDocType;

    private String GiveDocNumber;

    private Date GiveDocDate;

    private Integer ExplDocHeadId;

    private Integer ExplDocSpecId;

    private DocType ExplDocType;

    private String ExplDocNumber;

    private Date ExplDocDate;

    private Integer RemoveDocHeadId;

    private Integer RemoveDocSpecId;

    private DocType RemoveDocType;

    private String RemoveDocNumber;

    private Date RemoveDocDate;

    private RemoveType RemoveType;

    private Date RemoveDate;

    private Date PlanRemoveDate;

    private Set<OvrCardHistDocSpecLink> CardHistDocSpecLinks = new HashSet<OvrCardHistDocSpecLink>(0);

    private Set<HistStatus> HistStatusGroup = new HashSet<HistStatus>(0);

    public OvrCardHist() {
    }

    public OvrCardHist(OvrCard OvrCard, SysClient SysClient, Measure MeasureUpCode, Catalog Catalog, NormSpec OvrNormSpec, NormHead OvrNormHead, CatalogGroupsType CatalogGroupsType, BasicNormKind IsBasic, PeriodicNormKind IsPeriodic, boolean Returnable, Date GiveDate, Date ReadOutDate, BigDecimal ShelfLife, TimePeriodKind ShelfLifeMeas, BigDecimal Quantity, BigDecimal NdeCost, BigDecimal NdeSumma, Integer Deterioration, BigDecimal DepreciableValue, BigDecimal CommonSummaForDinch, BigDecimal DinchedSumma, BigDecimal RestOfDinchSumma, BigDecimal ArrearSumma, Integer GiveDocHeadId, Integer GiveDocSpecId, DocType GiveDocType, String GiveDocNumber, Date GiveDocDate, Integer ExplDocHeadId, Integer ExplDocSpecId, DocType ExplDocType, String ExplDocNumber, Date ExplDocDate, Integer RemoveDocHeadId, Integer RemoveDocSpecId, DocType RemoveDocType, String RemoveDocNumber, Date RemoveDocDate, RemoveType RemoveType, Date RemoveDate, Date PlanRemoveDate, Set<OvrCardHistDocSpecLink> CardHistDocSpecLinks, Set<HistStatus> HistStatusGroup) {
        this.OvrCard = OvrCard;
        this.SysClient = SysClient;
        this.MeasureUpCode = MeasureUpCode;
        this.Catalog = Catalog;
        this.OvrNormSpec = OvrNormSpec;
        this.OvrNormHead = OvrNormHead;
        this.CatalogGroupsType = CatalogGroupsType;
        this.IsBasic = IsBasic;
        this.IsPeriodic = IsPeriodic;
        this.Returnable = Returnable;
        this.GiveDate = GiveDate;
        this.ReadOutDate = ReadOutDate;
        this.ShelfLife = ShelfLife;
        this.ShelfLifeMeas = ShelfLifeMeas;
        this.Quantity = Quantity;
        this.NdeCost = NdeCost;
        this.NdeSumma = NdeSumma;
        this.Deterioration = Deterioration;
        this.DepreciableValue = DepreciableValue;
        this.CommonSummaForDinch = CommonSummaForDinch;
        this.DinchedSumma = DinchedSumma;
        this.RestOfDinchSumma = RestOfDinchSumma;
        this.ArrearSumma = ArrearSumma;
        this.GiveDocHeadId = GiveDocHeadId;
        this.GiveDocSpecId = GiveDocSpecId;
        this.GiveDocType = GiveDocType;
        this.GiveDocNumber = GiveDocNumber;
        this.GiveDocDate = GiveDocDate;
        this.ExplDocHeadId = ExplDocHeadId;
        this.ExplDocSpecId = ExplDocSpecId;
        this.ExplDocType = ExplDocType;
        this.ExplDocNumber = ExplDocNumber;
        this.ExplDocDate = ExplDocDate;
        this.RemoveDocHeadId = RemoveDocHeadId;
        this.RemoveDocSpecId = RemoveDocSpecId;
        this.RemoveDocType = RemoveDocType;
        this.RemoveDocNumber = RemoveDocNumber;
        this.RemoveDocDate = RemoveDocDate;
        this.RemoveType = RemoveType;
        this.RemoveDate = RemoveDate;
        this.PlanRemoveDate = PlanRemoveDate;
        this.CardHistDocSpecLinks = CardHistDocSpecLinks;
        this.HistStatusGroup = HistStatusGroup;
    }

    @SequenceGenerator(name = "generator", sequenceName = "OVR_CARD_HIST_ID_GEN")
    @Id
    @GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @Column(name = "ID", unique = true, nullable = false, columnDefinition = "INTEGER")
    @DataItemName("ID")
    public int getId() {
        return this.Id;
    }

    public void setId(int Id) {
        this.Id = Id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "OVR_CARD_ID")
    public OvrCard getOvrCard() {
        return this.OvrCard;
    }

    public void setOvrCard(OvrCard OvrCard) {
        this.OvrCard = OvrCard;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }

    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MEASURE_UPCODE")
    public Measure getMeasureUpCode() {
        return this.MeasureUpCode;
    }

    public void setMeasureUpCode(Measure MeasureUpCode) {
        this.MeasureUpCode = MeasureUpCode;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CATALOG_ID")
    public Catalog getCatalog() {
        return this.Catalog;
    }

    public void setCatalog(Catalog Catalog) {
        this.Catalog = Catalog;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "OVR_NORM_SPEC_ID")
    public NormSpec getOvrNormSpec() {
        return this.OvrNormSpec;
    }

    public void setOvrNormSpec(NormSpec OvrNormSpec) {
        this.OvrNormSpec = OvrNormSpec;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "OVR_NORM_HEAD_ID")
    public NormHead getOvrNormHead() {
        return this.OvrNormHead;
    }

    public void setOvrNormHead(NormHead OvrNormHead) {
        this.OvrNormHead = OvrNormHead;
    }

    @Column(name = "CATALOG_GROUPS_TYPE_ID")
    @Enumerated(EnumType.ORDINAL)
    public CatalogGroupsType getCatalogGroupsType() {
        return this.CatalogGroupsType;
    }

    public void setCatalogGroupsType(CatalogGroupsType CatalogGroupsType) {
        this.CatalogGroupsType = CatalogGroupsType;
    }

    @Column(name = "ISBASIC", columnDefinition = "INTEGER")
    public BasicNormKind isBasic() {
        return this.IsBasic;
    }

    public void setBasic(BasicNormKind IsBasic) {
        this.IsBasic = IsBasic;
    }

    @Column(name = "ISPERIODIC", columnDefinition = "INTEGER")
    public PeriodicNormKind isPeriodic() {
        return this.IsPeriodic;
    }

    public void setPeriodic(PeriodicNormKind IsPeriodic) {
        this.IsPeriodic = IsPeriodic;
    }

    @Column(name = "RETURNABLE", columnDefinition = "INTEGER")
    @DataItemName("Overall.Card.Returnable")
    public boolean isReturnable() {
        return this.Returnable;
    }

    public void setReturnable(boolean Returnable) {
        this.Returnable = Returnable;
    }

    @Column(name = "GIVE_DATE", columnDefinition = "TIMESTAMP")
    @DataItemName("Overall.OvrCardHist.GiveDate")
    public Date getGiveDate() {
        return this.GiveDate;
    }

    public void setGiveDate(Date GiveDate) {
        this.GiveDate = GiveDate;
    }

    @Column(name = "READOUT_DATE", columnDefinition = "TIMESTAMP")
    @DataItemName("Overall.OvrCardHist.ReadOutDate")
    public Date getReadOutDate() {
        return this.ReadOutDate;
    }

    public void setReadOutDate(Date ReadOutDate) {
        this.ReadOutDate = ReadOutDate;
    }

    @Column(name = "SHELFLIFE", columnDefinition = "NUMERIC", precision = 18, scale = 3)
    @DataItemName("Overall.Spec.Shelflife")
    public BigDecimal getShelfLife() {
        return this.ShelfLife;
    }

    public void setShelfLife(BigDecimal ShelfLife) {
        this.ShelfLife = ShelfLife;
    }

    @Column(name = "SHELFLIFE_MEAS")
    @Enumerated(EnumType.ORDINAL)
    @DataItemName("Overall.Spec.ShelfLifeMeas")
    public TimePeriodKind getShelfLifeMeas() {
        return this.ShelfLifeMeas;
    }

    public void setShelfLifeMeas(TimePeriodKind ShelfLifeMeas) {
        this.ShelfLifeMeas = ShelfLifeMeas;
    }

    @Column(name = "QUANTITY", columnDefinition = "NUMERIC", precision = 18, scale = 3)
    @DataItemName("Overall.Card.Quantity")
    public BigDecimal getQuantity() {
        return this.Quantity;
    }

    public void setQuantity(BigDecimal Quantity) {
        this.Quantity = Quantity;
    }

    @Column(name = "NDE_COST", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Overall.Card.NdeCost")
    public BigDecimal getNdeCost() {
        return this.NdeCost;
    }

    public void setNdeCost(BigDecimal NdeCost) {
        this.NdeCost = NdeCost;
    }

    @Column(name = "NDE_SUMMA", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Overall.Card.NdeSumma")
    public BigDecimal getNdeSumma() {
        return this.NdeSumma;
    }

    public void setNdeSumma(BigDecimal NdeSumma) {
        this.NdeSumma = NdeSumma;
    }

    @Column(name = "DETERIORATION", columnDefinition = "INTEGER")
    @DataItemName("Overall.Card.Deterioration")
    public Integer getDeterioration() {
        return this.Deterioration;
    }

    public void setDeterioration(Integer Deterioration) {
        this.Deterioration = Deterioration;
    }

    @Column(name = "DEPRECIABLE_VALUE", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Overall.Card.DepreciableValue")
    public BigDecimal getDepreciableValue() {
        return this.DepreciableValue;
    }

    public void setDepreciableValue(BigDecimal DepreciableValue) {
        this.DepreciableValue = DepreciableValue;
    }

    @Column(name = "COMMON_SUMMA_FOR_DINCH", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Overall.Card.CommonSummaForDinch")
    public BigDecimal getCommonSummaForDinch() {
        return this.CommonSummaForDinch;
    }

    public void setCommonSummaForDinch(BigDecimal CommonSummaForDinch) {
        this.CommonSummaForDinch = CommonSummaForDinch;
    }

    @Column(name = "DINCHED_SUMMA", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Overall.Card.DinchedSumma")
    public BigDecimal getDinchedSumma() {
        return this.DinchedSumma;
    }

    public void setDinchedSumma(BigDecimal DinchedSumma) {
        this.DinchedSumma = DinchedSumma;
    }

    @Column(name = "REST_OF_DINCH_SUMMA", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Overall.Card.RestOfDinchSumma")
    public BigDecimal getRestOfDinchSumma() {
        return this.RestOfDinchSumma;
    }

    public void setRestOfDinchSumma(BigDecimal RestOfDinchSumma) {
        this.RestOfDinchSumma = RestOfDinchSumma;
    }

    @Column(name = "ARREAR_SUMMA", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Overall.Card.ArrearSumma")
    public BigDecimal getArrearSumma() {
        return this.ArrearSumma;
    }

    public void setArrearSumma(BigDecimal ArrearSumma) {
        this.ArrearSumma = ArrearSumma;
    }

    @Column(name = "GIVE_DOCHEAD_ID", columnDefinition = "INTEGER")
    public Integer getGiveDocHeadId() {
        return this.GiveDocHeadId;
    }

    public void setGiveDocHeadId(Integer GiveDocHeadId) {
        this.GiveDocHeadId = GiveDocHeadId;
    }

    @Column(name = "GIVE_DOCSPEC_ID", columnDefinition = "INTEGER")
    public Integer getGiveDocSpecId() {
        return this.GiveDocSpecId;
    }

    public void setGiveDocSpecId(Integer GiveDocSpecId) {
        this.GiveDocSpecId = GiveDocSpecId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "GIVE_DOCTYPE", columnDefinition = "CHAR")
    public DocType getGiveDocType() {
        return this.GiveDocType;
    }

    public void setGiveDocType(DocType GiveDocType) {
        this.GiveDocType = GiveDocType;
    }

    @Column(name = "GIVE_DOCNUMBER", columnDefinition = "CHAR", length = 20)
    public String getGiveDocNumber() {
        return this.GiveDocNumber;
    }

    public void setGiveDocNumber(String GiveDocNumber) {
        this.GiveDocNumber = GiveDocNumber;
    }

    @Column(name = "GIVE_DOCDATE", columnDefinition = "TIMESTAMP")
    public Date getGiveDocDate() {
        return this.GiveDocDate;
    }

    public void setGiveDocDate(Date GiveDocDate) {
        this.GiveDocDate = GiveDocDate;
    }

    @Column(name = "EXPL_DOCHEAD_ID", columnDefinition = "INTEGER")
    public Integer getExplDocHeadId() {
        return this.ExplDocHeadId;
    }

    public void setExplDocHeadId(Integer ExplDocHeadId) {
        this.ExplDocHeadId = ExplDocHeadId;
    }

    @Column(name = "EXPL_DOCSPEC_ID", columnDefinition = "INTEGER")
    public Integer getExplDocSpecId() {
        return this.ExplDocSpecId;
    }

    public void setExplDocSpecId(Integer ExplDocSpecId) {
        this.ExplDocSpecId = ExplDocSpecId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EXPL_DOCTYPE", columnDefinition = "CHAR")
    public DocType getExplDocType() {
        return this.ExplDocType;
    }

    public void setExplDocType(DocType ExplDocType) {
        this.ExplDocType = ExplDocType;
    }

    @Column(name = "EXPL_DOCNUMBER", columnDefinition = "CHAR", length = 20)
    public String getExplDocNumber() {
        return this.ExplDocNumber;
    }

    public void setExplDocNumber(String ExplDocNumber) {
        this.ExplDocNumber = ExplDocNumber;
    }

    @Column(name = "EXPL_DOCDATE", columnDefinition = "TIMESTAMP")
    public Date getExplDocDate() {
        return this.ExplDocDate;
    }

    public void setExplDocDate(Date ExplDocDate) {
        this.ExplDocDate = ExplDocDate;
    }

    @Column(name = "REMOVE_DOCHEAD_ID", columnDefinition = "INTEGER")
    public Integer getRemoveDocHeadId() {
        return this.RemoveDocHeadId;
    }

    public void setRemoveDocHeadId(Integer RemoveDocHeadId) {
        this.RemoveDocHeadId = RemoveDocHeadId;
    }

    @Column(name = "REMOVE_DOCSPEC_ID", columnDefinition = "INTEGER")
    public Integer getRemoveDocSpecId() {
        return this.RemoveDocSpecId;
    }

    public void setRemoveDocSpecId(Integer RemoveDocSpecId) {
        this.RemoveDocSpecId = RemoveDocSpecId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "REMOVE_DOCTYPE", columnDefinition = "CHAR")
    public DocType getRemoveDocType() {
        return this.RemoveDocType;
    }

    public void setRemoveDocType(DocType RemoveDocType) {
        this.RemoveDocType = RemoveDocType;
    }

    @Column(name = "REMOVE_DOCNUMBER", columnDefinition = "CHAR", length = 20)
    public String getRemoveDocNumber() {
        return this.RemoveDocNumber;
    }

    public void setRemoveDocNumber(String RemoveDocNumber) {
        this.RemoveDocNumber = RemoveDocNumber;
    }

    @Column(name = "REMOVE_DOCDATE", columnDefinition = "TIMESTAMP")
    public Date getRemoveDocDate() {
        return this.RemoveDocDate;
    }

    public void setRemoveDocDate(Date RemoveDocDate) {
        this.RemoveDocDate = RemoveDocDate;
    }

    @Column(name = "REMOVE_TYPE_ID")
    @Enumerated(EnumType.ORDINAL)
    public RemoveType getRemoveType() {
        return this.RemoveType;
    }

    public void setRemoveType(RemoveType RemoveType) {
        this.RemoveType = RemoveType;
    }

    @Column(name = "REMOVE_DATE", columnDefinition = "TIMESTAMP")
    @DataItemName("Overall.OvrCardHist.RemoveDate")
    public Date getRemoveDate() {
        return this.RemoveDate;
    }

    public void setRemoveDate(Date RemoveDate) {
        this.RemoveDate = RemoveDate;
    }

    @Column(name = "READOUT_DATE", insertable = false, updatable = false, columnDefinition = "TIMESTAMP")
    @DataItemName("Overall.OvrCardHist.PlanRemoveDate")
    public Date getPlanRemoveDate() {
        return this.PlanRemoveDate;
    }

    public void setPlanRemoveDate(Date PlanRemoveDate) {
        this.PlanRemoveDate = PlanRemoveDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "OvrCardHist")
    public Set<OvrCardHistDocSpecLink> getCardHistDocSpecLinks() {
        return this.CardHistDocSpecLinks;
    }

    public void setCardHistDocSpecLinks(Set<OvrCardHistDocSpecLink> CardHistDocSpecLinks) {
        this.CardHistDocSpecLinks = CardHistDocSpecLinks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "OvrCardHist")
    public Set<HistStatus> getHistStatusGroup() {
        return this.HistStatusGroup;
    }

    public void setHistStatusGroup(Set<HistStatus> HistStatusGroup) {
        this.HistStatusGroup = HistStatusGroup;
    }
}

