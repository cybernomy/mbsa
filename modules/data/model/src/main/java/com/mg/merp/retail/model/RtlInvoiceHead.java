package com.mg.merp.retail.model;
// Generated Oct 4, 2015 2:18:05 AM by Hibernate Tools 3.6.0.Final


import com.mg.framework.support.orm.OmittedWhitespaceStringType;
import com.mg.merp.core.model.Folder;
import com.mg.merp.core.model.SysClient;
import com.mg.merp.core.model.SysCompany;
import com.mg.merp.discount.model.Card;
import com.mg.merp.discount.model.ExtraDiscount;
import com.mg.merp.document.model.DocHead;
import com.mg.merp.document.model.DocSection;
import com.mg.merp.document.model.DocType;
import com.mg.merp.reference.model.CalcTaxesKind;
import com.mg.merp.reference.model.Contractor;
import com.mg.merp.reference.model.Currency;
import com.mg.merp.reference.model.CurrencyRateAuthority;
import com.mg.merp.reference.model.CurrencyRateType;
import com.mg.merp.reference.model.PriceListHead;
import com.mg.merp.reference.model.PriceType;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * RtlInvoiceHead generated by hbm2java
 */
@Entity
@Table(name="RTL_INVOICEHEAD"
)
public class RtlInvoiceHead extends com.mg.merp.document.model.DocHead implements java.io.Serializable {


     private ExtraDiscount ExtraDiscount;
     private Contractor Consignee;
     private Contractor Shipper;
     private Card DiscountCard;
     private Contractor Responsible;
     private Contractor Consumer;
     private BigDecimal SumCurDiscount;
     private BigDecimal SumNatDiscount;
     private BigDecimal DiscountOnDoc;
     private BigDecimal DiscountOnLine;
     private String Comments;
     private Date PlanPayDate;
     private Date PayDate;
     private BigDecimal PaySum;
     private BigDecimal BaseDiscount;
     private Date PlanShipDate;
     private boolean ApplyDisKind;

    public RtlInvoiceHead() {
    }

	
    public RtlInvoiceHead(SysCompany SysCompany, DocSection DocSection, Short Requester, boolean ManualDocNumber) {
        super(SysCompany, DocSection, Requester, ManualDocNumber);        
    }
    public RtlInvoiceHead(SysCompany SysCompany, Contractor Through, Contractor From, CurrencyRateAuthority CurrencyRateAuthority, Contractor SrcMol, PriceType PriceType, Folder DiscountFolder, Folder Folder, DocType DocType, DocHead Contract, Currency Currency, Contractor SrcStock, DocType ContractType, Contractor To, Contractor DstMol, DocHead BaseDocument, SysClient SysClient, Contractor DstStock, CalcTaxesKind CalcTaxesKind, DocType BaseDocType, CurrencyRateType CurrencyRateType, PriceListHead PriceList, DocSection DocSection, OmittedWhitespaceStringType DocNumber, Date DocDate, BigDecimal CurCource, BigDecimal SumCur, BigDecimal SumNat, OmittedWhitespaceStringType BaseDocNumber, Date BaseDocDate, OmittedWhitespaceStringType ContractNumber, Date ContractDate, BigDecimal Weight, BigDecimal Volume, Short Requester, byte[] Original, String UNID, boolean ManualDocNumber, String Description, ExtraDiscount ExtraDiscount, Contractor Consignee, Contractor Shipper, Card DiscountCard, Contractor Responsible, Contractor Consumer, BigDecimal SumCurDiscount, BigDecimal SumNatDiscount, BigDecimal DiscountOnDoc, BigDecimal DiscountOnLine, String Comments, Date PlanPayDate, Date PayDate, BigDecimal PaySum, BigDecimal BaseDiscount, Date PlanShipDate, boolean ApplyDisKind) {
        super(SysCompany, Through, From, CurrencyRateAuthority, SrcMol, PriceType, DiscountFolder, Folder, DocType, Contract, Currency, SrcStock, ContractType, To, DstMol, BaseDocument, SysClient, DstStock, CalcTaxesKind, BaseDocType, CurrencyRateType, PriceList, DocSection, DocNumber, DocDate, CurCource, SumCur, SumNat, BaseDocNumber, BaseDocDate, ContractNumber, ContractDate, Weight, Volume, Requester, Original, UNID, ManualDocNumber, Description);        
       this.ExtraDiscount = ExtraDiscount;
       this.Consignee = Consignee;
       this.Shipper = Shipper;
       this.DiscountCard = DiscountCard;
       this.Responsible = Responsible;
       this.Consumer = Consumer;
       this.SumCurDiscount = SumCurDiscount;
       this.SumNatDiscount = SumNatDiscount;
       this.DiscountOnDoc = DiscountOnDoc;
       this.DiscountOnLine = DiscountOnLine;
       this.Comments = Comments;
       this.PlanPayDate = PlanPayDate;
       this.PayDate = PayDate;
       this.PaySum = PaySum;
       this.BaseDiscount = BaseDiscount;
       this.PlanShipDate = PlanShipDate;
       this.ApplyDisKind = ApplyDisKind;
    }
   

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EXTRADISCOUNT_ID")
    public ExtraDiscount getExtraDiscount() {
        return this.ExtraDiscount;
    }
    
    public void setExtraDiscount(ExtraDiscount ExtraDiscount) {
        this.ExtraDiscount = ExtraDiscount;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONSIGNEE")
    public Contractor getConsignee() {
        return this.Consignee;
    }
    
    public void setConsignee(Contractor Consignee) {
        this.Consignee = Consignee;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SHIPPER")
    public Contractor getShipper() {
        return this.Shipper;
    }
    
    public void setShipper(Contractor Shipper) {
        this.Shipper = Shipper;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DISCOUNTCARD_ID")
    public Card getDiscountCard() {
        return this.DiscountCard;
    }
    
    public void setDiscountCard(Card DiscountCard) {
        this.DiscountCard = DiscountCard;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="RESPONSIBLE")
    public Contractor getResponsible() {
        return this.Responsible;
    }
    
    public void setResponsible(Contractor Responsible) {
        this.Responsible = Responsible;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONSUMER")
    public Contractor getConsumer() {
        return this.Consumer;
    }
    
    public void setConsumer(Contractor Consumer) {
        this.Consumer = Consumer;
    }

    
    @Column(name="SUMCUR_DISCOUNT", columnDefinition="NUMERIC", precision=15, scale=4)
    public BigDecimal getSumCurDiscount() {
        return this.SumCurDiscount;
    }
    
    public void setSumCurDiscount(BigDecimal SumCurDiscount) {
        this.SumCurDiscount = SumCurDiscount;
    }

    
    @Column(name="SUMNAT_DISCOUNT", columnDefinition="NUMERIC", precision=15, scale=4)
    public BigDecimal getSumNatDiscount() {
        return this.SumNatDiscount;
    }
    
    public void setSumNatDiscount(BigDecimal SumNatDiscount) {
        this.SumNatDiscount = SumNatDiscount;
    }

    
    @Column(name="DISCOUNT_ON_DOC", columnDefinition="NUMERIC", precision=18, scale=6)
    public BigDecimal getDiscountOnDoc() {
        return this.DiscountOnDoc;
    }
    
    public void setDiscountOnDoc(BigDecimal DiscountOnDoc) {
        this.DiscountOnDoc = DiscountOnDoc;
    }

    
    @Column(name="DISCOUNT_ON_LINE", columnDefinition="NUMERIC", precision=18, scale=6)
    public BigDecimal getDiscountOnLine() {
        return this.DiscountOnLine;
    }
    
    public void setDiscountOnLine(BigDecimal DiscountOnLine) {
        this.DiscountOnLine = DiscountOnLine;
    }

    
    @Column(name="COMMENTS", columnDefinition="VARCHAR", length=256)
    public String getComments() {
        return this.Comments;
    }
    
    public void setComments(String Comments) {
        this.Comments = Comments;
    }

    
    @Column(name="PLANPAYDATE", columnDefinition="TIMESTAMP")
    public Date getPlanPayDate() {
        return this.PlanPayDate;
    }
    
    public void setPlanPayDate(Date PlanPayDate) {
        this.PlanPayDate = PlanPayDate;
    }

    
    @Column(name="PAYDATE", columnDefinition="TIMESTAMP")
    public Date getPayDate() {
        return this.PayDate;
    }
    
    public void setPayDate(Date PayDate) {
        this.PayDate = PayDate;
    }

    
    @Column(name="PAYSUM", columnDefinition="NUMERIC", precision=15, scale=4)
    public BigDecimal getPaySum() {
        return this.PaySum;
    }
    
    public void setPaySum(BigDecimal PaySum) {
        this.PaySum = PaySum;
    }

    
    @Column(name="BASE_DISCOUNT", columnDefinition="NUMERIC", precision=18, scale=6)
    public BigDecimal getBaseDiscount() {
        return this.BaseDiscount;
    }
    
    public void setBaseDiscount(BigDecimal BaseDiscount) {
        this.BaseDiscount = BaseDiscount;
    }

    
    @Column(name="PLANSHIPDATE", columnDefinition="TIMESTAMP")
    public Date getPlanShipDate() {
        return this.PlanShipDate;
    }
    
    public void setPlanShipDate(Date PlanShipDate) {
        this.PlanShipDate = PlanShipDate;
    }

    
    @Column(name="APPLY_DIS_KIND", columnDefinition="INTEGER")
    public boolean isApplyDisKind() {
        return this.ApplyDisKind;
    }
    
    public void setApplyDisKind(boolean ApplyDisKind) {
        this.ApplyDisKind = ApplyDisKind;
    }




}


