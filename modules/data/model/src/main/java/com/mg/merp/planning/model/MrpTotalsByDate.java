package com.mg.merp.planning.model;
// Generated Sep 28, 2015 11:36:59 PM by Hibernate Tools 3.6.0.Final


import com.mg.merp.core.model.SysClient;
import com.mg.merp.reference.model.Catalog;
import com.mg.merp.reference.model.Contractor;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * MrpTotalsByDate generated by hbm2java
 */
@Entity
@Table(name="PP_MRP_TOTALS_BY_DATE"
)
public class MrpTotalsByDate extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {


     private Integer Id;
     private Catalog Catalog;
     private Contractor Contractor;
     private SysClient SysClient;
     private MrpVersionControl MrpVersionControl;
     private Date RequiredDate;
     private BigDecimal SalesOrderQty;
     private BigDecimal SalesForecastQty;
     private BigDecimal SalesQty;
     private BigDecimal ProductionQty;
     private BigDecimal PlannedProductionQty;
     private BigDecimal ProductionRequirements;
     private BigDecimal PlannedProductionRequirements;
     private BigDecimal SuggestedPurchases;
     private BigDecimal QtyOnHand;
     private BigDecimal QtyAvailable;
     private BigDecimal SuggestedTransfers;
     private BigDecimal TotalOutputs;
     private BigDecimal PurchaseQtyBefore;
     private BigDecimal TotalInputsAfter;
     private BigDecimal TransferQtyAfter;
     private BigDecimal TotalInputsBefore;
     private BigDecimal TransferQtyBefore;
     private BigDecimal PurchaseOrderQtyAfter;
     private BigDecimal FirmPlanTransfInAfter;
     private BigDecimal PurchaseForecastQtyAfter;
     private BigDecimal FirmPlanTransfInBefore;
     private BigDecimal ExpiryQty;
     private BigDecimal PurchaseOrderQtyBefore;
     private BigDecimal PurchaseForecastQtyBefore;
     private BigDecimal FirmPlannedPurchasesBefore;
     private BigDecimal FirmPlanTransfOutAfter;
     private BigDecimal FirmPlanTransfOutBefore;
     private BigDecimal PurchaseQtyAfter;
     private BigDecimal FirmPlannedPurchasesAfter;

    public MrpTotalsByDate() {
    }

	
    public MrpTotalsByDate(Integer Id) {
        this.Id = Id;
    }
    public MrpTotalsByDate(Integer Id, Catalog Catalog, Contractor Contractor, SysClient SysClient, MrpVersionControl MrpVersionControl, Date RequiredDate, BigDecimal SalesOrderQty, BigDecimal SalesForecastQty, BigDecimal SalesQty, BigDecimal ProductionQty, BigDecimal PlannedProductionQty, BigDecimal ProductionRequirements, BigDecimal PlannedProductionRequirements, BigDecimal SuggestedPurchases, BigDecimal QtyOnHand, BigDecimal QtyAvailable, BigDecimal SuggestedTransfers, BigDecimal TotalOutputs, BigDecimal PurchaseQtyBefore, BigDecimal TotalInputsAfter, BigDecimal TransferQtyAfter, BigDecimal TotalInputsBefore, BigDecimal TransferQtyBefore, BigDecimal PurchaseOrderQtyAfter, BigDecimal FirmPlanTransfInAfter, BigDecimal PurchaseForecastQtyAfter, BigDecimal FirmPlanTransfInBefore, BigDecimal ExpiryQty, BigDecimal PurchaseOrderQtyBefore, BigDecimal PurchaseForecastQtyBefore, BigDecimal FirmPlannedPurchasesBefore, BigDecimal FirmPlanTransfOutAfter, BigDecimal FirmPlanTransfOutBefore, BigDecimal PurchaseQtyAfter, BigDecimal FirmPlannedPurchasesAfter) {
       this.Id = Id;
       this.Catalog = Catalog;
       this.Contractor = Contractor;
       this.SysClient = SysClient;
       this.MrpVersionControl = MrpVersionControl;
       this.RequiredDate = RequiredDate;
       this.SalesOrderQty = SalesOrderQty;
       this.SalesForecastQty = SalesForecastQty;
       this.SalesQty = SalesQty;
       this.ProductionQty = ProductionQty;
       this.PlannedProductionQty = PlannedProductionQty;
       this.ProductionRequirements = ProductionRequirements;
       this.PlannedProductionRequirements = PlannedProductionRequirements;
       this.SuggestedPurchases = SuggestedPurchases;
       this.QtyOnHand = QtyOnHand;
       this.QtyAvailable = QtyAvailable;
       this.SuggestedTransfers = SuggestedTransfers;
       this.TotalOutputs = TotalOutputs;
       this.PurchaseQtyBefore = PurchaseQtyBefore;
       this.TotalInputsAfter = TotalInputsAfter;
       this.TransferQtyAfter = TransferQtyAfter;
       this.TotalInputsBefore = TotalInputsBefore;
       this.TransferQtyBefore = TransferQtyBefore;
       this.PurchaseOrderQtyAfter = PurchaseOrderQtyAfter;
       this.FirmPlanTransfInAfter = FirmPlanTransfInAfter;
       this.PurchaseForecastQtyAfter = PurchaseForecastQtyAfter;
       this.FirmPlanTransfInBefore = FirmPlanTransfInBefore;
       this.ExpiryQty = ExpiryQty;
       this.PurchaseOrderQtyBefore = PurchaseOrderQtyBefore;
       this.PurchaseForecastQtyBefore = PurchaseForecastQtyBefore;
       this.FirmPlannedPurchasesBefore = FirmPlannedPurchasesBefore;
       this.FirmPlanTransfOutAfter = FirmPlanTransfOutAfter;
       this.FirmPlanTransfOutBefore = FirmPlanTransfOutBefore;
       this.PurchaseQtyAfter = PurchaseQtyAfter;
       this.FirmPlannedPurchasesAfter = FirmPlannedPurchasesAfter;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, columnDefinition="INTEGER")
    public Integer getId() {
        return this.Id;
    }
    
    public void setId(Integer Id) {
        this.Id = Id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CATALOG_ID")
    public Catalog getCatalog() {
        return this.Catalog;
    }
    
    public void setCatalog(Catalog Catalog) {
        this.Catalog = Catalog;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="WAREHOUSE_ID")
    public Contractor getContractor() {
        return this.Contractor;
    }
    
    public void setContractor(Contractor Contractor) {
        this.Contractor = Contractor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }
    
    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MRP_VERSION_CONTROL_ID")
    public MrpVersionControl getMrpVersionControl() {
        return this.MrpVersionControl;
    }
    
    public void setMrpVersionControl(MrpVersionControl MrpVersionControl) {
        this.MrpVersionControl = MrpVersionControl;
    }

    
    @Column(name="REQUIRED_DATE", columnDefinition="TIMESTAMP")
    public Date getRequiredDate() {
        return this.RequiredDate;
    }
    
    public void setRequiredDate(Date RequiredDate) {
        this.RequiredDate = RequiredDate;
    }

    
    @Column(name="SALES_ORDER_QTY", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getSalesOrderQty() {
        return this.SalesOrderQty;
    }
    
    public void setSalesOrderQty(BigDecimal SalesOrderQty) {
        this.SalesOrderQty = SalesOrderQty;
    }

    
    @Column(name="SALES_FORECAST_QTY", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getSalesForecastQty() {
        return this.SalesForecastQty;
    }
    
    public void setSalesForecastQty(BigDecimal SalesForecastQty) {
        this.SalesForecastQty = SalesForecastQty;
    }

    
    @Column(name="SALES_QTY", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getSalesQty() {
        return this.SalesQty;
    }
    
    public void setSalesQty(BigDecimal SalesQty) {
        this.SalesQty = SalesQty;
    }

    
    @Column(name="PRODUCTION_QTY", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getProductionQty() {
        return this.ProductionQty;
    }
    
    public void setProductionQty(BigDecimal ProductionQty) {
        this.ProductionQty = ProductionQty;
    }

    
    @Column(name="PLANNED_PRODUCTION_QTY", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getPlannedProductionQty() {
        return this.PlannedProductionQty;
    }
    
    public void setPlannedProductionQty(BigDecimal PlannedProductionQty) {
        this.PlannedProductionQty = PlannedProductionQty;
    }

    
    @Column(name="PRODUCTION_REQUIREMENTS", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getProductionRequirements() {
        return this.ProductionRequirements;
    }
    
    public void setProductionRequirements(BigDecimal ProductionRequirements) {
        this.ProductionRequirements = ProductionRequirements;
    }

    
    @Column(name="PLANNED_PRODUCTION_REQUIREMENTS", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getPlannedProductionRequirements() {
        return this.PlannedProductionRequirements;
    }
    
    public void setPlannedProductionRequirements(BigDecimal PlannedProductionRequirements) {
        this.PlannedProductionRequirements = PlannedProductionRequirements;
    }

    
    @Column(name="SUGGESTED_PURCHASES", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getSuggestedPurchases() {
        return this.SuggestedPurchases;
    }
    
    public void setSuggestedPurchases(BigDecimal SuggestedPurchases) {
        this.SuggestedPurchases = SuggestedPurchases;
    }

    
    @Column(name="QTY_ON_HAND", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getQtyOnHand() {
        return this.QtyOnHand;
    }
    
    public void setQtyOnHand(BigDecimal QtyOnHand) {
        this.QtyOnHand = QtyOnHand;
    }

    
    @Column(name="QTY_AVAILABLE", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getQtyAvailable() {
        return this.QtyAvailable;
    }
    
    public void setQtyAvailable(BigDecimal QtyAvailable) {
        this.QtyAvailable = QtyAvailable;
    }

    
    @Column(name="SUGGESTED_TRANSFERS", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getSuggestedTransfers() {
        return this.SuggestedTransfers;
    }
    
    public void setSuggestedTransfers(BigDecimal SuggestedTransfers) {
        this.SuggestedTransfers = SuggestedTransfers;
    }

    
    @Column(name="TOTAL_OUTPUTS", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getTotalOutputs() {
        return this.TotalOutputs;
    }
    
    public void setTotalOutputs(BigDecimal TotalOutputs) {
        this.TotalOutputs = TotalOutputs;
    }

    
    @Column(name="PURCHASE_QTY_BEFORE", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getPurchaseQtyBefore() {
        return this.PurchaseQtyBefore;
    }
    
    public void setPurchaseQtyBefore(BigDecimal PurchaseQtyBefore) {
        this.PurchaseQtyBefore = PurchaseQtyBefore;
    }

    
    @Column(name="TOTAL_INPUTS_AFTER", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getTotalInputsAfter() {
        return this.TotalInputsAfter;
    }
    
    public void setTotalInputsAfter(BigDecimal TotalInputsAfter) {
        this.TotalInputsAfter = TotalInputsAfter;
    }

    
    @Column(name="TRANSFER_QTY_AFTER", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getTransferQtyAfter() {
        return this.TransferQtyAfter;
    }
    
    public void setTransferQtyAfter(BigDecimal TransferQtyAfter) {
        this.TransferQtyAfter = TransferQtyAfter;
    }

    
    @Column(name="TOTAL_INPUTS_BEFORE", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getTotalInputsBefore() {
        return this.TotalInputsBefore;
    }
    
    public void setTotalInputsBefore(BigDecimal TotalInputsBefore) {
        this.TotalInputsBefore = TotalInputsBefore;
    }

    
    @Column(name="TRANSFER_QTY_BEFORE", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getTransferQtyBefore() {
        return this.TransferQtyBefore;
    }
    
    public void setTransferQtyBefore(BigDecimal TransferQtyBefore) {
        this.TransferQtyBefore = TransferQtyBefore;
    }

    
    @Column(name="PURCHASE_ORDER_QTY_AFTER", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getPurchaseOrderQtyAfter() {
        return this.PurchaseOrderQtyAfter;
    }
    
    public void setPurchaseOrderQtyAfter(BigDecimal PurchaseOrderQtyAfter) {
        this.PurchaseOrderQtyAfter = PurchaseOrderQtyAfter;
    }

    
    @Column(name="FIRM_PLAN_TRANSF_IN_AFTER", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getFirmPlanTransfInAfter() {
        return this.FirmPlanTransfInAfter;
    }
    
    public void setFirmPlanTransfInAfter(BigDecimal FirmPlanTransfInAfter) {
        this.FirmPlanTransfInAfter = FirmPlanTransfInAfter;
    }

    
    @Column(name="PURCHASE_FORECAST_QTY_AFTER", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getPurchaseForecastQtyAfter() {
        return this.PurchaseForecastQtyAfter;
    }
    
    public void setPurchaseForecastQtyAfter(BigDecimal PurchaseForecastQtyAfter) {
        this.PurchaseForecastQtyAfter = PurchaseForecastQtyAfter;
    }

    
    @Column(name="FIRM_PLAN_TRANSF_IN_BEFORE", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getFirmPlanTransfInBefore() {
        return this.FirmPlanTransfInBefore;
    }
    
    public void setFirmPlanTransfInBefore(BigDecimal FirmPlanTransfInBefore) {
        this.FirmPlanTransfInBefore = FirmPlanTransfInBefore;
    }

    
    @Column(name="EXPIRY_QTY", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getExpiryQty() {
        return this.ExpiryQty;
    }
    
    public void setExpiryQty(BigDecimal ExpiryQty) {
        this.ExpiryQty = ExpiryQty;
    }

    
    @Column(name="PURCHASE_ORDER_QTY_BEFORE", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getPurchaseOrderQtyBefore() {
        return this.PurchaseOrderQtyBefore;
    }
    
    public void setPurchaseOrderQtyBefore(BigDecimal PurchaseOrderQtyBefore) {
        this.PurchaseOrderQtyBefore = PurchaseOrderQtyBefore;
    }

    
    @Column(name="PURCHASE_FORECAST_QTY_BEFORE", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getPurchaseForecastQtyBefore() {
        return this.PurchaseForecastQtyBefore;
    }
    
    public void setPurchaseForecastQtyBefore(BigDecimal PurchaseForecastQtyBefore) {
        this.PurchaseForecastQtyBefore = PurchaseForecastQtyBefore;
    }

    
    @Column(name="FIRM_PLANNED_PURCHASES_BEFORE", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getFirmPlannedPurchasesBefore() {
        return this.FirmPlannedPurchasesBefore;
    }
    
    public void setFirmPlannedPurchasesBefore(BigDecimal FirmPlannedPurchasesBefore) {
        this.FirmPlannedPurchasesBefore = FirmPlannedPurchasesBefore;
    }

    
    @Column(name="FIRM_PLAN_TRANSF_OUT_AFTER", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getFirmPlanTransfOutAfter() {
        return this.FirmPlanTransfOutAfter;
    }
    
    public void setFirmPlanTransfOutAfter(BigDecimal FirmPlanTransfOutAfter) {
        this.FirmPlanTransfOutAfter = FirmPlanTransfOutAfter;
    }

    
    @Column(name="FIRM_PLAN_TRANSF_OUT_BEFORE", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getFirmPlanTransfOutBefore() {
        return this.FirmPlanTransfOutBefore;
    }
    
    public void setFirmPlanTransfOutBefore(BigDecimal FirmPlanTransfOutBefore) {
        this.FirmPlanTransfOutBefore = FirmPlanTransfOutBefore;
    }

    
    @Column(name="PURCHASE_QTY_AFTER", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getPurchaseQtyAfter() {
        return this.PurchaseQtyAfter;
    }
    
    public void setPurchaseQtyAfter(BigDecimal PurchaseQtyAfter) {
        this.PurchaseQtyAfter = PurchaseQtyAfter;
    }

    
    @Column(name="FIRM_PLANNED_PURCHASES_AFTER", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getFirmPlannedPurchasesAfter() {
        return this.FirmPlannedPurchasesAfter;
    }
    
    public void setFirmPlannedPurchasesAfter(BigDecimal FirmPlannedPurchasesAfter) {
        this.FirmPlannedPurchasesAfter = FirmPlannedPurchasesAfter;
    }




}


