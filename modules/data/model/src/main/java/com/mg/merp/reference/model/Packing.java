package com.mg.merp.reference.model;

import com.mg.merp.core.model.SysClient;
import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import com.mg.framework.api.annotations.DataItemName;

/**
 * Packing generated by hbm2java
 */
@Entity
@Table(name = "PACKING")
//$NON-NLS-1$
@DataItemName("Reference.Packing")
public class Packing extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {

    private int Id;

    private Measure Measure;

    private Catalog Catalog;

    private Measure WeightMeasure;

    private SysClient SysClient;

    private Measure VolumeMeasure;

    private short Priority;

    private BigDecimal Weight;

    private BigDecimal Volume;

    private BigDecimal QuantityMeasure1;

    private BigDecimal QuantityMeasure2;

    public Packing() {
    }

    public Packing(Measure Measure, short Priority) {
        this.Measure = Measure;
        this.Priority = Priority;
    }

    public Packing(Measure Measure, Catalog Catalog, Measure WeightMeasure, SysClient SysClient, Measure VolumeMeasure, short Priority, BigDecimal Weight, BigDecimal Volume, BigDecimal QuantityMeasure1, BigDecimal QuantityMeasure2) {
        this.Measure = Measure;
        this.Catalog = Catalog;
        this.WeightMeasure = WeightMeasure;
        this.SysClient = SysClient;
        this.VolumeMeasure = VolumeMeasure;
        this.Priority = Priority;
        this.Weight = Weight;
        this.Volume = Volume;
        this.QuantityMeasure1 = QuantityMeasure1;
        this.QuantityMeasure2 = QuantityMeasure2;
    }

    @SequenceGenerator(name = "generator", sequenceName = "PACKING_ID_GEN")
    @Id
    @GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @Column(name = "ID", unique = true, nullable = false, columnDefinition = "INTEGER")
    //$NON-NLS-1$
    @DataItemName("ID")
    public int getId() {
        return this.Id;
    }

    public void setId(int Id) {
        this.Id = Id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MEASURE_ID", nullable = false)
    //$NON-NLS-1$
    @DataItemName("Reference.Packing.Measure")
    public Measure getMeasure() {
        return this.Measure;
    }

    public void setMeasure(Measure Measure) {
        this.Measure = Measure;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CATALOG_ID")
    public Catalog getCatalog() {
        return this.Catalog;
    }

    public void setCatalog(Catalog Catalog) {
        this.Catalog = Catalog;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "WEIGHTMEASURE_ID")
    //$NON-NLS-1$
    @DataItemName("Reference.Packing.WeightMeasure")
    public Measure getWeightMeasure() {
        return this.WeightMeasure;
    }

    public void setWeightMeasure(Measure WeightMeasure) {
        this.WeightMeasure = WeightMeasure;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }

    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "VOLUMEMEASURE_ID")
    //$NON-NLS-1$
    @DataItemName("Reference.Packing.VolumeMeasure")
    public Measure getVolumeMeasure() {
        return this.VolumeMeasure;
    }

    public void setVolumeMeasure(Measure VolumeMeasure) {
        this.VolumeMeasure = VolumeMeasure;
    }

    @Column(name = "PRIORITY", nullable = false, columnDefinition = "SMALLINT")
    //$NON-NLS-1$
    @DataItemName("Reference.Catalog.Packing.Priority")
    public short getPriority() {
        return this.Priority;
    }

    public void setPriority(short Priority) {
        this.Priority = Priority;
    }

    @Column(name = "WEIGHT", columnDefinition = "NUMERIC", precision = 15, scale = 3)
    //$NON-NLS-1$
    @DataItemName("Reference.Packing.Weight")
    public BigDecimal getWeight() {
        return this.Weight;
    }

    public void setWeight(BigDecimal Weight) {
        this.Weight = Weight;
    }

    @Column(name = "VOLUME", columnDefinition = "NUMERIC", precision = 15, scale = 3)
    //$NON-NLS-1$
    @DataItemName("Reference.Packing.Volume")
    public BigDecimal getVolume() {
        return this.Volume;
    }

    public void setVolume(BigDecimal Volume) {
        this.Volume = Volume;
    }

    @Column(name = "QANTITY_MEASURE1", columnDefinition = "NUMERIC", precision = 18, scale = 3)
    //$NON-NLS-1$
    @DataItemName("Reference.Packing.QuantityMeasure1")
    public BigDecimal getQuantityMeasure1() {
        return this.QuantityMeasure1;
    }

    public void setQuantityMeasure1(BigDecimal QuantityMeasure1) {
        this.QuantityMeasure1 = QuantityMeasure1;
    }

    @Column(name = "QANTITY_MEASURE2", columnDefinition = "NUMERIC", precision = 18, scale = 3)
    //$NON-NLS-1$
    @DataItemName("Reference.Packing.QuantityMeasure2")
    public BigDecimal getQuantityMeasure2() {
        return this.QuantityMeasure2;
    }

    public void setQuantityMeasure2(BigDecimal QuantityMeasure2) {
        this.QuantityMeasure2 = QuantityMeasure2;
    }
}

