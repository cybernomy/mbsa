package com.mg.merp.warehouse.model;

import com.mg.merp.core.model.SysClient;
import com.mg.merp.reference.model.Contractor;
import com.mg.merp.reference.model.Country;
import com.mg.merp.reference.model.CustomsDeclaration;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * StockBatch generated by hbm2java
 */
@Entity
@Table(name = "STOCKBATCH")
public class StockBatch extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {

    private Integer Id;

    private StockCard StockCard;

    private SysClient SysClient;

    private StockKind StockKind;

    private Contractor Contractor;

    private Contractor Owner;

    private BigDecimal BeginQuan;

    private BigDecimal EndQuan;

    private BigDecimal PriceNat;

    private BigDecimal PriceCur;

    private String CurrencyCode;

    private String DocType;

    private String DocNumber;

    private Date DocDate;

    private Date CreateDate;

    private Date BestBefore;

    private String NumberLot;

    private String VendorLot;

    private String Certificate;

    private String Comment;

    private BigDecimal BeginQuan2;

    private BigDecimal EndQuan2;

    private CustomsDeclaration CustomsDeclaration;

    private Country CountryOfOrigin;

    private Set<SerialNum> SetOfWhSerialNum = new HashSet<SerialNum>(0);

    private Set<BinLocationDetail> SetOfWhBinLocationDetail = new HashSet<BinLocationDetail>(0);

    public StockBatch() {
    }

    public StockBatch(StockCard StockCard, SysClient SysClient, StockKind StockKind, Contractor Contractor, Contractor Owner, BigDecimal BeginQuan, BigDecimal EndQuan, BigDecimal PriceNat, BigDecimal PriceCur, String CurrencyCode, String DocType, String DocNumber, Date DocDate, Date CreateDate, Date BestBefore, String NumberLot, String VendorLot, String Certificate, String Comment, BigDecimal BeginQuan2, BigDecimal EndQuan2, CustomsDeclaration CustomsDeclaration, Country CountryOfOrigin, Set<SerialNum> SetOfWhSerialNum, Set<BinLocationDetail> SetOfWhBinLocationDetail) {
        this.StockCard = StockCard;
        this.SysClient = SysClient;
        this.StockKind = StockKind;
        this.Contractor = Contractor;
        this.Owner = Owner;
        this.BeginQuan = BeginQuan;
        this.EndQuan = EndQuan;
        this.PriceNat = PriceNat;
        this.PriceCur = PriceCur;
        this.CurrencyCode = CurrencyCode;
        this.DocType = DocType;
        this.DocNumber = DocNumber;
        this.DocDate = DocDate;
        this.CreateDate = CreateDate;
        this.BestBefore = BestBefore;
        this.NumberLot = NumberLot;
        this.VendorLot = VendorLot;
        this.Certificate = Certificate;
        this.Comment = Comment;
        this.BeginQuan2 = BeginQuan2;
        this.EndQuan2 = EndQuan2;
        this.CustomsDeclaration = CustomsDeclaration;
        this.CountryOfOrigin = CountryOfOrigin;
        this.SetOfWhSerialNum = SetOfWhSerialNum;
        this.SetOfWhBinLocationDetail = SetOfWhBinLocationDetail;
    }

    @SequenceGenerator(name = "generator", sequenceName = "STOCKBATCH_ID_GEN")
    @Id
    @GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @Column(name = "ID", unique = true, columnDefinition = "INTEGER")
    public Integer getId() {
        return this.Id;
    }

    public void setId(Integer Id) {
        this.Id = Id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "STOCKCARD_ID")
    public StockCard getStockCard() {
        return this.StockCard;
    }

    public void setStockCard(StockCard StockCard) {
        this.StockCard = StockCard;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }

    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "STOCK_KIND_ID")
    public StockKind getStockKind() {
        return this.StockKind;
    }

    public void setStockKind(StockKind StockKind) {
        this.StockKind = StockKind;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CONTRACTOR_ID")
    public Contractor getContractor() {
        return this.Contractor;
    }

    public void setContractor(Contractor Contractor) {
        this.Contractor = Contractor;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "OWNER_ID")
    public Contractor getOwner() {
        return this.Owner;
    }

    public void setOwner(Contractor Owner) {
        this.Owner = Owner;
    }

    @Column(name = "BEGINQUAN", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    public BigDecimal getBeginQuan() {
        return this.BeginQuan;
    }

    public void setBeginQuan(BigDecimal BeginQuan) {
        this.BeginQuan = BeginQuan;
    }

    @Column(name = "ENDQUAN", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    public BigDecimal getEndQuan() {
        return this.EndQuan;
    }

    public void setEndQuan(BigDecimal EndQuan) {
        this.EndQuan = EndQuan;
    }

    @Column(name = "PRICENAT", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    public BigDecimal getPriceNat() {
        return this.PriceNat;
    }

    public void setPriceNat(BigDecimal PriceNat) {
        this.PriceNat = PriceNat;
    }

    @Column(name = "PRICECUR", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    public BigDecimal getPriceCur() {
        return this.PriceCur;
    }

    public void setPriceCur(BigDecimal PriceCur) {
        this.PriceCur = PriceCur;
    }

    @Column(name = "CURRENCY_CODE", columnDefinition = "CHAR", length = 5)
    public String getCurrencyCode() {
        return this.CurrencyCode;
    }

    public void setCurrencyCode(String CurrencyCode) {
        this.CurrencyCode = CurrencyCode;
    }

    @Column(name = "DOCTYPE", columnDefinition = "CHAR", length = 15)
    public String getDocType() {
        return this.DocType;
    }

    public void setDocType(String DocType) {
        this.DocType = DocType;
    }

    @Column(name = "DOCNUMBER", columnDefinition = "CHAR", length = 20)
    public String getDocNumber() {
        return this.DocNumber;
    }

    public void setDocNumber(String DocNumber) {
        this.DocNumber = DocNumber;
    }

    @Column(name = "DOCDATE", columnDefinition = "TIMESTAMP")
    public Date getDocDate() {
        return this.DocDate;
    }

    public void setDocDate(Date DocDate) {
        this.DocDate = DocDate;
    }

    @Column(name = "CREATEDATE", columnDefinition = "TIMESTAMP")
    public Date getCreateDate() {
        return this.CreateDate;
    }

    public void setCreateDate(Date CreateDate) {
        this.CreateDate = CreateDate;
    }

    @Column(name = "BESTBEFORE", columnDefinition = "TIMESTAMP")
    public Date getBestBefore() {
        return this.BestBefore;
    }

    public void setBestBefore(Date BestBefore) {
        this.BestBefore = BestBefore;
    }

    @Column(name = "NUMBER_LOT", columnDefinition = "VARCHAR", length = 50)
    public String getNumberLot() {
        return this.NumberLot;
    }

    public void setNumberLot(String NumberLot) {
        this.NumberLot = NumberLot;
    }

    @Column(name = "VENDOR_LOT", columnDefinition = "VARCHAR", length = 50)
    public String getVendorLot() {
        return this.VendorLot;
    }

    public void setVendorLot(String VendorLot) {
        this.VendorLot = VendorLot;
    }

    @Column(name = "CERTIFICATE", columnDefinition = "VARCHAR", length = 80)
    public String getCertificate() {
        return this.Certificate;
    }

    public void setCertificate(String Certificate) {
        this.Certificate = Certificate;
    }

    @Column(name = "COMMENT", columnDefinition = "VARCHAR", length = 256)
    public String getComment() {
        return this.Comment;
    }

    public void setComment(String Comment) {
        this.Comment = Comment;
    }

    @Column(name = "BEGINQUAN2", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    public BigDecimal getBeginQuan2() {
        return this.BeginQuan2;
    }

    public void setBeginQuan2(BigDecimal BeginQuan2) {
        this.BeginQuan2 = BeginQuan2;
    }

    @Column(name = "ENDQUAN2", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    public BigDecimal getEndQuan2() {
        return this.EndQuan2;
    }

    public void setEndQuan2(BigDecimal EndQuan2) {
        this.EndQuan2 = EndQuan2;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CUSTOMS_DECLARATION_ID")
    public CustomsDeclaration getCustomsDeclaration() {
        return this.CustomsDeclaration;
    }

    public void setCustomsDeclaration(CustomsDeclaration CustomsDeclaration) {
        this.CustomsDeclaration = CustomsDeclaration;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COUNTRY_OF_ORIGIN_ID")
    public Country getCountryOfOrigin() {
        return this.CountryOfOrigin;
    }

    public void setCountryOfOrigin(Country CountryOfOrigin) {
        this.CountryOfOrigin = CountryOfOrigin;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "Batch")
    public Set<SerialNum> getSetOfWhSerialNum() {
        return this.SetOfWhSerialNum;
    }

    public void setSetOfWhSerialNum(Set<SerialNum> SetOfWhSerialNum) {
        this.SetOfWhSerialNum = SetOfWhSerialNum;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "StockBatch")
    public Set<BinLocationDetail> getSetOfWhBinLocationDetail() {
        return this.SetOfWhBinLocationDetail;
    }

    public void setSetOfWhBinLocationDetail(Set<BinLocationDetail> SetOfWhBinLocationDetail) {
        this.SetOfWhBinLocationDetail = SetOfWhBinLocationDetail;
    }
}

