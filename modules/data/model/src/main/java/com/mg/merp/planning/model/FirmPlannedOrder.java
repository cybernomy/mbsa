package com.mg.merp.planning.model;

import com.mg.merp.core.model.SysClient;
import com.mg.merp.reference.model.Catalog;
import com.mg.merp.reference.model.Contractor;
import com.mg.merp.reference.model.Measure;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Enumerated;
import javax.persistence.EnumType;

/**
 * FirmPlannedOrder generated by hbm2java
 */
@Entity
@Table(name = "PP_FIRM_PLANNED_ORDER")
public class FirmPlannedOrder extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {

    private Integer Id;

    private Contractor Vendor;

    private Measure Measure;

    private Catalog Catalog;

    private Contractor Warehouse;

    private SysClient SysClient;

    private MrpVersionControl MrpVersionControl;

    private Contractor SourceWarehouse;

    private MrpRecommendation MrpRecommendation;

    private Date RequiredDate;

    private BigDecimal OrderQty;

    private Date OrderDate;

    private boolean FixedInput;

    private boolean RequisitionFlag;

    private RecommendType PurchaseOrTransfer;

    private boolean ManualEntry;

    public FirmPlannedOrder() {
    }

    public FirmPlannedOrder(Measure Measure, Catalog Catalog, Contractor Warehouse, MrpVersionControl MrpVersionControl) {
        this.Measure = Measure;
        this.Catalog = Catalog;
        this.Warehouse = Warehouse;
        this.MrpVersionControl = MrpVersionControl;
    }

    public FirmPlannedOrder(Contractor Vendor, Measure Measure, Catalog Catalog, Contractor Warehouse, SysClient SysClient, MrpVersionControl MrpVersionControl, Contractor SourceWarehouse, MrpRecommendation MrpRecommendation, Date RequiredDate, BigDecimal OrderQty, Date OrderDate, boolean FixedInput, boolean RequisitionFlag, RecommendType PurchaseOrTransfer, boolean ManualEntry) {
        this.Vendor = Vendor;
        this.Measure = Measure;
        this.Catalog = Catalog;
        this.Warehouse = Warehouse;
        this.SysClient = SysClient;
        this.MrpVersionControl = MrpVersionControl;
        this.SourceWarehouse = SourceWarehouse;
        this.MrpRecommendation = MrpRecommendation;
        this.RequiredDate = RequiredDate;
        this.OrderQty = OrderQty;
        this.OrderDate = OrderDate;
        this.FixedInput = FixedInput;
        this.RequisitionFlag = RequisitionFlag;
        this.PurchaseOrTransfer = PurchaseOrTransfer;
        this.ManualEntry = ManualEntry;
    }

    @SequenceGenerator(name = "generator", sequenceName = "PP_FIRM_PLANNED_ORDER_ID_GEN")
    @Id
    @GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @Column(name = "ID", unique = true, columnDefinition = "INTEGER")
    public Integer getId() {
        return this.Id;
    }

    public void setId(Integer Id) {
        this.Id = Id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "VENDOR_ID")
    public Contractor getVendor() {
        return this.Vendor;
    }

    public void setVendor(Contractor Vendor) {
        this.Vendor = Vendor;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MEASURE_ID", nullable = false)
    public Measure getMeasure() {
        return this.Measure;
    }

    public void setMeasure(Measure Measure) {
        this.Measure = Measure;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CATALOG_ID", nullable = false)
    public Catalog getCatalog() {
        return this.Catalog;
    }

    public void setCatalog(Catalog Catalog) {
        this.Catalog = Catalog;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "WAREHOUSE_ID", nullable = false)
    public Contractor getWarehouse() {
        return this.Warehouse;
    }

    public void setWarehouse(Contractor Warehouse) {
        this.Warehouse = Warehouse;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }

    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MRP_VERSION_CONTROL_ID", nullable = false)
    public MrpVersionControl getMrpVersionControl() {
        return this.MrpVersionControl;
    }

    public void setMrpVersionControl(MrpVersionControl MrpVersionControl) {
        this.MrpVersionControl = MrpVersionControl;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "SOURCE_WAREHOUSE_ID")
    public Contractor getSourceWarehouse() {
        return this.SourceWarehouse;
    }

    public void setSourceWarehouse(Contractor SourceWarehouse) {
        this.SourceWarehouse = SourceWarehouse;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "MRP_RECOMENDATION_ID")
    public MrpRecommendation getMrpRecommendation() {
        return this.MrpRecommendation;
    }

    public void setMrpRecommendation(MrpRecommendation MrpRecommendation) {
        this.MrpRecommendation = MrpRecommendation;
    }

    @Column(name = "REQUIRED_DATE", columnDefinition = "TIMESTAMP")
    public Date getRequiredDate() {
        return this.RequiredDate;
    }

    public void setRequiredDate(Date RequiredDate) {
        this.RequiredDate = RequiredDate;
    }

    @Column(name = "ORDER_QTY", columnDefinition = "NUMERIC", precision = 18, scale = 3)
    public BigDecimal getOrderQty() {
        return this.OrderQty;
    }

    public void setOrderQty(BigDecimal OrderQty) {
        this.OrderQty = OrderQty;
    }

    @Column(name = "ORDER_DATE", columnDefinition = "TIMESTAMP")
    public Date getOrderDate() {
        return this.OrderDate;
    }

    public void setOrderDate(Date OrderDate) {
        this.OrderDate = OrderDate;
    }

    @Column(name = "FIXED_INPUT", columnDefinition = "SMALLINT")
    public boolean isFixedInput() {
        return this.FixedInput;
    }

    public void setFixedInput(boolean FixedInput) {
        this.FixedInput = FixedInput;
    }

    @Column(name = "REQUISITION_FLAG", columnDefinition = "SMALLINT")
    public boolean isRequisitionFlag() {
        return this.RequisitionFlag;
    }

    public void setRequisitionFlag(boolean RequisitionFlag) {
        this.RequisitionFlag = RequisitionFlag;
    }

    @Column(name = "PURCHASE_OR_TRANSFER")
    @Enumerated(EnumType.ORDINAL)
    public RecommendType getPurchaseOrTransfer() {
        return this.PurchaseOrTransfer;
    }

    public void setPurchaseOrTransfer(RecommendType PurchaseOrTransfer) {
        this.PurchaseOrTransfer = PurchaseOrTransfer;
    }

    @Column(name = "MANUAL_ENTRY", columnDefinition = "SMALLINT")
    public boolean isManualEntry() {
        return this.ManualEntry;
    }

    public void setManualEntry(boolean ManualEntry) {
        this.ManualEntry = ManualEntry;
    }
}

