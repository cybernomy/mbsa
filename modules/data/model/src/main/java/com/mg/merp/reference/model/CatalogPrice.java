package com.mg.merp.reference.model;

import com.mg.merp.core.model.SysClient;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * CatalogPrice generated by hbm2java
 */
@Entity
@Table(name = "CATALOGPRICE")
public class CatalogPrice extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {

    private Integer Id;

    private Catalog Catalog;

    private SysClient SysClient;

    private CurrencyRateType CurrencyRateType;

    private CurrencyRateAuthority CurrencyRateAuthority;

    private Currency Currency;

    private Date InAction;

    private BigDecimal Price;

    private BigDecimal EquivalentPrice;

    public CatalogPrice() {
    }

    public CatalogPrice(Catalog Catalog, SysClient SysClient, CurrencyRateType CurrencyRateType, CurrencyRateAuthority CurrencyRateAuthority, Currency Currency, Date InAction, BigDecimal Price, BigDecimal EquivalentPrice) {
        this.Catalog = Catalog;
        this.SysClient = SysClient;
        this.CurrencyRateType = CurrencyRateType;
        this.CurrencyRateAuthority = CurrencyRateAuthority;
        this.Currency = Currency;
        this.InAction = InAction;
        this.Price = Price;
        this.EquivalentPrice = EquivalentPrice;
    }

    @SequenceGenerator(name = "generator", sequenceName = "CATALOGPRICE_ID_GEN")
    @Id
    @GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @Column(name = "ID", unique = true, columnDefinition = "INTEGER")
    public Integer getId() {
        return this.Id;
    }

    public void setId(Integer Id) {
        this.Id = Id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CATALOG_ID")
    public Catalog getCatalog() {
        return this.Catalog;
    }

    public void setCatalog(Catalog Catalog) {
        this.Catalog = Catalog;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }

    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CUR_RATE_TYPE_ID")
    public CurrencyRateType getCurrencyRateType() {
        return this.CurrencyRateType;
    }

    public void setCurrencyRateType(CurrencyRateType CurrencyRateType) {
        this.CurrencyRateType = CurrencyRateType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CUR_RATE_AUTHORITY_ID")
    public CurrencyRateAuthority getCurrencyRateAuthority() {
        return this.CurrencyRateAuthority;
    }

    public void setCurrencyRateAuthority(CurrencyRateAuthority CurrencyRateAuthority) {
        this.CurrencyRateAuthority = CurrencyRateAuthority;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CURRENCY_CODE")
    public Currency getCurrency() {
        return this.Currency;
    }

    public void setCurrency(Currency Currency) {
        this.Currency = Currency;
    }

    @Column(name = "IN_ACTION", columnDefinition = "TIMESTAMP")
    public Date getInAction() {
        return this.InAction;
    }

    public void setInAction(Date InAction) {
        this.InAction = InAction;
    }

    @Column(name = "PRICE", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    public BigDecimal getPrice() {
        return this.Price;
    }

    public void setPrice(BigDecimal Price) {
        this.Price = Price;
    }

    @Column(name = "EQUIVALENT_PRICE", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    public BigDecimal getEquivalentPrice() {
        return this.EquivalentPrice;
    }

    public void setEquivalentPrice(BigDecimal EquivalentPrice) {
        this.EquivalentPrice = EquivalentPrice;
    }
}

