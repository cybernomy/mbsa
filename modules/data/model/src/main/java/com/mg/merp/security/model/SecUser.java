package com.mg.merp.security.model;

import com.mg.merp.core.model.SysClient;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * SecUser generated by hbm2java
 */
@Entity
@Table(name = "SEC_USERS")
@DataItemName("Security.User")
public class SecUser extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {

    private int Id;

    private SysClient SysClient;

    private String Name;

    private String FullName;

    private String Passw;

    private boolean ActiveFlag;

    private boolean SmartCardOnly;

    private String Email;

    private String Mobile;

    private String Pager;

    private boolean UseRemoteProfile;

    private Short UserType;

    private Set<LinkUsersGroups> SecLinkUsersGroups = new HashSet<LinkUsersGroups>(0);

    public SecUser() {
    }

    public SecUser(String Name) {
        this.Name = Name;
    }

    public SecUser(SysClient SysClient, String Name, String FullName, String Passw, boolean ActiveFlag, boolean SmartCardOnly, String Email, String Mobile, String Pager, boolean UseRemoteProfile, Short UserType, Set<LinkUsersGroups> SecLinkUsersGroups) {
        this.SysClient = SysClient;
        this.Name = Name;
        this.FullName = FullName;
        this.Passw = Passw;
        this.ActiveFlag = ActiveFlag;
        this.SmartCardOnly = SmartCardOnly;
        this.Email = Email;
        this.Mobile = Mobile;
        this.Pager = Pager;
        this.UseRemoteProfile = UseRemoteProfile;
        this.UserType = UserType;
        this.SecLinkUsersGroups = SecLinkUsersGroups;
    }

    @SequenceGenerator(name = "generator", sequenceName = "SEC_USER_ID_GEN")
    @Id
    @GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @Column(name = "ID", unique = true, nullable = false, columnDefinition = "INTEGER")
    @DataItemName("ID")
    public int getId() {
        return this.Id;
    }

    public void setId(int Id) {
        this.Id = Id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }

    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

    @Column(name = "NAME", unique = true, nullable = false, columnDefinition = "CHAR", length = 31)
    @DataItemName("Security.User.Name")
    public String getName() {
        return this.Name;
    }

    public void setName(String Name) {
        this.Name = Name;
    }

    @Column(name = "FULLNAME", columnDefinition = "VARCHAR", length = 80)
    @DataItemName("Security.User.FullName")
    public String getFullName() {
        return this.FullName;
    }

    public void setFullName(String FullName) {
        this.FullName = FullName;
    }

    @Column(name = "PASSW", columnDefinition = "VARCHAR", length = 80)
    @DataItemName("Security.User.Passw")
    public String getPassw() {
        return this.Passw;
    }

    public void setPassw(String Passw) {
        this.Passw = Passw;
    }

    @Column(name = "ACTIVE_FLAG", columnDefinition = "SMALLINT")
    public boolean isActiveFlag() {
        return this.ActiveFlag;
    }

    public void setActiveFlag(boolean ActiveFlag) {
        this.ActiveFlag = ActiveFlag;
    }

    @Column(name = "SMART_CARD_ONLY", columnDefinition = "SMALLINT")
    @DataItemName("Security.User.SmartCardOnly")
    public boolean isSmartCardOnly() {
        return this.SmartCardOnly;
    }

    public void setSmartCardOnly(boolean SmartCardOnly) {
        this.SmartCardOnly = SmartCardOnly;
    }

    @Column(name = "EMAIL", columnDefinition = "VARCHAR", length = 50)
    @DataItemName("Security.User.Email")
    public String getEmail() {
        return this.Email;
    }

    public void setEmail(String Email) {
        this.Email = Email;
    }

    @Column(name = "MOBILE", columnDefinition = "VARCHAR", length = 80)
    @DataItemName("Security.User.Mobile")
    public String getMobile() {
        return this.Mobile;
    }

    public void setMobile(String Mobile) {
        this.Mobile = Mobile;
    }

    @Column(name = "PAGER", columnDefinition = "VARCHAR", length = 80)
    @DataItemName("Security.User.Pager")
    public String getPager() {
        return this.Pager;
    }

    public void setPager(String Pager) {
        this.Pager = Pager;
    }

    @Column(name = "USE_REMOTE_PROFILE", columnDefinition = "SMALLINT")
    @DataItemName("Security.User.UseRemoteProfile")
    public boolean isUseRemoteProfile() {
        return this.UseRemoteProfile;
    }

    public void setUseRemoteProfile(boolean UseRemoteProfile) {
        this.UseRemoteProfile = UseRemoteProfile;
    }

    @Column(name = "USER_TYPE", columnDefinition = "SMALLINT")
    public Short getUserType() {
        return this.UserType;
    }

    public void setUserType(Short UserType) {
        this.UserType = UserType;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "User")
    public Set<LinkUsersGroups> getSecLinkUsersGroups() {
        return this.SecLinkUsersGroups;
    }

    public void setSecLinkUsersGroups(Set<LinkUsersGroups> SecLinkUsersGroups) {
        this.SecLinkUsersGroups = SecLinkUsersGroups;
    }
}

