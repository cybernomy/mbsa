package com.mg.merp.docprocess.model;

import com.mg.merp.core.model.SysClient;
import com.mg.merp.document.model.DocHead;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * DocAction generated by hbm2java
 */
@Entity
@Table(name = "DOCACTION")
public class DocAction extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {

    private Integer Id;

    private DocHead DocHead;

    private SysClient SysClient;

    private ActionType ActionType;

    private DocProcessStage Stage;

    private StageState StageState;

    private Set<DocHeadState> DocHeadStates = new HashSet<DocHeadState>(0);

    public DocAction() {
    }

    public DocAction(DocHead DocHead, SysClient SysClient, ActionType ActionType, DocProcessStage Stage, StageState StageState, Set<DocHeadState> DocHeadStates) {
        this.DocHead = DocHead;
        this.SysClient = SysClient;
        this.ActionType = ActionType;
        this.Stage = Stage;
        this.StageState = StageState;
        this.DocHeadStates = DocHeadStates;
    }

    @SequenceGenerator(name = "generator", sequenceName = "DOCACTION_ID_GEN")
    @Id
    @GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @Column(name = "ID", unique = true, columnDefinition = "INTEGER")
    public Integer getId() {
        return this.Id;
    }

    public void setId(Integer Id) {
        this.Id = Id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "DOCUMENT_ID")
    public DocHead getDocHead() {
        return this.DocHead;
    }

    public void setDocHead(DocHead DocHead) {
        this.DocHead = DocHead;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }

    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

    @Column(name = "ACTIONTYPE", columnDefinition = "SMALLINT")
    public ActionType getActionType() {
        return this.ActionType;
    }

    public void setActionType(ActionType ActionType) {
        this.ActionType = ActionType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "STAGE_ID")
    public DocProcessStage getStage() {
        return this.Stage;
    }

    public void setStage(DocProcessStage Stage) {
        this.Stage = Stage;
    }

    @Column(name = "STAGESTATE", columnDefinition = "SMALLINT")
    public StageState getStageState() {
        return this.StageState;
    }

    public void setStageState(StageState StageState) {
        this.StageState = StageState;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "DocAction")
    public Set<DocHeadState> getDocHeadStates() {
        return this.DocHeadStates;
    }

    public void setDocHeadStates(Set<DocHeadState> DocHeadStates) {
        this.DocHeadStates = DocHeadStates;
    }
}

