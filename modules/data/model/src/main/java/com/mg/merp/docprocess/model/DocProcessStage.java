package com.mg.merp.docprocess.model;
// Generated Sep 28, 2015 11:36:59 PM by Hibernate Tools 3.6.0.Final


import com.mg.framework.support.orm.EnumUserType;
import com.mg.merp.baiengine.model.Repository;
import com.mg.merp.core.model.Folder;
import com.mg.merp.core.model.SysClient;
import com.mg.merp.document.model.DocSection;
import com.mg.merp.document.model.DocType;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * DocProcessStage generated by hbm2java
 */
@Entity
@Table(name="DOCPROCESSSTAGE"
)
public class DocProcessStage extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {


     private Integer Id;
     private Repository PerformBusinessAddin;
     private Repository PrePerformBusinessAddin;
     private StageAction Stage;
     private SysClient SysClient;
     private DocType DocType;
     private Repository RollbackBusinessAddin;
     private Repository PreRollbackBusinessAddin;
     private boolean Partial;
     private boolean PrevComplete;
     private boolean ShowNewDocument;
     private String Name;
     private String Comment;
     private DocSection LinkDocSection;
     private DocType LinkDocType;
     private Integer LinkDocModel;
     private Folder LinkDocDestFolder;
     private boolean JoinFlow;
     private boolean ForkFlow;
     private Short Priority;
     private Folder LinkDocModelFolder;
     private int CoorX;
     private int CoorY;
     private int SizeX;
     private int SizeY;
     private boolean Dependent;
     private boolean UseCurrentDate;
     private String Code;
     private boolean ValueOutOfBound;
     private boolean LinkDocRollback;
     private EnumUserType LinkDocRollbackInteractive;
     private Set<LinkStage> PrevStages = new HashSet<LinkStage>(0);
     private Set<DocProcessStageRights> UserGrants = new HashSet<DocProcessStageRights>(0);
     private Set<LinkStage> NextStages = new HashSet<LinkStage>(0);

    public DocProcessStage() {
    }

	
    public DocProcessStage(String Name, boolean JoinFlow, boolean ForkFlow, String Code) {
        this.Name = Name;
        this.JoinFlow = JoinFlow;
        this.ForkFlow = ForkFlow;
        this.Code = Code;
    }
    public DocProcessStage(Repository PerformBusinessAddin, Repository PrePerformBusinessAddin, StageAction Stage, SysClient SysClient, DocType DocType, Repository RollbackBusinessAddin, Repository PreRollbackBusinessAddin, boolean Partial, boolean PrevComplete, boolean ShowNewDocument, String Name, String Comment, DocSection LinkDocSection, DocType LinkDocType, Integer LinkDocModel, Folder LinkDocDestFolder, boolean JoinFlow, boolean ForkFlow, Short Priority, Folder LinkDocModelFolder, int CoorX, int CoorY, int SizeX, int SizeY, boolean Dependent, boolean UseCurrentDate, String Code, boolean ValueOutOfBound, boolean LinkDocRollback, EnumUserType LinkDocRollbackInteractive, Set<LinkStage> PrevStages, Set<DocProcessStageRights> UserGrants, Set<LinkStage> NextStages) {
       this.PerformBusinessAddin = PerformBusinessAddin;
       this.PrePerformBusinessAddin = PrePerformBusinessAddin;
       this.Stage = Stage;
       this.SysClient = SysClient;
       this.DocType = DocType;
       this.RollbackBusinessAddin = RollbackBusinessAddin;
       this.PreRollbackBusinessAddin = PreRollbackBusinessAddin;
       this.Partial = Partial;
       this.PrevComplete = PrevComplete;
       this.ShowNewDocument = ShowNewDocument;
       this.Name = Name;
       this.Comment = Comment;
       this.LinkDocSection = LinkDocSection;
       this.LinkDocType = LinkDocType;
       this.LinkDocModel = LinkDocModel;
       this.LinkDocDestFolder = LinkDocDestFolder;
       this.JoinFlow = JoinFlow;
       this.ForkFlow = ForkFlow;
       this.Priority = Priority;
       this.LinkDocModelFolder = LinkDocModelFolder;
       this.CoorX = CoorX;
       this.CoorY = CoorY;
       this.SizeX = SizeX;
       this.SizeY = SizeY;
       this.Dependent = Dependent;
       this.UseCurrentDate = UseCurrentDate;
       this.Code = Code;
       this.ValueOutOfBound = ValueOutOfBound;
       this.LinkDocRollback = LinkDocRollback;
       this.LinkDocRollbackInteractive = LinkDocRollbackInteractive;
       this.PrevStages = PrevStages;
       this.UserGrants = UserGrants;
       this.NextStages = NextStages;
    }
   
     @SequenceGenerator(name="generator", sequenceName="DOCPROCESSSTAGE_ID_GEN")@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")

    
    @Column(name="ID", unique=true, columnDefinition="INTEGER")
    public Integer getId() {
        return this.Id;
    }
    
    public void setId(Integer Id) {
        this.Id = Id;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ALG_ID")
    public Repository getPerformBusinessAddin() {
        return this.PerformBusinessAddin;
    }
    
    public void setPerformBusinessAddin(Repository PerformBusinessAddin) {
        this.PerformBusinessAddin = PerformBusinessAddin;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="PRE_PERFORM_BAI_ID", columnDefinition="INTEGER")
    public Repository getPrePerformBusinessAddin() {
        return this.PrePerformBusinessAddin;
    }
    
    public void setPrePerformBusinessAddin(Repository PrePerformBusinessAddin) {
        this.PrePerformBusinessAddin = PrePerformBusinessAddin;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STAGE")
    public StageAction getStage() {
        return this.Stage;
    }
    
    public void setStage(StageAction Stage) {
        this.Stage = Stage;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }
    
    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DOCTYPE_ID")
    public DocType getDocType() {
        return this.DocType;
    }
    
    public void setDocType(DocType DocType) {
        this.DocType = DocType;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="RBALG_ID")
    public Repository getRollbackBusinessAddin() {
        return this.RollbackBusinessAddin;
    }
    
    public void setRollbackBusinessAddin(Repository RollbackBusinessAddin) {
        this.RollbackBusinessAddin = RollbackBusinessAddin;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="PRE_ROLLBACK_BAI_ID", columnDefinition="INTEGER")
    public Repository getPreRollbackBusinessAddin() {
        return this.PreRollbackBusinessAddin;
    }
    
    public void setPreRollbackBusinessAddin(Repository PreRollbackBusinessAddin) {
        this.PreRollbackBusinessAddin = PreRollbackBusinessAddin;
    }

    
    @Column(name="PARTIAL", columnDefinition="SMALLINT")
    public boolean isPartial() {
        return this.Partial;
    }
    
    public void setPartial(boolean Partial) {
        this.Partial = Partial;
    }

    
    @Column(name="PREVISCOMPLETE", columnDefinition="SMALLINT")
    public boolean isPrevComplete() {
        return this.PrevComplete;
    }
    
    public void setPrevComplete(boolean PrevComplete) {
        this.PrevComplete = PrevComplete;
    }

    
    @Column(name="SHOWNEWDOCUMENT", columnDefinition="SMALLINT")
    public boolean isShowNewDocument() {
        return this.ShowNewDocument;
    }
    
    public void setShowNewDocument(boolean ShowNewDocument) {
        this.ShowNewDocument = ShowNewDocument;
    }

    
    @Column(name="DPSNAME", nullable=false, columnDefinition="VARCHAR", length=80)
    public String getName() {
        return this.Name;
    }
    
    public void setName(String Name) {
        this.Name = Name;
    }

    
    @Column(name="COMMENT", columnDefinition="VARCHAR", length=256)
    public String getComment() {
        return this.Comment;
    }
    
    public void setComment(String Comment) {
        this.Comment = Comment;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="LINKDOCSECTION")
    public DocSection getLinkDocSection() {
        return this.LinkDocSection;
    }
    
    public void setLinkDocSection(DocSection LinkDocSection) {
        this.LinkDocSection = LinkDocSection;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="LINKDOCTYPE", columnDefinition="CHAR")
    public DocType getLinkDocType() {
        return this.LinkDocType;
    }
    
    public void setLinkDocType(DocType LinkDocType) {
        this.LinkDocType = LinkDocType;
    }

    
    @Column(name="LINKDOCMODEL", columnDefinition="INTEGER")
    public Integer getLinkDocModel() {
        return this.LinkDocModel;
    }
    
    public void setLinkDocModel(Integer LinkDocModel) {
        this.LinkDocModel = LinkDocModel;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="LINKDOCDESTFOLDER", columnDefinition="INTEGER")
    public Folder getLinkDocDestFolder() {
        return this.LinkDocDestFolder;
    }
    
    public void setLinkDocDestFolder(Folder LinkDocDestFolder) {
        this.LinkDocDestFolder = LinkDocDestFolder;
    }

    
    @Column(name="JOIN_FLOW", nullable=false, columnDefinition="SMALLINT")
    public boolean isJoinFlow() {
        return this.JoinFlow;
    }
    
    public void setJoinFlow(boolean JoinFlow) {
        this.JoinFlow = JoinFlow;
    }

    
    @Column(name="FORK_FLOW", nullable=false, columnDefinition="SMALLINT")
    public boolean isForkFlow() {
        return this.ForkFlow;
    }
    
    public void setForkFlow(boolean ForkFlow) {
        this.ForkFlow = ForkFlow;
    }

    
    @Column(name="PRIORITY", columnDefinition="SMALLINT")
    public Short getPriority() {
        return this.Priority;
    }
    
    public void setPriority(Short Priority) {
        this.Priority = Priority;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="LINKDOCMODELFOLDER", columnDefinition="INTEGER")
    public Folder getLinkDocModelFolder() {
        return this.LinkDocModelFolder;
    }
    
    public void setLinkDocModelFolder(Folder LinkDocModelFolder) {
        this.LinkDocModelFolder = LinkDocModelFolder;
    }

    
    @Column(name="COORX", columnDefinition="INTEGER")
    public int getCoorX() {
        return this.CoorX;
    }
    
    public void setCoorX(int CoorX) {
        this.CoorX = CoorX;
    }

    
    @Column(name="COORY", columnDefinition="INTEGER")
    public int getCoorY() {
        return this.CoorY;
    }
    
    public void setCoorY(int CoorY) {
        this.CoorY = CoorY;
    }

    
    @Column(name="SIZEX", columnDefinition="INTEGER")
    public int getSizeX() {
        return this.SizeX;
    }
    
    public void setSizeX(int SizeX) {
        this.SizeX = SizeX;
    }

    
    @Column(name="SIZEY", columnDefinition="INTEGER")
    public int getSizeY() {
        return this.SizeY;
    }
    
    public void setSizeY(int SizeY) {
        this.SizeY = SizeY;
    }

    
    @Column(name="DEPENDENT", columnDefinition="SMALLINT")
    public boolean isDependent() {
        return this.Dependent;
    }
    
    public void setDependent(boolean Dependent) {
        this.Dependent = Dependent;
    }

    
    @Column(name="USE_CURRENT_DATE", columnDefinition="SMALLINT")
    public boolean isUseCurrentDate() {
        return this.UseCurrentDate;
    }
    
    public void setUseCurrentDate(boolean UseCurrentDate) {
        this.UseCurrentDate = UseCurrentDate;
    }

    
    @Column(name="CODE", nullable=false, columnDefinition="CHAR", length=20)
    public String getCode() {
        return this.Code;
    }
    
    public void setCode(String Code) {
        this.Code = Code;
    }

    
    @Column(name="VALUE_OUT_OF_BOUND", columnDefinition="SMALLINT")
    public boolean isValueOutOfBound() {
        return this.ValueOutOfBound;
    }
    
    public void setValueOutOfBound(boolean ValueOutOfBound) {
        this.ValueOutOfBound = ValueOutOfBound;
    }

    
    @Column(name="LINKDOC_ROLLBACK", columnDefinition="SMALLINT")
    public boolean isLinkDocRollback() {
        return this.LinkDocRollback;
    }
    
    public void setLinkDocRollback(boolean LinkDocRollback) {
        this.LinkDocRollback = LinkDocRollback;
    }

    
    @Column(name="LINKDOC_ROLLBACK_INTERACTIVE", columnDefinition="SMALLINT")
    public EnumUserType getLinkDocRollbackInteractive() {
        return this.LinkDocRollbackInteractive;
    }
    
    public void setLinkDocRollbackInteractive(EnumUserType LinkDocRollbackInteractive) {
        this.LinkDocRollbackInteractive = LinkDocRollbackInteractive;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="NextStage")
    public Set<LinkStage> getPrevStages() {
        return this.PrevStages;
    }
    
    public void setPrevStages(Set<LinkStage> PrevStages) {
        this.PrevStages = PrevStages;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="DocProcessStage")
    public Set<DocProcessStageRights> getUserGrants() {
        return this.UserGrants;
    }
    
    public void setUserGrants(Set<DocProcessStageRights> UserGrants) {
        this.UserGrants = UserGrants;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="PrevStage")
    public Set<LinkStage> getNextStages() {
        return this.NextStages;
    }
    
    public void setNextStages(Set<LinkStage> NextStages) {
        this.NextStages = NextStages;
    }




}


