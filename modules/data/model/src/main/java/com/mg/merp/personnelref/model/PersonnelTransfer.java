package com.mg.merp.personnelref.model;

import com.mg.merp.core.model.SysClient;
import com.mg.merp.humanresources.model.Order;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * PersonnelTransfer generated by hbm2java
 */
@Entity
@Table(name = "PREF_PERSONNEL_TRANSFER")
public class PersonnelTransfer extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {

    private Integer Id;

    private Order Order;

    private StaffListUnit StaffListUnit;

    private StaffListPosition StaffListPosition;

    private Personnel Personnel;

    private SysClient SysClient;

    private Date TransferDate;

    private BigDecimal Salary;

    private BigDecimal SalaryRaise;

    public PersonnelTransfer() {
    }

    public PersonnelTransfer(Order Order, StaffListUnit StaffListUnit, StaffListPosition StaffListPosition, Personnel Personnel, SysClient SysClient, Date TransferDate, BigDecimal Salary, BigDecimal SalaryRaise) {
        this.Order = Order;
        this.StaffListUnit = StaffListUnit;
        this.StaffListPosition = StaffListPosition;
        this.Personnel = Personnel;
        this.SysClient = SysClient;
        this.TransferDate = TransferDate;
        this.Salary = Salary;
        this.SalaryRaise = SalaryRaise;
    }

    @SequenceGenerator(name = "generator", sequenceName = "PREF_PERSONNEL_TRANSFER_ID_GEN")
    @Id
    @GeneratedValue(strategy = SEQUENCE, generator = "generator")
    @Column(name = "ID", unique = true, columnDefinition = "INTEGER")
    @DataItemName("ID")
    public Integer getId() {
        return this.Id;
    }

    public void setId(Integer Id) {
        this.Id = Id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ORDER_ID")
    public Order getOrder() {
        return this.Order;
    }

    public void setOrder(Order Order) {
        this.Order = Order;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "STAFF_LIST_UNIT_ID")
    @DataItemName("PersonnelRef.Personnel.StaffListUnit")
    public StaffListUnit getStaffListUnit() {
        return this.StaffListUnit;
    }

    public void setStaffListUnit(StaffListUnit StaffListUnit) {
        this.StaffListUnit = StaffListUnit;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "STAFF_LIST_POSITION_ID")
    @DataItemName("PersonnelRef.Personnel.StaffListPosition")
    public StaffListPosition getStaffListPosition() {
        return this.StaffListPosition;
    }

    public void setStaffListPosition(StaffListPosition StaffListPosition) {
        this.StaffListPosition = StaffListPosition;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PERSONNEL_ID")
    public Personnel getPersonnel() {
        return this.Personnel;
    }

    public void setPersonnel(Personnel Personnel) {
        this.Personnel = Personnel;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }

    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

    @Column(name = "TRANSFER_DATE", columnDefinition = "TIMESTAMP")
    @DataItemName("PersonnelRef.Personnel.TransferDate")
    public Date getTransferDate() {
        return this.TransferDate;
    }

    public void setTransferDate(Date TransferDate) {
        this.TransferDate = TransferDate;
    }

    @Column(name = "SALARY", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("PersonnelRef.Personnel.Salary")
    public BigDecimal getSalary() {
        return this.Salary;
    }

    public void setSalary(BigDecimal Salary) {
        this.Salary = Salary;
    }

    @Column(name = "SALARY_RAISE", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("PersonnelRef.Personnel.SalaryRaise")
    public BigDecimal getSalaryRaise() {
        return this.SalaryRaise;
    }

    public void setSalaryRaise(BigDecimal SalaryRaise) {
        this.SalaryRaise = SalaryRaise;
    }
}

