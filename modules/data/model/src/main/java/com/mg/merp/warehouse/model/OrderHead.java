package com.mg.merp.warehouse.model;

import com.mg.merp.core.model.Folder;
import com.mg.merp.core.model.SysClient;
import com.mg.merp.core.model.SysCompany;
import com.mg.merp.document.model.DocHead;
import com.mg.merp.document.model.DocSection;
import com.mg.merp.document.model.DocType;
import com.mg.merp.reference.model.CalcTaxesKind;
import com.mg.merp.reference.model.Contractor;
import com.mg.merp.reference.model.Currency;
import com.mg.merp.reference.model.CurrencyRateAuthority;
import com.mg.merp.reference.model.CurrencyRateType;
import com.mg.merp.reference.model.PriceListHead;
import com.mg.merp.reference.model.PriceType;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Enumerated;
import javax.persistence.EnumType;
import com.mg.framework.api.annotations.DataItemName;

/**
 * OrderHead generated by hbm2java
 */
@Entity
@Table(name = "ORDERHEAD")
public class OrderHead extends com.mg.merp.document.model.DocHead implements java.io.Serializable {

    private Contractor Responsible;

    private Contractor Consumer;

    private BigDecimal SummaCurWithDiscount;

    private BigDecimal SummaNatWithDiscount;

    private BigDecimal AddExpenses;

    private BigDecimal DiscountOnDoc;

    private BigDecimal DiscountOnLine;

    private OrderDueDateKind DueDateKind;

    private BigDecimal DueDateQuan;

    private Date DueDate;

    private Short CreditTerm;

    private BigDecimal Penalty;

    private String Comment;

    private boolean FixedInput;

    private OrderStatus Status;

    public OrderHead() {
    }

    public OrderHead(SysCompany SysCompany, DocSection DocSection, Short Requester, boolean ManualDocNumber) {
        super(SysCompany, DocSection, Requester, ManualDocNumber);
    }

    public OrderHead(SysCompany SysCompany, Contractor Through, Contractor From, CurrencyRateAuthority CurrencyRateAuthority, Contractor SrcMol, PriceType PriceType, Folder DiscountFolder, Folder Folder, DocType DocType, DocHead Contract, Currency Currency, Contractor SrcStock, DocType ContractType, Contractor To, Contractor DstMol, DocHead BaseDocument, SysClient SysClient, Contractor DstStock, CalcTaxesKind CalcTaxesKind, DocType BaseDocType, CurrencyRateType CurrencyRateType, PriceListHead PriceList, DocSection DocSection, String DocNumber, Date DocDate, BigDecimal CurCource, BigDecimal SumCur, BigDecimal SumNat, String BaseDocNumber, Date BaseDocDate, String ContractNumber, Date ContractDate, BigDecimal Weight, BigDecimal Volume, Short Requester, byte[] Original, String UNID, boolean ManualDocNumber, String Description, Contractor Responsible, Contractor Consumer, BigDecimal SummaCurWithDiscount, BigDecimal SummaNatWithDiscount, BigDecimal AddExpenses, BigDecimal DiscountOnDoc, BigDecimal DiscountOnLine, OrderDueDateKind DueDateKind, BigDecimal DueDateQuan, Date DueDate, Short CreditTerm, BigDecimal Penalty, String Comment, boolean FixedInput, OrderStatus Status) {
        super(SysCompany, Through, From, CurrencyRateAuthority, SrcMol, PriceType, DiscountFolder, Folder, DocType, Contract, Currency, SrcStock, ContractType, To, DstMol, BaseDocument, SysClient, DstStock, CalcTaxesKind, BaseDocType, CurrencyRateType, PriceList, DocSection, DocNumber, DocDate, CurCource, SumCur, SumNat, BaseDocNumber, BaseDocDate, ContractNumber, ContractDate, Weight, Volume, Requester, Original, UNID, ManualDocNumber, Description);
        this.Responsible = Responsible;
        this.Consumer = Consumer;
        this.SummaCurWithDiscount = SummaCurWithDiscount;
        this.SummaNatWithDiscount = SummaNatWithDiscount;
        this.AddExpenses = AddExpenses;
        this.DiscountOnDoc = DiscountOnDoc;
        this.DiscountOnLine = DiscountOnLine;
        this.DueDateKind = DueDateKind;
        this.DueDateQuan = DueDateQuan;
        this.DueDate = DueDate;
        this.CreditTerm = CreditTerm;
        this.Penalty = Penalty;
        this.Comment = Comment;
        this.FixedInput = FixedInput;
        this.Status = Status;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "RESPONSIBLE")
    @DataItemName("Warehouse.OrderHead.Responsible")
    public Contractor getResponsible() {
        return this.Responsible;
    }

    public void setResponsible(Contractor Responsible) {
        this.Responsible = Responsible;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CONSUMER")
    @DataItemName("Warehouse.OrderHead.Consumer")
    public Contractor getConsumer() {
        return this.Consumer;
    }

    public void setConsumer(Contractor Consumer) {
        this.Consumer = Consumer;
    }

    @Column(name = "SUMMACUR_WITH_DISCOUNT", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Warehouse.BillHead.SummaCurWithDiscount")
    public BigDecimal getSummaCurWithDiscount() {
        return this.SummaCurWithDiscount;
    }

    public void setSummaCurWithDiscount(BigDecimal SummaCurWithDiscount) {
        this.SummaCurWithDiscount = SummaCurWithDiscount;
    }

    @Column(name = "SUMMANAT_WITH_DISCOUNT", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Warehouse.BillHead.SummaNatWithDiscount")
    public BigDecimal getSummaNatWithDiscount() {
        return this.SummaNatWithDiscount;
    }

    public void setSummaNatWithDiscount(BigDecimal SummaNatWithDiscount) {
        this.SummaNatWithDiscount = SummaNatWithDiscount;
    }

    @Column(name = "ADD_EXPENSES", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Warehouse.OrderHead.AddExpenses")
    public BigDecimal getAddExpenses() {
        return this.AddExpenses;
    }

    public void setAddExpenses(BigDecimal AddExpenses) {
        this.AddExpenses = AddExpenses;
    }

    @Column(name = "DISCOUNT_ON_DOC", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    @DataItemName("Warehouse.OrderHead.DiscountOnDoc")
    public BigDecimal getDiscountOnDoc() {
        return this.DiscountOnDoc;
    }

    public void setDiscountOnDoc(BigDecimal DiscountOnDoc) {
        this.DiscountOnDoc = DiscountOnDoc;
    }

    @Column(name = "DISCOUNT_ON_LINE", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    @DataItemName("Warehouse.OrderHead.DiscountOnLine")
    public BigDecimal getDiscountOnLine() {
        return this.DiscountOnLine;
    }

    public void setDiscountOnLine(BigDecimal DiscountOnLine) {
        this.DiscountOnLine = DiscountOnLine;
    }

    @Column(name = "DUEDATE_KIND")
    @Enumerated(EnumType.ORDINAL)
    public OrderDueDateKind getDueDateKind() {
        return this.DueDateKind;
    }

    public void setDueDateKind(OrderDueDateKind DueDateKind) {
        this.DueDateKind = DueDateKind;
    }

    @Column(name = "DUEDATE_QUAN", columnDefinition = "NUMERIC", precision = 18, scale = 3)
    @DataItemName("Warehouse.OrderHead.DueDateQuan")
    public BigDecimal getDueDateQuan() {
        return this.DueDateQuan;
    }

    public void setDueDateQuan(BigDecimal DueDateQuan) {
        this.DueDateQuan = DueDateQuan;
    }

    @Column(name = "DUEDATE", columnDefinition = "TIMESTAMP")
    @DataItemName("Warehouse.OrderHead.DueDate")
    public Date getDueDate() {
        return this.DueDate;
    }

    public void setDueDate(Date DueDate) {
        this.DueDate = DueDate;
    }

    @Column(name = "CREDITTERM", columnDefinition = "SMALLINT")
    @DataItemName("Warehouse.OrderHead.CreditTerm")
    public Short getCreditTerm() {
        return this.CreditTerm;
    }

    public void setCreditTerm(Short CreditTerm) {
        this.CreditTerm = CreditTerm;
    }

    @Column(name = "PENALTY", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    @DataItemName("Warehouse.OrderHead.Penalty")
    public BigDecimal getPenalty() {
        return this.Penalty;
    }

    public void setPenalty(BigDecimal Penalty) {
        this.Penalty = Penalty;
    }

    @Column(name = "COMMENT", columnDefinition = "VARCHAR", length = 1024)
    @DataItemName("Warehouse.OrderHead.Comment")
    public String getComment() {
        return this.Comment;
    }

    public void setComment(String Comment) {
        this.Comment = Comment;
    }

    @Column(name = "FIXED_INPUT", columnDefinition = "SMALLINT")
    @DataItemName("Warehouse.OrderHead.FixedInput")
    public boolean isFixedInput() {
        return this.FixedInput;
    }

    public void setFixedInput(boolean FixedInput) {
        this.FixedInput = FixedInput;
    }

    @Column(name = "STATUS")
    @Enumerated(EnumType.ORDINAL)
    public OrderStatus getStatus() {
        return this.Status;
    }

    public void setStatus(OrderStatus Status) {
        this.Status = Status;
    }
}

