package com.mg.merp.retail.model;

import com.mg.merp.core.model.Folder;
import com.mg.merp.core.model.SysClient;
import com.mg.merp.core.model.SysCompany;
import com.mg.merp.discount.model.Card;
import com.mg.merp.discount.model.ExtraDiscount;
import com.mg.merp.document.model.DocHead;
import com.mg.merp.document.model.DocSection;
import com.mg.merp.document.model.DocType;
import com.mg.merp.reference.model.CalcTaxesKind;
import com.mg.merp.reference.model.Contractor;
import com.mg.merp.reference.model.Currency;
import com.mg.merp.reference.model.CurrencyRateAuthority;
import com.mg.merp.reference.model.CurrencyRateType;
import com.mg.merp.reference.model.PriceListHead;
import com.mg.merp.reference.model.PriceType;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * RtlInvoiceHeadModel generated by hbm2java
 */
@Entity
@Table(name = "RTL_INVOICEHEADMODEL")
public class RtlInvoiceHeadModel extends com.mg.merp.document.model.DocHeadModel implements java.io.Serializable {

    private ExtraDiscount ExtraDiscount;

    private Contractor Consignee;

    private Contractor Shipper;

    private Card DiscountCard;

    private Contractor Responsible;

    private Contractor Consumer;

    private BigDecimal SumCurDiscount;

    private BigDecimal SumNatDiscount;

    private BigDecimal DiscountOnDoc;

    private BigDecimal DiscountOnLine;

    private String Comments;

    private Date PlanPayDate;

    private Date PayDate;

    private BigDecimal PaySum;

    private BigDecimal BaseDiscount;

    private Date PlanShipDate;

    private boolean ApplyDisKind;

    public RtlInvoiceHeadModel() {
    }

    public RtlInvoiceHeadModel(DocSection DocSection, boolean ManualDocNumber) {
        super(DocSection, ManualDocNumber);
    }

    public RtlInvoiceHeadModel(SysCompany SysCompany, Contractor Through, Folder ModelDestFolder, Contractor From, Contractor To, Contractor DstMol, CurrencyRateAuthority CurrencyRateAuthority, Contractor SrcMol, Folder Folder, SysClient SysClient, Contractor DstStock, CurrencyRateType CurrencyRateType, Contractor SrcStock, DocSection DocSection, String ModelName, DocType DocType, String DocNumber, Date DocDate, Currency Currency, BigDecimal CurCource, BigDecimal SumCur, BigDecimal SumNat, DocHead BaseDocument, DocType BaseDocType, String BaseDocNumber, Date BaseDocDate, DocHead Contract, DocType ContractType, String ContractNumber, Date ContractDate, BigDecimal Weight, BigDecimal Volume, PriceListHead PriceList, PriceType PriceType, CalcTaxesKind CalcTaxesKind, Folder DiscountFolder, boolean ManualDocNumber, String Description, ExtraDiscount ExtraDiscount, Contractor Consignee, Contractor Shipper, Card DiscountCard, Contractor Responsible, Contractor Consumer, BigDecimal SumCurDiscount, BigDecimal SumNatDiscount, BigDecimal DiscountOnDoc, BigDecimal DiscountOnLine, String Comments, Date PlanPayDate, Date PayDate, BigDecimal PaySum, BigDecimal BaseDiscount, Date PlanShipDate, boolean ApplyDisKind) {
        super(SysCompany, Through, ModelDestFolder, From, To, DstMol, CurrencyRateAuthority, SrcMol, Folder, SysClient, DstStock, CurrencyRateType, SrcStock, DocSection, ModelName, DocType, DocNumber, DocDate, Currency, CurCource, SumCur, SumNat, BaseDocument, BaseDocType, BaseDocNumber, BaseDocDate, Contract, ContractType, ContractNumber, ContractDate, Weight, Volume, PriceList, PriceType, CalcTaxesKind, DiscountFolder, ManualDocNumber, Description);
        this.ExtraDiscount = ExtraDiscount;
        this.Consignee = Consignee;
        this.Shipper = Shipper;
        this.DiscountCard = DiscountCard;
        this.Responsible = Responsible;
        this.Consumer = Consumer;
        this.SumCurDiscount = SumCurDiscount;
        this.SumNatDiscount = SumNatDiscount;
        this.DiscountOnDoc = DiscountOnDoc;
        this.DiscountOnLine = DiscountOnLine;
        this.Comments = Comments;
        this.PlanPayDate = PlanPayDate;
        this.PayDate = PayDate;
        this.PaySum = PaySum;
        this.BaseDiscount = BaseDiscount;
        this.PlanShipDate = PlanShipDate;
        this.ApplyDisKind = ApplyDisKind;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EXTRADISCOUNT_ID")
    @DataItemName("Retail.InvHead.ExtraDiscount")
    public ExtraDiscount getExtraDiscount() {
        return this.ExtraDiscount;
    }

    public void setExtraDiscount(ExtraDiscount ExtraDiscount) {
        this.ExtraDiscount = ExtraDiscount;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CONSIGNEE")
    @DataItemName("Retail.Consignee")
    public Contractor getConsignee() {
        return this.Consignee;
    }

    public void setConsignee(Contractor Consignee) {
        this.Consignee = Consignee;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "SHIPPER")
    @DataItemName("Retail.Shipper")
    public Contractor getShipper() {
        return this.Shipper;
    }

    public void setShipper(Contractor Shipper) {
        this.Shipper = Shipper;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "DISCOUNTCARD_ID")
    @DataItemName("Retail.InvHead.DiscountCard")
    public Card getDiscountCard() {
        return this.DiscountCard;
    }

    public void setDiscountCard(Card DiscountCard) {
        this.DiscountCard = DiscountCard;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "RESPONSIBLE")
    @DataItemName("Retail.Responsible")
    public Contractor getResponsible() {
        return this.Responsible;
    }

    public void setResponsible(Contractor Responsible) {
        this.Responsible = Responsible;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CONSUMER")
    public Contractor getConsumer() {
        return this.Consumer;
    }

    public void setConsumer(Contractor Consumer) {
        this.Consumer = Consumer;
    }

    @Column(name = "SUMCUR_DISCOUNT", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Retail.InvHead.SumCurDiscount")
    public BigDecimal getSumCurDiscount() {
        return this.SumCurDiscount;
    }

    public void setSumCurDiscount(BigDecimal SumCurDiscount) {
        this.SumCurDiscount = SumCurDiscount;
    }

    @Column(name = "SUMNAT_DISCOUNT", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    public BigDecimal getSumNatDiscount() {
        return this.SumNatDiscount;
    }

    public void setSumNatDiscount(BigDecimal SumNatDiscount) {
        this.SumNatDiscount = SumNatDiscount;
    }

    @Column(name = "DISCOUNT_ON_DOC", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    @DataItemName("Retail.InvHead.DiscountOnDoc")
    public BigDecimal getDiscountOnDoc() {
        return this.DiscountOnDoc;
    }

    public void setDiscountOnDoc(BigDecimal DiscountOnDoc) {
        this.DiscountOnDoc = DiscountOnDoc;
    }

    @Column(name = "DISCOUNT_ON_LINE", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    public BigDecimal getDiscountOnLine() {
        return this.DiscountOnLine;
    }

    public void setDiscountOnLine(BigDecimal DiscountOnLine) {
        this.DiscountOnLine = DiscountOnLine;
    }

    @Column(name = "COMMENTS", columnDefinition = "VARCHAR", length = 256)
    public String getComments() {
        return this.Comments;
    }

    public void setComments(String Comments) {
        this.Comments = Comments;
    }

    @Column(name = "PLANPAYDATE", columnDefinition = "TIMESTAMP")
    @DataItemName("Retail.PlanPayDate")
    public Date getPlanPayDate() {
        return this.PlanPayDate;
    }

    public void setPlanPayDate(Date PlanPayDate) {
        this.PlanPayDate = PlanPayDate;
    }

    @Column(name = "PAYDATE", columnDefinition = "TIMESTAMP")
    @DataItemName("Retail.PayDate")
    public Date getPayDate() {
        return this.PayDate;
    }

    public void setPayDate(Date PayDate) {
        this.PayDate = PayDate;
    }

    @Column(name = "PAYSUM", columnDefinition = "NUMERIC", precision = 15, scale = 4)
    @DataItemName("Retail.PaySum")
    public BigDecimal getPaySum() {
        return this.PaySum;
    }

    public void setPaySum(BigDecimal PaySum) {
        this.PaySum = PaySum;
    }

    @Column(name = "BASE_DISCOUNT", columnDefinition = "NUMERIC", precision = 18, scale = 6)
    @DataItemName("Retail.InvHead.BaseDiscount")
    public BigDecimal getBaseDiscount() {
        return this.BaseDiscount;
    }

    public void setBaseDiscount(BigDecimal BaseDiscount) {
        this.BaseDiscount = BaseDiscount;
    }

    @Column(name = "PLANSHIPDATE", columnDefinition = "TIMESTAMP")
    @DataItemName("Retail.PlanShipDate")
    public Date getPlanShipDate() {
        return this.PlanShipDate;
    }

    public void setPlanShipDate(Date PlanShipDate) {
        this.PlanShipDate = PlanShipDate;
    }

    @Column(name = "APPLY_DIS_KIND", columnDefinition = "INTEGER")
    @DataItemName("Retail.ApplyDisKind")
    public boolean isApplyDisKind() {
        return this.ApplyDisKind;
    }

    public void setApplyDisKind(boolean ApplyDisKind) {
        this.ApplyDisKind = ApplyDisKind;
    }
}

