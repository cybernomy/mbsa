package com.mg.merp.planning.model;
// Generated Oct 4, 2015 2:18:05 AM by Hibernate Tools 3.6.0.Final


import com.mg.merp.core.model.SysClient;
import com.mg.merp.reference.model.Catalog;
import com.mg.merp.reference.model.Contractor;
import com.mg.merp.reference.model.Measure;
import com.mg.merp.warehouse.model.Warehouse;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * MrpRecommendation generated by hbm2java
 */
@Entity
@Table(name="PP_MRP_RECOMMENDATION"
)
public class MrpRecommendation extends com.mg.merp.core.model.AbstractEntity implements java.io.Serializable {


     private Integer Id;
     private Contractor Vendor;
     private Measure Measure;
     private Catalog Catalog;
     private Warehouse Warehouse;
     private SysClient SysClient;
     private MrpVersionControl MrpVersionControl;
     private Warehouse SourceWarehouse;
     private Date RequiredDate;
     private BigDecimal OrderQty;
     private BigDecimal MrpQuantity;
     private Short PurchaseLeadTime;
     private boolean FirmPlanSuggestedOrder;
     private Date OrderDate;
     private boolean MrpArrearsFlag;
     private boolean MrpOrdered;
     private RecommendType PurchaseOrTransfer;
     private String PpReference;
     private boolean ManualEntry;
     private RescheduleFlag MrpRescheduleFlag;
     private MRPSource MrpSource;
     private Date OriginalDate;
     private Date BatchDate;
     private BigDecimal OriginalQuantity;

    public MrpRecommendation() {
    }

    public MrpRecommendation(Contractor Vendor, Measure Measure, Catalog Catalog, Warehouse Warehouse, SysClient SysClient, MrpVersionControl MrpVersionControl, Warehouse SourceWarehouse, Date RequiredDate, BigDecimal OrderQty, BigDecimal MrpQuantity, Short PurchaseLeadTime, boolean FirmPlanSuggestedOrder, Date OrderDate, boolean MrpArrearsFlag, boolean MrpOrdered, RecommendType PurchaseOrTransfer, String PpReference, boolean ManualEntry, RescheduleFlag MrpRescheduleFlag, MRPSource MrpSource, Date OriginalDate, Date BatchDate, BigDecimal OriginalQuantity) {
       this.Vendor = Vendor;
       this.Measure = Measure;
       this.Catalog = Catalog;
       this.Warehouse = Warehouse;
       this.SysClient = SysClient;
       this.MrpVersionControl = MrpVersionControl;
       this.SourceWarehouse = SourceWarehouse;
       this.RequiredDate = RequiredDate;
       this.OrderQty = OrderQty;
       this.MrpQuantity = MrpQuantity;
       this.PurchaseLeadTime = PurchaseLeadTime;
       this.FirmPlanSuggestedOrder = FirmPlanSuggestedOrder;
       this.OrderDate = OrderDate;
       this.MrpArrearsFlag = MrpArrearsFlag;
       this.MrpOrdered = MrpOrdered;
       this.PurchaseOrTransfer = PurchaseOrTransfer;
       this.PpReference = PpReference;
       this.ManualEntry = ManualEntry;
       this.MrpRescheduleFlag = MrpRescheduleFlag;
       this.MrpSource = MrpSource;
       this.OriginalDate = OriginalDate;
       this.BatchDate = BatchDate;
       this.OriginalQuantity = OriginalQuantity;
    }
   
     @SequenceGenerator(name="generator", sequenceName="PP_MRP_RECOMMENDATION_ID_GEN")@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")

    
    @Column(name="ID", unique=true, columnDefinition="INTEGER")
    public Integer getId() {
        return this.Id;
    }
    
    public void setId(Integer Id) {
        this.Id = Id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="VENDOR_ID")
    public Contractor getVendor() {
        return this.Vendor;
    }
    
    public void setVendor(Contractor Vendor) {
        this.Vendor = Vendor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MEASURE_ID")
    public Measure getMeasure() {
        return this.Measure;
    }
    
    public void setMeasure(Measure Measure) {
        this.Measure = Measure;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CATALOG_ID")
    public Catalog getCatalog() {
        return this.Catalog;
    }
    
    public void setCatalog(Catalog Catalog) {
        this.Catalog = Catalog;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="WAREHOUSE_ID")
    public Warehouse getWarehouse() {
        return this.Warehouse;
    }
    
    public void setWarehouse(Warehouse Warehouse) {
        this.Warehouse = Warehouse;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CLIENT_ID")
    public SysClient getSysClient() {
        return this.SysClient;
    }
    
    public void setSysClient(SysClient SysClient) {
        this.SysClient = SysClient;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MRP_VERSION_CONTROL_ID")
    public MrpVersionControl getMrpVersionControl() {
        return this.MrpVersionControl;
    }
    
    public void setMrpVersionControl(MrpVersionControl MrpVersionControl) {
        this.MrpVersionControl = MrpVersionControl;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SOURCE_WAREHOUSE_ID")
    public Warehouse getSourceWarehouse() {
        return this.SourceWarehouse;
    }
    
    public void setSourceWarehouse(Warehouse SourceWarehouse) {
        this.SourceWarehouse = SourceWarehouse;
    }

    
    @Column(name="REQUIRED_DATE", columnDefinition="TIMESTAMP")
    public Date getRequiredDate() {
        return this.RequiredDate;
    }
    
    public void setRequiredDate(Date RequiredDate) {
        this.RequiredDate = RequiredDate;
    }

    
    @Column(name="ORDER_QTY", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getOrderQty() {
        return this.OrderQty;
    }
    
    public void setOrderQty(BigDecimal OrderQty) {
        this.OrderQty = OrderQty;
    }

    
    @Column(name="MRP_QUANTITY", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getMrpQuantity() {
        return this.MrpQuantity;
    }
    
    public void setMrpQuantity(BigDecimal MrpQuantity) {
        this.MrpQuantity = MrpQuantity;
    }

    
    @Column(name="PURCHASE_LEAD_TIME", columnDefinition="SMALLINT")
    public Short getPurchaseLeadTime() {
        return this.PurchaseLeadTime;
    }
    
    public void setPurchaseLeadTime(Short PurchaseLeadTime) {
        this.PurchaseLeadTime = PurchaseLeadTime;
    }

    
    @Column(name="FIRM_PLAN_SUGGESTED_ORDER", columnDefinition="SMALLINT")
    public boolean isFirmPlanSuggestedOrder() {
        return this.FirmPlanSuggestedOrder;
    }
    
    public void setFirmPlanSuggestedOrder(boolean FirmPlanSuggestedOrder) {
        this.FirmPlanSuggestedOrder = FirmPlanSuggestedOrder;
    }

    
    @Column(name="ORDER_DATE", columnDefinition="TIMESTAMP")
    public Date getOrderDate() {
        return this.OrderDate;
    }
    
    public void setOrderDate(Date OrderDate) {
        this.OrderDate = OrderDate;
    }

    
    @Column(name="MRP_ARREARS_FLAG", columnDefinition="SMALLINT")
    public boolean isMrpArrearsFlag() {
        return this.MrpArrearsFlag;
    }
    
    public void setMrpArrearsFlag(boolean MrpArrearsFlag) {
        this.MrpArrearsFlag = MrpArrearsFlag;
    }

    
    @Column(name="MRP_ORDERED", columnDefinition="SMALLINT")
    public boolean isMrpOrdered() {
        return this.MrpOrdered;
    }
    
    public void setMrpOrdered(boolean MrpOrdered) {
        this.MrpOrdered = MrpOrdered;
    }

    
    @Column(name="PURCHASE_OR_TRANSFER", columnDefinition="SMALLINT")
    public RecommendType getPurchaseOrTransfer() {
        return this.PurchaseOrTransfer;
    }
    
    public void setPurchaseOrTransfer(RecommendType PurchaseOrTransfer) {
        this.PurchaseOrTransfer = PurchaseOrTransfer;
    }

    
    @Column(name="PP_REFERENCE", columnDefinition="VARCHAR", length=80)
    public String getPpReference() {
        return this.PpReference;
    }
    
    public void setPpReference(String PpReference) {
        this.PpReference = PpReference;
    }

    
    @Column(name="MANUAL_ENTRY", columnDefinition="SMALLINT")
    public boolean isManualEntry() {
        return this.ManualEntry;
    }
    
    public void setManualEntry(boolean ManualEntry) {
        this.ManualEntry = ManualEntry;
    }

    
    @Column(name="MRP_RESCHEDULE_FLAG", columnDefinition="SMALLINT")
    public RescheduleFlag getMrpRescheduleFlag() {
        return this.MrpRescheduleFlag;
    }
    
    public void setMrpRescheduleFlag(RescheduleFlag MrpRescheduleFlag) {
        this.MrpRescheduleFlag = MrpRescheduleFlag;
    }

    
    @Column(name="MRP_SOURCE", columnDefinition="SMALLINT")
    public MRPSource getMrpSource() {
        return this.MrpSource;
    }
    
    public void setMrpSource(MRPSource MrpSource) {
        this.MrpSource = MrpSource;
    }

    
    @Column(name="ORIGINAL_DATE", columnDefinition="TIMESTAMP")
    public Date getOriginalDate() {
        return this.OriginalDate;
    }
    
    public void setOriginalDate(Date OriginalDate) {
        this.OriginalDate = OriginalDate;
    }

    
    @Column(name="BATCH_DATE", columnDefinition="TIMESTAMP")
    public Date getBatchDate() {
        return this.BatchDate;
    }
    
    public void setBatchDate(Date BatchDate) {
        this.BatchDate = BatchDate;
    }

    
    @Column(name="ORIGINAL_QUANTITY", columnDefinition="NUMERIC", precision=18, scale=3)
    public BigDecimal getOriginalQuantity() {
        return this.OriginalQuantity;
    }
    
    public void setOriginalQuantity(BigDecimal OriginalQuantity) {
        this.OriginalQuantity = OriginalQuantity;
    }




}


